function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
var $parcel$global =
typeof globalThis !== 'undefined'
  ? globalThis
  : typeof self !== 'undefined'
  ? self
  : typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
  ? global
  : {};
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
var $parcel$modules = {};
var $parcel$inits = {};

var parcelRequire = $parcel$global["parcelRequire716c"];
if (parcelRequire == null) {
  parcelRequire = function(id) {
    if (id in $parcel$modules) {
      return $parcel$modules[id].exports;
    }
    if (id in $parcel$inits) {
      var init = $parcel$inits[id];
      delete $parcel$inits[id];
      var module = {id: id, exports: {}};
      $parcel$modules[id] = module;
      init.call(module.exports, module, module.exports);
      return module.exports;
    }
    var err = new Error("Cannot find module '" + id + "'");
    err.code = 'MODULE_NOT_FOUND';
    throw err;
  };

  parcelRequire.register = function register(id, init) {
    $parcel$inits[id] = init;
  };

  $parcel$global["parcelRequire716c"] = parcelRequire;
}
parcelRequire.register("aKzDW", function(module, exports) {

$parcel$export(module.exports, "register", () => $7d39d93f9098a310$export$6503ec6e8aabbaf, (v) => $7d39d93f9098a310$export$6503ec6e8aabbaf = v);
$parcel$export(module.exports, "resolve", () => $7d39d93f9098a310$export$f7ad0328861e2f03, (v) => $7d39d93f9098a310$export$f7ad0328861e2f03 = v);
var $7d39d93f9098a310$export$6503ec6e8aabbaf;
var $7d39d93f9098a310$export$f7ad0328861e2f03;
"use strict";
var $7d39d93f9098a310$var$mapping = {};
function $7d39d93f9098a310$var$register(pairs) {
    var keys = Object.keys(pairs);
    for(var i = 0; i < keys.length; i++)$7d39d93f9098a310$var$mapping[keys[i]] = pairs[keys[i]];
}
function $7d39d93f9098a310$var$resolve(id) {
    var resolved = $7d39d93f9098a310$var$mapping[id];
    if (resolved == null) throw new Error("Could not resolve bundle with id " + id);
    return resolved;
}
$7d39d93f9098a310$export$6503ec6e8aabbaf = $7d39d93f9098a310$var$register;
$7d39d93f9098a310$export$f7ad0328861e2f03 = $7d39d93f9098a310$var$resolve;

});

parcelRequire.register("4WnG3", function(module, exports) {

$parcel$export(module.exports, "Fragment", () => $398ef20bfcd6b165$export$ffb0004e005737fa, (v) => $398ef20bfcd6b165$export$ffb0004e005737fa = v);
$parcel$export(module.exports, "jsx", () => $398ef20bfcd6b165$export$34b9dba7ce09269b, (v) => $398ef20bfcd6b165$export$34b9dba7ce09269b = v);
$parcel$export(module.exports, "jsxs", () => $398ef20bfcd6b165$export$25062201e9e25d76, (v) => $398ef20bfcd6b165$export$25062201e9e25d76 = v);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $398ef20bfcd6b165$export$ffb0004e005737fa;
var $398ef20bfcd6b165$export$34b9dba7ce09269b;
var $398ef20bfcd6b165$export$25062201e9e25d76;
"use strict";

var $d4J5n = parcelRequire("d4J5n");
var $398ef20bfcd6b165$var$k = Symbol.for("react.element"), $398ef20bfcd6b165$var$l = Symbol.for("react.fragment"), $398ef20bfcd6b165$var$m = Object.prototype.hasOwnProperty, $398ef20bfcd6b165$var$n = $d4J5n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, $398ef20bfcd6b165$var$p = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function $398ef20bfcd6b165$var$q(c, a, g) {
    var b, d = {}, e = null, h = null;
    void 0 !== g && (e = "" + g);
    void 0 !== a.key && (e = "" + a.key);
    void 0 !== a.ref && (h = a.ref);
    for(b in a)$398ef20bfcd6b165$var$m.call(a, b) && !$398ef20bfcd6b165$var$p.hasOwnProperty(b) && (d[b] = a[b]);
    if (c && c.defaultProps) for(b in a = c.defaultProps, a)void 0 === d[b] && (d[b] = a[b]);
    return {
        $$typeof: $398ef20bfcd6b165$var$k,
        type: c,
        key: e,
        ref: h,
        props: d,
        _owner: $398ef20bfcd6b165$var$n.current
    };
}
$398ef20bfcd6b165$export$ffb0004e005737fa = $398ef20bfcd6b165$var$l;
$398ef20bfcd6b165$export$34b9dba7ce09269b = $398ef20bfcd6b165$var$q;
$398ef20bfcd6b165$export$25062201e9e25d76 = $398ef20bfcd6b165$var$q;

});
parcelRequire.register("d4J5n", function(module, exports) {
"use strict";

module.exports = (parcelRequire("7uDWo"));

});
parcelRequire.register("7uDWo", function(module, exports) {

$parcel$export(module.exports, "Children", () => $574a51285872e9b8$export$dca3b0875bd9a954, (v) => $574a51285872e9b8$export$dca3b0875bd9a954 = v);
$parcel$export(module.exports, "Component", () => $574a51285872e9b8$export$16fa2f45be04daa8, (v) => $574a51285872e9b8$export$16fa2f45be04daa8 = v);
$parcel$export(module.exports, "Fragment", () => $574a51285872e9b8$export$ffb0004e005737fa, (v) => $574a51285872e9b8$export$ffb0004e005737fa = v);
$parcel$export(module.exports, "Profiler", () => $574a51285872e9b8$export$e2c29f18771995cb, (v) => $574a51285872e9b8$export$e2c29f18771995cb = v);
$parcel$export(module.exports, "PureComponent", () => $574a51285872e9b8$export$221d75b3f55bb0bd, (v) => $574a51285872e9b8$export$221d75b3f55bb0bd = v);
$parcel$export(module.exports, "StrictMode", () => $574a51285872e9b8$export$5f8d39834fd61797, (v) => $574a51285872e9b8$export$5f8d39834fd61797 = v);
$parcel$export(module.exports, "Suspense", () => $574a51285872e9b8$export$74bf444e3cd11ea5, (v) => $574a51285872e9b8$export$74bf444e3cd11ea5 = v);
$parcel$export(module.exports, "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", () => $574a51285872e9b8$export$ae55be85d98224ed, (v) => $574a51285872e9b8$export$ae55be85d98224ed = v);
$parcel$export(module.exports, "cloneElement", () => $574a51285872e9b8$export$e530037191fcd5d7, (v) => $574a51285872e9b8$export$e530037191fcd5d7 = v);
$parcel$export(module.exports, "createContext", () => $574a51285872e9b8$export$fd42f52fd3ae1109, (v) => $574a51285872e9b8$export$fd42f52fd3ae1109 = v);
$parcel$export(module.exports, "createElement", () => $574a51285872e9b8$export$c8a8987d4410bf2d, (v) => $574a51285872e9b8$export$c8a8987d4410bf2d = v);
$parcel$export(module.exports, "createFactory", () => $574a51285872e9b8$export$d38cd72104c1f0e9, (v) => $574a51285872e9b8$export$d38cd72104c1f0e9 = v);
$parcel$export(module.exports, "createRef", () => $574a51285872e9b8$export$7d1e3a5e95ceca43, (v) => $574a51285872e9b8$export$7d1e3a5e95ceca43 = v);
$parcel$export(module.exports, "forwardRef", () => $574a51285872e9b8$export$257a8862b851cb5b, (v) => $574a51285872e9b8$export$257a8862b851cb5b = v);
$parcel$export(module.exports, "isValidElement", () => $574a51285872e9b8$export$a8257692ac88316c, (v) => $574a51285872e9b8$export$a8257692ac88316c = v);
$parcel$export(module.exports, "lazy", () => $574a51285872e9b8$export$488013bae63b21da, (v) => $574a51285872e9b8$export$488013bae63b21da = v);
$parcel$export(module.exports, "memo", () => $574a51285872e9b8$export$7c73462e0d25e514, (v) => $574a51285872e9b8$export$7c73462e0d25e514 = v);
$parcel$export(module.exports, "startTransition", () => $574a51285872e9b8$export$7568632d0d33d16d, (v) => $574a51285872e9b8$export$7568632d0d33d16d = v);
$parcel$export(module.exports, "unstable_act", () => $574a51285872e9b8$export$88948ce120ea2619, (v) => $574a51285872e9b8$export$88948ce120ea2619 = v);
$parcel$export(module.exports, "useCallback", () => $574a51285872e9b8$export$35808ee640e87ca7, (v) => $574a51285872e9b8$export$35808ee640e87ca7 = v);
$parcel$export(module.exports, "useContext", () => $574a51285872e9b8$export$fae74005e78b1a27, (v) => $574a51285872e9b8$export$fae74005e78b1a27 = v);
$parcel$export(module.exports, "useDebugValue", () => $574a51285872e9b8$export$dc8fbce3eb94dc1e, (v) => $574a51285872e9b8$export$dc8fbce3eb94dc1e = v);
$parcel$export(module.exports, "useDeferredValue", () => $574a51285872e9b8$export$6a7bc4e911dc01cf, (v) => $574a51285872e9b8$export$6a7bc4e911dc01cf = v);
$parcel$export(module.exports, "useEffect", () => $574a51285872e9b8$export$6d9c69b0de29b591, (v) => $574a51285872e9b8$export$6d9c69b0de29b591 = v);
$parcel$export(module.exports, "useId", () => $574a51285872e9b8$export$f680877a34711e37, (v) => $574a51285872e9b8$export$f680877a34711e37 = v);
$parcel$export(module.exports, "useImperativeHandle", () => $574a51285872e9b8$export$d5a552a76deda3c2, (v) => $574a51285872e9b8$export$d5a552a76deda3c2 = v);
$parcel$export(module.exports, "useInsertionEffect", () => $574a51285872e9b8$export$aaabe4eda9ed9969, (v) => $574a51285872e9b8$export$aaabe4eda9ed9969 = v);
$parcel$export(module.exports, "useLayoutEffect", () => $574a51285872e9b8$export$e5c5a5f917a5871c, (v) => $574a51285872e9b8$export$e5c5a5f917a5871c = v);
$parcel$export(module.exports, "useMemo", () => $574a51285872e9b8$export$1538c33de8887b59, (v) => $574a51285872e9b8$export$1538c33de8887b59 = v);
$parcel$export(module.exports, "useReducer", () => $574a51285872e9b8$export$13e3392192263954, (v) => $574a51285872e9b8$export$13e3392192263954 = v);
$parcel$export(module.exports, "useRef", () => $574a51285872e9b8$export$b8f5890fc79d6aca, (v) => $574a51285872e9b8$export$b8f5890fc79d6aca = v);
$parcel$export(module.exports, "useState", () => $574a51285872e9b8$export$60241385465d0a34, (v) => $574a51285872e9b8$export$60241385465d0a34 = v);
$parcel$export(module.exports, "useSyncExternalStore", () => $574a51285872e9b8$export$306c0aa65ff9ec16, (v) => $574a51285872e9b8$export$306c0aa65ff9ec16 = v);
$parcel$export(module.exports, "useTransition", () => $574a51285872e9b8$export$7b286972b8d8ccbf, (v) => $574a51285872e9b8$export$7b286972b8d8ccbf = v);
$parcel$export(module.exports, "version", () => $574a51285872e9b8$export$83d89fbfd8236492, (v) => $574a51285872e9b8$export$83d89fbfd8236492 = v);
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $574a51285872e9b8$export$dca3b0875bd9a954;
var $574a51285872e9b8$export$16fa2f45be04daa8;
var $574a51285872e9b8$export$ffb0004e005737fa;
var $574a51285872e9b8$export$e2c29f18771995cb;
var $574a51285872e9b8$export$221d75b3f55bb0bd;
var $574a51285872e9b8$export$5f8d39834fd61797;
var $574a51285872e9b8$export$74bf444e3cd11ea5;
var $574a51285872e9b8$export$ae55be85d98224ed;
var $574a51285872e9b8$export$e530037191fcd5d7;
var $574a51285872e9b8$export$fd42f52fd3ae1109;
var $574a51285872e9b8$export$c8a8987d4410bf2d;
var $574a51285872e9b8$export$d38cd72104c1f0e9;
var $574a51285872e9b8$export$7d1e3a5e95ceca43;
var $574a51285872e9b8$export$257a8862b851cb5b;
var $574a51285872e9b8$export$a8257692ac88316c;
var $574a51285872e9b8$export$488013bae63b21da;
var $574a51285872e9b8$export$7c73462e0d25e514;
var $574a51285872e9b8$export$7568632d0d33d16d;
var $574a51285872e9b8$export$88948ce120ea2619;
var $574a51285872e9b8$export$35808ee640e87ca7;
var $574a51285872e9b8$export$fae74005e78b1a27;
var $574a51285872e9b8$export$dc8fbce3eb94dc1e;
var $574a51285872e9b8$export$6a7bc4e911dc01cf;
var $574a51285872e9b8$export$6d9c69b0de29b591;
var $574a51285872e9b8$export$f680877a34711e37;
var $574a51285872e9b8$export$d5a552a76deda3c2;
var $574a51285872e9b8$export$aaabe4eda9ed9969;
var $574a51285872e9b8$export$e5c5a5f917a5871c;
var $574a51285872e9b8$export$1538c33de8887b59;
var $574a51285872e9b8$export$13e3392192263954;
var $574a51285872e9b8$export$b8f5890fc79d6aca;
var $574a51285872e9b8$export$60241385465d0a34;
var $574a51285872e9b8$export$306c0aa65ff9ec16;
var $574a51285872e9b8$export$7b286972b8d8ccbf;
var $574a51285872e9b8$export$83d89fbfd8236492;
"use strict";
var $574a51285872e9b8$var$l = Symbol.for("react.element"), $574a51285872e9b8$var$n = Symbol.for("react.portal"), $574a51285872e9b8$var$p = Symbol.for("react.fragment"), $574a51285872e9b8$var$q = Symbol.for("react.strict_mode"), $574a51285872e9b8$var$r = Symbol.for("react.profiler"), $574a51285872e9b8$var$t = Symbol.for("react.provider"), $574a51285872e9b8$var$u = Symbol.for("react.context"), $574a51285872e9b8$var$v = Symbol.for("react.forward_ref"), $574a51285872e9b8$var$w = Symbol.for("react.suspense"), $574a51285872e9b8$var$x = Symbol.for("react.memo"), $574a51285872e9b8$var$y = Symbol.for("react.lazy"), $574a51285872e9b8$var$z = Symbol.iterator;
function $574a51285872e9b8$var$A(a) {
    if (null === a || "object" !== typeof a) return null;
    a = $574a51285872e9b8$var$z && a[$574a51285872e9b8$var$z] || a["@@iterator"];
    return "function" === typeof a ? a : null;
}
var $574a51285872e9b8$var$B = {
    isMounted: function() {
        return !1;
    },
    enqueueForceUpdate: function() {},
    enqueueReplaceState: function() {},
    enqueueSetState: function() {}
}, $574a51285872e9b8$var$C = Object.assign, $574a51285872e9b8$var$D = {};
function $574a51285872e9b8$var$E(a, b, e) {
    this.props = a;
    this.context = b;
    this.refs = $574a51285872e9b8$var$D;
    this.updater = e || $574a51285872e9b8$var$B;
}
$574a51285872e9b8$var$E.prototype.isReactComponent = {};
$574a51285872e9b8$var$E.prototype.setState = function(a, b) {
    if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, a, b, "setState");
};
$574a51285872e9b8$var$E.prototype.forceUpdate = function(a) {
    this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function $574a51285872e9b8$var$F() {}
$574a51285872e9b8$var$F.prototype = $574a51285872e9b8$var$E.prototype;
function $574a51285872e9b8$var$G(a, b, e) {
    this.props = a;
    this.context = b;
    this.refs = $574a51285872e9b8$var$D;
    this.updater = e || $574a51285872e9b8$var$B;
}
var $574a51285872e9b8$var$H = $574a51285872e9b8$var$G.prototype = new $574a51285872e9b8$var$F;
$574a51285872e9b8$var$H.constructor = $574a51285872e9b8$var$G;
$574a51285872e9b8$var$C($574a51285872e9b8$var$H, $574a51285872e9b8$var$E.prototype);
$574a51285872e9b8$var$H.isPureReactComponent = !0;
var $574a51285872e9b8$var$I = Array.isArray, $574a51285872e9b8$var$J = Object.prototype.hasOwnProperty, $574a51285872e9b8$var$K = {
    current: null
}, $574a51285872e9b8$var$L = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function $574a51285872e9b8$var$M(a, b, e) {
    var d, c = {}, k = null, h = null;
    if (null != b) for(d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b)$574a51285872e9b8$var$J.call(b, d) && !$574a51285872e9b8$var$L.hasOwnProperty(d) && (c[d] = b[d]);
    var g = arguments.length - 2;
    if (1 === g) c.children = e;
    else if (1 < g) {
        for(var f = Array(g), m = 0; m < g; m++)f[m] = arguments[m + 2];
        c.children = f;
    }
    if (a && a.defaultProps) for(d in g = a.defaultProps, g)void 0 === c[d] && (c[d] = g[d]);
    return {
        $$typeof: $574a51285872e9b8$var$l,
        type: a,
        key: k,
        ref: h,
        props: c,
        _owner: $574a51285872e9b8$var$K.current
    };
}
function $574a51285872e9b8$var$N(a, b) {
    return {
        $$typeof: $574a51285872e9b8$var$l,
        type: a.type,
        key: b,
        ref: a.ref,
        props: a.props,
        _owner: a._owner
    };
}
function $574a51285872e9b8$var$O(a) {
    return "object" === typeof a && null !== a && a.$$typeof === $574a51285872e9b8$var$l;
}
function $574a51285872e9b8$var$escape(a) {
    var b = {
        "=": "=0",
        ":": "=2"
    };
    return "$" + a.replace(/[=:]/g, function(a) {
        return b[a];
    });
}
var $574a51285872e9b8$var$P = /\/+/g;
function $574a51285872e9b8$var$Q(a, b) {
    return "object" === typeof a && null !== a && null != a.key ? $574a51285872e9b8$var$escape("" + a.key) : b.toString(36);
}
function $574a51285872e9b8$var$R(a, b, e, d, c) {
    var k = typeof a;
    if ("undefined" === k || "boolean" === k) a = null;
    var h = !1;
    if (null === a) h = !0;
    else switch(k){
        case "string":
        case "number":
            h = !0;
            break;
        case "object":
            switch(a.$$typeof){
                case $574a51285872e9b8$var$l:
                case $574a51285872e9b8$var$n:
                    h = !0;
            }
    }
    if (h) return h = a, c = c(h), a = "" === d ? "." + $574a51285872e9b8$var$Q(h, 0) : d, $574a51285872e9b8$var$I(c) ? (e = "", null != a && (e = a.replace($574a51285872e9b8$var$P, "$&/") + "/"), $574a51285872e9b8$var$R(c, b, e, "", function(a) {
        return a;
    })) : null != c && ($574a51285872e9b8$var$O(c) && (c = $574a51285872e9b8$var$N(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace($574a51285872e9b8$var$P, "$&/") + "/") + a)), b.push(c)), 1;
    h = 0;
    d = "" === d ? "." : d + ":";
    if ($574a51285872e9b8$var$I(a)) for(var g = 0; g < a.length; g++){
        k = a[g];
        var f = d + $574a51285872e9b8$var$Q(k, g);
        h += $574a51285872e9b8$var$R(k, b, e, f, c);
    }
    else if (f = $574a51285872e9b8$var$A(a), "function" === typeof f) for(a = f.call(a), g = 0; !(k = a.next()).done;)k = k.value, f = d + $574a51285872e9b8$var$Q(k, g++), h += $574a51285872e9b8$var$R(k, b, e, f, c);
    else if ("object" === k) throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
    return h;
}
function $574a51285872e9b8$var$S(a, b, e) {
    if (null == a) return a;
    var d = [], c = 0;
    $574a51285872e9b8$var$R(a, d, "", "", function(a) {
        return b.call(e, a, c++);
    });
    return d;
}
function $574a51285872e9b8$var$T(a) {
    if (-1 === a._status) {
        var b = a._result;
        b = b();
        b.then(function(b) {
            if (0 === a._status || -1 === a._status) a._status = 1, a._result = b;
        }, function(b) {
            if (0 === a._status || -1 === a._status) a._status = 2, a._result = b;
        });
        -1 === a._status && (a._status = 0, a._result = b);
    }
    if (1 === a._status) return a._result.default;
    throw a._result;
}
var $574a51285872e9b8$var$U = {
    current: null
}, $574a51285872e9b8$var$V = {
    transition: null
}, $574a51285872e9b8$var$W = {
    ReactCurrentDispatcher: $574a51285872e9b8$var$U,
    ReactCurrentBatchConfig: $574a51285872e9b8$var$V,
    ReactCurrentOwner: $574a51285872e9b8$var$K
};
$574a51285872e9b8$export$dca3b0875bd9a954 = {
    map: $574a51285872e9b8$var$S,
    forEach: function(a, b, e) {
        $574a51285872e9b8$var$S(a, function() {
            b.apply(this, arguments);
        }, e);
    },
    count: function(a) {
        var b = 0;
        $574a51285872e9b8$var$S(a, function() {
            b++;
        });
        return b;
    },
    toArray: function(a) {
        return $574a51285872e9b8$var$S(a, function(a) {
            return a;
        }) || [];
    },
    only: function(a) {
        if (!$574a51285872e9b8$var$O(a)) throw Error("React.Children.only expected to receive a single React element child.");
        return a;
    }
};
$574a51285872e9b8$export$16fa2f45be04daa8 = $574a51285872e9b8$var$E;
$574a51285872e9b8$export$ffb0004e005737fa = $574a51285872e9b8$var$p;
$574a51285872e9b8$export$e2c29f18771995cb = $574a51285872e9b8$var$r;
$574a51285872e9b8$export$221d75b3f55bb0bd = $574a51285872e9b8$var$G;
$574a51285872e9b8$export$5f8d39834fd61797 = $574a51285872e9b8$var$q;
$574a51285872e9b8$export$74bf444e3cd11ea5 = $574a51285872e9b8$var$w;
$574a51285872e9b8$export$ae55be85d98224ed = $574a51285872e9b8$var$W;
$574a51285872e9b8$export$e530037191fcd5d7 = function(a, b, e) {
    if (null === a || void 0 === a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
    var d = $574a51285872e9b8$var$C({}, a.props), c = a.key, k = a.ref, h = a._owner;
    if (null != b) {
        void 0 !== b.ref && (k = b.ref, h = $574a51285872e9b8$var$K.current);
        void 0 !== b.key && (c = "" + b.key);
        if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
        for(f in b)$574a51285872e9b8$var$J.call(b, f) && !$574a51285872e9b8$var$L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
    }
    var f = arguments.length - 2;
    if (1 === f) d.children = e;
    else if (1 < f) {
        g = Array(f);
        for(var m = 0; m < f; m++)g[m] = arguments[m + 2];
        d.children = g;
    }
    return {
        $$typeof: $574a51285872e9b8$var$l,
        type: a.type,
        key: c,
        ref: k,
        props: d,
        _owner: h
    };
};
$574a51285872e9b8$export$fd42f52fd3ae1109 = function(a) {
    a = {
        $$typeof: $574a51285872e9b8$var$u,
        _currentValue: a,
        _currentValue2: a,
        _threadCount: 0,
        Provider: null,
        Consumer: null,
        _defaultValue: null,
        _globalName: null
    };
    a.Provider = {
        $$typeof: $574a51285872e9b8$var$t,
        _context: a
    };
    return a.Consumer = a;
};
$574a51285872e9b8$export$c8a8987d4410bf2d = $574a51285872e9b8$var$M;
$574a51285872e9b8$export$d38cd72104c1f0e9 = function(a) {
    var b = $574a51285872e9b8$var$M.bind(null, a);
    b.type = a;
    return b;
};
$574a51285872e9b8$export$7d1e3a5e95ceca43 = function() {
    return {
        current: null
    };
};
$574a51285872e9b8$export$257a8862b851cb5b = function(a) {
    return {
        $$typeof: $574a51285872e9b8$var$v,
        render: a
    };
};
$574a51285872e9b8$export$a8257692ac88316c = $574a51285872e9b8$var$O;
$574a51285872e9b8$export$488013bae63b21da = function(a) {
    return {
        $$typeof: $574a51285872e9b8$var$y,
        _payload: {
            _status: -1,
            _result: a
        },
        _init: $574a51285872e9b8$var$T
    };
};
$574a51285872e9b8$export$7c73462e0d25e514 = function(a, b) {
    return {
        $$typeof: $574a51285872e9b8$var$x,
        type: a,
        compare: void 0 === b ? null : b
    };
};
$574a51285872e9b8$export$7568632d0d33d16d = function(a) {
    var b = $574a51285872e9b8$var$V.transition;
    $574a51285872e9b8$var$V.transition = {};
    try {
        a();
    } finally{
        $574a51285872e9b8$var$V.transition = b;
    }
};
$574a51285872e9b8$export$88948ce120ea2619 = function() {
    throw Error("act(...) is not supported in production builds of React.");
};
$574a51285872e9b8$export$35808ee640e87ca7 = function(a, b) {
    return $574a51285872e9b8$var$U.current.useCallback(a, b);
};
$574a51285872e9b8$export$fae74005e78b1a27 = function(a) {
    return $574a51285872e9b8$var$U.current.useContext(a);
};
$574a51285872e9b8$export$dc8fbce3eb94dc1e = function() {};
$574a51285872e9b8$export$6a7bc4e911dc01cf = function(a) {
    return $574a51285872e9b8$var$U.current.useDeferredValue(a);
};
$574a51285872e9b8$export$6d9c69b0de29b591 = function(a, b) {
    return $574a51285872e9b8$var$U.current.useEffect(a, b);
};
$574a51285872e9b8$export$f680877a34711e37 = function() {
    return $574a51285872e9b8$var$U.current.useId();
};
$574a51285872e9b8$export$d5a552a76deda3c2 = function(a, b, e) {
    return $574a51285872e9b8$var$U.current.useImperativeHandle(a, b, e);
};
$574a51285872e9b8$export$aaabe4eda9ed9969 = function(a, b) {
    return $574a51285872e9b8$var$U.current.useInsertionEffect(a, b);
};
$574a51285872e9b8$export$e5c5a5f917a5871c = function(a, b) {
    return $574a51285872e9b8$var$U.current.useLayoutEffect(a, b);
};
$574a51285872e9b8$export$1538c33de8887b59 = function(a, b) {
    return $574a51285872e9b8$var$U.current.useMemo(a, b);
};
$574a51285872e9b8$export$13e3392192263954 = function(a, b, e) {
    return $574a51285872e9b8$var$U.current.useReducer(a, b, e);
};
$574a51285872e9b8$export$b8f5890fc79d6aca = function(a) {
    return $574a51285872e9b8$var$U.current.useRef(a);
};
$574a51285872e9b8$export$60241385465d0a34 = function(a) {
    return $574a51285872e9b8$var$U.current.useState(a);
};
$574a51285872e9b8$export$306c0aa65ff9ec16 = function(a, b, e) {
    return $574a51285872e9b8$var$U.current.useSyncExternalStore(a, b, e);
};
$574a51285872e9b8$export$7b286972b8d8ccbf = function() {
    return $574a51285872e9b8$var$U.current.useTransition();
};
$574a51285872e9b8$export$83d89fbfd8236492 = "18.2.0";

});



parcelRequire.register("bgpZC", function(module, exports) {

$parcel$export(module.exports, "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", () => $833559fe574b4225$export$ae55be85d98224ed, (v) => $833559fe574b4225$export$ae55be85d98224ed = v);
$parcel$export(module.exports, "createPortal", () => $833559fe574b4225$export$d39a5bbd09211389, (v) => $833559fe574b4225$export$d39a5bbd09211389 = v);
$parcel$export(module.exports, "createRoot", () => $833559fe574b4225$export$882461b6382ed46c, (v) => $833559fe574b4225$export$882461b6382ed46c = v);
$parcel$export(module.exports, "findDOMNode", () => $833559fe574b4225$export$466bfc07425424d5, (v) => $833559fe574b4225$export$466bfc07425424d5 = v);
$parcel$export(module.exports, "flushSync", () => $833559fe574b4225$export$cd75ccfd720a3cd4, (v) => $833559fe574b4225$export$cd75ccfd720a3cd4 = v);
$parcel$export(module.exports, "hydrate", () => $833559fe574b4225$export$fa8d919ba61d84db, (v) => $833559fe574b4225$export$fa8d919ba61d84db = v);
$parcel$export(module.exports, "hydrateRoot", () => $833559fe574b4225$export$757ceba2d55c277e, (v) => $833559fe574b4225$export$757ceba2d55c277e = v);
$parcel$export(module.exports, "render", () => $833559fe574b4225$export$b3890eb0ae9dca99, (v) => $833559fe574b4225$export$b3890eb0ae9dca99 = v);
$parcel$export(module.exports, "unmountComponentAtNode", () => $833559fe574b4225$export$502457920280e6be, (v) => $833559fe574b4225$export$502457920280e6be = v);
$parcel$export(module.exports, "unstable_batchedUpdates", () => $833559fe574b4225$export$c78a37762a8d58e1, (v) => $833559fe574b4225$export$c78a37762a8d58e1 = v);
$parcel$export(module.exports, "unstable_renderSubtreeIntoContainer", () => $833559fe574b4225$export$dc54d992c10e8a18, (v) => $833559fe574b4225$export$dc54d992c10e8a18 = v);
$parcel$export(module.exports, "version", () => $833559fe574b4225$export$83d89fbfd8236492, (v) => $833559fe574b4225$export$83d89fbfd8236492 = v);
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/ var $833559fe574b4225$export$ae55be85d98224ed;
var $833559fe574b4225$export$d39a5bbd09211389;
var $833559fe574b4225$export$882461b6382ed46c;
var $833559fe574b4225$export$466bfc07425424d5;
var $833559fe574b4225$export$cd75ccfd720a3cd4;
var $833559fe574b4225$export$fa8d919ba61d84db;
var $833559fe574b4225$export$757ceba2d55c277e;
var $833559fe574b4225$export$b3890eb0ae9dca99;
var $833559fe574b4225$export$502457920280e6be;
var $833559fe574b4225$export$c78a37762a8d58e1;
var $833559fe574b4225$export$dc54d992c10e8a18;
var $833559fe574b4225$export$83d89fbfd8236492;
"use strict";

var $d4J5n = parcelRequire("d4J5n");

var $fw68E = parcelRequire("fw68E");
function $833559fe574b4225$var$p(a) {
    for(var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)b += "&args[]=" + encodeURIComponent(arguments[c]);
    return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var $833559fe574b4225$var$da = new Set, $833559fe574b4225$var$ea = {};
function $833559fe574b4225$var$fa(a, b) {
    $833559fe574b4225$var$ha(a, b);
    $833559fe574b4225$var$ha(a + "Capture", b);
}
function $833559fe574b4225$var$ha(a, b) {
    $833559fe574b4225$var$ea[a] = b;
    for(a = 0; a < b.length; a++)$833559fe574b4225$var$da.add(b[a]);
}
var $833559fe574b4225$var$ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), $833559fe574b4225$var$ja = Object.prototype.hasOwnProperty, $833559fe574b4225$var$ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, $833559fe574b4225$var$la = {}, $833559fe574b4225$var$ma = {};
function $833559fe574b4225$var$oa(a) {
    if ($833559fe574b4225$var$ja.call($833559fe574b4225$var$ma, a)) return !0;
    if ($833559fe574b4225$var$ja.call($833559fe574b4225$var$la, a)) return !1;
    if ($833559fe574b4225$var$ka.test(a)) return $833559fe574b4225$var$ma[a] = !0;
    $833559fe574b4225$var$la[a] = !0;
    return !1;
}
function $833559fe574b4225$var$pa(a, b, c, d) {
    if (null !== c && 0 === c.type) return !1;
    switch(typeof b){
        case "function":
        case "symbol":
            return !0;
        case "boolean":
            if (d) return !1;
            if (null !== c) return !c.acceptsBooleans;
            a = a.toLowerCase().slice(0, 5);
            return "data-" !== a && "aria-" !== a;
        default:
            return !1;
    }
}
function $833559fe574b4225$var$qa(a, b, c, d) {
    if (null === b || "undefined" === typeof b || $833559fe574b4225$var$pa(a, b, c, d)) return !0;
    if (d) return !1;
    if (null !== c) switch(c.type){
        case 3:
            return !b;
        case 4:
            return !1 === b;
        case 5:
            return isNaN(b);
        case 6:
            return isNaN(b) || 1 > b;
    }
    return !1;
}
function $833559fe574b4225$var$v(a, b, c, d, e, f, g) {
    this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
    this.attributeName = d;
    this.attributeNamespace = e;
    this.mustUseProperty = c;
    this.propertyName = a;
    this.type = b;
    this.sanitizeURL = f;
    this.removeEmptyString = g;
}
var $833559fe574b4225$var$z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 0, !1, a, null, !1, !1);
});
[
    [
        "acceptCharset",
        "accept-charset"
    ],
    [
        "className",
        "class"
    ],
    [
        "htmlFor",
        "for"
    ],
    [
        "httpEquiv",
        "http-equiv"
    ]
].forEach(function(a) {
    var b = a[0];
    $833559fe574b4225$var$z[b] = new $833559fe574b4225$var$v(b, 1, !1, a[1], null, !1, !1);
});
[
    "contentEditable",
    "draggable",
    "spellCheck",
    "value"
].forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 2, !1, a.toLowerCase(), null, !1, !1);
});
[
    "autoReverse",
    "externalResourcesRequired",
    "focusable",
    "preserveAlpha"
].forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 2, !1, a, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 3, !1, a.toLowerCase(), null, !1, !1);
});
[
    "checked",
    "multiple",
    "muted",
    "selected"
].forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 3, !0, a, null, !1, !1);
});
[
    "capture",
    "download"
].forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 4, !1, a, null, !1, !1);
});
[
    "cols",
    "rows",
    "size",
    "span"
].forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 6, !1, a, null, !1, !1);
});
[
    "rowSpan",
    "start"
].forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 5, !1, a.toLowerCase(), null, !1, !1);
});
var $833559fe574b4225$var$ra = /[\-:]([a-z])/g;
function $833559fe574b4225$var$sa(a) {
    return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
    var b = a.replace($833559fe574b4225$var$ra, $833559fe574b4225$var$sa);
    $833559fe574b4225$var$z[b] = new $833559fe574b4225$var$v(b, 1, !1, a, null, !1, !1);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
    var b = a.replace($833559fe574b4225$var$ra, $833559fe574b4225$var$sa);
    $833559fe574b4225$var$z[b] = new $833559fe574b4225$var$v(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
});
[
    "xml:base",
    "xml:lang",
    "xml:space"
].forEach(function(a) {
    var b = a.replace($833559fe574b4225$var$ra, $833559fe574b4225$var$sa);
    $833559fe574b4225$var$z[b] = new $833559fe574b4225$var$v(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
[
    "tabIndex",
    "crossOrigin"
].forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 1, !1, a.toLowerCase(), null, !1, !1);
});
$833559fe574b4225$var$z.xlinkHref = new $833559fe574b4225$var$v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
[
    "src",
    "href",
    "action",
    "formAction"
].forEach(function(a) {
    $833559fe574b4225$var$z[a] = new $833559fe574b4225$var$v(a, 1, !1, a.toLowerCase(), null, !0, !0);
});
function $833559fe574b4225$var$ta(a, b, c, d) {
    var e = $833559fe574b4225$var$z.hasOwnProperty(b) ? $833559fe574b4225$var$z[b] : null;
    if (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) $833559fe574b4225$var$qa(b, c, e, d) && (c = null), d || null === e ? $833559fe574b4225$var$oa(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));
}
var $833559fe574b4225$var$ua = $d4J5n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, $833559fe574b4225$var$va = Symbol.for("react.element"), $833559fe574b4225$var$wa = Symbol.for("react.portal"), $833559fe574b4225$var$ya = Symbol.for("react.fragment"), $833559fe574b4225$var$za = Symbol.for("react.strict_mode"), $833559fe574b4225$var$Aa = Symbol.for("react.profiler"), $833559fe574b4225$var$Ba = Symbol.for("react.provider"), $833559fe574b4225$var$Ca = Symbol.for("react.context"), $833559fe574b4225$var$Da = Symbol.for("react.forward_ref"), $833559fe574b4225$var$Ea = Symbol.for("react.suspense"), $833559fe574b4225$var$Fa = Symbol.for("react.suspense_list"), $833559fe574b4225$var$Ga = Symbol.for("react.memo"), $833559fe574b4225$var$Ha = Symbol.for("react.lazy");
Symbol.for("react.scope");
Symbol.for("react.debug_trace_mode");
var $833559fe574b4225$var$Ia = Symbol.for("react.offscreen");
Symbol.for("react.legacy_hidden");
Symbol.for("react.cache");
Symbol.for("react.tracing_marker");
var $833559fe574b4225$var$Ja = Symbol.iterator;
function $833559fe574b4225$var$Ka(a) {
    if (null === a || "object" !== typeof a) return null;
    a = $833559fe574b4225$var$Ja && a[$833559fe574b4225$var$Ja] || a["@@iterator"];
    return "function" === typeof a ? a : null;
}
var $833559fe574b4225$var$A = Object.assign, $833559fe574b4225$var$La;
function $833559fe574b4225$var$Ma(a) {
    if (void 0 === $833559fe574b4225$var$La) try {
        throw Error();
    } catch (c) {
        var b = c.stack.trim().match(/\n( *(at )?)/);
        $833559fe574b4225$var$La = b && b[1] || "";
    }
    return "\n" + $833559fe574b4225$var$La + a;
}
var $833559fe574b4225$var$Na = !1;
function $833559fe574b4225$var$Oa(a, b) {
    if (!a || $833559fe574b4225$var$Na) return "";
    $833559fe574b4225$var$Na = !0;
    var c = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
        if (b) {
            if (b = function() {
                throw Error();
            }, Object.defineProperty(b.prototype, "props", {
                set: function() {
                    throw Error();
                }
            }), "object" === typeof Reflect && Reflect.construct) {
                try {
                    Reflect.construct(b, []);
                } catch (l) {
                    var d = l;
                }
                Reflect.construct(a, [], b);
            } else {
                try {
                    b.call();
                } catch (l) {
                    d = l;
                }
                a.call(b.prototype);
            }
        } else {
            try {
                throw Error();
            } catch (l) {
                d = l;
            }
            a();
        }
    } catch (l) {
        if (l && d && "string" === typeof l.stack) {
            for(var e = l.stack.split("\n"), f = d.stack.split("\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];)h--;
            for(; 1 <= g && 0 <= h; g--, h--)if (e[g] !== f[h]) {
                if (1 !== g || 1 !== h) {
                    do if (g--, h--, 0 > h || e[g] !== f[h]) {
                        var k = "\n" + e[g].replace(" at new ", " at ");
                        a.displayName && k.includes("<anonymous>") && (k = k.replace("<anonymous>", a.displayName));
                        return k;
                    }
                    while (1 <= g && 0 <= h);
                }
                break;
            }
        }
    } finally{
        $833559fe574b4225$var$Na = !1, Error.prepareStackTrace = c;
    }
    return (a = a ? a.displayName || a.name : "") ? $833559fe574b4225$var$Ma(a) : "";
}
function $833559fe574b4225$var$Pa(a) {
    switch(a.tag){
        case 5:
            return $833559fe574b4225$var$Ma(a.type);
        case 16:
            return $833559fe574b4225$var$Ma("Lazy");
        case 13:
            return $833559fe574b4225$var$Ma("Suspense");
        case 19:
            return $833559fe574b4225$var$Ma("SuspenseList");
        case 0:
        case 2:
        case 15:
            return a = $833559fe574b4225$var$Oa(a.type, !1), a;
        case 11:
            return a = $833559fe574b4225$var$Oa(a.type.render, !1), a;
        case 1:
            return a = $833559fe574b4225$var$Oa(a.type, !0), a;
        default:
            return "";
    }
}
function $833559fe574b4225$var$Qa(a) {
    if (null == a) return null;
    if ("function" === typeof a) return a.displayName || a.name || null;
    if ("string" === typeof a) return a;
    switch(a){
        case $833559fe574b4225$var$ya:
            return "Fragment";
        case $833559fe574b4225$var$wa:
            return "Portal";
        case $833559fe574b4225$var$Aa:
            return "Profiler";
        case $833559fe574b4225$var$za:
            return "StrictMode";
        case $833559fe574b4225$var$Ea:
            return "Suspense";
        case $833559fe574b4225$var$Fa:
            return "SuspenseList";
    }
    if ("object" === typeof a) switch(a.$$typeof){
        case $833559fe574b4225$var$Ca:
            return (a.displayName || "Context") + ".Consumer";
        case $833559fe574b4225$var$Ba:
            return (a._context.displayName || "Context") + ".Provider";
        case $833559fe574b4225$var$Da:
            var b = a.render;
            a = a.displayName;
            a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
            return a;
        case $833559fe574b4225$var$Ga:
            return b = a.displayName || null, null !== b ? b : $833559fe574b4225$var$Qa(a.type) || "Memo";
        case $833559fe574b4225$var$Ha:
            b = a._payload;
            a = a._init;
            try {
                return $833559fe574b4225$var$Qa(a(b));
            } catch (c) {}
    }
    return null;
}
function $833559fe574b4225$var$Ra(a) {
    var b = a.type;
    switch(a.tag){
        case 24:
            return "Cache";
        case 9:
            return (b.displayName || "Context") + ".Consumer";
        case 10:
            return (b._context.displayName || "Context") + ".Provider";
        case 18:
            return "DehydratedFragment";
        case 11:
            return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
        case 7:
            return "Fragment";
        case 5:
            return b;
        case 4:
            return "Portal";
        case 3:
            return "Root";
        case 6:
            return "Text";
        case 16:
            return $833559fe574b4225$var$Qa(b);
        case 8:
            return b === $833559fe574b4225$var$za ? "StrictMode" : "Mode";
        case 22:
            return "Offscreen";
        case 12:
            return "Profiler";
        case 21:
            return "Scope";
        case 13:
            return "Suspense";
        case 19:
            return "SuspenseList";
        case 25:
            return "TracingMarker";
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
            if ("function" === typeof b) return b.displayName || b.name || null;
            if ("string" === typeof b) return b;
    }
    return null;
}
function $833559fe574b4225$var$Sa(a) {
    switch(typeof a){
        case "boolean":
        case "number":
        case "string":
        case "undefined":
            return a;
        case "object":
            return a;
        default:
            return "";
    }
}
function $833559fe574b4225$var$Ta(a) {
    var b = a.type;
    return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function $833559fe574b4225$var$Ua(a) {
    var b = $833559fe574b4225$var$Ta(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];
    if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
        var e = c.get, f = c.set;
        Object.defineProperty(a, b, {
            configurable: !0,
            get: function() {
                return e.call(this);
            },
            set: function(a) {
                d = "" + a;
                f.call(this, a);
            }
        });
        Object.defineProperty(a, b, {
            enumerable: c.enumerable
        });
        return {
            getValue: function() {
                return d;
            },
            setValue: function(a) {
                d = "" + a;
            },
            stopTracking: function() {
                a._valueTracker = null;
                delete a[b];
            }
        };
    }
}
function $833559fe574b4225$var$Va(a) {
    a._valueTracker || (a._valueTracker = $833559fe574b4225$var$Ua(a));
}
function $833559fe574b4225$var$Wa(a) {
    if (!a) return !1;
    var b = a._valueTracker;
    if (!b) return !0;
    var c = b.getValue();
    var d = "";
    a && (d = $833559fe574b4225$var$Ta(a) ? a.checked ? "true" : "false" : a.value);
    a = d;
    return a !== c ? (b.setValue(a), !0) : !1;
}
function $833559fe574b4225$var$Xa(a) {
    a = a || ("undefined" !== typeof document ? document : void 0);
    if ("undefined" === typeof a) return null;
    try {
        return a.activeElement || a.body;
    } catch (b) {
        return a.body;
    }
}
function $833559fe574b4225$var$Ya(a, b) {
    var c = b.checked;
    return $833559fe574b4225$var$A({}, b, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: null != c ? c : a._wrapperState.initialChecked
    });
}
function $833559fe574b4225$var$Za(a, b) {
    var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked;
    c = $833559fe574b4225$var$Sa(null != b.value ? b.value : c);
    a._wrapperState = {
        initialChecked: d,
        initialValue: c,
        controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
    };
}
function $833559fe574b4225$var$ab(a, b) {
    b = b.checked;
    null != b && $833559fe574b4225$var$ta(a, "checked", b, !1);
}
function $833559fe574b4225$var$bb(a, b) {
    $833559fe574b4225$var$ab(a, b);
    var c = $833559fe574b4225$var$Sa(b.value), d = b.type;
    if (null != c) {
        if ("number" === d) {
            if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
        } else a.value !== "" + c && (a.value = "" + c);
    } else if ("submit" === d || "reset" === d) {
        a.removeAttribute("value");
        return;
    }
    b.hasOwnProperty("value") ? $833559fe574b4225$var$cb(a, b.type, c) : b.hasOwnProperty("defaultValue") && $833559fe574b4225$var$cb(a, b.type, $833559fe574b4225$var$Sa(b.defaultValue));
    null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}
function $833559fe574b4225$var$db(a, b, c) {
    if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
        var d = b.type;
        if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
        b = "" + a._wrapperState.initialValue;
        c || b === a.value || (a.value = b);
        a.defaultValue = b;
    }
    c = a.name;
    "" !== c && (a.name = "");
    a.defaultChecked = !!a._wrapperState.initialChecked;
    "" !== c && (a.name = c);
}
function $833559fe574b4225$var$cb(a, b, c) {
    if ("number" !== b || $833559fe574b4225$var$Xa(a.ownerDocument) !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
var $833559fe574b4225$var$eb = Array.isArray;
function $833559fe574b4225$var$fb(a, b, c, d) {
    a = a.options;
    if (b) {
        b = {};
        for(var e = 0; e < c.length; e++)b["$" + c[e]] = !0;
        for(c = 0; c < a.length; c++)e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
    } else {
        c = "" + $833559fe574b4225$var$Sa(c);
        b = null;
        for(e = 0; e < a.length; e++){
            if (a[e].value === c) {
                a[e].selected = !0;
                d && (a[e].defaultSelected = !0);
                return;
            }
            null !== b || a[e].disabled || (b = a[e]);
        }
        null !== b && (b.selected = !0);
    }
}
function $833559fe574b4225$var$gb(a, b) {
    if (null != b.dangerouslySetInnerHTML) throw Error($833559fe574b4225$var$p(91));
    return $833559fe574b4225$var$A({}, b, {
        value: void 0,
        defaultValue: void 0,
        children: "" + a._wrapperState.initialValue
    });
}
function $833559fe574b4225$var$hb(a, b) {
    var c = b.value;
    if (null == c) {
        c = b.children;
        b = b.defaultValue;
        if (null != c) {
            if (null != b) throw Error($833559fe574b4225$var$p(92));
            if ($833559fe574b4225$var$eb(c)) {
                if (1 < c.length) throw Error($833559fe574b4225$var$p(93));
                c = c[0];
            }
            b = c;
        }
        null == b && (b = "");
        c = b;
    }
    a._wrapperState = {
        initialValue: $833559fe574b4225$var$Sa(c)
    };
}
function $833559fe574b4225$var$ib(a, b) {
    var c = $833559fe574b4225$var$Sa(b.value), d = $833559fe574b4225$var$Sa(b.defaultValue);
    null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
    null != d && (a.defaultValue = "" + d);
}
function $833559fe574b4225$var$jb(a) {
    var b = a.textContent;
    b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}
function $833559fe574b4225$var$kb(a) {
    switch(a){
        case "svg":
            return "http://www.w3.org/2000/svg";
        case "math":
            return "http://www.w3.org/1998/Math/MathML";
        default:
            return "http://www.w3.org/1999/xhtml";
    }
}
function $833559fe574b4225$var$lb(a, b) {
    return null == a || "http://www.w3.org/1999/xhtml" === a ? $833559fe574b4225$var$kb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}
var $833559fe574b4225$var$mb, $833559fe574b4225$var$nb = function(a) {
    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
        MSApp.execUnsafeLocalFunction(function() {
            return a(b, c, d, e);
        });
    } : a;
}(function(a, b) {
    if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a) a.innerHTML = b;
    else {
        $833559fe574b4225$var$mb = $833559fe574b4225$var$mb || document.createElement("div");
        $833559fe574b4225$var$mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
        for(b = $833559fe574b4225$var$mb.firstChild; a.firstChild;)a.removeChild(a.firstChild);
        for(; b.firstChild;)a.appendChild(b.firstChild);
    }
});
function $833559fe574b4225$var$ob(a, b) {
    if (b) {
        var c = a.firstChild;
        if (c && c === a.lastChild && 3 === c.nodeType) {
            c.nodeValue = b;
            return;
        }
    }
    a.textContent = b;
}
var $833559fe574b4225$var$pb = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
}, $833559fe574b4225$var$qb = [
    "Webkit",
    "ms",
    "Moz",
    "O"
];
Object.keys($833559fe574b4225$var$pb).forEach(function(a) {
    $833559fe574b4225$var$qb.forEach(function(b) {
        b = b + a.charAt(0).toUpperCase() + a.substring(1);
        $833559fe574b4225$var$pb[b] = $833559fe574b4225$var$pb[a];
    });
});
function $833559fe574b4225$var$rb(a, b, c) {
    return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || $833559fe574b4225$var$pb.hasOwnProperty(a) && $833559fe574b4225$var$pb[a] ? ("" + b).trim() : b + "px";
}
function $833559fe574b4225$var$sb(a, b) {
    a = a.style;
    for(var c in b)if (b.hasOwnProperty(c)) {
        var d = 0 === c.indexOf("--"), e = $833559fe574b4225$var$rb(c, b[c], d);
        "float" === c && (c = "cssFloat");
        d ? a.setProperty(c, e) : a[c] = e;
    }
}
var $833559fe574b4225$var$tb = $833559fe574b4225$var$A({
    menuitem: !0
}, {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0
});
function $833559fe574b4225$var$ub(a, b) {
    if (b) {
        if ($833559fe574b4225$var$tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error($833559fe574b4225$var$p(137, a));
        if (null != b.dangerouslySetInnerHTML) {
            if (null != b.children) throw Error($833559fe574b4225$var$p(60));
            if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML)) throw Error($833559fe574b4225$var$p(61));
        }
        if (null != b.style && "object" !== typeof b.style) throw Error($833559fe574b4225$var$p(62));
    }
}
function $833559fe574b4225$var$vb(a, b) {
    if (-1 === a.indexOf("-")) return "string" === typeof b.is;
    switch(a){
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
            return !1;
        default:
            return !0;
    }
}
var $833559fe574b4225$var$wb = null;
function $833559fe574b4225$var$xb(a) {
    a = a.target || a.srcElement || window;
    a.correspondingUseElement && (a = a.correspondingUseElement);
    return 3 === a.nodeType ? a.parentNode : a;
}
var $833559fe574b4225$var$yb = null, $833559fe574b4225$var$zb = null, $833559fe574b4225$var$Ab = null;
function $833559fe574b4225$var$Bb(a) {
    if (a = $833559fe574b4225$var$Cb(a)) {
        if ("function" !== typeof $833559fe574b4225$var$yb) throw Error($833559fe574b4225$var$p(280));
        var b = a.stateNode;
        b && (b = $833559fe574b4225$var$Db(b), $833559fe574b4225$var$yb(a.stateNode, a.type, b));
    }
}
function $833559fe574b4225$var$Eb(a) {
    $833559fe574b4225$var$zb ? $833559fe574b4225$var$Ab ? $833559fe574b4225$var$Ab.push(a) : $833559fe574b4225$var$Ab = [
        a
    ] : $833559fe574b4225$var$zb = a;
}
function $833559fe574b4225$var$Fb() {
    if ($833559fe574b4225$var$zb) {
        var a = $833559fe574b4225$var$zb, b = $833559fe574b4225$var$Ab;
        $833559fe574b4225$var$Ab = $833559fe574b4225$var$zb = null;
        $833559fe574b4225$var$Bb(a);
        if (b) for(a = 0; a < b.length; a++)$833559fe574b4225$var$Bb(b[a]);
    }
}
function $833559fe574b4225$var$Gb(a, b) {
    return a(b);
}
function $833559fe574b4225$var$Hb() {}
var $833559fe574b4225$var$Ib = !1;
function $833559fe574b4225$var$Jb(a, b, c) {
    if ($833559fe574b4225$var$Ib) return a(b, c);
    $833559fe574b4225$var$Ib = !0;
    try {
        return $833559fe574b4225$var$Gb(a, b, c);
    } finally{
        if ($833559fe574b4225$var$Ib = !1, null !== $833559fe574b4225$var$zb || null !== $833559fe574b4225$var$Ab) $833559fe574b4225$var$Hb(), $833559fe574b4225$var$Fb();
    }
}
function $833559fe574b4225$var$Kb(a, b) {
    var c = a.stateNode;
    if (null === c) return null;
    var d = $833559fe574b4225$var$Db(c);
    if (null === d) return null;
    c = d[b];
    a: switch(b){
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
            (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
            a = !d;
            break a;
        default:
            a = !1;
    }
    if (a) return null;
    if (c && "function" !== typeof c) throw Error($833559fe574b4225$var$p(231, b, typeof c));
    return c;
}
var $833559fe574b4225$var$Lb = !1;
if ($833559fe574b4225$var$ia) try {
    var $833559fe574b4225$var$Mb = {};
    Object.defineProperty($833559fe574b4225$var$Mb, "passive", {
        get: function() {
            $833559fe574b4225$var$Lb = !0;
        }
    });
    window.addEventListener("test", $833559fe574b4225$var$Mb, $833559fe574b4225$var$Mb);
    window.removeEventListener("test", $833559fe574b4225$var$Mb, $833559fe574b4225$var$Mb);
} catch (a) {
    $833559fe574b4225$var$Lb = !1;
}
function $833559fe574b4225$var$Nb(a, b, c, d, e, f, g, h, k) {
    var l = Array.prototype.slice.call(arguments, 3);
    try {
        b.apply(c, l);
    } catch (m) {
        this.onError(m);
    }
}
var $833559fe574b4225$var$Ob = !1, $833559fe574b4225$var$Pb = null, $833559fe574b4225$var$Qb = !1, $833559fe574b4225$var$Rb = null, $833559fe574b4225$var$Sb = {
    onError: function(a) {
        $833559fe574b4225$var$Ob = !0;
        $833559fe574b4225$var$Pb = a;
    }
};
function $833559fe574b4225$var$Tb(a, b, c, d, e, f, g, h, k) {
    $833559fe574b4225$var$Ob = !1;
    $833559fe574b4225$var$Pb = null;
    $833559fe574b4225$var$Nb.apply($833559fe574b4225$var$Sb, arguments);
}
function $833559fe574b4225$var$Ub(a, b, c, d, e, f, g, h, k) {
    $833559fe574b4225$var$Tb.apply(this, arguments);
    if ($833559fe574b4225$var$Ob) {
        if ($833559fe574b4225$var$Ob) {
            var l = $833559fe574b4225$var$Pb;
            $833559fe574b4225$var$Ob = !1;
            $833559fe574b4225$var$Pb = null;
        } else throw Error($833559fe574b4225$var$p(198));
        $833559fe574b4225$var$Qb || ($833559fe574b4225$var$Qb = !0, $833559fe574b4225$var$Rb = l);
    }
}
function $833559fe574b4225$var$Vb(a) {
    var b = a, c = a;
    if (a.alternate) for(; b.return;)b = b.return;
    else {
        a = b;
        do b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return;
        while (a);
    }
    return 3 === b.tag ? c : null;
}
function $833559fe574b4225$var$Wb(a) {
    if (13 === a.tag) {
        var b = a.memoizedState;
        null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
        if (null !== b) return b.dehydrated;
    }
    return null;
}
function $833559fe574b4225$var$Xb(a) {
    if ($833559fe574b4225$var$Vb(a) !== a) throw Error($833559fe574b4225$var$p(188));
}
function $833559fe574b4225$var$Yb(a) {
    var b = a.alternate;
    if (!b) {
        b = $833559fe574b4225$var$Vb(a);
        if (null === b) throw Error($833559fe574b4225$var$p(188));
        return b !== a ? null : a;
    }
    for(var c = a, d = b;;){
        var e = c.return;
        if (null === e) break;
        var f = e.alternate;
        if (null === f) {
            d = e.return;
            if (null !== d) {
                c = d;
                continue;
            }
            break;
        }
        if (e.child === f.child) {
            for(f = e.child; f;){
                if (f === c) return $833559fe574b4225$var$Xb(e), a;
                if (f === d) return $833559fe574b4225$var$Xb(e), b;
                f = f.sibling;
            }
            throw Error($833559fe574b4225$var$p(188));
        }
        if (c.return !== d.return) c = e, d = f;
        else {
            for(var g = !1, h = e.child; h;){
                if (h === c) {
                    g = !0;
                    c = e;
                    d = f;
                    break;
                }
                if (h === d) {
                    g = !0;
                    d = e;
                    c = f;
                    break;
                }
                h = h.sibling;
            }
            if (!g) {
                for(h = f.child; h;){
                    if (h === c) {
                        g = !0;
                        c = f;
                        d = e;
                        break;
                    }
                    if (h === d) {
                        g = !0;
                        d = f;
                        c = e;
                        break;
                    }
                    h = h.sibling;
                }
                if (!g) throw Error($833559fe574b4225$var$p(189));
            }
        }
        if (c.alternate !== d) throw Error($833559fe574b4225$var$p(190));
    }
    if (3 !== c.tag) throw Error($833559fe574b4225$var$p(188));
    return c.stateNode.current === c ? a : b;
}
function $833559fe574b4225$var$Zb(a) {
    a = $833559fe574b4225$var$Yb(a);
    return null !== a ? $833559fe574b4225$var$$b(a) : null;
}
function $833559fe574b4225$var$$b(a) {
    if (5 === a.tag || 6 === a.tag) return a;
    for(a = a.child; null !== a;){
        var b = $833559fe574b4225$var$$b(a);
        if (null !== b) return b;
        a = a.sibling;
    }
    return null;
}
var $833559fe574b4225$var$ac = $fw68E.unstable_scheduleCallback, $833559fe574b4225$var$bc = $fw68E.unstable_cancelCallback, $833559fe574b4225$var$cc = $fw68E.unstable_shouldYield, $833559fe574b4225$var$dc = $fw68E.unstable_requestPaint, $833559fe574b4225$var$B = $fw68E.unstable_now, $833559fe574b4225$var$ec = $fw68E.unstable_getCurrentPriorityLevel, $833559fe574b4225$var$fc = $fw68E.unstable_ImmediatePriority, $833559fe574b4225$var$gc = $fw68E.unstable_UserBlockingPriority, $833559fe574b4225$var$hc = $fw68E.unstable_NormalPriority, $833559fe574b4225$var$ic = $fw68E.unstable_LowPriority, $833559fe574b4225$var$jc = $fw68E.unstable_IdlePriority, $833559fe574b4225$var$kc = null, $833559fe574b4225$var$lc = null;
function $833559fe574b4225$var$mc(a) {
    if ($833559fe574b4225$var$lc && "function" === typeof $833559fe574b4225$var$lc.onCommitFiberRoot) try {
        $833559fe574b4225$var$lc.onCommitFiberRoot($833559fe574b4225$var$kc, a, void 0, 128 === (a.current.flags & 128));
    } catch (b) {}
}
var $833559fe574b4225$var$oc = Math.clz32 ? Math.clz32 : $833559fe574b4225$var$nc, $833559fe574b4225$var$pc = Math.log, $833559fe574b4225$var$qc = Math.LN2;
function $833559fe574b4225$var$nc(a) {
    a >>>= 0;
    return 0 === a ? 32 : 31 - ($833559fe574b4225$var$pc(a) / $833559fe574b4225$var$qc | 0) | 0;
}
var $833559fe574b4225$var$rc = 64, $833559fe574b4225$var$sc = 4194304;
function $833559fe574b4225$var$tc(a) {
    switch(a & -a){
        case 1:
            return 1;
        case 2:
            return 2;
        case 4:
            return 4;
        case 8:
            return 8;
        case 16:
            return 16;
        case 32:
            return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return a & 4194240;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return a & 130023424;
        case 134217728:
            return 134217728;
        case 268435456:
            return 268435456;
        case 536870912:
            return 536870912;
        case 1073741824:
            return 1073741824;
        default:
            return a;
    }
}
function $833559fe574b4225$var$uc(a, b) {
    var c = a.pendingLanes;
    if (0 === c) return 0;
    var d = 0, e = a.suspendedLanes, f = a.pingedLanes, g = c & 268435455;
    if (0 !== g) {
        var h = g & ~e;
        0 !== h ? d = $833559fe574b4225$var$tc(h) : (f &= g, 0 !== f && (d = $833559fe574b4225$var$tc(f)));
    } else g = c & ~e, 0 !== g ? d = $833559fe574b4225$var$tc(g) : 0 !== f && (d = $833559fe574b4225$var$tc(f));
    if (0 === d) return 0;
    if (0 !== b && b !== d && 0 === (b & e) && (e = d & -d, f = b & -b, e >= f || 16 === e && 0 !== (f & 4194240))) return b;
    0 !== (d & 4) && (d |= c & 16);
    b = a.entangledLanes;
    if (0 !== b) for(a = a.entanglements, b &= d; 0 < b;)c = 31 - $833559fe574b4225$var$oc(b), e = 1 << c, d |= a[c], b &= ~e;
    return d;
}
function $833559fe574b4225$var$vc(a, b) {
    switch(a){
        case 1:
        case 2:
        case 4:
            return b + 250;
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return b + 5E3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return -1;
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
            return -1;
        default:
            return -1;
    }
}
function $833559fe574b4225$var$wc(a, b) {
    for(var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f = a.pendingLanes; 0 < f;){
        var g = 31 - $833559fe574b4225$var$oc(f), h = 1 << g, k = e[g];
        if (-1 === k) {
            if (0 === (h & c) || 0 !== (h & d)) e[g] = $833559fe574b4225$var$vc(h, b);
        } else k <= b && (a.expiredLanes |= h);
        f &= ~h;
    }
}
function $833559fe574b4225$var$xc(a) {
    a = a.pendingLanes & -1073741825;
    return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function $833559fe574b4225$var$yc() {
    var a = $833559fe574b4225$var$rc;
    $833559fe574b4225$var$rc <<= 1;
    0 === ($833559fe574b4225$var$rc & 4194240) && ($833559fe574b4225$var$rc = 64);
    return a;
}
function $833559fe574b4225$var$zc(a) {
    for(var b = [], c = 0; 31 > c; c++)b.push(a);
    return b;
}
function $833559fe574b4225$var$Ac(a, b, c) {
    a.pendingLanes |= b;
    536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);
    a = a.eventTimes;
    b = 31 - $833559fe574b4225$var$oc(b);
    a[b] = c;
}
function $833559fe574b4225$var$Bc(a, b) {
    var c = a.pendingLanes & ~b;
    a.pendingLanes = b;
    a.suspendedLanes = 0;
    a.pingedLanes = 0;
    a.expiredLanes &= b;
    a.mutableReadLanes &= b;
    a.entangledLanes &= b;
    b = a.entanglements;
    var d = a.eventTimes;
    for(a = a.expirationTimes; 0 < c;){
        var e = 31 - $833559fe574b4225$var$oc(c), f = 1 << e;
        b[e] = 0;
        d[e] = -1;
        a[e] = -1;
        c &= ~f;
    }
}
function $833559fe574b4225$var$Cc(a, b) {
    var c = a.entangledLanes |= b;
    for(a = a.entanglements; c;){
        var d = 31 - $833559fe574b4225$var$oc(c), e = 1 << d;
        e & b | a[d] & b && (a[d] |= b);
        c &= ~e;
    }
}
var $833559fe574b4225$var$C = 0;
function $833559fe574b4225$var$Dc(a) {
    a &= -a;
    return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var $833559fe574b4225$var$Ec, $833559fe574b4225$var$Fc, $833559fe574b4225$var$Gc, $833559fe574b4225$var$Hc, $833559fe574b4225$var$Ic, $833559fe574b4225$var$Jc = !1, $833559fe574b4225$var$Kc = [], $833559fe574b4225$var$Lc = null, $833559fe574b4225$var$Mc = null, $833559fe574b4225$var$Nc = null, $833559fe574b4225$var$Oc = new Map, $833559fe574b4225$var$Pc = new Map, $833559fe574b4225$var$Qc = [], $833559fe574b4225$var$Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function $833559fe574b4225$var$Sc(a, b) {
    switch(a){
        case "focusin":
        case "focusout":
            $833559fe574b4225$var$Lc = null;
            break;
        case "dragenter":
        case "dragleave":
            $833559fe574b4225$var$Mc = null;
            break;
        case "mouseover":
        case "mouseout":
            $833559fe574b4225$var$Nc = null;
            break;
        case "pointerover":
        case "pointerout":
            $833559fe574b4225$var$Oc.delete(b.pointerId);
            break;
        case "gotpointercapture":
        case "lostpointercapture":
            $833559fe574b4225$var$Pc.delete(b.pointerId);
    }
}
function $833559fe574b4225$var$Tc(a, b, c, d, e, f) {
    if (null === a || a.nativeEvent !== f) return a = {
        blockedOn: b,
        domEventName: c,
        eventSystemFlags: d,
        nativeEvent: f,
        targetContainers: [
            e
        ]
    }, null !== b && (b = $833559fe574b4225$var$Cb(b), null !== b && $833559fe574b4225$var$Fc(b)), a;
    a.eventSystemFlags |= d;
    b = a.targetContainers;
    null !== e && -1 === b.indexOf(e) && b.push(e);
    return a;
}
function $833559fe574b4225$var$Uc(a, b, c, d, e) {
    switch(b){
        case "focusin":
            return $833559fe574b4225$var$Lc = $833559fe574b4225$var$Tc($833559fe574b4225$var$Lc, a, b, c, d, e), !0;
        case "dragenter":
            return $833559fe574b4225$var$Mc = $833559fe574b4225$var$Tc($833559fe574b4225$var$Mc, a, b, c, d, e), !0;
        case "mouseover":
            return $833559fe574b4225$var$Nc = $833559fe574b4225$var$Tc($833559fe574b4225$var$Nc, a, b, c, d, e), !0;
        case "pointerover":
            var f = e.pointerId;
            $833559fe574b4225$var$Oc.set(f, $833559fe574b4225$var$Tc($833559fe574b4225$var$Oc.get(f) || null, a, b, c, d, e));
            return !0;
        case "gotpointercapture":
            return f = e.pointerId, $833559fe574b4225$var$Pc.set(f, $833559fe574b4225$var$Tc($833559fe574b4225$var$Pc.get(f) || null, a, b, c, d, e)), !0;
    }
    return !1;
}
function $833559fe574b4225$var$Vc(a) {
    var b = $833559fe574b4225$var$Wc(a.target);
    if (null !== b) {
        var c = $833559fe574b4225$var$Vb(b);
        if (null !== c) {
            if (b = c.tag, 13 === b) {
                if (b = $833559fe574b4225$var$Wb(c), null !== b) {
                    a.blockedOn = b;
                    $833559fe574b4225$var$Ic(a.priority, function() {
                        $833559fe574b4225$var$Gc(c);
                    });
                    return;
                }
            } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
                a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
                return;
            }
        }
    }
    a.blockedOn = null;
}
function $833559fe574b4225$var$Xc(a) {
    if (null !== a.blockedOn) return !1;
    for(var b = a.targetContainers; 0 < b.length;){
        var c = $833559fe574b4225$var$Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
        if (null === c) {
            c = a.nativeEvent;
            var d = new c.constructor(c.type, c);
            $833559fe574b4225$var$wb = d;
            c.target.dispatchEvent(d);
            $833559fe574b4225$var$wb = null;
        } else return b = $833559fe574b4225$var$Cb(c), null !== b && $833559fe574b4225$var$Fc(b), a.blockedOn = c, !1;
        b.shift();
    }
    return !0;
}
function $833559fe574b4225$var$Zc(a, b, c) {
    $833559fe574b4225$var$Xc(a) && c.delete(b);
}
function $833559fe574b4225$var$$c() {
    $833559fe574b4225$var$Jc = !1;
    null !== $833559fe574b4225$var$Lc && $833559fe574b4225$var$Xc($833559fe574b4225$var$Lc) && ($833559fe574b4225$var$Lc = null);
    null !== $833559fe574b4225$var$Mc && $833559fe574b4225$var$Xc($833559fe574b4225$var$Mc) && ($833559fe574b4225$var$Mc = null);
    null !== $833559fe574b4225$var$Nc && $833559fe574b4225$var$Xc($833559fe574b4225$var$Nc) && ($833559fe574b4225$var$Nc = null);
    $833559fe574b4225$var$Oc.forEach($833559fe574b4225$var$Zc);
    $833559fe574b4225$var$Pc.forEach($833559fe574b4225$var$Zc);
}
function $833559fe574b4225$var$ad(a, b) {
    a.blockedOn === b && (a.blockedOn = null, $833559fe574b4225$var$Jc || ($833559fe574b4225$var$Jc = !0, $fw68E.unstable_scheduleCallback($fw68E.unstable_NormalPriority, $833559fe574b4225$var$$c)));
}
function $833559fe574b4225$var$bd(a) {
    function b(b) {
        return $833559fe574b4225$var$ad(b, a);
    }
    if (0 < $833559fe574b4225$var$Kc.length) {
        $833559fe574b4225$var$ad($833559fe574b4225$var$Kc[0], a);
        for(var c = 1; c < $833559fe574b4225$var$Kc.length; c++){
            var d = $833559fe574b4225$var$Kc[c];
            d.blockedOn === a && (d.blockedOn = null);
        }
    }
    null !== $833559fe574b4225$var$Lc && $833559fe574b4225$var$ad($833559fe574b4225$var$Lc, a);
    null !== $833559fe574b4225$var$Mc && $833559fe574b4225$var$ad($833559fe574b4225$var$Mc, a);
    null !== $833559fe574b4225$var$Nc && $833559fe574b4225$var$ad($833559fe574b4225$var$Nc, a);
    $833559fe574b4225$var$Oc.forEach(b);
    $833559fe574b4225$var$Pc.forEach(b);
    for(c = 0; c < $833559fe574b4225$var$Qc.length; c++)d = $833559fe574b4225$var$Qc[c], d.blockedOn === a && (d.blockedOn = null);
    for(; 0 < $833559fe574b4225$var$Qc.length && (c = $833559fe574b4225$var$Qc[0], null === c.blockedOn);)$833559fe574b4225$var$Vc(c), null === c.blockedOn && $833559fe574b4225$var$Qc.shift();
}
var $833559fe574b4225$var$cd = $833559fe574b4225$var$ua.ReactCurrentBatchConfig, $833559fe574b4225$var$dd = !0;
function $833559fe574b4225$var$ed(a, b, c, d) {
    var e = $833559fe574b4225$var$C, f = $833559fe574b4225$var$cd.transition;
    $833559fe574b4225$var$cd.transition = null;
    try {
        $833559fe574b4225$var$C = 1, $833559fe574b4225$var$fd(a, b, c, d);
    } finally{
        $833559fe574b4225$var$C = e, $833559fe574b4225$var$cd.transition = f;
    }
}
function $833559fe574b4225$var$gd(a, b, c, d) {
    var e = $833559fe574b4225$var$C, f = $833559fe574b4225$var$cd.transition;
    $833559fe574b4225$var$cd.transition = null;
    try {
        $833559fe574b4225$var$C = 4, $833559fe574b4225$var$fd(a, b, c, d);
    } finally{
        $833559fe574b4225$var$C = e, $833559fe574b4225$var$cd.transition = f;
    }
}
function $833559fe574b4225$var$fd(a, b, c, d) {
    if ($833559fe574b4225$var$dd) {
        var e = $833559fe574b4225$var$Yc(a, b, c, d);
        if (null === e) $833559fe574b4225$var$hd(a, b, d, $833559fe574b4225$var$id, c), $833559fe574b4225$var$Sc(a, d);
        else if ($833559fe574b4225$var$Uc(e, a, b, c, d)) d.stopPropagation();
        else if ($833559fe574b4225$var$Sc(a, d), b & 4 && -1 < $833559fe574b4225$var$Rc.indexOf(a)) {
            for(; null !== e;){
                var f = $833559fe574b4225$var$Cb(e);
                null !== f && $833559fe574b4225$var$Ec(f);
                f = $833559fe574b4225$var$Yc(a, b, c, d);
                null === f && $833559fe574b4225$var$hd(a, b, d, $833559fe574b4225$var$id, c);
                if (f === e) break;
                e = f;
            }
            null !== e && d.stopPropagation();
        } else $833559fe574b4225$var$hd(a, b, d, null, c);
    }
}
var $833559fe574b4225$var$id = null;
function $833559fe574b4225$var$Yc(a, b, c, d) {
    $833559fe574b4225$var$id = null;
    a = $833559fe574b4225$var$xb(d);
    a = $833559fe574b4225$var$Wc(a);
    if (null !== a) {
        if (b = $833559fe574b4225$var$Vb(a), null === b) a = null;
        else if (c = b.tag, 13 === c) {
            a = $833559fe574b4225$var$Wb(b);
            if (null !== a) return a;
            a = null;
        } else if (3 === c) {
            if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null;
            a = null;
        } else b !== a && (a = null);
    }
    $833559fe574b4225$var$id = a;
    return null;
}
function $833559fe574b4225$var$jd(a) {
    switch(a){
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
            return 1;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
            return 4;
        case "message":
            switch($833559fe574b4225$var$ec()){
                case $833559fe574b4225$var$fc:
                    return 1;
                case $833559fe574b4225$var$gc:
                    return 4;
                case $833559fe574b4225$var$hc:
                case $833559fe574b4225$var$ic:
                    return 16;
                case $833559fe574b4225$var$jc:
                    return 536870912;
                default:
                    return 16;
            }
        default:
            return 16;
    }
}
var $833559fe574b4225$var$kd = null, $833559fe574b4225$var$ld = null, $833559fe574b4225$var$md = null;
function $833559fe574b4225$var$nd() {
    if ($833559fe574b4225$var$md) return $833559fe574b4225$var$md;
    var a, b = $833559fe574b4225$var$ld, c = b.length, d, e = "value" in $833559fe574b4225$var$kd ? $833559fe574b4225$var$kd.value : $833559fe574b4225$var$kd.textContent, f = e.length;
    for(a = 0; a < c && b[a] === e[a]; a++);
    var g = c - a;
    for(d = 1; d <= g && b[c - d] === e[f - d]; d++);
    return $833559fe574b4225$var$md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function $833559fe574b4225$var$od(a) {
    var b = a.keyCode;
    "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
    10 === a && (a = 13);
    return 32 <= a || 13 === a ? a : 0;
}
function $833559fe574b4225$var$pd() {
    return !0;
}
function $833559fe574b4225$var$qd() {
    return !1;
}
function $833559fe574b4225$var$rd(a) {
    function b(b, d, e, f, g) {
        this._reactName = b;
        this._targetInst = e;
        this.type = d;
        this.nativeEvent = f;
        this.target = g;
        this.currentTarget = null;
        for(var c in a)a.hasOwnProperty(c) && (b = a[c], this[c] = b ? b(f) : f[c]);
        this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? $833559fe574b4225$var$pd : $833559fe574b4225$var$qd;
        this.isPropagationStopped = $833559fe574b4225$var$qd;
        return this;
    }
    $833559fe574b4225$var$A(b.prototype, {
        preventDefault: function() {
            this.defaultPrevented = !0;
            var a = this.nativeEvent;
            a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = $833559fe574b4225$var$pd);
        },
        stopPropagation: function() {
            var a = this.nativeEvent;
            a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = $833559fe574b4225$var$pd);
        },
        persist: function() {},
        isPersistent: $833559fe574b4225$var$pd
    });
    return b;
}
var $833559fe574b4225$var$sd = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function(a) {
        return a.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0
}, $833559fe574b4225$var$td = $833559fe574b4225$var$rd($833559fe574b4225$var$sd), $833559fe574b4225$var$ud = $833559fe574b4225$var$A({}, $833559fe574b4225$var$sd, {
    view: 0,
    detail: 0
}), $833559fe574b4225$var$vd = $833559fe574b4225$var$rd($833559fe574b4225$var$ud), $833559fe574b4225$var$wd, $833559fe574b4225$var$xd, $833559fe574b4225$var$yd, $833559fe574b4225$var$Ad = $833559fe574b4225$var$A({}, $833559fe574b4225$var$ud, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: $833559fe574b4225$var$zd,
    button: 0,
    buttons: 0,
    relatedTarget: function(a) {
        return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
    },
    movementX: function(a) {
        if ("movementX" in a) return a.movementX;
        a !== $833559fe574b4225$var$yd && ($833559fe574b4225$var$yd && "mousemove" === a.type ? ($833559fe574b4225$var$wd = a.screenX - $833559fe574b4225$var$yd.screenX, $833559fe574b4225$var$xd = a.screenY - $833559fe574b4225$var$yd.screenY) : $833559fe574b4225$var$xd = $833559fe574b4225$var$wd = 0, $833559fe574b4225$var$yd = a);
        return $833559fe574b4225$var$wd;
    },
    movementY: function(a) {
        return "movementY" in a ? a.movementY : $833559fe574b4225$var$xd;
    }
}), $833559fe574b4225$var$Bd = $833559fe574b4225$var$rd($833559fe574b4225$var$Ad), $833559fe574b4225$var$Cd = $833559fe574b4225$var$A({}, $833559fe574b4225$var$Ad, {
    dataTransfer: 0
}), $833559fe574b4225$var$Dd = $833559fe574b4225$var$rd($833559fe574b4225$var$Cd), $833559fe574b4225$var$Ed = $833559fe574b4225$var$A({}, $833559fe574b4225$var$ud, {
    relatedTarget: 0
}), $833559fe574b4225$var$Fd = $833559fe574b4225$var$rd($833559fe574b4225$var$Ed), $833559fe574b4225$var$Gd = $833559fe574b4225$var$A({}, $833559fe574b4225$var$sd, {
    animationName: 0,
    elapsedTime: 0,
    pseudoElement: 0
}), $833559fe574b4225$var$Hd = $833559fe574b4225$var$rd($833559fe574b4225$var$Gd), $833559fe574b4225$var$Id = $833559fe574b4225$var$A({}, $833559fe574b4225$var$sd, {
    clipboardData: function(a) {
        return "clipboardData" in a ? a.clipboardData : window.clipboardData;
    }
}), $833559fe574b4225$var$Jd = $833559fe574b4225$var$rd($833559fe574b4225$var$Id), $833559fe574b4225$var$Kd = $833559fe574b4225$var$A({}, $833559fe574b4225$var$sd, {
    data: 0
}), $833559fe574b4225$var$Ld = $833559fe574b4225$var$rd($833559fe574b4225$var$Kd), $833559fe574b4225$var$Md = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
}, $833559fe574b4225$var$Nd = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
}, $833559fe574b4225$var$Od = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey"
};
function $833559fe574b4225$var$Pd(a) {
    var b = this.nativeEvent;
    return b.getModifierState ? b.getModifierState(a) : (a = $833559fe574b4225$var$Od[a]) ? !!b[a] : !1;
}
function $833559fe574b4225$var$zd() {
    return $833559fe574b4225$var$Pd;
}
var $833559fe574b4225$var$Qd = $833559fe574b4225$var$A({}, $833559fe574b4225$var$ud, {
    key: function(a) {
        if (a.key) {
            var b = $833559fe574b4225$var$Md[a.key] || a.key;
            if ("Unidentified" !== b) return b;
        }
        return "keypress" === a.type ? (a = $833559fe574b4225$var$od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? $833559fe574b4225$var$Nd[a.keyCode] || "Unidentified" : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: $833559fe574b4225$var$zd,
    charCode: function(a) {
        return "keypress" === a.type ? $833559fe574b4225$var$od(a) : 0;
    },
    keyCode: function(a) {
        return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    },
    which: function(a) {
        return "keypress" === a.type ? $833559fe574b4225$var$od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    }
}), $833559fe574b4225$var$Rd = $833559fe574b4225$var$rd($833559fe574b4225$var$Qd), $833559fe574b4225$var$Sd = $833559fe574b4225$var$A({}, $833559fe574b4225$var$Ad, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0
}), $833559fe574b4225$var$Td = $833559fe574b4225$var$rd($833559fe574b4225$var$Sd), $833559fe574b4225$var$Ud = $833559fe574b4225$var$A({}, $833559fe574b4225$var$ud, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: $833559fe574b4225$var$zd
}), $833559fe574b4225$var$Vd = $833559fe574b4225$var$rd($833559fe574b4225$var$Ud), $833559fe574b4225$var$Wd = $833559fe574b4225$var$A({}, $833559fe574b4225$var$sd, {
    propertyName: 0,
    elapsedTime: 0,
    pseudoElement: 0
}), $833559fe574b4225$var$Xd = $833559fe574b4225$var$rd($833559fe574b4225$var$Wd), $833559fe574b4225$var$Yd = $833559fe574b4225$var$A({}, $833559fe574b4225$var$Ad, {
    deltaX: function(a) {
        return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function(a) {
        return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
}), $833559fe574b4225$var$Zd = $833559fe574b4225$var$rd($833559fe574b4225$var$Yd), $833559fe574b4225$var$$d = [
    9,
    13,
    27,
    32
], $833559fe574b4225$var$ae = $833559fe574b4225$var$ia && "CompositionEvent" in window, $833559fe574b4225$var$be = null;
$833559fe574b4225$var$ia && "documentMode" in document && ($833559fe574b4225$var$be = document.documentMode);
var $833559fe574b4225$var$ce = $833559fe574b4225$var$ia && "TextEvent" in window && !$833559fe574b4225$var$be, $833559fe574b4225$var$de = $833559fe574b4225$var$ia && (!$833559fe574b4225$var$ae || $833559fe574b4225$var$be && 8 < $833559fe574b4225$var$be && 11 >= $833559fe574b4225$var$be), $833559fe574b4225$var$ee = String.fromCharCode(32), $833559fe574b4225$var$fe = !1;
function $833559fe574b4225$var$ge(a, b) {
    switch(a){
        case "keyup":
            return -1 !== $833559fe574b4225$var$$d.indexOf(b.keyCode);
        case "keydown":
            return 229 !== b.keyCode;
        case "keypress":
        case "mousedown":
        case "focusout":
            return !0;
        default:
            return !1;
    }
}
function $833559fe574b4225$var$he(a) {
    a = a.detail;
    return "object" === typeof a && "data" in a ? a.data : null;
}
var $833559fe574b4225$var$ie = !1;
function $833559fe574b4225$var$je(a, b) {
    switch(a){
        case "compositionend":
            return $833559fe574b4225$var$he(b);
        case "keypress":
            if (32 !== b.which) return null;
            $833559fe574b4225$var$fe = !0;
            return $833559fe574b4225$var$ee;
        case "textInput":
            return a = b.data, a === $833559fe574b4225$var$ee && $833559fe574b4225$var$fe ? null : a;
        default:
            return null;
    }
}
function $833559fe574b4225$var$ke(a, b) {
    if ($833559fe574b4225$var$ie) return "compositionend" === a || !$833559fe574b4225$var$ae && $833559fe574b4225$var$ge(a, b) ? (a = $833559fe574b4225$var$nd(), $833559fe574b4225$var$md = $833559fe574b4225$var$ld = $833559fe574b4225$var$kd = null, $833559fe574b4225$var$ie = !1, a) : null;
    switch(a){
        case "paste":
            return null;
        case "keypress":
            if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
                if (b.char && 1 < b.char.length) return b.char;
                if (b.which) return String.fromCharCode(b.which);
            }
            return null;
        case "compositionend":
            return $833559fe574b4225$var$de && "ko" !== b.locale ? null : b.data;
        default:
            return null;
    }
}
var $833559fe574b4225$var$le = {
    color: !0,
    date: !0,
    datetime: !0,
    "datetime-local": !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0
};
function $833559fe574b4225$var$me(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase();
    return "input" === b ? !!$833559fe574b4225$var$le[a.type] : "textarea" === b ? !0 : !1;
}
function $833559fe574b4225$var$ne(a, b, c, d) {
    $833559fe574b4225$var$Eb(d);
    b = $833559fe574b4225$var$oe(b, "onChange");
    0 < b.length && (c = new $833559fe574b4225$var$td("onChange", "change", null, c, d), a.push({
        event: c,
        listeners: b
    }));
}
var $833559fe574b4225$var$pe = null, $833559fe574b4225$var$qe = null;
function $833559fe574b4225$var$re(a) {
    $833559fe574b4225$var$se(a, 0);
}
function $833559fe574b4225$var$te(a) {
    var b = $833559fe574b4225$var$ue(a);
    if ($833559fe574b4225$var$Wa(b)) return a;
}
function $833559fe574b4225$var$ve(a, b) {
    if ("change" === a) return b;
}
var $833559fe574b4225$var$we = !1;
if ($833559fe574b4225$var$ia) {
    var $833559fe574b4225$var$xe;
    if ($833559fe574b4225$var$ia) {
        var $833559fe574b4225$var$ye = "oninput" in document;
        if (!$833559fe574b4225$var$ye) {
            var $833559fe574b4225$var$ze = document.createElement("div");
            $833559fe574b4225$var$ze.setAttribute("oninput", "return;");
            $833559fe574b4225$var$ye = "function" === typeof $833559fe574b4225$var$ze.oninput;
        }
        $833559fe574b4225$var$xe = $833559fe574b4225$var$ye;
    } else $833559fe574b4225$var$xe = !1;
    $833559fe574b4225$var$we = $833559fe574b4225$var$xe && (!document.documentMode || 9 < document.documentMode);
}
function $833559fe574b4225$var$Ae() {
    $833559fe574b4225$var$pe && ($833559fe574b4225$var$pe.detachEvent("onpropertychange", $833559fe574b4225$var$Be), $833559fe574b4225$var$qe = $833559fe574b4225$var$pe = null);
}
function $833559fe574b4225$var$Be(a) {
    if ("value" === a.propertyName && $833559fe574b4225$var$te($833559fe574b4225$var$qe)) {
        var b = [];
        $833559fe574b4225$var$ne(b, $833559fe574b4225$var$qe, a, $833559fe574b4225$var$xb(a));
        $833559fe574b4225$var$Jb($833559fe574b4225$var$re, b);
    }
}
function $833559fe574b4225$var$Ce(a, b, c) {
    "focusin" === a ? ($833559fe574b4225$var$Ae(), $833559fe574b4225$var$pe = b, $833559fe574b4225$var$qe = c, $833559fe574b4225$var$pe.attachEvent("onpropertychange", $833559fe574b4225$var$Be)) : "focusout" === a && $833559fe574b4225$var$Ae();
}
function $833559fe574b4225$var$De(a) {
    if ("selectionchange" === a || "keyup" === a || "keydown" === a) return $833559fe574b4225$var$te($833559fe574b4225$var$qe);
}
function $833559fe574b4225$var$Ee(a, b) {
    if ("click" === a) return $833559fe574b4225$var$te(b);
}
function $833559fe574b4225$var$Fe(a, b) {
    if ("input" === a || "change" === a) return $833559fe574b4225$var$te(b);
}
function $833559fe574b4225$var$Ge(a, b) {
    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var $833559fe574b4225$var$He = "function" === typeof Object.is ? Object.is : $833559fe574b4225$var$Ge;
function $833559fe574b4225$var$Ie(a, b) {
    if ($833559fe574b4225$var$He(a, b)) return !0;
    if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;
    var c = Object.keys(a), d = Object.keys(b);
    if (c.length !== d.length) return !1;
    for(d = 0; d < c.length; d++){
        var e = c[d];
        if (!$833559fe574b4225$var$ja.call(b, e) || !$833559fe574b4225$var$He(a[e], b[e])) return !1;
    }
    return !0;
}
function $833559fe574b4225$var$Je(a) {
    for(; a && a.firstChild;)a = a.firstChild;
    return a;
}
function $833559fe574b4225$var$Ke(a, b) {
    var c = $833559fe574b4225$var$Je(a);
    a = 0;
    for(var d; c;){
        if (3 === c.nodeType) {
            d = a + c.textContent.length;
            if (a <= b && d >= b) return {
                node: c,
                offset: b - a
            };
            a = d;
        }
        a: {
            for(; c;){
                if (c.nextSibling) {
                    c = c.nextSibling;
                    break a;
                }
                c = c.parentNode;
            }
            c = void 0;
        }
        c = $833559fe574b4225$var$Je(c);
    }
}
function $833559fe574b4225$var$Le(a, b) {
    return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? $833559fe574b4225$var$Le(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
}
function $833559fe574b4225$var$Me() {
    for(var a = window, b = $833559fe574b4225$var$Xa(); b instanceof a.HTMLIFrameElement;){
        try {
            var c = "string" === typeof b.contentWindow.location.href;
        } catch (d) {
            c = !1;
        }
        if (c) a = b.contentWindow;
        else break;
        b = $833559fe574b4225$var$Xa(a.document);
    }
    return b;
}
function $833559fe574b4225$var$Ne(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase();
    return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}
function $833559fe574b4225$var$Oe(a) {
    var b = $833559fe574b4225$var$Me(), c = a.focusedElem, d = a.selectionRange;
    if (b !== c && c && c.ownerDocument && $833559fe574b4225$var$Le(c.ownerDocument.documentElement, c)) {
        if (null !== d && $833559fe574b4225$var$Ne(c)) {
            if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);
            else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {
                a = a.getSelection();
                var e = c.textContent.length, f = Math.min(d.start, e);
                d = void 0 === d.end ? f : Math.min(d.end, e);
                !a.extend && f > d && (e = d, d = f, f = e);
                e = $833559fe574b4225$var$Ke(c, f);
                var g = $833559fe574b4225$var$Ke(c, d);
                e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));
            }
        }
        b = [];
        for(a = c; a = a.parentNode;)1 === a.nodeType && b.push({
            element: a,
            left: a.scrollLeft,
            top: a.scrollTop
        });
        "function" === typeof c.focus && c.focus();
        for(c = 0; c < b.length; c++)a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
    }
}
var $833559fe574b4225$var$Pe = $833559fe574b4225$var$ia && "documentMode" in document && 11 >= document.documentMode, $833559fe574b4225$var$Qe = null, $833559fe574b4225$var$Re = null, $833559fe574b4225$var$Se = null, $833559fe574b4225$var$Te = !1;
function $833559fe574b4225$var$Ue(a, b, c) {
    var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
    $833559fe574b4225$var$Te || null == $833559fe574b4225$var$Qe || $833559fe574b4225$var$Qe !== $833559fe574b4225$var$Xa(d) || (d = $833559fe574b4225$var$Qe, "selectionStart" in d && $833559fe574b4225$var$Ne(d) ? d = {
        start: d.selectionStart,
        end: d.selectionEnd
    } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {
        anchorNode: d.anchorNode,
        anchorOffset: d.anchorOffset,
        focusNode: d.focusNode,
        focusOffset: d.focusOffset
    }), $833559fe574b4225$var$Se && $833559fe574b4225$var$Ie($833559fe574b4225$var$Se, d) || ($833559fe574b4225$var$Se = d, d = $833559fe574b4225$var$oe($833559fe574b4225$var$Re, "onSelect"), 0 < d.length && (b = new $833559fe574b4225$var$td("onSelect", "select", null, b, c), a.push({
        event: b,
        listeners: d
    }), b.target = $833559fe574b4225$var$Qe)));
}
function $833559fe574b4225$var$Ve(a, b) {
    var c = {};
    c[a.toLowerCase()] = b.toLowerCase();
    c["Webkit" + a] = "webkit" + b;
    c["Moz" + a] = "moz" + b;
    return c;
}
var $833559fe574b4225$var$We = {
    animationend: $833559fe574b4225$var$Ve("Animation", "AnimationEnd"),
    animationiteration: $833559fe574b4225$var$Ve("Animation", "AnimationIteration"),
    animationstart: $833559fe574b4225$var$Ve("Animation", "AnimationStart"),
    transitionend: $833559fe574b4225$var$Ve("Transition", "TransitionEnd")
}, $833559fe574b4225$var$Xe = {}, $833559fe574b4225$var$Ye = {};
$833559fe574b4225$var$ia && ($833559fe574b4225$var$Ye = document.createElement("div").style, "AnimationEvent" in window || (delete $833559fe574b4225$var$We.animationend.animation, delete $833559fe574b4225$var$We.animationiteration.animation, delete $833559fe574b4225$var$We.animationstart.animation), "TransitionEvent" in window || delete $833559fe574b4225$var$We.transitionend.transition);
function $833559fe574b4225$var$Ze(a) {
    if ($833559fe574b4225$var$Xe[a]) return $833559fe574b4225$var$Xe[a];
    if (!$833559fe574b4225$var$We[a]) return a;
    var b = $833559fe574b4225$var$We[a], c;
    for(c in b)if (b.hasOwnProperty(c) && c in $833559fe574b4225$var$Ye) return $833559fe574b4225$var$Xe[a] = b[c];
    return a;
}
var $833559fe574b4225$var$$e = $833559fe574b4225$var$Ze("animationend"), $833559fe574b4225$var$af = $833559fe574b4225$var$Ze("animationiteration"), $833559fe574b4225$var$bf = $833559fe574b4225$var$Ze("animationstart"), $833559fe574b4225$var$cf = $833559fe574b4225$var$Ze("transitionend"), $833559fe574b4225$var$df = new Map, $833559fe574b4225$var$ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function $833559fe574b4225$var$ff(a, b) {
    $833559fe574b4225$var$df.set(a, b);
    $833559fe574b4225$var$fa(b, [
        a
    ]);
}
for(var $833559fe574b4225$var$gf = 0; $833559fe574b4225$var$gf < $833559fe574b4225$var$ef.length; $833559fe574b4225$var$gf++){
    var $833559fe574b4225$var$hf = $833559fe574b4225$var$ef[$833559fe574b4225$var$gf], $833559fe574b4225$var$jf = $833559fe574b4225$var$hf.toLowerCase(), $833559fe574b4225$var$kf = $833559fe574b4225$var$hf[0].toUpperCase() + $833559fe574b4225$var$hf.slice(1);
    $833559fe574b4225$var$ff($833559fe574b4225$var$jf, "on" + $833559fe574b4225$var$kf);
}
$833559fe574b4225$var$ff($833559fe574b4225$var$$e, "onAnimationEnd");
$833559fe574b4225$var$ff($833559fe574b4225$var$af, "onAnimationIteration");
$833559fe574b4225$var$ff($833559fe574b4225$var$bf, "onAnimationStart");
$833559fe574b4225$var$ff("dblclick", "onDoubleClick");
$833559fe574b4225$var$ff("focusin", "onFocus");
$833559fe574b4225$var$ff("focusout", "onBlur");
$833559fe574b4225$var$ff($833559fe574b4225$var$cf, "onTransitionEnd");
$833559fe574b4225$var$ha("onMouseEnter", [
    "mouseout",
    "mouseover"
]);
$833559fe574b4225$var$ha("onMouseLeave", [
    "mouseout",
    "mouseover"
]);
$833559fe574b4225$var$ha("onPointerEnter", [
    "pointerout",
    "pointerover"
]);
$833559fe574b4225$var$ha("onPointerLeave", [
    "pointerout",
    "pointerover"
]);
$833559fe574b4225$var$fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
$833559fe574b4225$var$fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
$833559fe574b4225$var$fa("onBeforeInput", [
    "compositionend",
    "keypress",
    "textInput",
    "paste"
]);
$833559fe574b4225$var$fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
$833559fe574b4225$var$fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
$833559fe574b4225$var$fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var $833559fe574b4225$var$lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), $833559fe574b4225$var$mf = new Set("cancel close invalid load scroll toggle".split(" ").concat($833559fe574b4225$var$lf));
function $833559fe574b4225$var$nf(a, b, c) {
    var d = a.type || "unknown-event";
    a.currentTarget = c;
    $833559fe574b4225$var$Ub(d, b, void 0, a);
    a.currentTarget = null;
}
function $833559fe574b4225$var$se(a, b) {
    b = 0 !== (b & 4);
    for(var c = 0; c < a.length; c++){
        var d = a[c], e = d.event;
        d = d.listeners;
        a: {
            var f = void 0;
            if (b) for(var g = d.length - 1; 0 <= g; g--){
                var h = d[g], k = h.instance, l = h.currentTarget;
                h = h.listener;
                if (k !== f && e.isPropagationStopped()) break a;
                $833559fe574b4225$var$nf(e, h, l);
                f = k;
            }
            else for(g = 0; g < d.length; g++){
                h = d[g];
                k = h.instance;
                l = h.currentTarget;
                h = h.listener;
                if (k !== f && e.isPropagationStopped()) break a;
                $833559fe574b4225$var$nf(e, h, l);
                f = k;
            }
        }
    }
    if ($833559fe574b4225$var$Qb) throw a = $833559fe574b4225$var$Rb, $833559fe574b4225$var$Qb = !1, $833559fe574b4225$var$Rb = null, a;
}
function $833559fe574b4225$var$D(a, b) {
    var c = b[$833559fe574b4225$var$of];
    void 0 === c && (c = b[$833559fe574b4225$var$of] = new Set);
    var d = a + "__bubble";
    c.has(d) || ($833559fe574b4225$var$pf(b, a, 2, !1), c.add(d));
}
function $833559fe574b4225$var$qf(a, b, c) {
    var d = 0;
    b && (d |= 4);
    $833559fe574b4225$var$pf(c, a, d, b);
}
var $833559fe574b4225$var$rf = "_reactListening" + Math.random().toString(36).slice(2);
function $833559fe574b4225$var$sf(a) {
    if (!a[$833559fe574b4225$var$rf]) {
        a[$833559fe574b4225$var$rf] = !0;
        $833559fe574b4225$var$da.forEach(function(b) {
            "selectionchange" !== b && ($833559fe574b4225$var$mf.has(b) || $833559fe574b4225$var$qf(b, !1, a), $833559fe574b4225$var$qf(b, !0, a));
        });
        var b = 9 === a.nodeType ? a : a.ownerDocument;
        null === b || b[$833559fe574b4225$var$rf] || (b[$833559fe574b4225$var$rf] = !0, $833559fe574b4225$var$qf("selectionchange", !1, b));
    }
}
function $833559fe574b4225$var$pf(a, b, c, d) {
    switch($833559fe574b4225$var$jd(b)){
        case 1:
            var e = $833559fe574b4225$var$ed;
            break;
        case 4:
            e = $833559fe574b4225$var$gd;
            break;
        default:
            e = $833559fe574b4225$var$fd;
    }
    c = e.bind(null, b, c, a);
    e = void 0;
    !$833559fe574b4225$var$Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);
    d ? void 0 !== e ? a.addEventListener(b, c, {
        capture: !0,
        passive: e
    }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {
        passive: e
    }) : a.addEventListener(b, c, !1);
}
function $833559fe574b4225$var$hd(a, b, c, d, e) {
    var f = d;
    if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for(;;){
        if (null === d) return;
        var g = d.tag;
        if (3 === g || 4 === g) {
            var h = d.stateNode.containerInfo;
            if (h === e || 8 === h.nodeType && h.parentNode === e) break;
            if (4 === g) for(g = d.return; null !== g;){
                var k = g.tag;
                if (3 === k || 4 === k) {
                    if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e) return;
                }
                g = g.return;
            }
            for(; null !== h;){
                g = $833559fe574b4225$var$Wc(h);
                if (null === g) return;
                k = g.tag;
                if (5 === k || 6 === k) {
                    d = f = g;
                    continue a;
                }
                h = h.parentNode;
            }
        }
        d = d.return;
    }
    $833559fe574b4225$var$Jb(function() {
        var d = f, e = $833559fe574b4225$var$xb(c), g = [];
        a: {
            var h = $833559fe574b4225$var$df.get(a);
            if (void 0 !== h) {
                var k = $833559fe574b4225$var$td, n = a;
                switch(a){
                    case "keypress":
                        if (0 === $833559fe574b4225$var$od(c)) break a;
                    case "keydown":
                    case "keyup":
                        k = $833559fe574b4225$var$Rd;
                        break;
                    case "focusin":
                        n = "focus";
                        k = $833559fe574b4225$var$Fd;
                        break;
                    case "focusout":
                        n = "blur";
                        k = $833559fe574b4225$var$Fd;
                        break;
                    case "beforeblur":
                    case "afterblur":
                        k = $833559fe574b4225$var$Fd;
                        break;
                    case "click":
                        if (2 === c.button) break a;
                    case "auxclick":
                    case "dblclick":
                    case "mousedown":
                    case "mousemove":
                    case "mouseup":
                    case "mouseout":
                    case "mouseover":
                    case "contextmenu":
                        k = $833559fe574b4225$var$Bd;
                        break;
                    case "drag":
                    case "dragend":
                    case "dragenter":
                    case "dragexit":
                    case "dragleave":
                    case "dragover":
                    case "dragstart":
                    case "drop":
                        k = $833559fe574b4225$var$Dd;
                        break;
                    case "touchcancel":
                    case "touchend":
                    case "touchmove":
                    case "touchstart":
                        k = $833559fe574b4225$var$Vd;
                        break;
                    case $833559fe574b4225$var$$e:
                    case $833559fe574b4225$var$af:
                    case $833559fe574b4225$var$bf:
                        k = $833559fe574b4225$var$Hd;
                        break;
                    case $833559fe574b4225$var$cf:
                        k = $833559fe574b4225$var$Xd;
                        break;
                    case "scroll":
                        k = $833559fe574b4225$var$vd;
                        break;
                    case "wheel":
                        k = $833559fe574b4225$var$Zd;
                        break;
                    case "copy":
                    case "cut":
                    case "paste":
                        k = $833559fe574b4225$var$Jd;
                        break;
                    case "gotpointercapture":
                    case "lostpointercapture":
                    case "pointercancel":
                    case "pointerdown":
                    case "pointermove":
                    case "pointerout":
                    case "pointerover":
                    case "pointerup":
                        k = $833559fe574b4225$var$Td;
                }
                var t = 0 !== (b & 4), J = !t && "scroll" === a, x = t ? null !== h ? h + "Capture" : null : h;
                t = [];
                for(var w = d, u; null !== w;){
                    u = w;
                    var F = u.stateNode;
                    5 === u.tag && null !== F && (u = F, null !== x && (F = $833559fe574b4225$var$Kb(w, x), null != F && t.push($833559fe574b4225$var$tf(w, F, u))));
                    if (J) break;
                    w = w.return;
                }
                0 < t.length && (h = new k(h, n, null, c, e), g.push({
                    event: h,
                    listeners: t
                }));
            }
        }
        if (0 === (b & 7)) {
            a: {
                h = "mouseover" === a || "pointerover" === a;
                k = "mouseout" === a || "pointerout" === a;
                if (h && c !== $833559fe574b4225$var$wb && (n = c.relatedTarget || c.fromElement) && ($833559fe574b4225$var$Wc(n) || n[$833559fe574b4225$var$uf])) break a;
                if (k || h) {
                    h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window;
                    if (k) {
                        if (n = c.relatedTarget || c.toElement, k = d, n = n ? $833559fe574b4225$var$Wc(n) : null, null !== n && (J = $833559fe574b4225$var$Vb(n), n !== J || 5 !== n.tag && 6 !== n.tag)) n = null;
                    } else k = null, n = d;
                    if (k !== n) {
                        t = $833559fe574b4225$var$Bd;
                        F = "onMouseLeave";
                        x = "onMouseEnter";
                        w = "mouse";
                        if ("pointerout" === a || "pointerover" === a) t = $833559fe574b4225$var$Td, F = "onPointerLeave", x = "onPointerEnter", w = "pointer";
                        J = null == k ? h : $833559fe574b4225$var$ue(k);
                        u = null == n ? h : $833559fe574b4225$var$ue(n);
                        h = new t(F, w + "leave", k, c, e);
                        h.target = J;
                        h.relatedTarget = u;
                        F = null;
                        $833559fe574b4225$var$Wc(e) === d && (t = new t(x, w + "enter", n, c, e), t.target = u, t.relatedTarget = J, F = t);
                        J = F;
                        if (k && n) b: {
                            t = k;
                            x = n;
                            w = 0;
                            for(u = t; u; u = $833559fe574b4225$var$vf(u))w++;
                            u = 0;
                            for(F = x; F; F = $833559fe574b4225$var$vf(F))u++;
                            for(; 0 < w - u;)t = $833559fe574b4225$var$vf(t), w--;
                            for(; 0 < u - w;)x = $833559fe574b4225$var$vf(x), u--;
                            for(; w--;){
                                if (t === x || null !== x && t === x.alternate) break b;
                                t = $833559fe574b4225$var$vf(t);
                                x = $833559fe574b4225$var$vf(x);
                            }
                            t = null;
                        }
                        else t = null;
                        null !== k && $833559fe574b4225$var$wf(g, h, k, t, !1);
                        null !== n && null !== J && $833559fe574b4225$var$wf(g, J, n, t, !0);
                    }
                }
            }
            a: {
                h = d ? $833559fe574b4225$var$ue(d) : window;
                k = h.nodeName && h.nodeName.toLowerCase();
                if ("select" === k || "input" === k && "file" === h.type) var na = $833559fe574b4225$var$ve;
                else if ($833559fe574b4225$var$me(h)) {
                    if ($833559fe574b4225$var$we) na = $833559fe574b4225$var$Fe;
                    else {
                        na = $833559fe574b4225$var$De;
                        var xa = $833559fe574b4225$var$Ce;
                    }
                } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (na = $833559fe574b4225$var$Ee);
                if (na && (na = na(a, d))) {
                    $833559fe574b4225$var$ne(g, na, c, e);
                    break a;
                }
                xa && xa(a, h, d);
                "focusout" === a && (xa = h._wrapperState) && xa.controlled && "number" === h.type && $833559fe574b4225$var$cb(h, "number", h.value);
            }
            xa = d ? $833559fe574b4225$var$ue(d) : window;
            switch(a){
                case "focusin":
                    if ($833559fe574b4225$var$me(xa) || "true" === xa.contentEditable) $833559fe574b4225$var$Qe = xa, $833559fe574b4225$var$Re = d, $833559fe574b4225$var$Se = null;
                    break;
                case "focusout":
                    $833559fe574b4225$var$Se = $833559fe574b4225$var$Re = $833559fe574b4225$var$Qe = null;
                    break;
                case "mousedown":
                    $833559fe574b4225$var$Te = !0;
                    break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                    $833559fe574b4225$var$Te = !1;
                    $833559fe574b4225$var$Ue(g, c, e);
                    break;
                case "selectionchange":
                    if ($833559fe574b4225$var$Pe) break;
                case "keydown":
                case "keyup":
                    $833559fe574b4225$var$Ue(g, c, e);
            }
            var $a;
            if ($833559fe574b4225$var$ae) b: {
                switch(a){
                    case "compositionstart":
                        var ba = "onCompositionStart";
                        break b;
                    case "compositionend":
                        ba = "onCompositionEnd";
                        break b;
                    case "compositionupdate":
                        ba = "onCompositionUpdate";
                        break b;
                }
                ba = void 0;
            }
            else $833559fe574b4225$var$ie ? $833559fe574b4225$var$ge(a, c) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba = "onCompositionStart");
            ba && ($833559fe574b4225$var$de && "ko" !== c.locale && ($833559fe574b4225$var$ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && $833559fe574b4225$var$ie && ($a = $833559fe574b4225$var$nd()) : ($833559fe574b4225$var$kd = e, $833559fe574b4225$var$ld = "value" in $833559fe574b4225$var$kd ? $833559fe574b4225$var$kd.value : $833559fe574b4225$var$kd.textContent, $833559fe574b4225$var$ie = !0)), xa = $833559fe574b4225$var$oe(d, ba), 0 < xa.length && (ba = new $833559fe574b4225$var$Ld(ba, a, null, c, e), g.push({
                event: ba,
                listeners: xa
            }), $a ? ba.data = $a : ($a = $833559fe574b4225$var$he(c), null !== $a && (ba.data = $a))));
            if ($a = $833559fe574b4225$var$ce ? $833559fe574b4225$var$je(a, c) : $833559fe574b4225$var$ke(a, c)) d = $833559fe574b4225$var$oe(d, "onBeforeInput"), 0 < d.length && (e = new $833559fe574b4225$var$Ld("onBeforeInput", "beforeinput", null, c, e), g.push({
                event: e,
                listeners: d
            }), e.data = $a);
        }
        $833559fe574b4225$var$se(g, b);
    });
}
function $833559fe574b4225$var$tf(a, b, c) {
    return {
        instance: a,
        listener: b,
        currentTarget: c
    };
}
function $833559fe574b4225$var$oe(a, b) {
    for(var c = b + "Capture", d = []; null !== a;){
        var e = a, f = e.stateNode;
        5 === e.tag && null !== f && (e = f, f = $833559fe574b4225$var$Kb(a, c), null != f && d.unshift($833559fe574b4225$var$tf(a, f, e)), f = $833559fe574b4225$var$Kb(a, b), null != f && d.push($833559fe574b4225$var$tf(a, f, e)));
        a = a.return;
    }
    return d;
}
function $833559fe574b4225$var$vf(a) {
    if (null === a) return null;
    do a = a.return;
    while (a && 5 !== a.tag);
    return a ? a : null;
}
function $833559fe574b4225$var$wf(a, b, c, d, e) {
    for(var f = b._reactName, g = []; null !== c && c !== d;){
        var h = c, k = h.alternate, l = h.stateNode;
        if (null !== k && k === d) break;
        5 === h.tag && null !== l && (h = l, e ? (k = $833559fe574b4225$var$Kb(c, f), null != k && g.unshift($833559fe574b4225$var$tf(c, k, h))) : e || (k = $833559fe574b4225$var$Kb(c, f), null != k && g.push($833559fe574b4225$var$tf(c, k, h))));
        c = c.return;
    }
    0 !== g.length && a.push({
        event: b,
        listeners: g
    });
}
var $833559fe574b4225$var$xf = /\r\n?/g, $833559fe574b4225$var$yf = /\u0000|\uFFFD/g;
function $833559fe574b4225$var$zf(a) {
    return ("string" === typeof a ? a : "" + a).replace($833559fe574b4225$var$xf, "\n").replace($833559fe574b4225$var$yf, "");
}
function $833559fe574b4225$var$Af(a, b, c) {
    b = $833559fe574b4225$var$zf(b);
    if ($833559fe574b4225$var$zf(a) !== b && c) throw Error($833559fe574b4225$var$p(425));
}
function $833559fe574b4225$var$Bf() {}
var $833559fe574b4225$var$Cf = null, $833559fe574b4225$var$Df = null;
function $833559fe574b4225$var$Ef(a, b) {
    return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var $833559fe574b4225$var$Ff = "function" === typeof setTimeout ? setTimeout : void 0, $833559fe574b4225$var$Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, $833559fe574b4225$var$Hf = "function" === typeof Promise ? Promise : void 0, $833559fe574b4225$var$Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof $833559fe574b4225$var$Hf ? function(a) {
    return $833559fe574b4225$var$Hf.resolve(null).then(a).catch($833559fe574b4225$var$If);
} : $833559fe574b4225$var$Ff;
function $833559fe574b4225$var$If(a) {
    setTimeout(function() {
        throw a;
    });
}
function $833559fe574b4225$var$Kf(a, b) {
    var c = b, d = 0;
    do {
        var e = c.nextSibling;
        a.removeChild(c);
        if (e && 8 === e.nodeType) {
            if (c = e.data, "/$" === c) {
                if (0 === d) {
                    a.removeChild(e);
                    $833559fe574b4225$var$bd(b);
                    return;
                }
                d--;
            } else "$" !== c && "$?" !== c && "$!" !== c || d++;
        }
        c = e;
    }while (c);
    $833559fe574b4225$var$bd(b);
}
function $833559fe574b4225$var$Lf(a) {
    for(; null != a; a = a.nextSibling){
        var b = a.nodeType;
        if (1 === b || 3 === b) break;
        if (8 === b) {
            b = a.data;
            if ("$" === b || "$!" === b || "$?" === b) break;
            if ("/$" === b) return null;
        }
    }
    return a;
}
function $833559fe574b4225$var$Mf(a) {
    a = a.previousSibling;
    for(var b = 0; a;){
        if (8 === a.nodeType) {
            var c = a.data;
            if ("$" === c || "$!" === c || "$?" === c) {
                if (0 === b) return a;
                b--;
            } else "/$" === c && b++;
        }
        a = a.previousSibling;
    }
    return null;
}
var $833559fe574b4225$var$Nf = Math.random().toString(36).slice(2), $833559fe574b4225$var$Of = "__reactFiber$" + $833559fe574b4225$var$Nf, $833559fe574b4225$var$Pf = "__reactProps$" + $833559fe574b4225$var$Nf, $833559fe574b4225$var$uf = "__reactContainer$" + $833559fe574b4225$var$Nf, $833559fe574b4225$var$of = "__reactEvents$" + $833559fe574b4225$var$Nf, $833559fe574b4225$var$Qf = "__reactListeners$" + $833559fe574b4225$var$Nf, $833559fe574b4225$var$Rf = "__reactHandles$" + $833559fe574b4225$var$Nf;
function $833559fe574b4225$var$Wc(a) {
    var b = a[$833559fe574b4225$var$Of];
    if (b) return b;
    for(var c = a.parentNode; c;){
        if (b = c[$833559fe574b4225$var$uf] || c[$833559fe574b4225$var$Of]) {
            c = b.alternate;
            if (null !== b.child || null !== c && null !== c.child) for(a = $833559fe574b4225$var$Mf(a); null !== a;){
                if (c = a[$833559fe574b4225$var$Of]) return c;
                a = $833559fe574b4225$var$Mf(a);
            }
            return b;
        }
        a = c;
        c = a.parentNode;
    }
    return null;
}
function $833559fe574b4225$var$Cb(a) {
    a = a[$833559fe574b4225$var$Of] || a[$833559fe574b4225$var$uf];
    return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function $833559fe574b4225$var$ue(a) {
    if (5 === a.tag || 6 === a.tag) return a.stateNode;
    throw Error($833559fe574b4225$var$p(33));
}
function $833559fe574b4225$var$Db(a) {
    return a[$833559fe574b4225$var$Pf] || null;
}
var $833559fe574b4225$var$Sf = [], $833559fe574b4225$var$Tf = -1;
function $833559fe574b4225$var$Uf(a) {
    return {
        current: a
    };
}
function $833559fe574b4225$var$E(a) {
    0 > $833559fe574b4225$var$Tf || (a.current = $833559fe574b4225$var$Sf[$833559fe574b4225$var$Tf], $833559fe574b4225$var$Sf[$833559fe574b4225$var$Tf] = null, $833559fe574b4225$var$Tf--);
}
function $833559fe574b4225$var$G(a, b) {
    $833559fe574b4225$var$Tf++;
    $833559fe574b4225$var$Sf[$833559fe574b4225$var$Tf] = a.current;
    a.current = b;
}
var $833559fe574b4225$var$Vf = {}, $833559fe574b4225$var$H = $833559fe574b4225$var$Uf($833559fe574b4225$var$Vf), $833559fe574b4225$var$Wf = $833559fe574b4225$var$Uf(!1), $833559fe574b4225$var$Xf = $833559fe574b4225$var$Vf;
function $833559fe574b4225$var$Yf(a, b) {
    var c = a.type.contextTypes;
    if (!c) return $833559fe574b4225$var$Vf;
    var d = a.stateNode;
    if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
    var e = {}, f;
    for(f in c)e[f] = b[f];
    d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
    return e;
}
function $833559fe574b4225$var$Zf(a) {
    a = a.childContextTypes;
    return null !== a && void 0 !== a;
}
function $833559fe574b4225$var$$f() {
    $833559fe574b4225$var$E($833559fe574b4225$var$Wf);
    $833559fe574b4225$var$E($833559fe574b4225$var$H);
}
function $833559fe574b4225$var$ag(a, b, c) {
    if ($833559fe574b4225$var$H.current !== $833559fe574b4225$var$Vf) throw Error($833559fe574b4225$var$p(168));
    $833559fe574b4225$var$G($833559fe574b4225$var$H, b);
    $833559fe574b4225$var$G($833559fe574b4225$var$Wf, c);
}
function $833559fe574b4225$var$bg(a, b, c) {
    var d = a.stateNode;
    b = b.childContextTypes;
    if ("function" !== typeof d.getChildContext) return c;
    d = d.getChildContext();
    for(var e in d)if (!(e in b)) throw Error($833559fe574b4225$var$p(108, $833559fe574b4225$var$Ra(a) || "Unknown", e));
    return $833559fe574b4225$var$A({}, c, d);
}
function $833559fe574b4225$var$cg(a) {
    a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || $833559fe574b4225$var$Vf;
    $833559fe574b4225$var$Xf = $833559fe574b4225$var$H.current;
    $833559fe574b4225$var$G($833559fe574b4225$var$H, a);
    $833559fe574b4225$var$G($833559fe574b4225$var$Wf, $833559fe574b4225$var$Wf.current);
    return !0;
}
function $833559fe574b4225$var$dg(a, b, c) {
    var d = a.stateNode;
    if (!d) throw Error($833559fe574b4225$var$p(169));
    c ? (a = $833559fe574b4225$var$bg(a, b, $833559fe574b4225$var$Xf), d.__reactInternalMemoizedMergedChildContext = a, $833559fe574b4225$var$E($833559fe574b4225$var$Wf), $833559fe574b4225$var$E($833559fe574b4225$var$H), $833559fe574b4225$var$G($833559fe574b4225$var$H, a)) : $833559fe574b4225$var$E($833559fe574b4225$var$Wf);
    $833559fe574b4225$var$G($833559fe574b4225$var$Wf, c);
}
var $833559fe574b4225$var$eg = null, $833559fe574b4225$var$fg = !1, $833559fe574b4225$var$gg = !1;
function $833559fe574b4225$var$hg(a) {
    null === $833559fe574b4225$var$eg ? $833559fe574b4225$var$eg = [
        a
    ] : $833559fe574b4225$var$eg.push(a);
}
function $833559fe574b4225$var$ig(a) {
    $833559fe574b4225$var$fg = !0;
    $833559fe574b4225$var$hg(a);
}
function $833559fe574b4225$var$jg() {
    if (!$833559fe574b4225$var$gg && null !== $833559fe574b4225$var$eg) {
        $833559fe574b4225$var$gg = !0;
        var a = 0, b = $833559fe574b4225$var$C;
        try {
            var c = $833559fe574b4225$var$eg;
            for($833559fe574b4225$var$C = 1; a < c.length; a++){
                var d = c[a];
                do d = d(!0);
                while (null !== d);
            }
            $833559fe574b4225$var$eg = null;
            $833559fe574b4225$var$fg = !1;
        } catch (e) {
            throw null !== $833559fe574b4225$var$eg && ($833559fe574b4225$var$eg = $833559fe574b4225$var$eg.slice(a + 1)), $833559fe574b4225$var$ac($833559fe574b4225$var$fc, $833559fe574b4225$var$jg), e;
        } finally{
            $833559fe574b4225$var$C = b, $833559fe574b4225$var$gg = !1;
        }
    }
    return null;
}
var $833559fe574b4225$var$kg = [], $833559fe574b4225$var$lg = 0, $833559fe574b4225$var$mg = null, $833559fe574b4225$var$ng = 0, $833559fe574b4225$var$og = [], $833559fe574b4225$var$pg = 0, $833559fe574b4225$var$qg = null, $833559fe574b4225$var$rg = 1, $833559fe574b4225$var$sg = "";
function $833559fe574b4225$var$tg(a, b) {
    $833559fe574b4225$var$kg[$833559fe574b4225$var$lg++] = $833559fe574b4225$var$ng;
    $833559fe574b4225$var$kg[$833559fe574b4225$var$lg++] = $833559fe574b4225$var$mg;
    $833559fe574b4225$var$mg = a;
    $833559fe574b4225$var$ng = b;
}
function $833559fe574b4225$var$ug(a, b, c) {
    $833559fe574b4225$var$og[$833559fe574b4225$var$pg++] = $833559fe574b4225$var$rg;
    $833559fe574b4225$var$og[$833559fe574b4225$var$pg++] = $833559fe574b4225$var$sg;
    $833559fe574b4225$var$og[$833559fe574b4225$var$pg++] = $833559fe574b4225$var$qg;
    $833559fe574b4225$var$qg = a;
    var d = $833559fe574b4225$var$rg;
    a = $833559fe574b4225$var$sg;
    var e = 32 - $833559fe574b4225$var$oc(d) - 1;
    d &= ~(1 << e);
    c += 1;
    var f = 32 - $833559fe574b4225$var$oc(b) + e;
    if (30 < f) {
        var g = e - e % 5;
        f = (d & (1 << g) - 1).toString(32);
        d >>= g;
        e -= g;
        $833559fe574b4225$var$rg = 1 << 32 - $833559fe574b4225$var$oc(b) + e | c << e | d;
        $833559fe574b4225$var$sg = f + a;
    } else $833559fe574b4225$var$rg = 1 << f | c << e | d, $833559fe574b4225$var$sg = a;
}
function $833559fe574b4225$var$vg(a) {
    null !== a.return && ($833559fe574b4225$var$tg(a, 1), $833559fe574b4225$var$ug(a, 1, 0));
}
function $833559fe574b4225$var$wg(a) {
    for(; a === $833559fe574b4225$var$mg;)$833559fe574b4225$var$mg = $833559fe574b4225$var$kg[--$833559fe574b4225$var$lg], $833559fe574b4225$var$kg[$833559fe574b4225$var$lg] = null, $833559fe574b4225$var$ng = $833559fe574b4225$var$kg[--$833559fe574b4225$var$lg], $833559fe574b4225$var$kg[$833559fe574b4225$var$lg] = null;
    for(; a === $833559fe574b4225$var$qg;)$833559fe574b4225$var$qg = $833559fe574b4225$var$og[--$833559fe574b4225$var$pg], $833559fe574b4225$var$og[$833559fe574b4225$var$pg] = null, $833559fe574b4225$var$sg = $833559fe574b4225$var$og[--$833559fe574b4225$var$pg], $833559fe574b4225$var$og[$833559fe574b4225$var$pg] = null, $833559fe574b4225$var$rg = $833559fe574b4225$var$og[--$833559fe574b4225$var$pg], $833559fe574b4225$var$og[$833559fe574b4225$var$pg] = null;
}
var $833559fe574b4225$var$xg = null, $833559fe574b4225$var$yg = null, $833559fe574b4225$var$I = !1, $833559fe574b4225$var$zg = null;
function $833559fe574b4225$var$Ag(a, b) {
    var c = $833559fe574b4225$var$Bg(5, null, null, 0);
    c.elementType = "DELETED";
    c.stateNode = b;
    c.return = a;
    b = a.deletions;
    null === b ? (a.deletions = [
        c
    ], a.flags |= 16) : b.push(c);
}
function $833559fe574b4225$var$Cg(a, b) {
    switch(a.tag){
        case 5:
            var c = a.type;
            b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
            return null !== b ? (a.stateNode = b, $833559fe574b4225$var$xg = a, $833559fe574b4225$var$yg = $833559fe574b4225$var$Lf(b.firstChild), !0) : !1;
        case 6:
            return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, $833559fe574b4225$var$xg = a, $833559fe574b4225$var$yg = null, !0) : !1;
        case 13:
            return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== $833559fe574b4225$var$qg ? {
                id: $833559fe574b4225$var$rg,
                overflow: $833559fe574b4225$var$sg
            } : null, a.memoizedState = {
                dehydrated: b,
                treeContext: c,
                retryLane: 1073741824
            }, c = $833559fe574b4225$var$Bg(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, $833559fe574b4225$var$xg = a, $833559fe574b4225$var$yg = null, !0) : !1;
        default:
            return !1;
    }
}
function $833559fe574b4225$var$Dg(a) {
    return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function $833559fe574b4225$var$Eg(a) {
    if ($833559fe574b4225$var$I) {
        var b = $833559fe574b4225$var$yg;
        if (b) {
            var c = b;
            if (!$833559fe574b4225$var$Cg(a, b)) {
                if ($833559fe574b4225$var$Dg(a)) throw Error($833559fe574b4225$var$p(418));
                b = $833559fe574b4225$var$Lf(c.nextSibling);
                var d = $833559fe574b4225$var$xg;
                b && $833559fe574b4225$var$Cg(a, b) ? $833559fe574b4225$var$Ag(d, c) : (a.flags = a.flags & -4097 | 2, $833559fe574b4225$var$I = !1, $833559fe574b4225$var$xg = a);
            }
        } else {
            if ($833559fe574b4225$var$Dg(a)) throw Error($833559fe574b4225$var$p(418));
            a.flags = a.flags & -4097 | 2;
            $833559fe574b4225$var$I = !1;
            $833559fe574b4225$var$xg = a;
        }
    }
}
function $833559fe574b4225$var$Fg(a) {
    for(a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;)a = a.return;
    $833559fe574b4225$var$xg = a;
}
function $833559fe574b4225$var$Gg(a) {
    if (a !== $833559fe574b4225$var$xg) return !1;
    if (!$833559fe574b4225$var$I) return $833559fe574b4225$var$Fg(a), $833559fe574b4225$var$I = !0, !1;
    var b;
    (b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = a.type, b = "head" !== b && "body" !== b && !$833559fe574b4225$var$Ef(a.type, a.memoizedProps));
    if (b && (b = $833559fe574b4225$var$yg)) {
        if ($833559fe574b4225$var$Dg(a)) throw $833559fe574b4225$var$Hg(), Error($833559fe574b4225$var$p(418));
        for(; b;)$833559fe574b4225$var$Ag(a, b), b = $833559fe574b4225$var$Lf(b.nextSibling);
    }
    $833559fe574b4225$var$Fg(a);
    if (13 === a.tag) {
        a = a.memoizedState;
        a = null !== a ? a.dehydrated : null;
        if (!a) throw Error($833559fe574b4225$var$p(317));
        a: {
            a = a.nextSibling;
            for(b = 0; a;){
                if (8 === a.nodeType) {
                    var c = a.data;
                    if ("/$" === c) {
                        if (0 === b) {
                            $833559fe574b4225$var$yg = $833559fe574b4225$var$Lf(a.nextSibling);
                            break a;
                        }
                        b--;
                    } else "$" !== c && "$!" !== c && "$?" !== c || b++;
                }
                a = a.nextSibling;
            }
            $833559fe574b4225$var$yg = null;
        }
    } else $833559fe574b4225$var$yg = $833559fe574b4225$var$xg ? $833559fe574b4225$var$Lf(a.stateNode.nextSibling) : null;
    return !0;
}
function $833559fe574b4225$var$Hg() {
    for(var a = $833559fe574b4225$var$yg; a;)a = $833559fe574b4225$var$Lf(a.nextSibling);
}
function $833559fe574b4225$var$Ig() {
    $833559fe574b4225$var$yg = $833559fe574b4225$var$xg = null;
    $833559fe574b4225$var$I = !1;
}
function $833559fe574b4225$var$Jg(a) {
    null === $833559fe574b4225$var$zg ? $833559fe574b4225$var$zg = [
        a
    ] : $833559fe574b4225$var$zg.push(a);
}
var $833559fe574b4225$var$Kg = $833559fe574b4225$var$ua.ReactCurrentBatchConfig;
function $833559fe574b4225$var$Lg(a, b) {
    if (a && a.defaultProps) {
        b = $833559fe574b4225$var$A({}, b);
        a = a.defaultProps;
        for(var c in a)void 0 === b[c] && (b[c] = a[c]);
        return b;
    }
    return b;
}
var $833559fe574b4225$var$Mg = $833559fe574b4225$var$Uf(null), $833559fe574b4225$var$Ng = null, $833559fe574b4225$var$Og = null, $833559fe574b4225$var$Pg = null;
function $833559fe574b4225$var$Qg() {
    $833559fe574b4225$var$Pg = $833559fe574b4225$var$Og = $833559fe574b4225$var$Ng = null;
}
function $833559fe574b4225$var$Rg(a) {
    var b = $833559fe574b4225$var$Mg.current;
    $833559fe574b4225$var$E($833559fe574b4225$var$Mg);
    a._currentValue = b;
}
function $833559fe574b4225$var$Sg(a, b, c) {
    for(; null !== a;){
        var d = a.alternate;
        (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
        if (a === c) break;
        a = a.return;
    }
}
function $833559fe574b4225$var$Tg(a, b) {
    $833559fe574b4225$var$Ng = a;
    $833559fe574b4225$var$Pg = $833559fe574b4225$var$Og = null;
    a = a.dependencies;
    null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && ($833559fe574b4225$var$Ug = !0), a.firstContext = null);
}
function $833559fe574b4225$var$Vg(a) {
    var b = a._currentValue;
    if ($833559fe574b4225$var$Pg !== a) {
        if (a = {
            context: a,
            memoizedValue: b,
            next: null
        }, null === $833559fe574b4225$var$Og) {
            if (null === $833559fe574b4225$var$Ng) throw Error($833559fe574b4225$var$p(308));
            $833559fe574b4225$var$Og = a;
            $833559fe574b4225$var$Ng.dependencies = {
                lanes: 0,
                firstContext: a
            };
        } else $833559fe574b4225$var$Og = $833559fe574b4225$var$Og.next = a;
    }
    return b;
}
var $833559fe574b4225$var$Wg = null;
function $833559fe574b4225$var$Xg(a) {
    null === $833559fe574b4225$var$Wg ? $833559fe574b4225$var$Wg = [
        a
    ] : $833559fe574b4225$var$Wg.push(a);
}
function $833559fe574b4225$var$Yg(a, b, c, d) {
    var e = b.interleaved;
    null === e ? (c.next = c, $833559fe574b4225$var$Xg(b)) : (c.next = e.next, e.next = c);
    b.interleaved = c;
    return $833559fe574b4225$var$Zg(a, d);
}
function $833559fe574b4225$var$Zg(a, b) {
    a.lanes |= b;
    var c = a.alternate;
    null !== c && (c.lanes |= b);
    c = a;
    for(a = a.return; null !== a;)a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
    return 3 === c.tag ? c.stateNode : null;
}
var $833559fe574b4225$var$$g = !1;
function $833559fe574b4225$var$ah(a) {
    a.updateQueue = {
        baseState: a.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
            pending: null,
            interleaved: null,
            lanes: 0
        },
        effects: null
    };
}
function $833559fe574b4225$var$bh(a, b) {
    a = a.updateQueue;
    b.updateQueue === a && (b.updateQueue = {
        baseState: a.baseState,
        firstBaseUpdate: a.firstBaseUpdate,
        lastBaseUpdate: a.lastBaseUpdate,
        shared: a.shared,
        effects: a.effects
    });
}
function $833559fe574b4225$var$ch(a, b) {
    return {
        eventTime: a,
        lane: b,
        tag: 0,
        payload: null,
        callback: null,
        next: null
    };
}
function $833559fe574b4225$var$dh(a, b, c) {
    var d = a.updateQueue;
    if (null === d) return null;
    d = d.shared;
    if (0 !== ($833559fe574b4225$var$K & 2)) {
        var e = d.pending;
        null === e ? b.next = b : (b.next = e.next, e.next = b);
        d.pending = b;
        return $833559fe574b4225$var$Zg(a, c);
    }
    e = d.interleaved;
    null === e ? (b.next = b, $833559fe574b4225$var$Xg(d)) : (b.next = e.next, e.next = b);
    d.interleaved = b;
    return $833559fe574b4225$var$Zg(a, c);
}
function $833559fe574b4225$var$eh(a, b, c) {
    b = b.updateQueue;
    if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {
        var d = b.lanes;
        d &= a.pendingLanes;
        c |= d;
        b.lanes = c;
        $833559fe574b4225$var$Cc(a, c);
    }
}
function $833559fe574b4225$var$fh(a, b) {
    var c = a.updateQueue, d = a.alternate;
    if (null !== d && (d = d.updateQueue, c === d)) {
        var e = null, f = null;
        c = c.firstBaseUpdate;
        if (null !== c) {
            do {
                var g = {
                    eventTime: c.eventTime,
                    lane: c.lane,
                    tag: c.tag,
                    payload: c.payload,
                    callback: c.callback,
                    next: null
                };
                null === f ? e = f = g : f = f.next = g;
                c = c.next;
            }while (null !== c);
            null === f ? e = f = b : f = f.next = b;
        } else e = f = b;
        c = {
            baseState: d.baseState,
            firstBaseUpdate: e,
            lastBaseUpdate: f,
            shared: d.shared,
            effects: d.effects
        };
        a.updateQueue = c;
        return;
    }
    a = c.lastBaseUpdate;
    null === a ? c.firstBaseUpdate = b : a.next = b;
    c.lastBaseUpdate = b;
}
function $833559fe574b4225$var$gh(a, b, c, d) {
    var e = a.updateQueue;
    $833559fe574b4225$var$$g = !1;
    var f = e.firstBaseUpdate, g = e.lastBaseUpdate, h = e.shared.pending;
    if (null !== h) {
        e.shared.pending = null;
        var k = h, l = k.next;
        k.next = null;
        null === g ? f = l : g.next = l;
        g = k;
        var m = a.alternate;
        null !== m && (m = m.updateQueue, h = m.lastBaseUpdate, h !== g && (null === h ? m.firstBaseUpdate = l : h.next = l, m.lastBaseUpdate = k));
    }
    if (null !== f) {
        var q = e.baseState;
        g = 0;
        m = l = k = null;
        h = f;
        do {
            var r = h.lane, y = h.eventTime;
            if ((d & r) === r) {
                null !== m && (m = m.next = {
                    eventTime: y,
                    lane: 0,
                    tag: h.tag,
                    payload: h.payload,
                    callback: h.callback,
                    next: null
                });
                a: {
                    var n = a, t = h;
                    r = b;
                    y = c;
                    switch(t.tag){
                        case 1:
                            n = t.payload;
                            if ("function" === typeof n) {
                                q = n.call(y, q, r);
                                break a;
                            }
                            q = n;
                            break a;
                        case 3:
                            n.flags = n.flags & -65537 | 128;
                        case 0:
                            n = t.payload;
                            r = "function" === typeof n ? n.call(y, q, r) : n;
                            if (null === r || void 0 === r) break a;
                            q = $833559fe574b4225$var$A({}, q, r);
                            break a;
                        case 2:
                            $833559fe574b4225$var$$g = !0;
                    }
                }
                null !== h.callback && 0 !== h.lane && (a.flags |= 64, r = e.effects, null === r ? e.effects = [
                    h
                ] : r.push(h));
            } else y = {
                eventTime: y,
                lane: r,
                tag: h.tag,
                payload: h.payload,
                callback: h.callback,
                next: null
            }, null === m ? (l = m = y, k = q) : m = m.next = y, g |= r;
            h = h.next;
            if (null === h) {
                if (h = e.shared.pending, null === h) break;
                else r = h, h = r.next, r.next = null, e.lastBaseUpdate = r, e.shared.pending = null;
            }
        }while (1);
        null === m && (k = q);
        e.baseState = k;
        e.firstBaseUpdate = l;
        e.lastBaseUpdate = m;
        b = e.shared.interleaved;
        if (null !== b) {
            e = b;
            do g |= e.lane, e = e.next;
            while (e !== b);
        } else null === f && (e.shared.lanes = 0);
        $833559fe574b4225$var$hh |= g;
        a.lanes = g;
        a.memoizedState = q;
    }
}
function $833559fe574b4225$var$ih(a, b, c) {
    a = b.effects;
    b.effects = null;
    if (null !== a) for(b = 0; b < a.length; b++){
        var d = a[b], e = d.callback;
        if (null !== e) {
            d.callback = null;
            d = c;
            if ("function" !== typeof e) throw Error($833559fe574b4225$var$p(191, e));
            e.call(d);
        }
    }
}
var $833559fe574b4225$var$jh = (new $d4J5n.Component).refs;
function $833559fe574b4225$var$kh(a, b, c, d) {
    b = a.memoizedState;
    c = c(d, b);
    c = null === c || void 0 === c ? b : $833559fe574b4225$var$A({}, b, c);
    a.memoizedState = c;
    0 === a.lanes && (a.updateQueue.baseState = c);
}
var $833559fe574b4225$var$nh = {
    isMounted: function(a) {
        return (a = a._reactInternals) ? $833559fe574b4225$var$Vb(a) === a : !1;
    },
    enqueueSetState: function(a, b, c) {
        a = a._reactInternals;
        var d = $833559fe574b4225$var$L(), e = $833559fe574b4225$var$lh(a), f = $833559fe574b4225$var$ch(d, e);
        f.payload = b;
        void 0 !== c && null !== c && (f.callback = c);
        b = $833559fe574b4225$var$dh(a, f, e);
        null !== b && ($833559fe574b4225$var$mh(b, a, e, d), $833559fe574b4225$var$eh(b, a, e));
    },
    enqueueReplaceState: function(a, b, c) {
        a = a._reactInternals;
        var d = $833559fe574b4225$var$L(), e = $833559fe574b4225$var$lh(a), f = $833559fe574b4225$var$ch(d, e);
        f.tag = 1;
        f.payload = b;
        void 0 !== c && null !== c && (f.callback = c);
        b = $833559fe574b4225$var$dh(a, f, e);
        null !== b && ($833559fe574b4225$var$mh(b, a, e, d), $833559fe574b4225$var$eh(b, a, e));
    },
    enqueueForceUpdate: function(a, b) {
        a = a._reactInternals;
        var c = $833559fe574b4225$var$L(), d = $833559fe574b4225$var$lh(a), e = $833559fe574b4225$var$ch(c, d);
        e.tag = 2;
        void 0 !== b && null !== b && (e.callback = b);
        b = $833559fe574b4225$var$dh(a, e, d);
        null !== b && ($833559fe574b4225$var$mh(b, a, d, c), $833559fe574b4225$var$eh(b, a, d));
    }
};
function $833559fe574b4225$var$oh(a, b, c, d, e, f, g) {
    a = a.stateNode;
    return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !$833559fe574b4225$var$Ie(c, d) || !$833559fe574b4225$var$Ie(e, f) : !0;
}
function $833559fe574b4225$var$ph(a, b, c) {
    var d = !1, e = $833559fe574b4225$var$Vf;
    var f = b.contextType;
    "object" === typeof f && null !== f ? f = $833559fe574b4225$var$Vg(f) : (e = $833559fe574b4225$var$Zf(b) ? $833559fe574b4225$var$Xf : $833559fe574b4225$var$H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? $833559fe574b4225$var$Yf(a, e) : $833559fe574b4225$var$Vf);
    b = new b(c, f);
    a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
    b.updater = $833559fe574b4225$var$nh;
    a.stateNode = b;
    b._reactInternals = a;
    d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
    return b;
}
function $833559fe574b4225$var$qh(a, b, c, d) {
    a = b.state;
    "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
    "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
    b.state !== a && $833559fe574b4225$var$nh.enqueueReplaceState(b, b.state, null);
}
function $833559fe574b4225$var$rh(a, b, c, d) {
    var e = a.stateNode;
    e.props = c;
    e.state = a.memoizedState;
    e.refs = $833559fe574b4225$var$jh;
    $833559fe574b4225$var$ah(a);
    var f = b.contextType;
    "object" === typeof f && null !== f ? e.context = $833559fe574b4225$var$Vg(f) : (f = $833559fe574b4225$var$Zf(b) ? $833559fe574b4225$var$Xf : $833559fe574b4225$var$H.current, e.context = $833559fe574b4225$var$Yf(a, f));
    e.state = a.memoizedState;
    f = b.getDerivedStateFromProps;
    "function" === typeof f && ($833559fe574b4225$var$kh(a, b, f, c), e.state = a.memoizedState);
    "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && $833559fe574b4225$var$nh.enqueueReplaceState(e, e.state, null), $833559fe574b4225$var$gh(a, c, e, d), e.state = a.memoizedState);
    "function" === typeof e.componentDidMount && (a.flags |= 4194308);
}
function $833559fe574b4225$var$sh(a, b, c) {
    a = c.ref;
    if (null !== a && "function" !== typeof a && "object" !== typeof a) {
        if (c._owner) {
            c = c._owner;
            if (c) {
                if (1 !== c.tag) throw Error($833559fe574b4225$var$p(309));
                var d = c.stateNode;
            }
            if (!d) throw Error($833559fe574b4225$var$p(147, a));
            var e = d, f = "" + a;
            if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f) return b.ref;
            b = function(a) {
                var b = e.refs;
                b === $833559fe574b4225$var$jh && (b = e.refs = {});
                null === a ? delete b[f] : b[f] = a;
            };
            b._stringRef = f;
            return b;
        }
        if ("string" !== typeof a) throw Error($833559fe574b4225$var$p(284));
        if (!c._owner) throw Error($833559fe574b4225$var$p(290, a));
    }
    return a;
}
function $833559fe574b4225$var$th(a, b) {
    a = Object.prototype.toString.call(b);
    throw Error($833559fe574b4225$var$p(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));
}
function $833559fe574b4225$var$uh(a) {
    var b = a._init;
    return b(a._payload);
}
function $833559fe574b4225$var$vh(a) {
    function b(b, c) {
        if (a) {
            var d = b.deletions;
            null === d ? (b.deletions = [
                c
            ], b.flags |= 16) : d.push(c);
        }
    }
    function c(c, d) {
        if (!a) return null;
        for(; null !== d;)b(c, d), d = d.sibling;
        return null;
    }
    function d(a, b) {
        for(a = new Map; null !== b;)null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
        return a;
    }
    function e(a, b) {
        a = $833559fe574b4225$var$wh(a, b);
        a.index = 0;
        a.sibling = null;
        return a;
    }
    function f(b, c, d) {
        b.index = d;
        if (!a) return b.flags |= 1048576, c;
        d = b.alternate;
        if (null !== d) return d = d.index, d < c ? (b.flags |= 2, c) : d;
        b.flags |= 2;
        return c;
    }
    function g(b) {
        a && null === b.alternate && (b.flags |= 2);
        return b;
    }
    function h(a, b, c, d) {
        if (null === b || 6 !== b.tag) return b = $833559fe574b4225$var$xh(c, a.mode, d), b.return = a, b;
        b = e(b, c);
        b.return = a;
        return b;
    }
    function k(a, b, c, d) {
        var f = c.type;
        if (f === $833559fe574b4225$var$ya) return m(a, b, c.props.children, d, c.key);
        if (null !== b && (b.elementType === f || "object" === typeof f && null !== f && f.$$typeof === $833559fe574b4225$var$Ha && $833559fe574b4225$var$uh(f) === b.type)) return d = e(b, c.props), d.ref = $833559fe574b4225$var$sh(a, b, c), d.return = a, d;
        d = $833559fe574b4225$var$yh(c.type, c.key, c.props, null, a.mode, d);
        d.ref = $833559fe574b4225$var$sh(a, b, c);
        d.return = a;
        return d;
    }
    function l(a, b, c, d) {
        if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = $833559fe574b4225$var$zh(c, a.mode, d), b.return = a, b;
        b = e(b, c.children || []);
        b.return = a;
        return b;
    }
    function m(a, b, c, d, f) {
        if (null === b || 7 !== b.tag) return b = $833559fe574b4225$var$Ah(c, a.mode, d, f), b.return = a, b;
        b = e(b, c);
        b.return = a;
        return b;
    }
    function q(a, b, c) {
        if ("string" === typeof b && "" !== b || "number" === typeof b) return b = $833559fe574b4225$var$xh("" + b, a.mode, c), b.return = a, b;
        if ("object" === typeof b && null !== b) {
            switch(b.$$typeof){
                case $833559fe574b4225$var$va:
                    return c = $833559fe574b4225$var$yh(b.type, b.key, b.props, null, a.mode, c), c.ref = $833559fe574b4225$var$sh(a, null, b), c.return = a, c;
                case $833559fe574b4225$var$wa:
                    return b = $833559fe574b4225$var$zh(b, a.mode, c), b.return = a, b;
                case $833559fe574b4225$var$Ha:
                    var d = b._init;
                    return q(a, d(b._payload), c);
            }
            if ($833559fe574b4225$var$eb(b) || $833559fe574b4225$var$Ka(b)) return b = $833559fe574b4225$var$Ah(b, a.mode, c, null), b.return = a, b;
            $833559fe574b4225$var$th(a, b);
        }
        return null;
    }
    function r(a, b, c, d) {
        var e = null !== b ? b.key : null;
        if ("string" === typeof c && "" !== c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);
        if ("object" === typeof c && null !== c) {
            switch(c.$$typeof){
                case $833559fe574b4225$var$va:
                    return c.key === e ? k(a, b, c, d) : null;
                case $833559fe574b4225$var$wa:
                    return c.key === e ? l(a, b, c, d) : null;
                case $833559fe574b4225$var$Ha:
                    return e = c._init, r(a, b, e(c._payload), d);
            }
            if ($833559fe574b4225$var$eb(c) || $833559fe574b4225$var$Ka(c)) return null !== e ? null : m(a, b, c, d, null);
            $833559fe574b4225$var$th(a, c);
        }
        return null;
    }
    function y(a, b, c, d, e) {
        if ("string" === typeof d && "" !== d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);
        if ("object" === typeof d && null !== d) {
            switch(d.$$typeof){
                case $833559fe574b4225$var$va:
                    return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);
                case $833559fe574b4225$var$wa:
                    return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);
                case $833559fe574b4225$var$Ha:
                    var f = d._init;
                    return y(a, b, c, f(d._payload), e);
            }
            if ($833559fe574b4225$var$eb(d) || $833559fe574b4225$var$Ka(d)) return a = a.get(c) || null, m(b, a, d, e, null);
            $833559fe574b4225$var$th(b, d);
        }
        return null;
    }
    function n(e, g, h, k) {
        for(var l = null, m = null, u = g, w = g = 0, x = null; null !== u && w < h.length; w++){
            u.index > w ? (x = u, u = null) : x = u.sibling;
            var n = r(e, u, h[w], k);
            if (null === n) {
                null === u && (u = x);
                break;
            }
            a && u && null === n.alternate && b(e, u);
            g = f(n, g, w);
            null === m ? l = n : m.sibling = n;
            m = n;
            u = x;
        }
        if (w === h.length) return c(e, u), $833559fe574b4225$var$I && $833559fe574b4225$var$tg(e, w), l;
        if (null === u) {
            for(; w < h.length; w++)u = q(e, h[w], k), null !== u && (g = f(u, g, w), null === m ? l = u : m.sibling = u, m = u);
            $833559fe574b4225$var$I && $833559fe574b4225$var$tg(e, w);
            return l;
        }
        for(u = d(e, u); w < h.length; w++)x = y(u, e, w, h[w], k), null !== x && (a && null !== x.alternate && u.delete(null === x.key ? w : x.key), g = f(x, g, w), null === m ? l = x : m.sibling = x, m = x);
        a && u.forEach(function(a) {
            return b(e, a);
        });
        $833559fe574b4225$var$I && $833559fe574b4225$var$tg(e, w);
        return l;
    }
    function t(e, g, h, k) {
        var l = $833559fe574b4225$var$Ka(h);
        if ("function" !== typeof l) throw Error($833559fe574b4225$var$p(150));
        h = l.call(h);
        if (null == h) throw Error($833559fe574b4225$var$p(151));
        for(var u = l = null, m = g, w = g = 0, x = null, n = h.next(); null !== m && !n.done; w++, n = h.next()){
            m.index > w ? (x = m, m = null) : x = m.sibling;
            var t = r(e, m, n.value, k);
            if (null === t) {
                null === m && (m = x);
                break;
            }
            a && m && null === t.alternate && b(e, m);
            g = f(t, g, w);
            null === u ? l = t : u.sibling = t;
            u = t;
            m = x;
        }
        if (n.done) return c(e, m), $833559fe574b4225$var$I && $833559fe574b4225$var$tg(e, w), l;
        if (null === m) {
            for(; !n.done; w++, n = h.next())n = q(e, n.value, k), null !== n && (g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
            $833559fe574b4225$var$I && $833559fe574b4225$var$tg(e, w);
            return l;
        }
        for(m = d(e, m); !n.done; w++, n = h.next())n = y(m, e, w, n.value, k), null !== n && (a && null !== n.alternate && m.delete(null === n.key ? w : n.key), g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
        a && m.forEach(function(a) {
            return b(e, a);
        });
        $833559fe574b4225$var$I && $833559fe574b4225$var$tg(e, w);
        return l;
    }
    function J(a, d, f, h) {
        "object" === typeof f && null !== f && f.type === $833559fe574b4225$var$ya && null === f.key && (f = f.props.children);
        if ("object" === typeof f && null !== f) {
            switch(f.$$typeof){
                case $833559fe574b4225$var$va:
                    a: {
                        for(var k = f.key, l = d; null !== l;){
                            if (l.key === k) {
                                k = f.type;
                                if (k === $833559fe574b4225$var$ya) {
                                    if (7 === l.tag) {
                                        c(a, l.sibling);
                                        d = e(l, f.props.children);
                                        d.return = a;
                                        a = d;
                                        break a;
                                    }
                                } else if (l.elementType === k || "object" === typeof k && null !== k && k.$$typeof === $833559fe574b4225$var$Ha && $833559fe574b4225$var$uh(k) === l.type) {
                                    c(a, l.sibling);
                                    d = e(l, f.props);
                                    d.ref = $833559fe574b4225$var$sh(a, l, f);
                                    d.return = a;
                                    a = d;
                                    break a;
                                }
                                c(a, l);
                                break;
                            } else b(a, l);
                            l = l.sibling;
                        }
                        f.type === $833559fe574b4225$var$ya ? (d = $833559fe574b4225$var$Ah(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = $833559fe574b4225$var$yh(f.type, f.key, f.props, null, a.mode, h), h.ref = $833559fe574b4225$var$sh(a, d, f), h.return = a, a = h);
                    }
                    return g(a);
                case $833559fe574b4225$var$wa:
                    a: {
                        for(l = f.key; null !== d;){
                            if (d.key === l) {
                                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                                    c(a, d.sibling);
                                    d = e(d, f.children || []);
                                    d.return = a;
                                    a = d;
                                    break a;
                                } else {
                                    c(a, d);
                                    break;
                                }
                            } else b(a, d);
                            d = d.sibling;
                        }
                        d = $833559fe574b4225$var$zh(f, a.mode, h);
                        d.return = a;
                        a = d;
                    }
                    return g(a);
                case $833559fe574b4225$var$Ha:
                    return l = f._init, J(a, d, l(f._payload), h);
            }
            if ($833559fe574b4225$var$eb(f)) return n(a, d, f, h);
            if ($833559fe574b4225$var$Ka(f)) return t(a, d, f, h);
            $833559fe574b4225$var$th(a, f);
        }
        return "string" === typeof f && "" !== f || "number" === typeof f ? (f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = $833559fe574b4225$var$xh(f, a.mode, h), d.return = a, a = d), g(a)) : c(a, d);
    }
    return J;
}
var $833559fe574b4225$var$Bh = $833559fe574b4225$var$vh(!0), $833559fe574b4225$var$Ch = $833559fe574b4225$var$vh(!1), $833559fe574b4225$var$Dh = {}, $833559fe574b4225$var$Eh = $833559fe574b4225$var$Uf($833559fe574b4225$var$Dh), $833559fe574b4225$var$Fh = $833559fe574b4225$var$Uf($833559fe574b4225$var$Dh), $833559fe574b4225$var$Gh = $833559fe574b4225$var$Uf($833559fe574b4225$var$Dh);
function $833559fe574b4225$var$Hh(a) {
    if (a === $833559fe574b4225$var$Dh) throw Error($833559fe574b4225$var$p(174));
    return a;
}
function $833559fe574b4225$var$Ih(a, b) {
    $833559fe574b4225$var$G($833559fe574b4225$var$Gh, b);
    $833559fe574b4225$var$G($833559fe574b4225$var$Fh, a);
    $833559fe574b4225$var$G($833559fe574b4225$var$Eh, $833559fe574b4225$var$Dh);
    a = b.nodeType;
    switch(a){
        case 9:
        case 11:
            b = (b = b.documentElement) ? b.namespaceURI : $833559fe574b4225$var$lb(null, "");
            break;
        default:
            a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = $833559fe574b4225$var$lb(b, a);
    }
    $833559fe574b4225$var$E($833559fe574b4225$var$Eh);
    $833559fe574b4225$var$G($833559fe574b4225$var$Eh, b);
}
function $833559fe574b4225$var$Jh() {
    $833559fe574b4225$var$E($833559fe574b4225$var$Eh);
    $833559fe574b4225$var$E($833559fe574b4225$var$Fh);
    $833559fe574b4225$var$E($833559fe574b4225$var$Gh);
}
function $833559fe574b4225$var$Kh(a) {
    $833559fe574b4225$var$Hh($833559fe574b4225$var$Gh.current);
    var b = $833559fe574b4225$var$Hh($833559fe574b4225$var$Eh.current);
    var c = $833559fe574b4225$var$lb(b, a.type);
    b !== c && ($833559fe574b4225$var$G($833559fe574b4225$var$Fh, a), $833559fe574b4225$var$G($833559fe574b4225$var$Eh, c));
}
function $833559fe574b4225$var$Lh(a) {
    $833559fe574b4225$var$Fh.current === a && ($833559fe574b4225$var$E($833559fe574b4225$var$Eh), $833559fe574b4225$var$E($833559fe574b4225$var$Fh));
}
var $833559fe574b4225$var$M = $833559fe574b4225$var$Uf(0);
function $833559fe574b4225$var$Mh(a) {
    for(var b = a; null !== b;){
        if (13 === b.tag) {
            var c = b.memoizedState;
            if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;
        } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
            if (0 !== (b.flags & 128)) return b;
        } else if (null !== b.child) {
            b.child.return = b;
            b = b.child;
            continue;
        }
        if (b === a) break;
        for(; null === b.sibling;){
            if (null === b.return || b.return === a) return null;
            b = b.return;
        }
        b.sibling.return = b.return;
        b = b.sibling;
    }
    return null;
}
var $833559fe574b4225$var$Nh = [];
function $833559fe574b4225$var$Oh() {
    for(var a = 0; a < $833559fe574b4225$var$Nh.length; a++)$833559fe574b4225$var$Nh[a]._workInProgressVersionPrimary = null;
    $833559fe574b4225$var$Nh.length = 0;
}
var $833559fe574b4225$var$Ph = $833559fe574b4225$var$ua.ReactCurrentDispatcher, $833559fe574b4225$var$Qh = $833559fe574b4225$var$ua.ReactCurrentBatchConfig, $833559fe574b4225$var$Rh = 0, $833559fe574b4225$var$N = null, $833559fe574b4225$var$O = null, $833559fe574b4225$var$P = null, $833559fe574b4225$var$Sh = !1, $833559fe574b4225$var$Th = !1, $833559fe574b4225$var$Uh = 0, $833559fe574b4225$var$Vh = 0;
function $833559fe574b4225$var$Q() {
    throw Error($833559fe574b4225$var$p(321));
}
function $833559fe574b4225$var$Wh(a, b) {
    if (null === b) return !1;
    for(var c = 0; c < b.length && c < a.length; c++)if (!$833559fe574b4225$var$He(a[c], b[c])) return !1;
    return !0;
}
function $833559fe574b4225$var$Xh(a, b, c, d, e, f) {
    $833559fe574b4225$var$Rh = f;
    $833559fe574b4225$var$N = b;
    b.memoizedState = null;
    b.updateQueue = null;
    b.lanes = 0;
    $833559fe574b4225$var$Ph.current = null === a || null === a.memoizedState ? $833559fe574b4225$var$Yh : $833559fe574b4225$var$Zh;
    a = c(d, e);
    if ($833559fe574b4225$var$Th) {
        f = 0;
        do {
            $833559fe574b4225$var$Th = !1;
            $833559fe574b4225$var$Uh = 0;
            if (25 <= f) throw Error($833559fe574b4225$var$p(301));
            f += 1;
            $833559fe574b4225$var$P = $833559fe574b4225$var$O = null;
            b.updateQueue = null;
            $833559fe574b4225$var$Ph.current = $833559fe574b4225$var$$h;
            a = c(d, e);
        }while ($833559fe574b4225$var$Th);
    }
    $833559fe574b4225$var$Ph.current = $833559fe574b4225$var$ai;
    b = null !== $833559fe574b4225$var$O && null !== $833559fe574b4225$var$O.next;
    $833559fe574b4225$var$Rh = 0;
    $833559fe574b4225$var$P = $833559fe574b4225$var$O = $833559fe574b4225$var$N = null;
    $833559fe574b4225$var$Sh = !1;
    if (b) throw Error($833559fe574b4225$var$p(300));
    return a;
}
function $833559fe574b4225$var$bi() {
    var a = 0 !== $833559fe574b4225$var$Uh;
    $833559fe574b4225$var$Uh = 0;
    return a;
}
function $833559fe574b4225$var$ci() {
    var a = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
    };
    null === $833559fe574b4225$var$P ? $833559fe574b4225$var$N.memoizedState = $833559fe574b4225$var$P = a : $833559fe574b4225$var$P = $833559fe574b4225$var$P.next = a;
    return $833559fe574b4225$var$P;
}
function $833559fe574b4225$var$di() {
    if (null === $833559fe574b4225$var$O) {
        var a = $833559fe574b4225$var$N.alternate;
        a = null !== a ? a.memoizedState : null;
    } else a = $833559fe574b4225$var$O.next;
    var b = null === $833559fe574b4225$var$P ? $833559fe574b4225$var$N.memoizedState : $833559fe574b4225$var$P.next;
    if (null !== b) $833559fe574b4225$var$P = b, $833559fe574b4225$var$O = a;
    else {
        if (null === a) throw Error($833559fe574b4225$var$p(310));
        $833559fe574b4225$var$O = a;
        a = {
            memoizedState: $833559fe574b4225$var$O.memoizedState,
            baseState: $833559fe574b4225$var$O.baseState,
            baseQueue: $833559fe574b4225$var$O.baseQueue,
            queue: $833559fe574b4225$var$O.queue,
            next: null
        };
        null === $833559fe574b4225$var$P ? $833559fe574b4225$var$N.memoizedState = $833559fe574b4225$var$P = a : $833559fe574b4225$var$P = $833559fe574b4225$var$P.next = a;
    }
    return $833559fe574b4225$var$P;
}
function $833559fe574b4225$var$ei(a, b) {
    return "function" === typeof b ? b(a) : b;
}
function $833559fe574b4225$var$fi(a) {
    var b = $833559fe574b4225$var$di(), c = b.queue;
    if (null === c) throw Error($833559fe574b4225$var$p(311));
    c.lastRenderedReducer = a;
    var d = $833559fe574b4225$var$O, e = d.baseQueue, f = c.pending;
    if (null !== f) {
        if (null !== e) {
            var g = e.next;
            e.next = f.next;
            f.next = g;
        }
        d.baseQueue = e = f;
        c.pending = null;
    }
    if (null !== e) {
        f = e.next;
        d = d.baseState;
        var h = g = null, k = null, l = f;
        do {
            var m = l.lane;
            if (($833559fe574b4225$var$Rh & m) === m) null !== k && (k = k.next = {
                lane: 0,
                action: l.action,
                hasEagerState: l.hasEagerState,
                eagerState: l.eagerState,
                next: null
            }), d = l.hasEagerState ? l.eagerState : a(d, l.action);
            else {
                var q = {
                    lane: m,
                    action: l.action,
                    hasEagerState: l.hasEagerState,
                    eagerState: l.eagerState,
                    next: null
                };
                null === k ? (h = k = q, g = d) : k = k.next = q;
                $833559fe574b4225$var$N.lanes |= m;
                $833559fe574b4225$var$hh |= m;
            }
            l = l.next;
        }while (null !== l && l !== f);
        null === k ? g = d : k.next = h;
        $833559fe574b4225$var$He(d, b.memoizedState) || ($833559fe574b4225$var$Ug = !0);
        b.memoizedState = d;
        b.baseState = g;
        b.baseQueue = k;
        c.lastRenderedState = d;
    }
    a = c.interleaved;
    if (null !== a) {
        e = a;
        do f = e.lane, $833559fe574b4225$var$N.lanes |= f, $833559fe574b4225$var$hh |= f, e = e.next;
        while (e !== a);
    } else null === e && (c.lanes = 0);
    return [
        b.memoizedState,
        c.dispatch
    ];
}
function $833559fe574b4225$var$gi(a) {
    var b = $833559fe574b4225$var$di(), c = b.queue;
    if (null === c) throw Error($833559fe574b4225$var$p(311));
    c.lastRenderedReducer = a;
    var d = c.dispatch, e = c.pending, f = b.memoizedState;
    if (null !== e) {
        c.pending = null;
        var g = e = e.next;
        do f = a(f, g.action), g = g.next;
        while (g !== e);
        $833559fe574b4225$var$He(f, b.memoizedState) || ($833559fe574b4225$var$Ug = !0);
        b.memoizedState = f;
        null === b.baseQueue && (b.baseState = f);
        c.lastRenderedState = f;
    }
    return [
        f,
        d
    ];
}
function $833559fe574b4225$var$hi() {}
function $833559fe574b4225$var$ii(a, b) {
    var c = $833559fe574b4225$var$N, d = $833559fe574b4225$var$di(), e = b(), f = !$833559fe574b4225$var$He(d.memoizedState, e);
    f && (d.memoizedState = e, $833559fe574b4225$var$Ug = !0);
    d = d.queue;
    $833559fe574b4225$var$ji($833559fe574b4225$var$ki.bind(null, c, d, a), [
        a
    ]);
    if (d.getSnapshot !== b || f || null !== $833559fe574b4225$var$P && $833559fe574b4225$var$P.memoizedState.tag & 1) {
        c.flags |= 2048;
        $833559fe574b4225$var$li(9, $833559fe574b4225$var$mi.bind(null, c, d, e, b), void 0, null);
        if (null === $833559fe574b4225$var$R) throw Error($833559fe574b4225$var$p(349));
        0 !== ($833559fe574b4225$var$Rh & 30) || $833559fe574b4225$var$ni(c, b, e);
    }
    return e;
}
function $833559fe574b4225$var$ni(a, b, c) {
    a.flags |= 16384;
    a = {
        getSnapshot: b,
        value: c
    };
    b = $833559fe574b4225$var$N.updateQueue;
    null === b ? (b = {
        lastEffect: null,
        stores: null
    }, $833559fe574b4225$var$N.updateQueue = b, b.stores = [
        a
    ]) : (c = b.stores, null === c ? b.stores = [
        a
    ] : c.push(a));
}
function $833559fe574b4225$var$mi(a, b, c, d) {
    b.value = c;
    b.getSnapshot = d;
    $833559fe574b4225$var$oi(b) && $833559fe574b4225$var$pi(a);
}
function $833559fe574b4225$var$ki(a, b, c) {
    return c(function() {
        $833559fe574b4225$var$oi(b) && $833559fe574b4225$var$pi(a);
    });
}
function $833559fe574b4225$var$oi(a) {
    var b = a.getSnapshot;
    a = a.value;
    try {
        var c = b();
        return !$833559fe574b4225$var$He(a, c);
    } catch (d) {
        return !0;
    }
}
function $833559fe574b4225$var$pi(a) {
    var b = $833559fe574b4225$var$Zg(a, 1);
    null !== b && $833559fe574b4225$var$mh(b, a, 1, -1);
}
function $833559fe574b4225$var$qi(a) {
    var b = $833559fe574b4225$var$ci();
    "function" === typeof a && (a = a());
    b.memoizedState = b.baseState = a;
    a = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: $833559fe574b4225$var$ei,
        lastRenderedState: a
    };
    b.queue = a;
    a = a.dispatch = $833559fe574b4225$var$ri.bind(null, $833559fe574b4225$var$N, a);
    return [
        b.memoizedState,
        a
    ];
}
function $833559fe574b4225$var$li(a, b, c, d) {
    a = {
        tag: a,
        create: b,
        destroy: c,
        deps: d,
        next: null
    };
    b = $833559fe574b4225$var$N.updateQueue;
    null === b ? (b = {
        lastEffect: null,
        stores: null
    }, $833559fe574b4225$var$N.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
    return a;
}
function $833559fe574b4225$var$si() {
    return $833559fe574b4225$var$di().memoizedState;
}
function $833559fe574b4225$var$ti(a, b, c, d) {
    var e = $833559fe574b4225$var$ci();
    $833559fe574b4225$var$N.flags |= a;
    e.memoizedState = $833559fe574b4225$var$li(1 | b, c, void 0, void 0 === d ? null : d);
}
function $833559fe574b4225$var$ui(a, b, c, d) {
    var e = $833559fe574b4225$var$di();
    d = void 0 === d ? null : d;
    var f = void 0;
    if (null !== $833559fe574b4225$var$O) {
        var g = $833559fe574b4225$var$O.memoizedState;
        f = g.destroy;
        if (null !== d && $833559fe574b4225$var$Wh(d, g.deps)) {
            e.memoizedState = $833559fe574b4225$var$li(b, c, f, d);
            return;
        }
    }
    $833559fe574b4225$var$N.flags |= a;
    e.memoizedState = $833559fe574b4225$var$li(1 | b, c, f, d);
}
function $833559fe574b4225$var$vi(a, b) {
    return $833559fe574b4225$var$ti(8390656, 8, a, b);
}
function $833559fe574b4225$var$ji(a, b) {
    return $833559fe574b4225$var$ui(2048, 8, a, b);
}
function $833559fe574b4225$var$wi(a, b) {
    return $833559fe574b4225$var$ui(4, 2, a, b);
}
function $833559fe574b4225$var$xi(a, b) {
    return $833559fe574b4225$var$ui(4, 4, a, b);
}
function $833559fe574b4225$var$yi(a, b) {
    if ("function" === typeof b) return a = a(), b(a), function() {
        b(null);
    };
    if (null !== b && void 0 !== b) return a = a(), b.current = a, function() {
        b.current = null;
    };
}
function $833559fe574b4225$var$zi(a, b, c) {
    c = null !== c && void 0 !== c ? c.concat([
        a
    ]) : null;
    return $833559fe574b4225$var$ui(4, 4, $833559fe574b4225$var$yi.bind(null, b, a), c);
}
function $833559fe574b4225$var$Ai() {}
function $833559fe574b4225$var$Bi(a, b) {
    var c = $833559fe574b4225$var$di();
    b = void 0 === b ? null : b;
    var d = c.memoizedState;
    if (null !== d && null !== b && $833559fe574b4225$var$Wh(b, d[1])) return d[0];
    c.memoizedState = [
        a,
        b
    ];
    return a;
}
function $833559fe574b4225$var$Ci(a, b) {
    var c = $833559fe574b4225$var$di();
    b = void 0 === b ? null : b;
    var d = c.memoizedState;
    if (null !== d && null !== b && $833559fe574b4225$var$Wh(b, d[1])) return d[0];
    a = a();
    c.memoizedState = [
        a,
        b
    ];
    return a;
}
function $833559fe574b4225$var$Di(a, b, c) {
    if (0 === ($833559fe574b4225$var$Rh & 21)) return a.baseState && (a.baseState = !1, $833559fe574b4225$var$Ug = !0), a.memoizedState = c;
    $833559fe574b4225$var$He(c, b) || (c = $833559fe574b4225$var$yc(), $833559fe574b4225$var$N.lanes |= c, $833559fe574b4225$var$hh |= c, a.baseState = !0);
    return b;
}
function $833559fe574b4225$var$Ei(a, b) {
    var c = $833559fe574b4225$var$C;
    $833559fe574b4225$var$C = 0 !== c && 4 > c ? c : 4;
    a(!0);
    var d = $833559fe574b4225$var$Qh.transition;
    $833559fe574b4225$var$Qh.transition = {};
    try {
        a(!1), b();
    } finally{
        $833559fe574b4225$var$C = c, $833559fe574b4225$var$Qh.transition = d;
    }
}
function $833559fe574b4225$var$Fi() {
    return $833559fe574b4225$var$di().memoizedState;
}
function $833559fe574b4225$var$Gi(a, b, c) {
    var d = $833559fe574b4225$var$lh(a);
    c = {
        lane: d,
        action: c,
        hasEagerState: !1,
        eagerState: null,
        next: null
    };
    if ($833559fe574b4225$var$Hi(a)) $833559fe574b4225$var$Ii(b, c);
    else if (c = $833559fe574b4225$var$Yg(a, b, c, d), null !== c) {
        var e = $833559fe574b4225$var$L();
        $833559fe574b4225$var$mh(c, a, d, e);
        $833559fe574b4225$var$Ji(c, b, d);
    }
}
function $833559fe574b4225$var$ri(a, b, c) {
    var d = $833559fe574b4225$var$lh(a), e = {
        lane: d,
        action: c,
        hasEagerState: !1,
        eagerState: null,
        next: null
    };
    if ($833559fe574b4225$var$Hi(a)) $833559fe574b4225$var$Ii(b, e);
    else {
        var f = a.alternate;
        if (0 === a.lanes && (null === f || 0 === f.lanes) && (f = b.lastRenderedReducer, null !== f)) try {
            var g = b.lastRenderedState, h = f(g, c);
            e.hasEagerState = !0;
            e.eagerState = h;
            if ($833559fe574b4225$var$He(h, g)) {
                var k = b.interleaved;
                null === k ? (e.next = e, $833559fe574b4225$var$Xg(b)) : (e.next = k.next, k.next = e);
                b.interleaved = e;
                return;
            }
        } catch (l) {} finally{}
        c = $833559fe574b4225$var$Yg(a, b, e, d);
        null !== c && (e = $833559fe574b4225$var$L(), $833559fe574b4225$var$mh(c, a, d, e), $833559fe574b4225$var$Ji(c, b, d));
    }
}
function $833559fe574b4225$var$Hi(a) {
    var b = a.alternate;
    return a === $833559fe574b4225$var$N || null !== b && b === $833559fe574b4225$var$N;
}
function $833559fe574b4225$var$Ii(a, b) {
    $833559fe574b4225$var$Th = $833559fe574b4225$var$Sh = !0;
    var c = a.pending;
    null === c ? b.next = b : (b.next = c.next, c.next = b);
    a.pending = b;
}
function $833559fe574b4225$var$Ji(a, b, c) {
    if (0 !== (c & 4194240)) {
        var d = b.lanes;
        d &= a.pendingLanes;
        c |= d;
        b.lanes = c;
        $833559fe574b4225$var$Cc(a, c);
    }
}
var $833559fe574b4225$var$ai = {
    readContext: $833559fe574b4225$var$Vg,
    useCallback: $833559fe574b4225$var$Q,
    useContext: $833559fe574b4225$var$Q,
    useEffect: $833559fe574b4225$var$Q,
    useImperativeHandle: $833559fe574b4225$var$Q,
    useInsertionEffect: $833559fe574b4225$var$Q,
    useLayoutEffect: $833559fe574b4225$var$Q,
    useMemo: $833559fe574b4225$var$Q,
    useReducer: $833559fe574b4225$var$Q,
    useRef: $833559fe574b4225$var$Q,
    useState: $833559fe574b4225$var$Q,
    useDebugValue: $833559fe574b4225$var$Q,
    useDeferredValue: $833559fe574b4225$var$Q,
    useTransition: $833559fe574b4225$var$Q,
    useMutableSource: $833559fe574b4225$var$Q,
    useSyncExternalStore: $833559fe574b4225$var$Q,
    useId: $833559fe574b4225$var$Q,
    unstable_isNewReconciler: !1
}, $833559fe574b4225$var$Yh = {
    readContext: $833559fe574b4225$var$Vg,
    useCallback: function(a, b) {
        $833559fe574b4225$var$ci().memoizedState = [
            a,
            void 0 === b ? null : b
        ];
        return a;
    },
    useContext: $833559fe574b4225$var$Vg,
    useEffect: $833559fe574b4225$var$vi,
    useImperativeHandle: function(a, b, c) {
        c = null !== c && void 0 !== c ? c.concat([
            a
        ]) : null;
        return $833559fe574b4225$var$ti(4194308, 4, $833559fe574b4225$var$yi.bind(null, b, a), c);
    },
    useLayoutEffect: function(a, b) {
        return $833559fe574b4225$var$ti(4194308, 4, a, b);
    },
    useInsertionEffect: function(a, b) {
        return $833559fe574b4225$var$ti(4, 2, a, b);
    },
    useMemo: function(a, b) {
        var c = $833559fe574b4225$var$ci();
        b = void 0 === b ? null : b;
        a = a();
        c.memoizedState = [
            a,
            b
        ];
        return a;
    },
    useReducer: function(a, b, c) {
        var d = $833559fe574b4225$var$ci();
        b = void 0 !== c ? c(b) : b;
        d.memoizedState = d.baseState = b;
        a = {
            pending: null,
            interleaved: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: a,
            lastRenderedState: b
        };
        d.queue = a;
        a = a.dispatch = $833559fe574b4225$var$Gi.bind(null, $833559fe574b4225$var$N, a);
        return [
            d.memoizedState,
            a
        ];
    },
    useRef: function(a) {
        var b = $833559fe574b4225$var$ci();
        a = {
            current: a
        };
        return b.memoizedState = a;
    },
    useState: $833559fe574b4225$var$qi,
    useDebugValue: $833559fe574b4225$var$Ai,
    useDeferredValue: function(a) {
        return $833559fe574b4225$var$ci().memoizedState = a;
    },
    useTransition: function() {
        var a = $833559fe574b4225$var$qi(!1), b = a[0];
        a = $833559fe574b4225$var$Ei.bind(null, a[1]);
        $833559fe574b4225$var$ci().memoizedState = a;
        return [
            b,
            a
        ];
    },
    useMutableSource: function() {},
    useSyncExternalStore: function(a, b, c) {
        var d = $833559fe574b4225$var$N, e = $833559fe574b4225$var$ci();
        if ($833559fe574b4225$var$I) {
            if (void 0 === c) throw Error($833559fe574b4225$var$p(407));
            c = c();
        } else {
            c = b();
            if (null === $833559fe574b4225$var$R) throw Error($833559fe574b4225$var$p(349));
            0 !== ($833559fe574b4225$var$Rh & 30) || $833559fe574b4225$var$ni(d, b, c);
        }
        e.memoizedState = c;
        var f = {
            value: c,
            getSnapshot: b
        };
        e.queue = f;
        $833559fe574b4225$var$vi($833559fe574b4225$var$ki.bind(null, d, f, a), [
            a
        ]);
        d.flags |= 2048;
        $833559fe574b4225$var$li(9, $833559fe574b4225$var$mi.bind(null, d, f, c, b), void 0, null);
        return c;
    },
    useId: function() {
        var a = $833559fe574b4225$var$ci(), b = $833559fe574b4225$var$R.identifierPrefix;
        if ($833559fe574b4225$var$I) {
            var c = $833559fe574b4225$var$sg;
            var d = $833559fe574b4225$var$rg;
            c = (d & ~(1 << 32 - $833559fe574b4225$var$oc(d) - 1)).toString(32) + c;
            b = ":" + b + "R" + c;
            c = $833559fe574b4225$var$Uh++;
            0 < c && (b += "H" + c.toString(32));
            b += ":";
        } else c = $833559fe574b4225$var$Vh++, b = ":" + b + "r" + c.toString(32) + ":";
        return a.memoizedState = b;
    },
    unstable_isNewReconciler: !1
}, $833559fe574b4225$var$Zh = {
    readContext: $833559fe574b4225$var$Vg,
    useCallback: $833559fe574b4225$var$Bi,
    useContext: $833559fe574b4225$var$Vg,
    useEffect: $833559fe574b4225$var$ji,
    useImperativeHandle: $833559fe574b4225$var$zi,
    useInsertionEffect: $833559fe574b4225$var$wi,
    useLayoutEffect: $833559fe574b4225$var$xi,
    useMemo: $833559fe574b4225$var$Ci,
    useReducer: $833559fe574b4225$var$fi,
    useRef: $833559fe574b4225$var$si,
    useState: function() {
        return $833559fe574b4225$var$fi($833559fe574b4225$var$ei);
    },
    useDebugValue: $833559fe574b4225$var$Ai,
    useDeferredValue: function(a) {
        var b = $833559fe574b4225$var$di();
        return $833559fe574b4225$var$Di(b, $833559fe574b4225$var$O.memoizedState, a);
    },
    useTransition: function() {
        var a = $833559fe574b4225$var$fi($833559fe574b4225$var$ei)[0], b = $833559fe574b4225$var$di().memoizedState;
        return [
            a,
            b
        ];
    },
    useMutableSource: $833559fe574b4225$var$hi,
    useSyncExternalStore: $833559fe574b4225$var$ii,
    useId: $833559fe574b4225$var$Fi,
    unstable_isNewReconciler: !1
}, $833559fe574b4225$var$$h = {
    readContext: $833559fe574b4225$var$Vg,
    useCallback: $833559fe574b4225$var$Bi,
    useContext: $833559fe574b4225$var$Vg,
    useEffect: $833559fe574b4225$var$ji,
    useImperativeHandle: $833559fe574b4225$var$zi,
    useInsertionEffect: $833559fe574b4225$var$wi,
    useLayoutEffect: $833559fe574b4225$var$xi,
    useMemo: $833559fe574b4225$var$Ci,
    useReducer: $833559fe574b4225$var$gi,
    useRef: $833559fe574b4225$var$si,
    useState: function() {
        return $833559fe574b4225$var$gi($833559fe574b4225$var$ei);
    },
    useDebugValue: $833559fe574b4225$var$Ai,
    useDeferredValue: function(a) {
        var b = $833559fe574b4225$var$di();
        return null === $833559fe574b4225$var$O ? b.memoizedState = a : $833559fe574b4225$var$Di(b, $833559fe574b4225$var$O.memoizedState, a);
    },
    useTransition: function() {
        var a = $833559fe574b4225$var$gi($833559fe574b4225$var$ei)[0], b = $833559fe574b4225$var$di().memoizedState;
        return [
            a,
            b
        ];
    },
    useMutableSource: $833559fe574b4225$var$hi,
    useSyncExternalStore: $833559fe574b4225$var$ii,
    useId: $833559fe574b4225$var$Fi,
    unstable_isNewReconciler: !1
};
function $833559fe574b4225$var$Ki(a, b) {
    try {
        var c = "", d = b;
        do c += $833559fe574b4225$var$Pa(d), d = d.return;
        while (d);
        var e = c;
    } catch (f) {
        e = "\nError generating stack: " + f.message + "\n" + f.stack;
    }
    return {
        value: a,
        source: b,
        stack: e,
        digest: null
    };
}
function $833559fe574b4225$var$Li(a, b, c) {
    return {
        value: a,
        source: null,
        stack: null != c ? c : null,
        digest: null != b ? b : null
    };
}
function $833559fe574b4225$var$Mi(a, b) {
    try {
        console.error(b.value);
    } catch (c) {
        setTimeout(function() {
            throw c;
        });
    }
}
var $833559fe574b4225$var$Ni = "function" === typeof WeakMap ? WeakMap : Map;
function $833559fe574b4225$var$Oi(a, b, c) {
    c = $833559fe574b4225$var$ch(-1, c);
    c.tag = 3;
    c.payload = {
        element: null
    };
    var d = b.value;
    c.callback = function() {
        $833559fe574b4225$var$Pi || ($833559fe574b4225$var$Pi = !0, $833559fe574b4225$var$Qi = d);
        $833559fe574b4225$var$Mi(a, b);
    };
    return c;
}
function $833559fe574b4225$var$Ri(a, b, c) {
    c = $833559fe574b4225$var$ch(-1, c);
    c.tag = 3;
    var d = a.type.getDerivedStateFromError;
    if ("function" === typeof d) {
        var e = b.value;
        c.payload = function() {
            return d(e);
        };
        c.callback = function() {
            $833559fe574b4225$var$Mi(a, b);
        };
    }
    var f = a.stateNode;
    null !== f && "function" === typeof f.componentDidCatch && (c.callback = function() {
        $833559fe574b4225$var$Mi(a, b);
        "function" !== typeof d && (null === $833559fe574b4225$var$Si ? $833559fe574b4225$var$Si = new Set([
            this
        ]) : $833559fe574b4225$var$Si.add(this));
        var c = b.stack;
        this.componentDidCatch(b.value, {
            componentStack: null !== c ? c : ""
        });
    });
    return c;
}
function $833559fe574b4225$var$Ti(a, b, c) {
    var d = a.pingCache;
    if (null === d) {
        d = a.pingCache = new $833559fe574b4225$var$Ni;
        var e = new Set;
        d.set(b, e);
    } else e = d.get(b), void 0 === e && (e = new Set, d.set(b, e));
    e.has(c) || (e.add(c), a = $833559fe574b4225$var$Ui.bind(null, a, b, c), b.then(a, a));
}
function $833559fe574b4225$var$Vi(a) {
    do {
        var b;
        if (b = 13 === a.tag) b = a.memoizedState, b = null !== b ? null !== b.dehydrated ? !0 : !1 : !0;
        if (b) return a;
        a = a.return;
    }while (null !== a);
    return null;
}
function $833559fe574b4225$var$Wi(a, b, c, d, e) {
    if (0 === (a.mode & 1)) return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = $833559fe574b4225$var$ch(-1, 1), b.tag = 2, $833559fe574b4225$var$dh(c, b, 1))), c.lanes |= 1), a;
    a.flags |= 65536;
    a.lanes = e;
    return a;
}
var $833559fe574b4225$var$Xi = $833559fe574b4225$var$ua.ReactCurrentOwner, $833559fe574b4225$var$Ug = !1;
function $833559fe574b4225$var$Yi(a, b, c, d) {
    b.child = null === a ? $833559fe574b4225$var$Ch(b, null, c, d) : $833559fe574b4225$var$Bh(b, a.child, c, d);
}
function $833559fe574b4225$var$Zi(a, b, c, d, e) {
    c = c.render;
    var f = b.ref;
    $833559fe574b4225$var$Tg(b, e);
    d = $833559fe574b4225$var$Xh(a, b, c, d, f, e);
    c = $833559fe574b4225$var$bi();
    if (null !== a && !$833559fe574b4225$var$Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $833559fe574b4225$var$$i(a, b, e);
    $833559fe574b4225$var$I && c && $833559fe574b4225$var$vg(b);
    b.flags |= 1;
    $833559fe574b4225$var$Yi(a, b, d, e);
    return b.child;
}
function $833559fe574b4225$var$aj(a, b, c, d, e) {
    if (null === a) {
        var f = c.type;
        if ("function" === typeof f && !$833559fe574b4225$var$bj(f) && void 0 === f.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = f, $833559fe574b4225$var$cj(a, b, f, d, e);
        a = $833559fe574b4225$var$yh(c.type, null, d, b, b.mode, e);
        a.ref = b.ref;
        a.return = b;
        return b.child = a;
    }
    f = a.child;
    if (0 === (a.lanes & e)) {
        var g = f.memoizedProps;
        c = c.compare;
        c = null !== c ? c : $833559fe574b4225$var$Ie;
        if (c(g, d) && a.ref === b.ref) return $833559fe574b4225$var$$i(a, b, e);
    }
    b.flags |= 1;
    a = $833559fe574b4225$var$wh(f, d);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
}
function $833559fe574b4225$var$cj(a, b, c, d, e) {
    if (null !== a) {
        var f = a.memoizedProps;
        if ($833559fe574b4225$var$Ie(f, d) && a.ref === b.ref) {
            if ($833559fe574b4225$var$Ug = !1, b.pendingProps = d = f, 0 !== (a.lanes & e)) 0 !== (a.flags & 131072) && ($833559fe574b4225$var$Ug = !0);
            else return b.lanes = a.lanes, $833559fe574b4225$var$$i(a, b, e);
        }
    }
    return $833559fe574b4225$var$dj(a, b, c, d, e);
}
function $833559fe574b4225$var$ej(a, b, c) {
    var d = b.pendingProps, e = d.children, f = null !== a ? a.memoizedState : null;
    if ("hidden" === d.mode) {
        if (0 === (b.mode & 1)) b.memoizedState = {
            baseLanes: 0,
            cachePool: null,
            transitions: null
        }, $833559fe574b4225$var$G($833559fe574b4225$var$fj, $833559fe574b4225$var$gj), $833559fe574b4225$var$gj |= c;
        else {
            if (0 === (c & 1073741824)) return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = {
                baseLanes: a,
                cachePool: null,
                transitions: null
            }, b.updateQueue = null, $833559fe574b4225$var$G($833559fe574b4225$var$fj, $833559fe574b4225$var$gj), $833559fe574b4225$var$gj |= a, null;
            b.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null
            };
            d = null !== f ? f.baseLanes : c;
            $833559fe574b4225$var$G($833559fe574b4225$var$fj, $833559fe574b4225$var$gj);
            $833559fe574b4225$var$gj |= d;
        }
    } else null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, $833559fe574b4225$var$G($833559fe574b4225$var$fj, $833559fe574b4225$var$gj), $833559fe574b4225$var$gj |= d;
    $833559fe574b4225$var$Yi(a, b, e, c);
    return b.child;
}
function $833559fe574b4225$var$hj(a, b) {
    var c = b.ref;
    if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 512, b.flags |= 2097152;
}
function $833559fe574b4225$var$dj(a, b, c, d, e) {
    var f = $833559fe574b4225$var$Zf(c) ? $833559fe574b4225$var$Xf : $833559fe574b4225$var$H.current;
    f = $833559fe574b4225$var$Yf(b, f);
    $833559fe574b4225$var$Tg(b, e);
    c = $833559fe574b4225$var$Xh(a, b, c, d, f, e);
    d = $833559fe574b4225$var$bi();
    if (null !== a && !$833559fe574b4225$var$Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $833559fe574b4225$var$$i(a, b, e);
    $833559fe574b4225$var$I && d && $833559fe574b4225$var$vg(b);
    b.flags |= 1;
    $833559fe574b4225$var$Yi(a, b, c, e);
    return b.child;
}
function $833559fe574b4225$var$ij(a, b, c, d, e) {
    if ($833559fe574b4225$var$Zf(c)) {
        var f = !0;
        $833559fe574b4225$var$cg(b);
    } else f = !1;
    $833559fe574b4225$var$Tg(b, e);
    if (null === b.stateNode) $833559fe574b4225$var$jj(a, b), $833559fe574b4225$var$ph(b, c, d), $833559fe574b4225$var$rh(b, c, d, e), d = !0;
    else if (null === a) {
        var g = b.stateNode, h = b.memoizedProps;
        g.props = h;
        var k = g.context, l = c.contextType;
        "object" === typeof l && null !== l ? l = $833559fe574b4225$var$Vg(l) : (l = $833559fe574b4225$var$Zf(c) ? $833559fe574b4225$var$Xf : $833559fe574b4225$var$H.current, l = $833559fe574b4225$var$Yf(b, l));
        var m = c.getDerivedStateFromProps, q = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate;
        q || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && $833559fe574b4225$var$qh(b, g, d, l);
        $833559fe574b4225$var$$g = !1;
        var r = b.memoizedState;
        g.state = r;
        $833559fe574b4225$var$gh(b, d, g, e);
        k = b.memoizedState;
        h !== d || r !== k || $833559fe574b4225$var$Wf.current || $833559fe574b4225$var$$g ? ("function" === typeof m && ($833559fe574b4225$var$kh(b, c, m, d), k = b.memoizedState), (h = $833559fe574b4225$var$$g || $833559fe574b4225$var$oh(b, c, h, d, r, k, l)) ? (q || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = !1);
    } else {
        g = b.stateNode;
        $833559fe574b4225$var$bh(a, b);
        h = b.memoizedProps;
        l = b.type === b.elementType ? h : $833559fe574b4225$var$Lg(b.type, h);
        g.props = l;
        q = b.pendingProps;
        r = g.context;
        k = c.contextType;
        "object" === typeof k && null !== k ? k = $833559fe574b4225$var$Vg(k) : (k = $833559fe574b4225$var$Zf(c) ? $833559fe574b4225$var$Xf : $833559fe574b4225$var$H.current, k = $833559fe574b4225$var$Yf(b, k));
        var y = c.getDerivedStateFromProps;
        (m = "function" === typeof y || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== q || r !== k) && $833559fe574b4225$var$qh(b, g, d, k);
        $833559fe574b4225$var$$g = !1;
        r = b.memoizedState;
        g.state = r;
        $833559fe574b4225$var$gh(b, d, g, e);
        var n = b.memoizedState;
        h !== q || r !== n || $833559fe574b4225$var$Wf.current || $833559fe574b4225$var$$g ? ("function" === typeof y && ($833559fe574b4225$var$kh(b, c, y, d), n = b.memoizedState), (l = $833559fe574b4225$var$$g || $833559fe574b4225$var$oh(b, c, l, d, r, n, k) || !1) ? (m || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, n, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n), g.props = d, g.state = n, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), d = !1);
    }
    return $833559fe574b4225$var$kj(a, b, c, d, f, e);
}
function $833559fe574b4225$var$kj(a, b, c, d, e, f) {
    $833559fe574b4225$var$hj(a, b);
    var g = 0 !== (b.flags & 128);
    if (!d && !g) return e && $833559fe574b4225$var$dg(b, c, !1), $833559fe574b4225$var$$i(a, b, f);
    d = b.stateNode;
    $833559fe574b4225$var$Xi.current = b;
    var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
    b.flags |= 1;
    null !== a && g ? (b.child = $833559fe574b4225$var$Bh(b, a.child, null, f), b.child = $833559fe574b4225$var$Bh(b, null, h, f)) : $833559fe574b4225$var$Yi(a, b, h, f);
    b.memoizedState = d.state;
    e && $833559fe574b4225$var$dg(b, c, !0);
    return b.child;
}
function $833559fe574b4225$var$lj(a) {
    var b = a.stateNode;
    b.pendingContext ? $833559fe574b4225$var$ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && $833559fe574b4225$var$ag(a, b.context, !1);
    $833559fe574b4225$var$Ih(a, b.containerInfo);
}
function $833559fe574b4225$var$mj(a, b, c, d, e) {
    $833559fe574b4225$var$Ig();
    $833559fe574b4225$var$Jg(e);
    b.flags |= 256;
    $833559fe574b4225$var$Yi(a, b, c, d);
    return b.child;
}
var $833559fe574b4225$var$nj = {
    dehydrated: null,
    treeContext: null,
    retryLane: 0
};
function $833559fe574b4225$var$oj(a) {
    return {
        baseLanes: a,
        cachePool: null,
        transitions: null
    };
}
function $833559fe574b4225$var$pj(a, b, c) {
    var d = b.pendingProps, e = $833559fe574b4225$var$M.current, f = !1, g = 0 !== (b.flags & 128), h;
    (h = g) || (h = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));
    if (h) f = !0, b.flags &= -129;
    else if (null === a || null !== a.memoizedState) e |= 1;
    $833559fe574b4225$var$G($833559fe574b4225$var$M, e & 1);
    if (null === a) {
        $833559fe574b4225$var$Eg(b);
        a = b.memoizedState;
        if (null !== a && (a = a.dehydrated, null !== a)) return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, null;
        g = d.children;
        a = d.fallback;
        return f ? (d = b.mode, f = b.child, g = {
            mode: "hidden",
            children: g
        }, 0 === (d & 1) && null !== f ? (f.childLanes = 0, f.pendingProps = g) : f = $833559fe574b4225$var$qj(g, d, 0, null), a = $833559fe574b4225$var$Ah(a, d, c, null), f.return = b, a.return = b, f.sibling = a, b.child = f, b.child.memoizedState = $833559fe574b4225$var$oj(c), b.memoizedState = $833559fe574b4225$var$nj, a) : $833559fe574b4225$var$rj(b, g);
    }
    e = a.memoizedState;
    if (null !== e && (h = e.dehydrated, null !== h)) return $833559fe574b4225$var$sj(a, b, g, d, h, e, c);
    if (f) {
        f = d.fallback;
        g = b.mode;
        e = a.child;
        h = e.sibling;
        var k = {
            mode: "hidden",
            children: d.children
        };
        0 === (g & 1) && b.child !== e ? (d = b.child, d.childLanes = 0, d.pendingProps = k, b.deletions = null) : (d = $833559fe574b4225$var$wh(e, k), d.subtreeFlags = e.subtreeFlags & 14680064);
        null !== h ? f = $833559fe574b4225$var$wh(h, f) : (f = $833559fe574b4225$var$Ah(f, g, c, null), f.flags |= 2);
        f.return = b;
        d.return = b;
        d.sibling = f;
        b.child = d;
        d = f;
        f = b.child;
        g = a.child.memoizedState;
        g = null === g ? $833559fe574b4225$var$oj(c) : {
            baseLanes: g.baseLanes | c,
            cachePool: null,
            transitions: g.transitions
        };
        f.memoizedState = g;
        f.childLanes = a.childLanes & ~c;
        b.memoizedState = $833559fe574b4225$var$nj;
        return d;
    }
    f = a.child;
    a = f.sibling;
    d = $833559fe574b4225$var$wh(f, {
        mode: "visible",
        children: d.children
    });
    0 === (b.mode & 1) && (d.lanes = c);
    d.return = b;
    d.sibling = null;
    null !== a && (c = b.deletions, null === c ? (b.deletions = [
        a
    ], b.flags |= 16) : c.push(a));
    b.child = d;
    b.memoizedState = null;
    return d;
}
function $833559fe574b4225$var$rj(a, b) {
    b = $833559fe574b4225$var$qj({
        mode: "visible",
        children: b
    }, a.mode, 0, null);
    b.return = a;
    return a.child = b;
}
function $833559fe574b4225$var$tj(a, b, c, d) {
    null !== d && $833559fe574b4225$var$Jg(d);
    $833559fe574b4225$var$Bh(b, a.child, null, c);
    a = $833559fe574b4225$var$rj(b, b.pendingProps.children);
    a.flags |= 2;
    b.memoizedState = null;
    return a;
}
function $833559fe574b4225$var$sj(a, b, c, d, e, f, g) {
    if (c) {
        if (b.flags & 256) return b.flags &= -257, d = $833559fe574b4225$var$Li(Error($833559fe574b4225$var$p(422))), $833559fe574b4225$var$tj(a, b, g, d);
        if (null !== b.memoizedState) return b.child = a.child, b.flags |= 128, null;
        f = d.fallback;
        e = b.mode;
        d = $833559fe574b4225$var$qj({
            mode: "visible",
            children: d.children
        }, e, 0, null);
        f = $833559fe574b4225$var$Ah(f, e, g, null);
        f.flags |= 2;
        d.return = b;
        f.return = b;
        d.sibling = f;
        b.child = d;
        0 !== (b.mode & 1) && $833559fe574b4225$var$Bh(b, a.child, null, g);
        b.child.memoizedState = $833559fe574b4225$var$oj(g);
        b.memoizedState = $833559fe574b4225$var$nj;
        return f;
    }
    if (0 === (b.mode & 1)) return $833559fe574b4225$var$tj(a, b, g, null);
    if ("$!" === e.data) {
        d = e.nextSibling && e.nextSibling.dataset;
        if (d) var h = d.dgst;
        d = h;
        f = Error($833559fe574b4225$var$p(419));
        d = $833559fe574b4225$var$Li(f, d, void 0);
        return $833559fe574b4225$var$tj(a, b, g, d);
    }
    h = 0 !== (g & a.childLanes);
    if ($833559fe574b4225$var$Ug || h) {
        d = $833559fe574b4225$var$R;
        if (null !== d) {
            switch(g & -g){
                case 4:
                    e = 2;
                    break;
                case 16:
                    e = 8;
                    break;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    e = 32;
                    break;
                case 536870912:
                    e = 268435456;
                    break;
                default:
                    e = 0;
            }
            e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e;
            0 !== e && e !== f.retryLane && (f.retryLane = e, $833559fe574b4225$var$Zg(a, e), $833559fe574b4225$var$mh(d, a, e, -1));
        }
        $833559fe574b4225$var$uj();
        d = $833559fe574b4225$var$Li(Error($833559fe574b4225$var$p(421)));
        return $833559fe574b4225$var$tj(a, b, g, d);
    }
    if ("$?" === e.data) return b.flags |= 128, b.child = a.child, b = $833559fe574b4225$var$vj.bind(null, a), e._reactRetry = b, null;
    a = f.treeContext;
    $833559fe574b4225$var$yg = $833559fe574b4225$var$Lf(e.nextSibling);
    $833559fe574b4225$var$xg = b;
    $833559fe574b4225$var$I = !0;
    $833559fe574b4225$var$zg = null;
    null !== a && ($833559fe574b4225$var$og[$833559fe574b4225$var$pg++] = $833559fe574b4225$var$rg, $833559fe574b4225$var$og[$833559fe574b4225$var$pg++] = $833559fe574b4225$var$sg, $833559fe574b4225$var$og[$833559fe574b4225$var$pg++] = $833559fe574b4225$var$qg, $833559fe574b4225$var$rg = a.id, $833559fe574b4225$var$sg = a.overflow, $833559fe574b4225$var$qg = b);
    b = $833559fe574b4225$var$rj(b, d.children);
    b.flags |= 4096;
    return b;
}
function $833559fe574b4225$var$wj(a, b, c) {
    a.lanes |= b;
    var d = a.alternate;
    null !== d && (d.lanes |= b);
    $833559fe574b4225$var$Sg(a.return, b, c);
}
function $833559fe574b4225$var$xj(a, b, c, d, e) {
    var f = a.memoizedState;
    null === f ? a.memoizedState = {
        isBackwards: b,
        rendering: null,
        renderingStartTime: 0,
        last: d,
        tail: c,
        tailMode: e
    } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, f.tail = c, f.tailMode = e);
}
function $833559fe574b4225$var$yj(a, b, c) {
    var d = b.pendingProps, e = d.revealOrder, f = d.tail;
    $833559fe574b4225$var$Yi(a, b, d.children, c);
    d = $833559fe574b4225$var$M.current;
    if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 128;
    else {
        if (null !== a && 0 !== (a.flags & 128)) a: for(a = b.child; null !== a;){
            if (13 === a.tag) null !== a.memoizedState && $833559fe574b4225$var$wj(a, c, b);
            else if (19 === a.tag) $833559fe574b4225$var$wj(a, c, b);
            else if (null !== a.child) {
                a.child.return = a;
                a = a.child;
                continue;
            }
            if (a === b) break a;
            for(; null === a.sibling;){
                if (null === a.return || a.return === b) break a;
                a = a.return;
            }
            a.sibling.return = a.return;
            a = a.sibling;
        }
        d &= 1;
    }
    $833559fe574b4225$var$G($833559fe574b4225$var$M, d);
    if (0 === (b.mode & 1)) b.memoizedState = null;
    else switch(e){
        case "forwards":
            c = b.child;
            for(e = null; null !== c;)a = c.alternate, null !== a && null === $833559fe574b4225$var$Mh(a) && (e = c), c = c.sibling;
            c = e;
            null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
            $833559fe574b4225$var$xj(b, !1, e, c, f);
            break;
        case "backwards":
            c = null;
            e = b.child;
            for(b.child = null; null !== e;){
                a = e.alternate;
                if (null !== a && null === $833559fe574b4225$var$Mh(a)) {
                    b.child = e;
                    break;
                }
                a = e.sibling;
                e.sibling = c;
                c = e;
                e = a;
            }
            $833559fe574b4225$var$xj(b, !0, c, null, f);
            break;
        case "together":
            $833559fe574b4225$var$xj(b, !1, null, null, void 0);
            break;
        default:
            b.memoizedState = null;
    }
    return b.child;
}
function $833559fe574b4225$var$jj(a, b) {
    0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
}
function $833559fe574b4225$var$$i(a, b, c) {
    null !== a && (b.dependencies = a.dependencies);
    $833559fe574b4225$var$hh |= b.lanes;
    if (0 === (c & b.childLanes)) return null;
    if (null !== a && b.child !== a.child) throw Error($833559fe574b4225$var$p(153));
    if (null !== b.child) {
        a = b.child;
        c = $833559fe574b4225$var$wh(a, a.pendingProps);
        b.child = c;
        for(c.return = b; null !== a.sibling;)a = a.sibling, c = c.sibling = $833559fe574b4225$var$wh(a, a.pendingProps), c.return = b;
        c.sibling = null;
    }
    return b.child;
}
function $833559fe574b4225$var$zj(a, b, c) {
    switch(b.tag){
        case 3:
            $833559fe574b4225$var$lj(b);
            $833559fe574b4225$var$Ig();
            break;
        case 5:
            $833559fe574b4225$var$Kh(b);
            break;
        case 1:
            $833559fe574b4225$var$Zf(b.type) && $833559fe574b4225$var$cg(b);
            break;
        case 4:
            $833559fe574b4225$var$Ih(b, b.stateNode.containerInfo);
            break;
        case 10:
            var d = b.type._context, e = b.memoizedProps.value;
            $833559fe574b4225$var$G($833559fe574b4225$var$Mg, d._currentValue);
            d._currentValue = e;
            break;
        case 13:
            d = b.memoizedState;
            if (null !== d) {
                if (null !== d.dehydrated) return $833559fe574b4225$var$G($833559fe574b4225$var$M, $833559fe574b4225$var$M.current & 1), b.flags |= 128, null;
                if (0 !== (c & b.child.childLanes)) return $833559fe574b4225$var$pj(a, b, c);
                $833559fe574b4225$var$G($833559fe574b4225$var$M, $833559fe574b4225$var$M.current & 1);
                a = $833559fe574b4225$var$$i(a, b, c);
                return null !== a ? a.sibling : null;
            }
            $833559fe574b4225$var$G($833559fe574b4225$var$M, $833559fe574b4225$var$M.current & 1);
            break;
        case 19:
            d = 0 !== (c & b.childLanes);
            if (0 !== (a.flags & 128)) {
                if (d) return $833559fe574b4225$var$yj(a, b, c);
                b.flags |= 128;
            }
            e = b.memoizedState;
            null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
            $833559fe574b4225$var$G($833559fe574b4225$var$M, $833559fe574b4225$var$M.current);
            if (d) break;
            else return null;
        case 22:
        case 23:
            return b.lanes = 0, $833559fe574b4225$var$ej(a, b, c);
    }
    return $833559fe574b4225$var$$i(a, b, c);
}
var $833559fe574b4225$var$Aj, $833559fe574b4225$var$Bj, $833559fe574b4225$var$Cj, $833559fe574b4225$var$Dj;
$833559fe574b4225$var$Aj = function(a, b) {
    for(var c = b.child; null !== c;){
        if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);
        else if (4 !== c.tag && null !== c.child) {
            c.child.return = c;
            c = c.child;
            continue;
        }
        if (c === b) break;
        for(; null === c.sibling;){
            if (null === c.return || c.return === b) return;
            c = c.return;
        }
        c.sibling.return = c.return;
        c = c.sibling;
    }
};
$833559fe574b4225$var$Bj = function() {};
$833559fe574b4225$var$Cj = function(a, b, c, d) {
    var e = a.memoizedProps;
    if (e !== d) {
        a = b.stateNode;
        $833559fe574b4225$var$Hh($833559fe574b4225$var$Eh.current);
        var f = null;
        switch(c){
            case "input":
                e = $833559fe574b4225$var$Ya(a, e);
                d = $833559fe574b4225$var$Ya(a, d);
                f = [];
                break;
            case "select":
                e = $833559fe574b4225$var$A({}, e, {
                    value: void 0
                });
                d = $833559fe574b4225$var$A({}, d, {
                    value: void 0
                });
                f = [];
                break;
            case "textarea":
                e = $833559fe574b4225$var$gb(a, e);
                d = $833559fe574b4225$var$gb(a, d);
                f = [];
                break;
            default:
                "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = $833559fe574b4225$var$Bf);
        }
        $833559fe574b4225$var$ub(c, d);
        var g;
        c = null;
        for(l in e)if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) {
            if ("style" === l) {
                var h = e[l];
                for(g in h)h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
            } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && ($833559fe574b4225$var$ea.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));
        }
        for(l in d){
            var k = d[l];
            h = null != e ? e[l] : void 0;
            if (d.hasOwnProperty(l) && k !== h && (null != k || null != h)) {
                if ("style" === l) {
                    if (h) {
                        for(g in h)!h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
                        for(g in k)k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);
                    } else c || (f || (f = []), f.push(l, c)), c = k;
                } else "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" !== typeof k && "number" !== typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && ($833559fe574b4225$var$ea.hasOwnProperty(l) ? (null != k && "onScroll" === l && $833559fe574b4225$var$D("scroll", a), f || h === k || (f = [])) : (f = f || []).push(l, k));
            }
        }
        c && (f = f || []).push("style", c);
        var l = f;
        if (b.updateQueue = l) b.flags |= 4;
    }
};
$833559fe574b4225$var$Dj = function(a, b, c, d) {
    c !== d && (b.flags |= 4);
};
function $833559fe574b4225$var$Ej(a, b) {
    if (!$833559fe574b4225$var$I) switch(a.tailMode){
        case "hidden":
            b = a.tail;
            for(var c = null; null !== b;)null !== b.alternate && (c = b), b = b.sibling;
            null === c ? a.tail = null : c.sibling = null;
            break;
        case "collapsed":
            c = a.tail;
            for(var d = null; null !== c;)null !== c.alternate && (d = c), c = c.sibling;
            null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
    }
}
function $833559fe574b4225$var$S(a) {
    var b = null !== a.alternate && a.alternate.child === a.child, c = 0, d = 0;
    if (b) for(var e = a.child; null !== e;)c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a, e = e.sibling;
    else for(e = a.child; null !== e;)c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;
    a.subtreeFlags |= d;
    a.childLanes = c;
    return b;
}
function $833559fe574b4225$var$Fj(a, b, c) {
    var d = b.pendingProps;
    $833559fe574b4225$var$wg(b);
    switch(b.tag){
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
            return $833559fe574b4225$var$S(b), null;
        case 1:
            return $833559fe574b4225$var$Zf(b.type) && $833559fe574b4225$var$$f(), $833559fe574b4225$var$S(b), null;
        case 3:
            d = b.stateNode;
            $833559fe574b4225$var$Jh();
            $833559fe574b4225$var$E($833559fe574b4225$var$Wf);
            $833559fe574b4225$var$E($833559fe574b4225$var$H);
            $833559fe574b4225$var$Oh();
            d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
            if (null === a || null === a.child) $833559fe574b4225$var$Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== $833559fe574b4225$var$zg && ($833559fe574b4225$var$Gj($833559fe574b4225$var$zg), $833559fe574b4225$var$zg = null));
            $833559fe574b4225$var$Bj(a, b);
            $833559fe574b4225$var$S(b);
            return null;
        case 5:
            $833559fe574b4225$var$Lh(b);
            var e = $833559fe574b4225$var$Hh($833559fe574b4225$var$Gh.current);
            c = b.type;
            if (null !== a && null != b.stateNode) $833559fe574b4225$var$Cj(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);
            else {
                if (!d) {
                    if (null === b.stateNode) throw Error($833559fe574b4225$var$p(166));
                    $833559fe574b4225$var$S(b);
                    return null;
                }
                a = $833559fe574b4225$var$Hh($833559fe574b4225$var$Eh.current);
                if ($833559fe574b4225$var$Gg(b)) {
                    d = b.stateNode;
                    c = b.type;
                    var f = b.memoizedProps;
                    d[$833559fe574b4225$var$Of] = b;
                    d[$833559fe574b4225$var$Pf] = f;
                    a = 0 !== (b.mode & 1);
                    switch(c){
                        case "dialog":
                            $833559fe574b4225$var$D("cancel", d);
                            $833559fe574b4225$var$D("close", d);
                            break;
                        case "iframe":
                        case "object":
                        case "embed":
                            $833559fe574b4225$var$D("load", d);
                            break;
                        case "video":
                        case "audio":
                            for(e = 0; e < $833559fe574b4225$var$lf.length; e++)$833559fe574b4225$var$D($833559fe574b4225$var$lf[e], d);
                            break;
                        case "source":
                            $833559fe574b4225$var$D("error", d);
                            break;
                        case "img":
                        case "image":
                        case "link":
                            $833559fe574b4225$var$D("error", d);
                            $833559fe574b4225$var$D("load", d);
                            break;
                        case "details":
                            $833559fe574b4225$var$D("toggle", d);
                            break;
                        case "input":
                            $833559fe574b4225$var$Za(d, f);
                            $833559fe574b4225$var$D("invalid", d);
                            break;
                        case "select":
                            d._wrapperState = {
                                wasMultiple: !!f.multiple
                            };
                            $833559fe574b4225$var$D("invalid", d);
                            break;
                        case "textarea":
                            $833559fe574b4225$var$hb(d, f), $833559fe574b4225$var$D("invalid", d);
                    }
                    $833559fe574b4225$var$ub(c, f);
                    e = null;
                    for(var g in f)if (f.hasOwnProperty(g)) {
                        var h = f[g];
                        "children" === g ? "string" === typeof h ? d.textContent !== h && (!0 !== f.suppressHydrationWarning && $833559fe574b4225$var$Af(d.textContent, h, a), e = [
                            "children",
                            h
                        ]) : "number" === typeof h && d.textContent !== "" + h && (!0 !== f.suppressHydrationWarning && $833559fe574b4225$var$Af(d.textContent, h, a), e = [
                            "children",
                            "" + h
                        ]) : $833559fe574b4225$var$ea.hasOwnProperty(g) && null != h && "onScroll" === g && $833559fe574b4225$var$D("scroll", d);
                    }
                    switch(c){
                        case "input":
                            $833559fe574b4225$var$Va(d);
                            $833559fe574b4225$var$db(d, f, !0);
                            break;
                        case "textarea":
                            $833559fe574b4225$var$Va(d);
                            $833559fe574b4225$var$jb(d);
                            break;
                        case "select":
                        case "option":
                            break;
                        default:
                            "function" === typeof f.onClick && (d.onclick = $833559fe574b4225$var$Bf);
                    }
                    d = e;
                    b.updateQueue = d;
                    null !== d && (b.flags |= 4);
                } else {
                    g = 9 === e.nodeType ? e : e.ownerDocument;
                    "http://www.w3.org/1999/xhtml" === a && (a = $833559fe574b4225$var$kb(c));
                    "http://www.w3.org/1999/xhtml" === a ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script></script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, {
                        is: d.is
                    }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);
                    a[$833559fe574b4225$var$Of] = b;
                    a[$833559fe574b4225$var$Pf] = d;
                    $833559fe574b4225$var$Aj(a, b, !1, !1);
                    b.stateNode = a;
                    a: {
                        g = $833559fe574b4225$var$vb(c, d);
                        switch(c){
                            case "dialog":
                                $833559fe574b4225$var$D("cancel", a);
                                $833559fe574b4225$var$D("close", a);
                                e = d;
                                break;
                            case "iframe":
                            case "object":
                            case "embed":
                                $833559fe574b4225$var$D("load", a);
                                e = d;
                                break;
                            case "video":
                            case "audio":
                                for(e = 0; e < $833559fe574b4225$var$lf.length; e++)$833559fe574b4225$var$D($833559fe574b4225$var$lf[e], a);
                                e = d;
                                break;
                            case "source":
                                $833559fe574b4225$var$D("error", a);
                                e = d;
                                break;
                            case "img":
                            case "image":
                            case "link":
                                $833559fe574b4225$var$D("error", a);
                                $833559fe574b4225$var$D("load", a);
                                e = d;
                                break;
                            case "details":
                                $833559fe574b4225$var$D("toggle", a);
                                e = d;
                                break;
                            case "input":
                                $833559fe574b4225$var$Za(a, d);
                                e = $833559fe574b4225$var$Ya(a, d);
                                $833559fe574b4225$var$D("invalid", a);
                                break;
                            case "option":
                                e = d;
                                break;
                            case "select":
                                a._wrapperState = {
                                    wasMultiple: !!d.multiple
                                };
                                e = $833559fe574b4225$var$A({}, d, {
                                    value: void 0
                                });
                                $833559fe574b4225$var$D("invalid", a);
                                break;
                            case "textarea":
                                $833559fe574b4225$var$hb(a, d);
                                e = $833559fe574b4225$var$gb(a, d);
                                $833559fe574b4225$var$D("invalid", a);
                                break;
                            default:
                                e = d;
                        }
                        $833559fe574b4225$var$ub(c, e);
                        h = e;
                        for(f in h)if (h.hasOwnProperty(f)) {
                            var k = h[f];
                            "style" === f ? $833559fe574b4225$var$sb(a, k) : "dangerouslySetInnerHTML" === f ? (k = k ? k.__html : void 0, null != k && $833559fe574b4225$var$nb(a, k)) : "children" === f ? "string" === typeof k ? ("textarea" !== c || "" !== k) && $833559fe574b4225$var$ob(a, k) : "number" === typeof k && $833559fe574b4225$var$ob(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && ($833559fe574b4225$var$ea.hasOwnProperty(f) ? null != k && "onScroll" === f && $833559fe574b4225$var$D("scroll", a) : null != k && $833559fe574b4225$var$ta(a, f, k, g));
                        }
                        switch(c){
                            case "input":
                                $833559fe574b4225$var$Va(a);
                                $833559fe574b4225$var$db(a, d, !1);
                                break;
                            case "textarea":
                                $833559fe574b4225$var$Va(a);
                                $833559fe574b4225$var$jb(a);
                                break;
                            case "option":
                                null != d.value && a.setAttribute("value", "" + $833559fe574b4225$var$Sa(d.value));
                                break;
                            case "select":
                                a.multiple = !!d.multiple;
                                f = d.value;
                                null != f ? $833559fe574b4225$var$fb(a, !!d.multiple, f, !1) : null != d.defaultValue && $833559fe574b4225$var$fb(a, !!d.multiple, d.defaultValue, !0);
                                break;
                            default:
                                "function" === typeof e.onClick && (a.onclick = $833559fe574b4225$var$Bf);
                        }
                        switch(c){
                            case "button":
                            case "input":
                            case "select":
                            case "textarea":
                                d = !!d.autoFocus;
                                break a;
                            case "img":
                                d = !0;
                                break a;
                            default:
                                d = !1;
                        }
                    }
                    d && (b.flags |= 4);
                }
                null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
            }
            $833559fe574b4225$var$S(b);
            return null;
        case 6:
            if (a && null != b.stateNode) $833559fe574b4225$var$Dj(a, b, a.memoizedProps, d);
            else {
                if ("string" !== typeof d && null === b.stateNode) throw Error($833559fe574b4225$var$p(166));
                c = $833559fe574b4225$var$Hh($833559fe574b4225$var$Gh.current);
                $833559fe574b4225$var$Hh($833559fe574b4225$var$Eh.current);
                if ($833559fe574b4225$var$Gg(b)) {
                    d = b.stateNode;
                    c = b.memoizedProps;
                    d[$833559fe574b4225$var$Of] = b;
                    if (f = d.nodeValue !== c) {
                        if (a = $833559fe574b4225$var$xg, null !== a) switch(a.tag){
                            case 3:
                                $833559fe574b4225$var$Af(d.nodeValue, c, 0 !== (a.mode & 1));
                                break;
                            case 5:
                                !0 !== a.memoizedProps.suppressHydrationWarning && $833559fe574b4225$var$Af(d.nodeValue, c, 0 !== (a.mode & 1));
                        }
                    }
                    f && (b.flags |= 4);
                } else d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[$833559fe574b4225$var$Of] = b, b.stateNode = d;
            }
            $833559fe574b4225$var$S(b);
            return null;
        case 13:
            $833559fe574b4225$var$E($833559fe574b4225$var$M);
            d = b.memoizedState;
            if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
                if ($833559fe574b4225$var$I && null !== $833559fe574b4225$var$yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) $833559fe574b4225$var$Hg(), $833559fe574b4225$var$Ig(), b.flags |= 98560, f = !1;
                else if (f = $833559fe574b4225$var$Gg(b), null !== d && null !== d.dehydrated) {
                    if (null === a) {
                        if (!f) throw Error($833559fe574b4225$var$p(318));
                        f = b.memoizedState;
                        f = null !== f ? f.dehydrated : null;
                        if (!f) throw Error($833559fe574b4225$var$p(317));
                        f[$833559fe574b4225$var$Of] = b;
                    } else $833559fe574b4225$var$Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
                    $833559fe574b4225$var$S(b);
                    f = !1;
                } else null !== $833559fe574b4225$var$zg && ($833559fe574b4225$var$Gj($833559fe574b4225$var$zg), $833559fe574b4225$var$zg = null), f = !0;
                if (!f) return b.flags & 65536 ? b : null;
            }
            if (0 !== (b.flags & 128)) return b.lanes = c, b;
            d = null !== d;
            d !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a || 0 !== ($833559fe574b4225$var$M.current & 1) ? 0 === $833559fe574b4225$var$T && ($833559fe574b4225$var$T = 3) : $833559fe574b4225$var$uj()));
            null !== b.updateQueue && (b.flags |= 4);
            $833559fe574b4225$var$S(b);
            return null;
        case 4:
            return $833559fe574b4225$var$Jh(), $833559fe574b4225$var$Bj(a, b), null === a && $833559fe574b4225$var$sf(b.stateNode.containerInfo), $833559fe574b4225$var$S(b), null;
        case 10:
            return $833559fe574b4225$var$Rg(b.type._context), $833559fe574b4225$var$S(b), null;
        case 17:
            return $833559fe574b4225$var$Zf(b.type) && $833559fe574b4225$var$$f(), $833559fe574b4225$var$S(b), null;
        case 19:
            $833559fe574b4225$var$E($833559fe574b4225$var$M);
            f = b.memoizedState;
            if (null === f) return $833559fe574b4225$var$S(b), null;
            d = 0 !== (b.flags & 128);
            g = f.rendering;
            if (null === g) {
                if (d) $833559fe574b4225$var$Ej(f, !1);
                else {
                    if (0 !== $833559fe574b4225$var$T || null !== a && 0 !== (a.flags & 128)) for(a = b.child; null !== a;){
                        g = $833559fe574b4225$var$Mh(a);
                        if (null !== g) {
                            b.flags |= 128;
                            $833559fe574b4225$var$Ej(f, !1);
                            d = g.updateQueue;
                            null !== d && (b.updateQueue = d, b.flags |= 4);
                            b.subtreeFlags = 0;
                            d = c;
                            for(c = b.child; null !== c;)f = c, a = d, f.flags &= 14680066, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.subtreeFlags = 0, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.subtreeFlags = 0, f.deletions = null, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {
                                lanes: a.lanes,
                                firstContext: a.firstContext
                            }), c = c.sibling;
                            $833559fe574b4225$var$G($833559fe574b4225$var$M, $833559fe574b4225$var$M.current & 1 | 2);
                            return b.child;
                        }
                        a = a.sibling;
                    }
                    null !== f.tail && $833559fe574b4225$var$B() > $833559fe574b4225$var$Hj && (b.flags |= 128, d = !0, $833559fe574b4225$var$Ej(f, !1), b.lanes = 4194304);
                }
            } else {
                if (!d) {
                    if (a = $833559fe574b4225$var$Mh(g), null !== a) {
                        if (b.flags |= 128, d = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), $833559fe574b4225$var$Ej(f, !0), null === f.tail && "hidden" === f.tailMode && !g.alternate && !$833559fe574b4225$var$I) return $833559fe574b4225$var$S(b), null;
                    } else 2 * $833559fe574b4225$var$B() - f.renderingStartTime > $833559fe574b4225$var$Hj && 1073741824 !== c && (b.flags |= 128, d = !0, $833559fe574b4225$var$Ej(f, !1), b.lanes = 4194304);
                }
                f.isBackwards ? (g.sibling = b.child, b.child = g) : (c = f.last, null !== c ? c.sibling = g : b.child = g, f.last = g);
            }
            if (null !== f.tail) return b = f.tail, f.rendering = b, f.tail = b.sibling, f.renderingStartTime = $833559fe574b4225$var$B(), b.sibling = null, c = $833559fe574b4225$var$M.current, $833559fe574b4225$var$G($833559fe574b4225$var$M, d ? c & 1 | 2 : c & 1), b;
            $833559fe574b4225$var$S(b);
            return null;
        case 22:
        case 23:
            return $833559fe574b4225$var$Ij(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== ($833559fe574b4225$var$gj & 1073741824) && ($833559fe574b4225$var$S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : $833559fe574b4225$var$S(b), null;
        case 24:
            return null;
        case 25:
            return null;
    }
    throw Error($833559fe574b4225$var$p(156, b.tag));
}
function $833559fe574b4225$var$Jj(a, b) {
    $833559fe574b4225$var$wg(b);
    switch(b.tag){
        case 1:
            return $833559fe574b4225$var$Zf(b.type) && $833559fe574b4225$var$$f(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
        case 3:
            return $833559fe574b4225$var$Jh(), $833559fe574b4225$var$E($833559fe574b4225$var$Wf), $833559fe574b4225$var$E($833559fe574b4225$var$H), $833559fe574b4225$var$Oh(), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;
        case 5:
            return $833559fe574b4225$var$Lh(b), null;
        case 13:
            $833559fe574b4225$var$E($833559fe574b4225$var$M);
            a = b.memoizedState;
            if (null !== a && null !== a.dehydrated) {
                if (null === b.alternate) throw Error($833559fe574b4225$var$p(340));
                $833559fe574b4225$var$Ig();
            }
            a = b.flags;
            return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
        case 19:
            return $833559fe574b4225$var$E($833559fe574b4225$var$M), null;
        case 4:
            return $833559fe574b4225$var$Jh(), null;
        case 10:
            return $833559fe574b4225$var$Rg(b.type._context), null;
        case 22:
        case 23:
            return $833559fe574b4225$var$Ij(), null;
        case 24:
            return null;
        default:
            return null;
    }
}
var $833559fe574b4225$var$Kj = !1, $833559fe574b4225$var$U = !1, $833559fe574b4225$var$Lj = "function" === typeof WeakSet ? WeakSet : Set, $833559fe574b4225$var$V = null;
function $833559fe574b4225$var$Mj(a, b) {
    var c = a.ref;
    if (null !== c) {
        if ("function" === typeof c) try {
            c(null);
        } catch (d) {
            $833559fe574b4225$var$W(a, b, d);
        }
        else c.current = null;
    }
}
function $833559fe574b4225$var$Nj(a, b, c) {
    try {
        c();
    } catch (d) {
        $833559fe574b4225$var$W(a, b, d);
    }
}
var $833559fe574b4225$var$Oj = !1;
function $833559fe574b4225$var$Pj(a, b) {
    $833559fe574b4225$var$Cf = $833559fe574b4225$var$dd;
    a = $833559fe574b4225$var$Me();
    if ($833559fe574b4225$var$Ne(a)) {
        if ("selectionStart" in a) var c = {
            start: a.selectionStart,
            end: a.selectionEnd
        };
        else a: {
            c = (c = a.ownerDocument) && c.defaultView || window;
            var d = c.getSelection && c.getSelection();
            if (d && 0 !== d.rangeCount) {
                c = d.anchorNode;
                var e = d.anchorOffset, f = d.focusNode;
                d = d.focusOffset;
                try {
                    c.nodeType, f.nodeType;
                } catch (F) {
                    c = null;
                    break a;
                }
                var g = 0, h = -1, k = -1, l = 0, m = 0, q = a, r = null;
                b: for(;;){
                    for(var y;;){
                        q !== c || 0 !== e && 3 !== q.nodeType || (h = g + e);
                        q !== f || 0 !== d && 3 !== q.nodeType || (k = g + d);
                        3 === q.nodeType && (g += q.nodeValue.length);
                        if (null === (y = q.firstChild)) break;
                        r = q;
                        q = y;
                    }
                    for(;;){
                        if (q === a) break b;
                        r === c && ++l === e && (h = g);
                        r === f && ++m === d && (k = g);
                        if (null !== (y = q.nextSibling)) break;
                        q = r;
                        r = q.parentNode;
                    }
                    q = y;
                }
                c = -1 === h || -1 === k ? null : {
                    start: h,
                    end: k
                };
            } else c = null;
        }
        c = c || {
            start: 0,
            end: 0
        };
    } else c = null;
    $833559fe574b4225$var$Df = {
        focusedElem: a,
        selectionRange: c
    };
    $833559fe574b4225$var$dd = !1;
    for($833559fe574b4225$var$V = b; null !== $833559fe574b4225$var$V;)if (b = $833559fe574b4225$var$V, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a) a.return = b, $833559fe574b4225$var$V = a;
    else for(; null !== $833559fe574b4225$var$V;){
        b = $833559fe574b4225$var$V;
        try {
            var n = b.alternate;
            if (0 !== (b.flags & 1024)) switch(b.tag){
                case 0:
                case 11:
                case 15:
                    break;
                case 1:
                    if (null !== n) {
                        var t = n.memoizedProps, J = n.memoizedState, x = b.stateNode, w = x.getSnapshotBeforeUpdate(b.elementType === b.type ? t : $833559fe574b4225$var$Lg(b.type, t), J);
                        x.__reactInternalSnapshotBeforeUpdate = w;
                    }
                    break;
                case 3:
                    var u = b.stateNode.containerInfo;
                    1 === u.nodeType ? u.textContent = "" : 9 === u.nodeType && u.documentElement && u.removeChild(u.documentElement);
                    break;
                case 5:
                case 6:
                case 4:
                case 17:
                    break;
                default:
                    throw Error($833559fe574b4225$var$p(163));
            }
        } catch (F) {
            $833559fe574b4225$var$W(b, b.return, F);
        }
        a = b.sibling;
        if (null !== a) {
            a.return = b.return;
            $833559fe574b4225$var$V = a;
            break;
        }
        $833559fe574b4225$var$V = b.return;
    }
    n = $833559fe574b4225$var$Oj;
    $833559fe574b4225$var$Oj = !1;
    return n;
}
function $833559fe574b4225$var$Qj(a, b, c) {
    var d = b.updateQueue;
    d = null !== d ? d.lastEffect : null;
    if (null !== d) {
        var e = d = d.next;
        do {
            if ((e.tag & a) === a) {
                var f = e.destroy;
                e.destroy = void 0;
                void 0 !== f && $833559fe574b4225$var$Nj(b, c, f);
            }
            e = e.next;
        }while (e !== d);
    }
}
function $833559fe574b4225$var$Rj(a, b) {
    b = b.updateQueue;
    b = null !== b ? b.lastEffect : null;
    if (null !== b) {
        var c = b = b.next;
        do {
            if ((c.tag & a) === a) {
                var d = c.create;
                c.destroy = d();
            }
            c = c.next;
        }while (c !== b);
    }
}
function $833559fe574b4225$var$Sj(a) {
    var b = a.ref;
    if (null !== b) {
        var c = a.stateNode;
        switch(a.tag){
            case 5:
                a = c;
                break;
            default:
                a = c;
        }
        "function" === typeof b ? b(a) : b.current = a;
    }
}
function $833559fe574b4225$var$Tj(a) {
    var b = a.alternate;
    null !== b && (a.alternate = null, $833559fe574b4225$var$Tj(b));
    a.child = null;
    a.deletions = null;
    a.sibling = null;
    5 === a.tag && (b = a.stateNode, null !== b && (delete b[$833559fe574b4225$var$Of], delete b[$833559fe574b4225$var$Pf], delete b[$833559fe574b4225$var$of], delete b[$833559fe574b4225$var$Qf], delete b[$833559fe574b4225$var$Rf]));
    a.stateNode = null;
    a.return = null;
    a.dependencies = null;
    a.memoizedProps = null;
    a.memoizedState = null;
    a.pendingProps = null;
    a.stateNode = null;
    a.updateQueue = null;
}
function $833559fe574b4225$var$Uj(a) {
    return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function $833559fe574b4225$var$Vj(a) {
    a: for(;;){
        for(; null === a.sibling;){
            if (null === a.return || $833559fe574b4225$var$Uj(a.return)) return null;
            a = a.return;
        }
        a.sibling.return = a.return;
        for(a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag;){
            if (a.flags & 2) continue a;
            if (null === a.child || 4 === a.tag) continue a;
            else a.child.return = a, a = a.child;
        }
        if (!(a.flags & 2)) return a.stateNode;
    }
}
function $833559fe574b4225$var$Wj(a, b, c) {
    var d = a.tag;
    if (5 === d || 6 === d) a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = $833559fe574b4225$var$Bf));
    else if (4 !== d && (a = a.child, null !== a)) for($833559fe574b4225$var$Wj(a, b, c), a = a.sibling; null !== a;)$833559fe574b4225$var$Wj(a, b, c), a = a.sibling;
}
function $833559fe574b4225$var$Xj(a, b, c) {
    var d = a.tag;
    if (5 === d || 6 === d) a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);
    else if (4 !== d && (a = a.child, null !== a)) for($833559fe574b4225$var$Xj(a, b, c), a = a.sibling; null !== a;)$833559fe574b4225$var$Xj(a, b, c), a = a.sibling;
}
var $833559fe574b4225$var$X = null, $833559fe574b4225$var$Yj = !1;
function $833559fe574b4225$var$Zj(a, b, c) {
    for(c = c.child; null !== c;)$833559fe574b4225$var$ak(a, b, c), c = c.sibling;
}
function $833559fe574b4225$var$ak(a, b, c) {
    if ($833559fe574b4225$var$lc && "function" === typeof $833559fe574b4225$var$lc.onCommitFiberUnmount) try {
        $833559fe574b4225$var$lc.onCommitFiberUnmount($833559fe574b4225$var$kc, c);
    } catch (h) {}
    switch(c.tag){
        case 5:
            $833559fe574b4225$var$U || $833559fe574b4225$var$Mj(c, b);
        case 6:
            var d = $833559fe574b4225$var$X, e = $833559fe574b4225$var$Yj;
            $833559fe574b4225$var$X = null;
            $833559fe574b4225$var$Zj(a, b, c);
            $833559fe574b4225$var$X = d;
            $833559fe574b4225$var$Yj = e;
            null !== $833559fe574b4225$var$X && ($833559fe574b4225$var$Yj ? (a = $833559fe574b4225$var$X, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : $833559fe574b4225$var$X.removeChild(c.stateNode));
            break;
        case 18:
            null !== $833559fe574b4225$var$X && ($833559fe574b4225$var$Yj ? (a = $833559fe574b4225$var$X, c = c.stateNode, 8 === a.nodeType ? $833559fe574b4225$var$Kf(a.parentNode, c) : 1 === a.nodeType && $833559fe574b4225$var$Kf(a, c), $833559fe574b4225$var$bd(a)) : $833559fe574b4225$var$Kf($833559fe574b4225$var$X, c.stateNode));
            break;
        case 4:
            d = $833559fe574b4225$var$X;
            e = $833559fe574b4225$var$Yj;
            $833559fe574b4225$var$X = c.stateNode.containerInfo;
            $833559fe574b4225$var$Yj = !0;
            $833559fe574b4225$var$Zj(a, b, c);
            $833559fe574b4225$var$X = d;
            $833559fe574b4225$var$Yj = e;
            break;
        case 0:
        case 11:
        case 14:
        case 15:
            if (!$833559fe574b4225$var$U && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
                e = d = d.next;
                do {
                    var f = e, g = f.destroy;
                    f = f.tag;
                    void 0 !== g && (0 !== (f & 2) ? $833559fe574b4225$var$Nj(c, b, g) : 0 !== (f & 4) && $833559fe574b4225$var$Nj(c, b, g));
                    e = e.next;
                }while (e !== d);
            }
            $833559fe574b4225$var$Zj(a, b, c);
            break;
        case 1:
            if (!$833559fe574b4225$var$U && ($833559fe574b4225$var$Mj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount)) try {
                d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
            } catch (h) {
                $833559fe574b4225$var$W(c, b, h);
            }
            $833559fe574b4225$var$Zj(a, b, c);
            break;
        case 21:
            $833559fe574b4225$var$Zj(a, b, c);
            break;
        case 22:
            c.mode & 1 ? ($833559fe574b4225$var$U = (d = $833559fe574b4225$var$U) || null !== c.memoizedState, $833559fe574b4225$var$Zj(a, b, c), $833559fe574b4225$var$U = d) : $833559fe574b4225$var$Zj(a, b, c);
            break;
        default:
            $833559fe574b4225$var$Zj(a, b, c);
    }
}
function $833559fe574b4225$var$bk(a) {
    var b = a.updateQueue;
    if (null !== b) {
        a.updateQueue = null;
        var c = a.stateNode;
        null === c && (c = a.stateNode = new $833559fe574b4225$var$Lj);
        b.forEach(function(b) {
            var d = $833559fe574b4225$var$ck.bind(null, a, b);
            c.has(b) || (c.add(b), b.then(d, d));
        });
    }
}
function $833559fe574b4225$var$dk(a, b) {
    var c = b.deletions;
    if (null !== c) for(var d = 0; d < c.length; d++){
        var e = c[d];
        try {
            var f = a, g = b, h = g;
            a: for(; null !== h;){
                switch(h.tag){
                    case 5:
                        $833559fe574b4225$var$X = h.stateNode;
                        $833559fe574b4225$var$Yj = !1;
                        break a;
                    case 3:
                        $833559fe574b4225$var$X = h.stateNode.containerInfo;
                        $833559fe574b4225$var$Yj = !0;
                        break a;
                    case 4:
                        $833559fe574b4225$var$X = h.stateNode.containerInfo;
                        $833559fe574b4225$var$Yj = !0;
                        break a;
                }
                h = h.return;
            }
            if (null === $833559fe574b4225$var$X) throw Error($833559fe574b4225$var$p(160));
            $833559fe574b4225$var$ak(f, g, e);
            $833559fe574b4225$var$X = null;
            $833559fe574b4225$var$Yj = !1;
            var k = e.alternate;
            null !== k && (k.return = null);
            e.return = null;
        } catch (l) {
            $833559fe574b4225$var$W(e, b, l);
        }
    }
    if (b.subtreeFlags & 12854) for(b = b.child; null !== b;)$833559fe574b4225$var$ek(b, a), b = b.sibling;
}
function $833559fe574b4225$var$ek(a, b) {
    var c = a.alternate, d = a.flags;
    switch(a.tag){
        case 0:
        case 11:
        case 14:
        case 15:
            $833559fe574b4225$var$dk(b, a);
            $833559fe574b4225$var$fk(a);
            if (d & 4) {
                try {
                    $833559fe574b4225$var$Qj(3, a, a.return), $833559fe574b4225$var$Rj(3, a);
                } catch (t) {
                    $833559fe574b4225$var$W(a, a.return, t);
                }
                try {
                    $833559fe574b4225$var$Qj(5, a, a.return);
                } catch (t) {
                    $833559fe574b4225$var$W(a, a.return, t);
                }
            }
            break;
        case 1:
            $833559fe574b4225$var$dk(b, a);
            $833559fe574b4225$var$fk(a);
            d & 512 && null !== c && $833559fe574b4225$var$Mj(c, c.return);
            break;
        case 5:
            $833559fe574b4225$var$dk(b, a);
            $833559fe574b4225$var$fk(a);
            d & 512 && null !== c && $833559fe574b4225$var$Mj(c, c.return);
            if (a.flags & 32) {
                var e = a.stateNode;
                try {
                    $833559fe574b4225$var$ob(e, "");
                } catch (t) {
                    $833559fe574b4225$var$W(a, a.return, t);
                }
            }
            if (d & 4 && (e = a.stateNode, null != e)) {
                var f = a.memoizedProps, g = null !== c ? c.memoizedProps : f, h = a.type, k = a.updateQueue;
                a.updateQueue = null;
                if (null !== k) try {
                    "input" === h && "radio" === f.type && null != f.name && $833559fe574b4225$var$ab(e, f);
                    $833559fe574b4225$var$vb(h, g);
                    var l = $833559fe574b4225$var$vb(h, f);
                    for(g = 0; g < k.length; g += 2){
                        var m = k[g], q = k[g + 1];
                        "style" === m ? $833559fe574b4225$var$sb(e, q) : "dangerouslySetInnerHTML" === m ? $833559fe574b4225$var$nb(e, q) : "children" === m ? $833559fe574b4225$var$ob(e, q) : $833559fe574b4225$var$ta(e, m, q, l);
                    }
                    switch(h){
                        case "input":
                            $833559fe574b4225$var$bb(e, f);
                            break;
                        case "textarea":
                            $833559fe574b4225$var$ib(e, f);
                            break;
                        case "select":
                            var r = e._wrapperState.wasMultiple;
                            e._wrapperState.wasMultiple = !!f.multiple;
                            var y = f.value;
                            null != y ? $833559fe574b4225$var$fb(e, !!f.multiple, y, !1) : r !== !!f.multiple && (null != f.defaultValue ? $833559fe574b4225$var$fb(e, !!f.multiple, f.defaultValue, !0) : $833559fe574b4225$var$fb(e, !!f.multiple, f.multiple ? [] : "", !1));
                    }
                    e[$833559fe574b4225$var$Pf] = f;
                } catch (t) {
                    $833559fe574b4225$var$W(a, a.return, t);
                }
            }
            break;
        case 6:
            $833559fe574b4225$var$dk(b, a);
            $833559fe574b4225$var$fk(a);
            if (d & 4) {
                if (null === a.stateNode) throw Error($833559fe574b4225$var$p(162));
                e = a.stateNode;
                f = a.memoizedProps;
                try {
                    e.nodeValue = f;
                } catch (t) {
                    $833559fe574b4225$var$W(a, a.return, t);
                }
            }
            break;
        case 3:
            $833559fe574b4225$var$dk(b, a);
            $833559fe574b4225$var$fk(a);
            if (d & 4 && null !== c && c.memoizedState.isDehydrated) try {
                $833559fe574b4225$var$bd(b.containerInfo);
            } catch (t) {
                $833559fe574b4225$var$W(a, a.return, t);
            }
            break;
        case 4:
            $833559fe574b4225$var$dk(b, a);
            $833559fe574b4225$var$fk(a);
            break;
        case 13:
            $833559fe574b4225$var$dk(b, a);
            $833559fe574b4225$var$fk(a);
            e = a.child;
            e.flags & 8192 && (f = null !== e.memoizedState, e.stateNode.isHidden = f, !f || null !== e.alternate && null !== e.alternate.memoizedState || ($833559fe574b4225$var$gk = $833559fe574b4225$var$B()));
            d & 4 && $833559fe574b4225$var$bk(a);
            break;
        case 22:
            m = null !== c && null !== c.memoizedState;
            a.mode & 1 ? ($833559fe574b4225$var$U = (l = $833559fe574b4225$var$U) || m, $833559fe574b4225$var$dk(b, a), $833559fe574b4225$var$U = l) : $833559fe574b4225$var$dk(b, a);
            $833559fe574b4225$var$fk(a);
            if (d & 8192) {
                l = null !== a.memoizedState;
                if ((a.stateNode.isHidden = l) && !m && 0 !== (a.mode & 1)) for($833559fe574b4225$var$V = a, m = a.child; null !== m;){
                    for(q = $833559fe574b4225$var$V = m; null !== $833559fe574b4225$var$V;){
                        r = $833559fe574b4225$var$V;
                        y = r.child;
                        switch(r.tag){
                            case 0:
                            case 11:
                            case 14:
                            case 15:
                                $833559fe574b4225$var$Qj(4, r, r.return);
                                break;
                            case 1:
                                $833559fe574b4225$var$Mj(r, r.return);
                                var n = r.stateNode;
                                if ("function" === typeof n.componentWillUnmount) {
                                    d = r;
                                    c = r.return;
                                    try {
                                        b = d, n.props = b.memoizedProps, n.state = b.memoizedState, n.componentWillUnmount();
                                    } catch (t) {
                                        $833559fe574b4225$var$W(d, c, t);
                                    }
                                }
                                break;
                            case 5:
                                $833559fe574b4225$var$Mj(r, r.return);
                                break;
                            case 22:
                                if (null !== r.memoizedState) {
                                    $833559fe574b4225$var$hk(q);
                                    continue;
                                }
                        }
                        null !== y ? (y.return = r, $833559fe574b4225$var$V = y) : $833559fe574b4225$var$hk(q);
                    }
                    m = m.sibling;
                }
                a: for(m = null, q = a;;){
                    if (5 === q.tag) {
                        if (null === m) {
                            m = q;
                            try {
                                e = q.stateNode, l ? (f = e.style, "function" === typeof f.setProperty ? f.setProperty("display", "none", "important") : f.display = "none") : (h = q.stateNode, k = q.memoizedProps.style, g = void 0 !== k && null !== k && k.hasOwnProperty("display") ? k.display : null, h.style.display = $833559fe574b4225$var$rb("display", g));
                            } catch (t) {
                                $833559fe574b4225$var$W(a, a.return, t);
                            }
                        }
                    } else if (6 === q.tag) {
                        if (null === m) try {
                            q.stateNode.nodeValue = l ? "" : q.memoizedProps;
                        } catch (t) {
                            $833559fe574b4225$var$W(a, a.return, t);
                        }
                    } else if ((22 !== q.tag && 23 !== q.tag || null === q.memoizedState || q === a) && null !== q.child) {
                        q.child.return = q;
                        q = q.child;
                        continue;
                    }
                    if (q === a) break a;
                    for(; null === q.sibling;){
                        if (null === q.return || q.return === a) break a;
                        m === q && (m = null);
                        q = q.return;
                    }
                    m === q && (m = null);
                    q.sibling.return = q.return;
                    q = q.sibling;
                }
            }
            break;
        case 19:
            $833559fe574b4225$var$dk(b, a);
            $833559fe574b4225$var$fk(a);
            d & 4 && $833559fe574b4225$var$bk(a);
            break;
        case 21:
            break;
        default:
            $833559fe574b4225$var$dk(b, a), $833559fe574b4225$var$fk(a);
    }
}
function $833559fe574b4225$var$fk(a) {
    var b = a.flags;
    if (b & 2) {
        try {
            a: {
                for(var c = a.return; null !== c;){
                    if ($833559fe574b4225$var$Uj(c)) {
                        var d = c;
                        break a;
                    }
                    c = c.return;
                }
                throw Error($833559fe574b4225$var$p(160));
            }
            switch(d.tag){
                case 5:
                    var e = d.stateNode;
                    d.flags & 32 && ($833559fe574b4225$var$ob(e, ""), d.flags &= -33);
                    var f = $833559fe574b4225$var$Vj(a);
                    $833559fe574b4225$var$Xj(a, f, e);
                    break;
                case 3:
                case 4:
                    var g = d.stateNode.containerInfo, h = $833559fe574b4225$var$Vj(a);
                    $833559fe574b4225$var$Wj(a, h, g);
                    break;
                default:
                    throw Error($833559fe574b4225$var$p(161));
            }
        } catch (k) {
            $833559fe574b4225$var$W(a, a.return, k);
        }
        a.flags &= -3;
    }
    b & 4096 && (a.flags &= -4097);
}
function $833559fe574b4225$var$ik(a, b, c) {
    $833559fe574b4225$var$V = a;
    $833559fe574b4225$var$jk(a, b, c);
}
function $833559fe574b4225$var$jk(a, b, c) {
    for(var d = 0 !== (a.mode & 1); null !== $833559fe574b4225$var$V;){
        var e = $833559fe574b4225$var$V, f = e.child;
        if (22 === e.tag && d) {
            var g = null !== e.memoizedState || $833559fe574b4225$var$Kj;
            if (!g) {
                var h = e.alternate, k = null !== h && null !== h.memoizedState || $833559fe574b4225$var$U;
                h = $833559fe574b4225$var$Kj;
                var l = $833559fe574b4225$var$U;
                $833559fe574b4225$var$Kj = g;
                if (($833559fe574b4225$var$U = k) && !l) for($833559fe574b4225$var$V = e; null !== $833559fe574b4225$var$V;)g = $833559fe574b4225$var$V, k = g.child, 22 === g.tag && null !== g.memoizedState ? $833559fe574b4225$var$kk(e) : null !== k ? (k.return = g, $833559fe574b4225$var$V = k) : $833559fe574b4225$var$kk(e);
                for(; null !== f;)$833559fe574b4225$var$V = f, $833559fe574b4225$var$jk(f, b, c), f = f.sibling;
                $833559fe574b4225$var$V = e;
                $833559fe574b4225$var$Kj = h;
                $833559fe574b4225$var$U = l;
            }
            $833559fe574b4225$var$lk(a, b, c);
        } else 0 !== (e.subtreeFlags & 8772) && null !== f ? (f.return = e, $833559fe574b4225$var$V = f) : $833559fe574b4225$var$lk(a, b, c);
    }
}
function $833559fe574b4225$var$lk(a) {
    for(; null !== $833559fe574b4225$var$V;){
        var b = $833559fe574b4225$var$V;
        if (0 !== (b.flags & 8772)) {
            var c = b.alternate;
            try {
                if (0 !== (b.flags & 8772)) switch(b.tag){
                    case 0:
                    case 11:
                    case 15:
                        $833559fe574b4225$var$U || $833559fe574b4225$var$Rj(5, b);
                        break;
                    case 1:
                        var d = b.stateNode;
                        if (b.flags & 4 && !$833559fe574b4225$var$U) {
                            if (null === c) d.componentDidMount();
                            else {
                                var e = b.elementType === b.type ? c.memoizedProps : $833559fe574b4225$var$Lg(b.type, c.memoizedProps);
                                d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
                            }
                        }
                        var f = b.updateQueue;
                        null !== f && $833559fe574b4225$var$ih(b, f, d);
                        break;
                    case 3:
                        var g = b.updateQueue;
                        if (null !== g) {
                            c = null;
                            if (null !== b.child) switch(b.child.tag){
                                case 5:
                                    c = b.child.stateNode;
                                    break;
                                case 1:
                                    c = b.child.stateNode;
                            }
                            $833559fe574b4225$var$ih(b, g, c);
                        }
                        break;
                    case 5:
                        var h = b.stateNode;
                        if (null === c && b.flags & 4) {
                            c = h;
                            var k = b.memoizedProps;
                            switch(b.type){
                                case "button":
                                case "input":
                                case "select":
                                case "textarea":
                                    k.autoFocus && c.focus();
                                    break;
                                case "img":
                                    k.src && (c.src = k.src);
                            }
                        }
                        break;
                    case 6:
                        break;
                    case 4:
                        break;
                    case 12:
                        break;
                    case 13:
                        if (null === b.memoizedState) {
                            var l = b.alternate;
                            if (null !== l) {
                                var m = l.memoizedState;
                                if (null !== m) {
                                    var q = m.dehydrated;
                                    null !== q && $833559fe574b4225$var$bd(q);
                                }
                            }
                        }
                        break;
                    case 19:
                    case 17:
                    case 21:
                    case 22:
                    case 23:
                    case 25:
                        break;
                    default:
                        throw Error($833559fe574b4225$var$p(163));
                }
                $833559fe574b4225$var$U || b.flags & 512 && $833559fe574b4225$var$Sj(b);
            } catch (r) {
                $833559fe574b4225$var$W(b, b.return, r);
            }
        }
        if (b === a) {
            $833559fe574b4225$var$V = null;
            break;
        }
        c = b.sibling;
        if (null !== c) {
            c.return = b.return;
            $833559fe574b4225$var$V = c;
            break;
        }
        $833559fe574b4225$var$V = b.return;
    }
}
function $833559fe574b4225$var$hk(a) {
    for(; null !== $833559fe574b4225$var$V;){
        var b = $833559fe574b4225$var$V;
        if (b === a) {
            $833559fe574b4225$var$V = null;
            break;
        }
        var c = b.sibling;
        if (null !== c) {
            c.return = b.return;
            $833559fe574b4225$var$V = c;
            break;
        }
        $833559fe574b4225$var$V = b.return;
    }
}
function $833559fe574b4225$var$kk(a) {
    for(; null !== $833559fe574b4225$var$V;){
        var b = $833559fe574b4225$var$V;
        try {
            switch(b.tag){
                case 0:
                case 11:
                case 15:
                    var c = b.return;
                    try {
                        $833559fe574b4225$var$Rj(4, b);
                    } catch (k) {
                        $833559fe574b4225$var$W(b, c, k);
                    }
                    break;
                case 1:
                    var d = b.stateNode;
                    if ("function" === typeof d.componentDidMount) {
                        var e = b.return;
                        try {
                            d.componentDidMount();
                        } catch (k) {
                            $833559fe574b4225$var$W(b, e, k);
                        }
                    }
                    var f = b.return;
                    try {
                        $833559fe574b4225$var$Sj(b);
                    } catch (k) {
                        $833559fe574b4225$var$W(b, f, k);
                    }
                    break;
                case 5:
                    var g = b.return;
                    try {
                        $833559fe574b4225$var$Sj(b);
                    } catch (k) {
                        $833559fe574b4225$var$W(b, g, k);
                    }
            }
        } catch (k) {
            $833559fe574b4225$var$W(b, b.return, k);
        }
        if (b === a) {
            $833559fe574b4225$var$V = null;
            break;
        }
        var h = b.sibling;
        if (null !== h) {
            h.return = b.return;
            $833559fe574b4225$var$V = h;
            break;
        }
        $833559fe574b4225$var$V = b.return;
    }
}
var $833559fe574b4225$var$mk = Math.ceil, $833559fe574b4225$var$nk = $833559fe574b4225$var$ua.ReactCurrentDispatcher, $833559fe574b4225$var$ok = $833559fe574b4225$var$ua.ReactCurrentOwner, $833559fe574b4225$var$pk = $833559fe574b4225$var$ua.ReactCurrentBatchConfig, $833559fe574b4225$var$K = 0, $833559fe574b4225$var$R = null, $833559fe574b4225$var$Y = null, $833559fe574b4225$var$Z = 0, $833559fe574b4225$var$gj = 0, $833559fe574b4225$var$fj = $833559fe574b4225$var$Uf(0), $833559fe574b4225$var$T = 0, $833559fe574b4225$var$qk = null, $833559fe574b4225$var$hh = 0, $833559fe574b4225$var$rk = 0, $833559fe574b4225$var$sk = 0, $833559fe574b4225$var$tk = null, $833559fe574b4225$var$uk = null, $833559fe574b4225$var$gk = 0, $833559fe574b4225$var$Hj = Infinity, $833559fe574b4225$var$vk = null, $833559fe574b4225$var$Pi = !1, $833559fe574b4225$var$Qi = null, $833559fe574b4225$var$Si = null, $833559fe574b4225$var$wk = !1, $833559fe574b4225$var$xk = null, $833559fe574b4225$var$yk = 0, $833559fe574b4225$var$zk = 0, $833559fe574b4225$var$Ak = null, $833559fe574b4225$var$Bk = -1, $833559fe574b4225$var$Ck = 0;
function $833559fe574b4225$var$L() {
    return 0 !== ($833559fe574b4225$var$K & 6) ? $833559fe574b4225$var$B() : -1 !== $833559fe574b4225$var$Bk ? $833559fe574b4225$var$Bk : $833559fe574b4225$var$Bk = $833559fe574b4225$var$B();
}
function $833559fe574b4225$var$lh(a) {
    if (0 === (a.mode & 1)) return 1;
    if (0 !== ($833559fe574b4225$var$K & 2) && 0 !== $833559fe574b4225$var$Z) return $833559fe574b4225$var$Z & -$833559fe574b4225$var$Z;
    if (null !== $833559fe574b4225$var$Kg.transition) return 0 === $833559fe574b4225$var$Ck && ($833559fe574b4225$var$Ck = $833559fe574b4225$var$yc()), $833559fe574b4225$var$Ck;
    a = $833559fe574b4225$var$C;
    if (0 !== a) return a;
    a = window.event;
    a = void 0 === a ? 16 : $833559fe574b4225$var$jd(a.type);
    return a;
}
function $833559fe574b4225$var$mh(a, b, c, d) {
    if (50 < $833559fe574b4225$var$zk) throw $833559fe574b4225$var$zk = 0, $833559fe574b4225$var$Ak = null, Error($833559fe574b4225$var$p(185));
    $833559fe574b4225$var$Ac(a, c, d);
    if (0 === ($833559fe574b4225$var$K & 2) || a !== $833559fe574b4225$var$R) a === $833559fe574b4225$var$R && (0 === ($833559fe574b4225$var$K & 2) && ($833559fe574b4225$var$rk |= c), 4 === $833559fe574b4225$var$T && $833559fe574b4225$var$Dk(a, $833559fe574b4225$var$Z)), $833559fe574b4225$var$Ek(a, d), 1 === c && 0 === $833559fe574b4225$var$K && 0 === (b.mode & 1) && ($833559fe574b4225$var$Hj = $833559fe574b4225$var$B() + 500, $833559fe574b4225$var$fg && $833559fe574b4225$var$jg());
}
function $833559fe574b4225$var$Ek(a, b) {
    var c = a.callbackNode;
    $833559fe574b4225$var$wc(a, b);
    var d = $833559fe574b4225$var$uc(a, a === $833559fe574b4225$var$R ? $833559fe574b4225$var$Z : 0);
    if (0 === d) null !== c && $833559fe574b4225$var$bc(c), a.callbackNode = null, a.callbackPriority = 0;
    else if (b = d & -d, a.callbackPriority !== b) {
        null != c && $833559fe574b4225$var$bc(c);
        if (1 === b) 0 === a.tag ? $833559fe574b4225$var$ig($833559fe574b4225$var$Fk.bind(null, a)) : $833559fe574b4225$var$hg($833559fe574b4225$var$Fk.bind(null, a)), $833559fe574b4225$var$Jf(function() {
            0 === ($833559fe574b4225$var$K & 6) && $833559fe574b4225$var$jg();
        }), c = null;
        else {
            switch($833559fe574b4225$var$Dc(d)){
                case 1:
                    c = $833559fe574b4225$var$fc;
                    break;
                case 4:
                    c = $833559fe574b4225$var$gc;
                    break;
                case 16:
                    c = $833559fe574b4225$var$hc;
                    break;
                case 536870912:
                    c = $833559fe574b4225$var$jc;
                    break;
                default:
                    c = $833559fe574b4225$var$hc;
            }
            c = $833559fe574b4225$var$Gk(c, $833559fe574b4225$var$Hk.bind(null, a));
        }
        a.callbackPriority = b;
        a.callbackNode = c;
    }
}
function $833559fe574b4225$var$Hk(a, b) {
    $833559fe574b4225$var$Bk = -1;
    $833559fe574b4225$var$Ck = 0;
    if (0 !== ($833559fe574b4225$var$K & 6)) throw Error($833559fe574b4225$var$p(327));
    var c = a.callbackNode;
    if ($833559fe574b4225$var$Ik() && a.callbackNode !== c) return null;
    var d = $833559fe574b4225$var$uc(a, a === $833559fe574b4225$var$R ? $833559fe574b4225$var$Z : 0);
    if (0 === d) return null;
    if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b) b = $833559fe574b4225$var$Jk(a, d);
    else {
        b = d;
        var e = $833559fe574b4225$var$K;
        $833559fe574b4225$var$K |= 2;
        var f = $833559fe574b4225$var$Kk();
        if ($833559fe574b4225$var$R !== a || $833559fe574b4225$var$Z !== b) $833559fe574b4225$var$vk = null, $833559fe574b4225$var$Hj = $833559fe574b4225$var$B() + 500, $833559fe574b4225$var$Lk(a, b);
        for(;;)try {
            $833559fe574b4225$var$Mk();
            break;
        } catch (h) {
            $833559fe574b4225$var$Nk(a, h);
        }
        $833559fe574b4225$var$Qg();
        $833559fe574b4225$var$nk.current = f;
        $833559fe574b4225$var$K = e;
        null !== $833559fe574b4225$var$Y ? b = 0 : ($833559fe574b4225$var$R = null, $833559fe574b4225$var$Z = 0, b = $833559fe574b4225$var$T);
    }
    if (0 !== b) {
        2 === b && (e = $833559fe574b4225$var$xc(a), 0 !== e && (d = e, b = $833559fe574b4225$var$Ok(a, e)));
        if (1 === b) throw c = $833559fe574b4225$var$qk, $833559fe574b4225$var$Lk(a, 0), $833559fe574b4225$var$Dk(a, d), $833559fe574b4225$var$Ek(a, $833559fe574b4225$var$B()), c;
        if (6 === b) $833559fe574b4225$var$Dk(a, d);
        else {
            e = a.current.alternate;
            if (0 === (d & 30) && !$833559fe574b4225$var$Pk(e) && (b = $833559fe574b4225$var$Jk(a, d), 2 === b && (f = $833559fe574b4225$var$xc(a), 0 !== f && (d = f, b = $833559fe574b4225$var$Ok(a, f))), 1 === b)) throw c = $833559fe574b4225$var$qk, $833559fe574b4225$var$Lk(a, 0), $833559fe574b4225$var$Dk(a, d), $833559fe574b4225$var$Ek(a, $833559fe574b4225$var$B()), c;
            a.finishedWork = e;
            a.finishedLanes = d;
            switch(b){
                case 0:
                case 1:
                    throw Error($833559fe574b4225$var$p(345));
                case 2:
                    $833559fe574b4225$var$Qk(a, $833559fe574b4225$var$uk, $833559fe574b4225$var$vk);
                    break;
                case 3:
                    $833559fe574b4225$var$Dk(a, d);
                    if ((d & 130023424) === d && (b = $833559fe574b4225$var$gk + 500 - $833559fe574b4225$var$B(), 10 < b)) {
                        if (0 !== $833559fe574b4225$var$uc(a, 0)) break;
                        e = a.suspendedLanes;
                        if ((e & d) !== d) {
                            $833559fe574b4225$var$L();
                            a.pingedLanes |= a.suspendedLanes & e;
                            break;
                        }
                        a.timeoutHandle = $833559fe574b4225$var$Ff($833559fe574b4225$var$Qk.bind(null, a, $833559fe574b4225$var$uk, $833559fe574b4225$var$vk), b);
                        break;
                    }
                    $833559fe574b4225$var$Qk(a, $833559fe574b4225$var$uk, $833559fe574b4225$var$vk);
                    break;
                case 4:
                    $833559fe574b4225$var$Dk(a, d);
                    if ((d & 4194240) === d) break;
                    b = a.eventTimes;
                    for(e = -1; 0 < d;){
                        var g = 31 - $833559fe574b4225$var$oc(d);
                        f = 1 << g;
                        g = b[g];
                        g > e && (e = g);
                        d &= ~f;
                    }
                    d = e;
                    d = $833559fe574b4225$var$B() - d;
                    d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3E3 > d ? 3E3 : 4320 > d ? 4320 : 1960 * $833559fe574b4225$var$mk(d / 1960)) - d;
                    if (10 < d) {
                        a.timeoutHandle = $833559fe574b4225$var$Ff($833559fe574b4225$var$Qk.bind(null, a, $833559fe574b4225$var$uk, $833559fe574b4225$var$vk), d);
                        break;
                    }
                    $833559fe574b4225$var$Qk(a, $833559fe574b4225$var$uk, $833559fe574b4225$var$vk);
                    break;
                case 5:
                    $833559fe574b4225$var$Qk(a, $833559fe574b4225$var$uk, $833559fe574b4225$var$vk);
                    break;
                default:
                    throw Error($833559fe574b4225$var$p(329));
            }
        }
    }
    $833559fe574b4225$var$Ek(a, $833559fe574b4225$var$B());
    return a.callbackNode === c ? $833559fe574b4225$var$Hk.bind(null, a) : null;
}
function $833559fe574b4225$var$Ok(a, b) {
    var c = $833559fe574b4225$var$tk;
    a.current.memoizedState.isDehydrated && ($833559fe574b4225$var$Lk(a, b).flags |= 256);
    a = $833559fe574b4225$var$Jk(a, b);
    2 !== a && (b = $833559fe574b4225$var$uk, $833559fe574b4225$var$uk = c, null !== b && $833559fe574b4225$var$Gj(b));
    return a;
}
function $833559fe574b4225$var$Gj(a) {
    null === $833559fe574b4225$var$uk ? $833559fe574b4225$var$uk = a : $833559fe574b4225$var$uk.push.apply($833559fe574b4225$var$uk, a);
}
function $833559fe574b4225$var$Pk(a) {
    for(var b = a;;){
        if (b.flags & 16384) {
            var c = b.updateQueue;
            if (null !== c && (c = c.stores, null !== c)) for(var d = 0; d < c.length; d++){
                var e = c[d], f = e.getSnapshot;
                e = e.value;
                try {
                    if (!$833559fe574b4225$var$He(f(), e)) return !1;
                } catch (g) {
                    return !1;
                }
            }
        }
        c = b.child;
        if (b.subtreeFlags & 16384 && null !== c) c.return = b, b = c;
        else {
            if (b === a) break;
            for(; null === b.sibling;){
                if (null === b.return || b.return === a) return !0;
                b = b.return;
            }
            b.sibling.return = b.return;
            b = b.sibling;
        }
    }
    return !0;
}
function $833559fe574b4225$var$Dk(a, b) {
    b &= ~$833559fe574b4225$var$sk;
    b &= ~$833559fe574b4225$var$rk;
    a.suspendedLanes |= b;
    a.pingedLanes &= ~b;
    for(a = a.expirationTimes; 0 < b;){
        var c = 31 - $833559fe574b4225$var$oc(b), d = 1 << c;
        a[c] = -1;
        b &= ~d;
    }
}
function $833559fe574b4225$var$Fk(a) {
    if (0 !== ($833559fe574b4225$var$K & 6)) throw Error($833559fe574b4225$var$p(327));
    $833559fe574b4225$var$Ik();
    var b = $833559fe574b4225$var$uc(a, 0);
    if (0 === (b & 1)) return $833559fe574b4225$var$Ek(a, $833559fe574b4225$var$B()), null;
    var c = $833559fe574b4225$var$Jk(a, b);
    if (0 !== a.tag && 2 === c) {
        var d = $833559fe574b4225$var$xc(a);
        0 !== d && (b = d, c = $833559fe574b4225$var$Ok(a, d));
    }
    if (1 === c) throw c = $833559fe574b4225$var$qk, $833559fe574b4225$var$Lk(a, 0), $833559fe574b4225$var$Dk(a, b), $833559fe574b4225$var$Ek(a, $833559fe574b4225$var$B()), c;
    if (6 === c) throw Error($833559fe574b4225$var$p(345));
    a.finishedWork = a.current.alternate;
    a.finishedLanes = b;
    $833559fe574b4225$var$Qk(a, $833559fe574b4225$var$uk, $833559fe574b4225$var$vk);
    $833559fe574b4225$var$Ek(a, $833559fe574b4225$var$B());
    return null;
}
function $833559fe574b4225$var$Rk(a, b) {
    var c = $833559fe574b4225$var$K;
    $833559fe574b4225$var$K |= 1;
    try {
        return a(b);
    } finally{
        $833559fe574b4225$var$K = c, 0 === $833559fe574b4225$var$K && ($833559fe574b4225$var$Hj = $833559fe574b4225$var$B() + 500, $833559fe574b4225$var$fg && $833559fe574b4225$var$jg());
    }
}
function $833559fe574b4225$var$Sk(a) {
    null !== $833559fe574b4225$var$xk && 0 === $833559fe574b4225$var$xk.tag && 0 === ($833559fe574b4225$var$K & 6) && $833559fe574b4225$var$Ik();
    var b = $833559fe574b4225$var$K;
    $833559fe574b4225$var$K |= 1;
    var c = $833559fe574b4225$var$pk.transition, d = $833559fe574b4225$var$C;
    try {
        if ($833559fe574b4225$var$pk.transition = null, $833559fe574b4225$var$C = 1, a) return a();
    } finally{
        $833559fe574b4225$var$C = d, $833559fe574b4225$var$pk.transition = c, $833559fe574b4225$var$K = b, 0 === ($833559fe574b4225$var$K & 6) && $833559fe574b4225$var$jg();
    }
}
function $833559fe574b4225$var$Ij() {
    $833559fe574b4225$var$gj = $833559fe574b4225$var$fj.current;
    $833559fe574b4225$var$E($833559fe574b4225$var$fj);
}
function $833559fe574b4225$var$Lk(a, b) {
    a.finishedWork = null;
    a.finishedLanes = 0;
    var c = a.timeoutHandle;
    -1 !== c && (a.timeoutHandle = -1, $833559fe574b4225$var$Gf(c));
    if (null !== $833559fe574b4225$var$Y) for(c = $833559fe574b4225$var$Y.return; null !== c;){
        var d = c;
        $833559fe574b4225$var$wg(d);
        switch(d.tag){
            case 1:
                d = d.type.childContextTypes;
                null !== d && void 0 !== d && $833559fe574b4225$var$$f();
                break;
            case 3:
                $833559fe574b4225$var$Jh();
                $833559fe574b4225$var$E($833559fe574b4225$var$Wf);
                $833559fe574b4225$var$E($833559fe574b4225$var$H);
                $833559fe574b4225$var$Oh();
                break;
            case 5:
                $833559fe574b4225$var$Lh(d);
                break;
            case 4:
                $833559fe574b4225$var$Jh();
                break;
            case 13:
                $833559fe574b4225$var$E($833559fe574b4225$var$M);
                break;
            case 19:
                $833559fe574b4225$var$E($833559fe574b4225$var$M);
                break;
            case 10:
                $833559fe574b4225$var$Rg(d.type._context);
                break;
            case 22:
            case 23:
                $833559fe574b4225$var$Ij();
        }
        c = c.return;
    }
    $833559fe574b4225$var$R = a;
    $833559fe574b4225$var$Y = a = $833559fe574b4225$var$wh(a.current, null);
    $833559fe574b4225$var$Z = $833559fe574b4225$var$gj = b;
    $833559fe574b4225$var$T = 0;
    $833559fe574b4225$var$qk = null;
    $833559fe574b4225$var$sk = $833559fe574b4225$var$rk = $833559fe574b4225$var$hh = 0;
    $833559fe574b4225$var$uk = $833559fe574b4225$var$tk = null;
    if (null !== $833559fe574b4225$var$Wg) {
        for(b = 0; b < $833559fe574b4225$var$Wg.length; b++)if (c = $833559fe574b4225$var$Wg[b], d = c.interleaved, null !== d) {
            c.interleaved = null;
            var e = d.next, f = c.pending;
            if (null !== f) {
                var g = f.next;
                f.next = e;
                d.next = g;
            }
            c.pending = d;
        }
        $833559fe574b4225$var$Wg = null;
    }
    return a;
}
function $833559fe574b4225$var$Nk(a, b) {
    do {
        var c = $833559fe574b4225$var$Y;
        try {
            $833559fe574b4225$var$Qg();
            $833559fe574b4225$var$Ph.current = $833559fe574b4225$var$ai;
            if ($833559fe574b4225$var$Sh) {
                for(var d = $833559fe574b4225$var$N.memoizedState; null !== d;){
                    var e = d.queue;
                    null !== e && (e.pending = null);
                    d = d.next;
                }
                $833559fe574b4225$var$Sh = !1;
            }
            $833559fe574b4225$var$Rh = 0;
            $833559fe574b4225$var$P = $833559fe574b4225$var$O = $833559fe574b4225$var$N = null;
            $833559fe574b4225$var$Th = !1;
            $833559fe574b4225$var$Uh = 0;
            $833559fe574b4225$var$ok.current = null;
            if (null === c || null === c.return) {
                $833559fe574b4225$var$T = 1;
                $833559fe574b4225$var$qk = b;
                $833559fe574b4225$var$Y = null;
                break;
            }
            a: {
                var f = a, g = c.return, h = c, k = b;
                b = $833559fe574b4225$var$Z;
                h.flags |= 32768;
                if (null !== k && "object" === typeof k && "function" === typeof k.then) {
                    var l = k, m = h, q = m.tag;
                    if (0 === (m.mode & 1) && (0 === q || 11 === q || 15 === q)) {
                        var r = m.alternate;
                        r ? (m.updateQueue = r.updateQueue, m.memoizedState = r.memoizedState, m.lanes = r.lanes) : (m.updateQueue = null, m.memoizedState = null);
                    }
                    var y = $833559fe574b4225$var$Vi(g);
                    if (null !== y) {
                        y.flags &= -257;
                        $833559fe574b4225$var$Wi(y, g, h, f, b);
                        y.mode & 1 && $833559fe574b4225$var$Ti(f, l, b);
                        b = y;
                        k = l;
                        var n = b.updateQueue;
                        if (null === n) {
                            var t = new Set;
                            t.add(k);
                            b.updateQueue = t;
                        } else n.add(k);
                        break a;
                    } else {
                        if (0 === (b & 1)) {
                            $833559fe574b4225$var$Ti(f, l, b);
                            $833559fe574b4225$var$uj();
                            break a;
                        }
                        k = Error($833559fe574b4225$var$p(426));
                    }
                } else if ($833559fe574b4225$var$I && h.mode & 1) {
                    var J = $833559fe574b4225$var$Vi(g);
                    if (null !== J) {
                        0 === (J.flags & 65536) && (J.flags |= 256);
                        $833559fe574b4225$var$Wi(J, g, h, f, b);
                        $833559fe574b4225$var$Jg($833559fe574b4225$var$Ki(k, h));
                        break a;
                    }
                }
                f = k = $833559fe574b4225$var$Ki(k, h);
                4 !== $833559fe574b4225$var$T && ($833559fe574b4225$var$T = 2);
                null === $833559fe574b4225$var$tk ? $833559fe574b4225$var$tk = [
                    f
                ] : $833559fe574b4225$var$tk.push(f);
                f = g;
                do {
                    switch(f.tag){
                        case 3:
                            f.flags |= 65536;
                            b &= -b;
                            f.lanes |= b;
                            var x = $833559fe574b4225$var$Oi(f, k, b);
                            $833559fe574b4225$var$fh(f, x);
                            break a;
                        case 1:
                            h = k;
                            var w = f.type, u = f.stateNode;
                            if (0 === (f.flags & 128) && ("function" === typeof w.getDerivedStateFromError || null !== u && "function" === typeof u.componentDidCatch && (null === $833559fe574b4225$var$Si || !$833559fe574b4225$var$Si.has(u)))) {
                                f.flags |= 65536;
                                b &= -b;
                                f.lanes |= b;
                                var F = $833559fe574b4225$var$Ri(f, h, b);
                                $833559fe574b4225$var$fh(f, F);
                                break a;
                            }
                    }
                    f = f.return;
                }while (null !== f);
            }
            $833559fe574b4225$var$Tk(c);
        } catch (na) {
            b = na;
            $833559fe574b4225$var$Y === c && null !== c && ($833559fe574b4225$var$Y = c = c.return);
            continue;
        }
        break;
    }while (1);
}
function $833559fe574b4225$var$Kk() {
    var a = $833559fe574b4225$var$nk.current;
    $833559fe574b4225$var$nk.current = $833559fe574b4225$var$ai;
    return null === a ? $833559fe574b4225$var$ai : a;
}
function $833559fe574b4225$var$uj() {
    if (0 === $833559fe574b4225$var$T || 3 === $833559fe574b4225$var$T || 2 === $833559fe574b4225$var$T) $833559fe574b4225$var$T = 4;
    null === $833559fe574b4225$var$R || 0 === ($833559fe574b4225$var$hh & 268435455) && 0 === ($833559fe574b4225$var$rk & 268435455) || $833559fe574b4225$var$Dk($833559fe574b4225$var$R, $833559fe574b4225$var$Z);
}
function $833559fe574b4225$var$Jk(a, b) {
    var c = $833559fe574b4225$var$K;
    $833559fe574b4225$var$K |= 2;
    var d = $833559fe574b4225$var$Kk();
    if ($833559fe574b4225$var$R !== a || $833559fe574b4225$var$Z !== b) $833559fe574b4225$var$vk = null, $833559fe574b4225$var$Lk(a, b);
    for(;;)try {
        $833559fe574b4225$var$Uk();
        break;
    } catch (e) {
        $833559fe574b4225$var$Nk(a, e);
    }
    $833559fe574b4225$var$Qg();
    $833559fe574b4225$var$K = c;
    $833559fe574b4225$var$nk.current = d;
    if (null !== $833559fe574b4225$var$Y) throw Error($833559fe574b4225$var$p(261));
    $833559fe574b4225$var$R = null;
    $833559fe574b4225$var$Z = 0;
    return $833559fe574b4225$var$T;
}
function $833559fe574b4225$var$Uk() {
    for(; null !== $833559fe574b4225$var$Y;)$833559fe574b4225$var$Vk($833559fe574b4225$var$Y);
}
function $833559fe574b4225$var$Mk() {
    for(; null !== $833559fe574b4225$var$Y && !$833559fe574b4225$var$cc();)$833559fe574b4225$var$Vk($833559fe574b4225$var$Y);
}
function $833559fe574b4225$var$Vk(a) {
    var b = $833559fe574b4225$var$Wk(a.alternate, a, $833559fe574b4225$var$gj);
    a.memoizedProps = a.pendingProps;
    null === b ? $833559fe574b4225$var$Tk(a) : $833559fe574b4225$var$Y = b;
    $833559fe574b4225$var$ok.current = null;
}
function $833559fe574b4225$var$Tk(a) {
    var b = a;
    do {
        var c = b.alternate;
        a = b.return;
        if (0 === (b.flags & 32768)) {
            if (c = $833559fe574b4225$var$Fj(c, b, $833559fe574b4225$var$gj), null !== c) {
                $833559fe574b4225$var$Y = c;
                return;
            }
        } else {
            c = $833559fe574b4225$var$Jj(c, b);
            if (null !== c) {
                c.flags &= 32767;
                $833559fe574b4225$var$Y = c;
                return;
            }
            if (null !== a) a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
            else {
                $833559fe574b4225$var$T = 6;
                $833559fe574b4225$var$Y = null;
                return;
            }
        }
        b = b.sibling;
        if (null !== b) {
            $833559fe574b4225$var$Y = b;
            return;
        }
        $833559fe574b4225$var$Y = b = a;
    }while (null !== b);
    0 === $833559fe574b4225$var$T && ($833559fe574b4225$var$T = 5);
}
function $833559fe574b4225$var$Qk(a, b, c) {
    var d = $833559fe574b4225$var$C, e = $833559fe574b4225$var$pk.transition;
    try {
        $833559fe574b4225$var$pk.transition = null, $833559fe574b4225$var$C = 1, $833559fe574b4225$var$Xk(a, b, c, d);
    } finally{
        $833559fe574b4225$var$pk.transition = e, $833559fe574b4225$var$C = d;
    }
    return null;
}
function $833559fe574b4225$var$Xk(a, b, c, d) {
    do $833559fe574b4225$var$Ik();
    while (null !== $833559fe574b4225$var$xk);
    if (0 !== ($833559fe574b4225$var$K & 6)) throw Error($833559fe574b4225$var$p(327));
    c = a.finishedWork;
    var e = a.finishedLanes;
    if (null === c) return null;
    a.finishedWork = null;
    a.finishedLanes = 0;
    if (c === a.current) throw Error($833559fe574b4225$var$p(177));
    a.callbackNode = null;
    a.callbackPriority = 0;
    var f = c.lanes | c.childLanes;
    $833559fe574b4225$var$Bc(a, f);
    a === $833559fe574b4225$var$R && ($833559fe574b4225$var$Y = $833559fe574b4225$var$R = null, $833559fe574b4225$var$Z = 0);
    0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || $833559fe574b4225$var$wk || ($833559fe574b4225$var$wk = !0, $833559fe574b4225$var$Gk($833559fe574b4225$var$hc, function() {
        $833559fe574b4225$var$Ik();
        return null;
    }));
    f = 0 !== (c.flags & 15990);
    if (0 !== (c.subtreeFlags & 15990) || f) {
        f = $833559fe574b4225$var$pk.transition;
        $833559fe574b4225$var$pk.transition = null;
        var g = $833559fe574b4225$var$C;
        $833559fe574b4225$var$C = 1;
        var h = $833559fe574b4225$var$K;
        $833559fe574b4225$var$K |= 4;
        $833559fe574b4225$var$ok.current = null;
        $833559fe574b4225$var$Pj(a, c);
        $833559fe574b4225$var$ek(c, a);
        $833559fe574b4225$var$Oe($833559fe574b4225$var$Df);
        $833559fe574b4225$var$dd = !!$833559fe574b4225$var$Cf;
        $833559fe574b4225$var$Df = $833559fe574b4225$var$Cf = null;
        a.current = c;
        $833559fe574b4225$var$ik(c, a, e);
        $833559fe574b4225$var$dc();
        $833559fe574b4225$var$K = h;
        $833559fe574b4225$var$C = g;
        $833559fe574b4225$var$pk.transition = f;
    } else a.current = c;
    $833559fe574b4225$var$wk && ($833559fe574b4225$var$wk = !1, $833559fe574b4225$var$xk = a, $833559fe574b4225$var$yk = e);
    f = a.pendingLanes;
    0 === f && ($833559fe574b4225$var$Si = null);
    $833559fe574b4225$var$mc(c.stateNode, d);
    $833559fe574b4225$var$Ek(a, $833559fe574b4225$var$B());
    if (null !== b) for(d = a.onRecoverableError, c = 0; c < b.length; c++)e = b[c], d(e.value, {
        componentStack: e.stack,
        digest: e.digest
    });
    if ($833559fe574b4225$var$Pi) throw $833559fe574b4225$var$Pi = !1, a = $833559fe574b4225$var$Qi, $833559fe574b4225$var$Qi = null, a;
    0 !== ($833559fe574b4225$var$yk & 1) && 0 !== a.tag && $833559fe574b4225$var$Ik();
    f = a.pendingLanes;
    0 !== (f & 1) ? a === $833559fe574b4225$var$Ak ? $833559fe574b4225$var$zk++ : ($833559fe574b4225$var$zk = 0, $833559fe574b4225$var$Ak = a) : $833559fe574b4225$var$zk = 0;
    $833559fe574b4225$var$jg();
    return null;
}
function $833559fe574b4225$var$Ik() {
    if (null !== $833559fe574b4225$var$xk) {
        var a = $833559fe574b4225$var$Dc($833559fe574b4225$var$yk), b = $833559fe574b4225$var$pk.transition, c = $833559fe574b4225$var$C;
        try {
            $833559fe574b4225$var$pk.transition = null;
            $833559fe574b4225$var$C = 16 > a ? 16 : a;
            if (null === $833559fe574b4225$var$xk) var d = !1;
            else {
                a = $833559fe574b4225$var$xk;
                $833559fe574b4225$var$xk = null;
                $833559fe574b4225$var$yk = 0;
                if (0 !== ($833559fe574b4225$var$K & 6)) throw Error($833559fe574b4225$var$p(331));
                var e = $833559fe574b4225$var$K;
                $833559fe574b4225$var$K |= 4;
                for($833559fe574b4225$var$V = a.current; null !== $833559fe574b4225$var$V;){
                    var f = $833559fe574b4225$var$V, g = f.child;
                    if (0 !== ($833559fe574b4225$var$V.flags & 16)) {
                        var h = f.deletions;
                        if (null !== h) {
                            for(var k = 0; k < h.length; k++){
                                var l = h[k];
                                for($833559fe574b4225$var$V = l; null !== $833559fe574b4225$var$V;){
                                    var m = $833559fe574b4225$var$V;
                                    switch(m.tag){
                                        case 0:
                                        case 11:
                                        case 15:
                                            $833559fe574b4225$var$Qj(8, m, f);
                                    }
                                    var q = m.child;
                                    if (null !== q) q.return = m, $833559fe574b4225$var$V = q;
                                    else for(; null !== $833559fe574b4225$var$V;){
                                        m = $833559fe574b4225$var$V;
                                        var r = m.sibling, y = m.return;
                                        $833559fe574b4225$var$Tj(m);
                                        if (m === l) {
                                            $833559fe574b4225$var$V = null;
                                            break;
                                        }
                                        if (null !== r) {
                                            r.return = y;
                                            $833559fe574b4225$var$V = r;
                                            break;
                                        }
                                        $833559fe574b4225$var$V = y;
                                    }
                                }
                            }
                            var n = f.alternate;
                            if (null !== n) {
                                var t = n.child;
                                if (null !== t) {
                                    n.child = null;
                                    do {
                                        var J = t.sibling;
                                        t.sibling = null;
                                        t = J;
                                    }while (null !== t);
                                }
                            }
                            $833559fe574b4225$var$V = f;
                        }
                    }
                    if (0 !== (f.subtreeFlags & 2064) && null !== g) g.return = f, $833559fe574b4225$var$V = g;
                    else b: for(; null !== $833559fe574b4225$var$V;){
                        f = $833559fe574b4225$var$V;
                        if (0 !== (f.flags & 2048)) switch(f.tag){
                            case 0:
                            case 11:
                            case 15:
                                $833559fe574b4225$var$Qj(9, f, f.return);
                        }
                        var x = f.sibling;
                        if (null !== x) {
                            x.return = f.return;
                            $833559fe574b4225$var$V = x;
                            break b;
                        }
                        $833559fe574b4225$var$V = f.return;
                    }
                }
                var w = a.current;
                for($833559fe574b4225$var$V = w; null !== $833559fe574b4225$var$V;){
                    g = $833559fe574b4225$var$V;
                    var u = g.child;
                    if (0 !== (g.subtreeFlags & 2064) && null !== u) u.return = g, $833559fe574b4225$var$V = u;
                    else b: for(g = w; null !== $833559fe574b4225$var$V;){
                        h = $833559fe574b4225$var$V;
                        if (0 !== (h.flags & 2048)) try {
                            switch(h.tag){
                                case 0:
                                case 11:
                                case 15:
                                    $833559fe574b4225$var$Rj(9, h);
                            }
                        } catch (na) {
                            $833559fe574b4225$var$W(h, h.return, na);
                        }
                        if (h === g) {
                            $833559fe574b4225$var$V = null;
                            break b;
                        }
                        var F = h.sibling;
                        if (null !== F) {
                            F.return = h.return;
                            $833559fe574b4225$var$V = F;
                            break b;
                        }
                        $833559fe574b4225$var$V = h.return;
                    }
                }
                $833559fe574b4225$var$K = e;
                $833559fe574b4225$var$jg();
                if ($833559fe574b4225$var$lc && "function" === typeof $833559fe574b4225$var$lc.onPostCommitFiberRoot) try {
                    $833559fe574b4225$var$lc.onPostCommitFiberRoot($833559fe574b4225$var$kc, a);
                } catch (na) {}
                d = !0;
            }
            return d;
        } finally{
            $833559fe574b4225$var$C = c, $833559fe574b4225$var$pk.transition = b;
        }
    }
    return !1;
}
function $833559fe574b4225$var$Yk(a, b, c) {
    b = $833559fe574b4225$var$Ki(c, b);
    b = $833559fe574b4225$var$Oi(a, b, 1);
    a = $833559fe574b4225$var$dh(a, b, 1);
    b = $833559fe574b4225$var$L();
    null !== a && ($833559fe574b4225$var$Ac(a, 1, b), $833559fe574b4225$var$Ek(a, b));
}
function $833559fe574b4225$var$W(a, b, c) {
    if (3 === a.tag) $833559fe574b4225$var$Yk(a, a, c);
    else for(; null !== b;){
        if (3 === b.tag) {
            $833559fe574b4225$var$Yk(b, a, c);
            break;
        } else if (1 === b.tag) {
            var d = b.stateNode;
            if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === $833559fe574b4225$var$Si || !$833559fe574b4225$var$Si.has(d))) {
                a = $833559fe574b4225$var$Ki(c, a);
                a = $833559fe574b4225$var$Ri(b, a, 1);
                b = $833559fe574b4225$var$dh(b, a, 1);
                a = $833559fe574b4225$var$L();
                null !== b && ($833559fe574b4225$var$Ac(b, 1, a), $833559fe574b4225$var$Ek(b, a));
                break;
            }
        }
        b = b.return;
    }
}
function $833559fe574b4225$var$Ui(a, b, c) {
    var d = a.pingCache;
    null !== d && d.delete(b);
    b = $833559fe574b4225$var$L();
    a.pingedLanes |= a.suspendedLanes & c;
    $833559fe574b4225$var$R === a && ($833559fe574b4225$var$Z & c) === c && (4 === $833559fe574b4225$var$T || 3 === $833559fe574b4225$var$T && ($833559fe574b4225$var$Z & 130023424) === $833559fe574b4225$var$Z && 500 > $833559fe574b4225$var$B() - $833559fe574b4225$var$gk ? $833559fe574b4225$var$Lk(a, 0) : $833559fe574b4225$var$sk |= c);
    $833559fe574b4225$var$Ek(a, b);
}
function $833559fe574b4225$var$Zk(a, b) {
    0 === b && (0 === (a.mode & 1) ? b = 1 : (b = $833559fe574b4225$var$sc, $833559fe574b4225$var$sc <<= 1, 0 === ($833559fe574b4225$var$sc & 130023424) && ($833559fe574b4225$var$sc = 4194304)));
    var c = $833559fe574b4225$var$L();
    a = $833559fe574b4225$var$Zg(a, b);
    null !== a && ($833559fe574b4225$var$Ac(a, b, c), $833559fe574b4225$var$Ek(a, c));
}
function $833559fe574b4225$var$vj(a) {
    var b = a.memoizedState, c = 0;
    null !== b && (c = b.retryLane);
    $833559fe574b4225$var$Zk(a, c);
}
function $833559fe574b4225$var$ck(a, b) {
    var c = 0;
    switch(a.tag){
        case 13:
            var d = a.stateNode;
            var e = a.memoizedState;
            null !== e && (c = e.retryLane);
            break;
        case 19:
            d = a.stateNode;
            break;
        default:
            throw Error($833559fe574b4225$var$p(314));
    }
    null !== d && d.delete(b);
    $833559fe574b4225$var$Zk(a, c);
}
var $833559fe574b4225$var$Wk;
$833559fe574b4225$var$Wk = function(a, b, c) {
    if (null !== a) {
        if (a.memoizedProps !== b.pendingProps || $833559fe574b4225$var$Wf.current) $833559fe574b4225$var$Ug = !0;
        else {
            if (0 === (a.lanes & c) && 0 === (b.flags & 128)) return $833559fe574b4225$var$Ug = !1, $833559fe574b4225$var$zj(a, b, c);
            $833559fe574b4225$var$Ug = 0 !== (a.flags & 131072) ? !0 : !1;
        }
    } else $833559fe574b4225$var$Ug = !1, $833559fe574b4225$var$I && 0 !== (b.flags & 1048576) && $833559fe574b4225$var$ug(b, $833559fe574b4225$var$ng, b.index);
    b.lanes = 0;
    switch(b.tag){
        case 2:
            var d = b.type;
            $833559fe574b4225$var$jj(a, b);
            a = b.pendingProps;
            var e = $833559fe574b4225$var$Yf(b, $833559fe574b4225$var$H.current);
            $833559fe574b4225$var$Tg(b, c);
            e = $833559fe574b4225$var$Xh(null, b, d, a, e, c);
            var f = $833559fe574b4225$var$bi();
            b.flags |= 1;
            "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, $833559fe574b4225$var$Zf(d) ? (f = !0, $833559fe574b4225$var$cg(b)) : f = !1, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, $833559fe574b4225$var$ah(b), e.updater = $833559fe574b4225$var$nh, b.stateNode = e, e._reactInternals = b, $833559fe574b4225$var$rh(b, d, a, c), b = $833559fe574b4225$var$kj(null, b, d, !0, f, c)) : (b.tag = 0, $833559fe574b4225$var$I && f && $833559fe574b4225$var$vg(b), $833559fe574b4225$var$Yi(null, b, e, c), b = b.child);
            return b;
        case 16:
            d = b.elementType;
            a: {
                $833559fe574b4225$var$jj(a, b);
                a = b.pendingProps;
                e = d._init;
                d = e(d._payload);
                b.type = d;
                e = b.tag = $833559fe574b4225$var$$k(d);
                a = $833559fe574b4225$var$Lg(d, a);
                switch(e){
                    case 0:
                        b = $833559fe574b4225$var$dj(null, b, d, a, c);
                        break a;
                    case 1:
                        b = $833559fe574b4225$var$ij(null, b, d, a, c);
                        break a;
                    case 11:
                        b = $833559fe574b4225$var$Zi(null, b, d, a, c);
                        break a;
                    case 14:
                        b = $833559fe574b4225$var$aj(null, b, d, $833559fe574b4225$var$Lg(d.type, a), c);
                        break a;
                }
                throw Error($833559fe574b4225$var$p(306, d, ""));
            }
            return b;
        case 0:
            return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : $833559fe574b4225$var$Lg(d, e), $833559fe574b4225$var$dj(a, b, d, e, c);
        case 1:
            return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : $833559fe574b4225$var$Lg(d, e), $833559fe574b4225$var$ij(a, b, d, e, c);
        case 3:
            a: {
                $833559fe574b4225$var$lj(b);
                if (null === a) throw Error($833559fe574b4225$var$p(387));
                d = b.pendingProps;
                f = b.memoizedState;
                e = f.element;
                $833559fe574b4225$var$bh(a, b);
                $833559fe574b4225$var$gh(b, d, null, c);
                var g = b.memoizedState;
                d = g.element;
                if (f.isDehydrated) {
                    if (f = {
                        element: d,
                        isDehydrated: !1,
                        cache: g.cache,
                        pendingSuspenseBoundaries: g.pendingSuspenseBoundaries,
                        transitions: g.transitions
                    }, b.updateQueue.baseState = f, b.memoizedState = f, b.flags & 256) {
                        e = $833559fe574b4225$var$Ki(Error($833559fe574b4225$var$p(423)), b);
                        b = $833559fe574b4225$var$mj(a, b, d, c, e);
                        break a;
                    } else if (d !== e) {
                        e = $833559fe574b4225$var$Ki(Error($833559fe574b4225$var$p(424)), b);
                        b = $833559fe574b4225$var$mj(a, b, d, c, e);
                        break a;
                    } else for($833559fe574b4225$var$yg = $833559fe574b4225$var$Lf(b.stateNode.containerInfo.firstChild), $833559fe574b4225$var$xg = b, $833559fe574b4225$var$I = !0, $833559fe574b4225$var$zg = null, c = $833559fe574b4225$var$Ch(b, null, d, c), b.child = c; c;)c.flags = c.flags & -3 | 4096, c = c.sibling;
                } else {
                    $833559fe574b4225$var$Ig();
                    if (d === e) {
                        b = $833559fe574b4225$var$$i(a, b, c);
                        break a;
                    }
                    $833559fe574b4225$var$Yi(a, b, d, c);
                }
                b = b.child;
            }
            return b;
        case 5:
            return $833559fe574b4225$var$Kh(b), null === a && $833559fe574b4225$var$Eg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, $833559fe574b4225$var$Ef(d, e) ? g = null : null !== f && $833559fe574b4225$var$Ef(d, f) && (b.flags |= 32), $833559fe574b4225$var$hj(a, b), $833559fe574b4225$var$Yi(a, b, g, c), b.child;
        case 6:
            return null === a && $833559fe574b4225$var$Eg(b), null;
        case 13:
            return $833559fe574b4225$var$pj(a, b, c);
        case 4:
            return $833559fe574b4225$var$Ih(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = $833559fe574b4225$var$Bh(b, null, d, c) : $833559fe574b4225$var$Yi(a, b, d, c), b.child;
        case 11:
            return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : $833559fe574b4225$var$Lg(d, e), $833559fe574b4225$var$Zi(a, b, d, e, c);
        case 7:
            return $833559fe574b4225$var$Yi(a, b, b.pendingProps, c), b.child;
        case 8:
            return $833559fe574b4225$var$Yi(a, b, b.pendingProps.children, c), b.child;
        case 12:
            return $833559fe574b4225$var$Yi(a, b, b.pendingProps.children, c), b.child;
        case 10:
            a: {
                d = b.type._context;
                e = b.pendingProps;
                f = b.memoizedProps;
                g = e.value;
                $833559fe574b4225$var$G($833559fe574b4225$var$Mg, d._currentValue);
                d._currentValue = g;
                if (null !== f) {
                    if ($833559fe574b4225$var$He(f.value, g)) {
                        if (f.children === e.children && !$833559fe574b4225$var$Wf.current) {
                            b = $833559fe574b4225$var$$i(a, b, c);
                            break a;
                        }
                    } else for(f = b.child, null !== f && (f.return = b); null !== f;){
                        var h = f.dependencies;
                        if (null !== h) {
                            g = f.child;
                            for(var k = h.firstContext; null !== k;){
                                if (k.context === d) {
                                    if (1 === f.tag) {
                                        k = $833559fe574b4225$var$ch(-1, c & -c);
                                        k.tag = 2;
                                        var l = f.updateQueue;
                                        if (null !== l) {
                                            l = l.shared;
                                            var m = l.pending;
                                            null === m ? k.next = k : (k.next = m.next, m.next = k);
                                            l.pending = k;
                                        }
                                    }
                                    f.lanes |= c;
                                    k = f.alternate;
                                    null !== k && (k.lanes |= c);
                                    $833559fe574b4225$var$Sg(f.return, c, b);
                                    h.lanes |= c;
                                    break;
                                }
                                k = k.next;
                            }
                        } else if (10 === f.tag) g = f.type === b.type ? null : f.child;
                        else if (18 === f.tag) {
                            g = f.return;
                            if (null === g) throw Error($833559fe574b4225$var$p(341));
                            g.lanes |= c;
                            h = g.alternate;
                            null !== h && (h.lanes |= c);
                            $833559fe574b4225$var$Sg(g, c, b);
                            g = f.sibling;
                        } else g = f.child;
                        if (null !== g) g.return = f;
                        else for(g = f; null !== g;){
                            if (g === b) {
                                g = null;
                                break;
                            }
                            f = g.sibling;
                            if (null !== f) {
                                f.return = g.return;
                                g = f;
                                break;
                            }
                            g = g.return;
                        }
                        f = g;
                    }
                }
                $833559fe574b4225$var$Yi(a, b, e.children, c);
                b = b.child;
            }
            return b;
        case 9:
            return e = b.type, d = b.pendingProps.children, $833559fe574b4225$var$Tg(b, c), e = $833559fe574b4225$var$Vg(e), d = d(e), b.flags |= 1, $833559fe574b4225$var$Yi(a, b, d, c), b.child;
        case 14:
            return d = b.type, e = $833559fe574b4225$var$Lg(d, b.pendingProps), e = $833559fe574b4225$var$Lg(d.type, e), $833559fe574b4225$var$aj(a, b, d, e, c);
        case 15:
            return $833559fe574b4225$var$cj(a, b, b.type, b.pendingProps, c);
        case 17:
            return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : $833559fe574b4225$var$Lg(d, e), $833559fe574b4225$var$jj(a, b), b.tag = 1, $833559fe574b4225$var$Zf(d) ? (a = !0, $833559fe574b4225$var$cg(b)) : a = !1, $833559fe574b4225$var$Tg(b, c), $833559fe574b4225$var$ph(b, d, e), $833559fe574b4225$var$rh(b, d, e, c), $833559fe574b4225$var$kj(null, b, d, !0, a, c);
        case 19:
            return $833559fe574b4225$var$yj(a, b, c);
        case 22:
            return $833559fe574b4225$var$ej(a, b, c);
    }
    throw Error($833559fe574b4225$var$p(156, b.tag));
};
function $833559fe574b4225$var$Gk(a, b) {
    return $833559fe574b4225$var$ac(a, b);
}
function $833559fe574b4225$var$al(a, b, c, d) {
    this.tag = a;
    this.key = c;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = b;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = d;
    this.subtreeFlags = this.flags = 0;
    this.deletions = null;
    this.childLanes = this.lanes = 0;
    this.alternate = null;
}
function $833559fe574b4225$var$Bg(a, b, c, d) {
    return new $833559fe574b4225$var$al(a, b, c, d);
}
function $833559fe574b4225$var$bj(a) {
    a = a.prototype;
    return !(!a || !a.isReactComponent);
}
function $833559fe574b4225$var$$k(a) {
    if ("function" === typeof a) return $833559fe574b4225$var$bj(a) ? 1 : 0;
    if (void 0 !== a && null !== a) {
        a = a.$$typeof;
        if (a === $833559fe574b4225$var$Da) return 11;
        if (a === $833559fe574b4225$var$Ga) return 14;
    }
    return 2;
}
function $833559fe574b4225$var$wh(a, b) {
    var c = a.alternate;
    null === c ? (c = $833559fe574b4225$var$Bg(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);
    c.flags = a.flags & 14680064;
    c.childLanes = a.childLanes;
    c.lanes = a.lanes;
    c.child = a.child;
    c.memoizedProps = a.memoizedProps;
    c.memoizedState = a.memoizedState;
    c.updateQueue = a.updateQueue;
    b = a.dependencies;
    c.dependencies = null === b ? null : {
        lanes: b.lanes,
        firstContext: b.firstContext
    };
    c.sibling = a.sibling;
    c.index = a.index;
    c.ref = a.ref;
    return c;
}
function $833559fe574b4225$var$yh(a, b, c, d, e, f) {
    var g = 2;
    d = a;
    if ("function" === typeof a) $833559fe574b4225$var$bj(a) && (g = 1);
    else if ("string" === typeof a) g = 5;
    else a: switch(a){
        case $833559fe574b4225$var$ya:
            return $833559fe574b4225$var$Ah(c.children, e, f, b);
        case $833559fe574b4225$var$za:
            g = 8;
            e |= 8;
            break;
        case $833559fe574b4225$var$Aa:
            return a = $833559fe574b4225$var$Bg(12, c, b, e | 2), a.elementType = $833559fe574b4225$var$Aa, a.lanes = f, a;
        case $833559fe574b4225$var$Ea:
            return a = $833559fe574b4225$var$Bg(13, c, b, e), a.elementType = $833559fe574b4225$var$Ea, a.lanes = f, a;
        case $833559fe574b4225$var$Fa:
            return a = $833559fe574b4225$var$Bg(19, c, b, e), a.elementType = $833559fe574b4225$var$Fa, a.lanes = f, a;
        case $833559fe574b4225$var$Ia:
            return $833559fe574b4225$var$qj(c, e, f, b);
        default:
            if ("object" === typeof a && null !== a) switch(a.$$typeof){
                case $833559fe574b4225$var$Ba:
                    g = 10;
                    break a;
                case $833559fe574b4225$var$Ca:
                    g = 9;
                    break a;
                case $833559fe574b4225$var$Da:
                    g = 11;
                    break a;
                case $833559fe574b4225$var$Ga:
                    g = 14;
                    break a;
                case $833559fe574b4225$var$Ha:
                    g = 16;
                    d = null;
                    break a;
            }
            throw Error($833559fe574b4225$var$p(130, null == a ? a : typeof a, ""));
    }
    b = $833559fe574b4225$var$Bg(g, c, b, e);
    b.elementType = a;
    b.type = d;
    b.lanes = f;
    return b;
}
function $833559fe574b4225$var$Ah(a, b, c, d) {
    a = $833559fe574b4225$var$Bg(7, a, d, b);
    a.lanes = c;
    return a;
}
function $833559fe574b4225$var$qj(a, b, c, d) {
    a = $833559fe574b4225$var$Bg(22, a, d, b);
    a.elementType = $833559fe574b4225$var$Ia;
    a.lanes = c;
    a.stateNode = {
        isHidden: !1
    };
    return a;
}
function $833559fe574b4225$var$xh(a, b, c) {
    a = $833559fe574b4225$var$Bg(6, a, null, b);
    a.lanes = c;
    return a;
}
function $833559fe574b4225$var$zh(a, b, c) {
    b = $833559fe574b4225$var$Bg(4, null !== a.children ? a.children : [], a.key, b);
    b.lanes = c;
    b.stateNode = {
        containerInfo: a.containerInfo,
        pendingChildren: null,
        implementation: a.implementation
    };
    return b;
}
function $833559fe574b4225$var$bl(a, b, c, d, e) {
    this.tag = b;
    this.containerInfo = a;
    this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
    this.timeoutHandle = -1;
    this.callbackNode = this.pendingContext = this.context = null;
    this.callbackPriority = 0;
    this.eventTimes = $833559fe574b4225$var$zc(0);
    this.expirationTimes = $833559fe574b4225$var$zc(-1);
    this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
    this.entanglements = $833559fe574b4225$var$zc(0);
    this.identifierPrefix = d;
    this.onRecoverableError = e;
    this.mutableSourceEagerHydrationData = null;
}
function $833559fe574b4225$var$cl(a, b, c, d, e, f, g, h, k) {
    a = new $833559fe574b4225$var$bl(a, b, c, h, k);
    1 === b ? (b = 1, !0 === f && (b |= 8)) : b = 0;
    f = $833559fe574b4225$var$Bg(3, null, null, b);
    a.current = f;
    f.stateNode = a;
    f.memoizedState = {
        element: d,
        isDehydrated: c,
        cache: null,
        transitions: null,
        pendingSuspenseBoundaries: null
    };
    $833559fe574b4225$var$ah(f);
    return a;
}
function $833559fe574b4225$var$dl(a, b, c) {
    var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: $833559fe574b4225$var$wa,
        key: null == d ? null : "" + d,
        children: a,
        containerInfo: b,
        implementation: c
    };
}
function $833559fe574b4225$var$el(a) {
    if (!a) return $833559fe574b4225$var$Vf;
    a = a._reactInternals;
    a: {
        if ($833559fe574b4225$var$Vb(a) !== a || 1 !== a.tag) throw Error($833559fe574b4225$var$p(170));
        var b = a;
        do {
            switch(b.tag){
                case 3:
                    b = b.stateNode.context;
                    break a;
                case 1:
                    if ($833559fe574b4225$var$Zf(b.type)) {
                        b = b.stateNode.__reactInternalMemoizedMergedChildContext;
                        break a;
                    }
            }
            b = b.return;
        }while (null !== b);
        throw Error($833559fe574b4225$var$p(171));
    }
    if (1 === a.tag) {
        var c = a.type;
        if ($833559fe574b4225$var$Zf(c)) return $833559fe574b4225$var$bg(a, c, b);
    }
    return b;
}
function $833559fe574b4225$var$fl(a, b, c, d, e, f, g, h, k) {
    a = $833559fe574b4225$var$cl(c, d, !0, a, e, f, g, h, k);
    a.context = $833559fe574b4225$var$el(null);
    c = a.current;
    d = $833559fe574b4225$var$L();
    e = $833559fe574b4225$var$lh(c);
    f = $833559fe574b4225$var$ch(d, e);
    f.callback = void 0 !== b && null !== b ? b : null;
    $833559fe574b4225$var$dh(c, f, e);
    a.current.lanes = e;
    $833559fe574b4225$var$Ac(a, e, d);
    $833559fe574b4225$var$Ek(a, d);
    return a;
}
function $833559fe574b4225$var$gl(a, b, c, d) {
    var e = b.current, f = $833559fe574b4225$var$L(), g = $833559fe574b4225$var$lh(e);
    c = $833559fe574b4225$var$el(c);
    null === b.context ? b.context = c : b.pendingContext = c;
    b = $833559fe574b4225$var$ch(f, g);
    b.payload = {
        element: a
    };
    d = void 0 === d ? null : d;
    null !== d && (b.callback = d);
    a = $833559fe574b4225$var$dh(e, b, g);
    null !== a && ($833559fe574b4225$var$mh(a, e, g, f), $833559fe574b4225$var$eh(a, e, g));
    return g;
}
function $833559fe574b4225$var$hl(a) {
    a = a.current;
    if (!a.child) return null;
    switch(a.child.tag){
        case 5:
            return a.child.stateNode;
        default:
            return a.child.stateNode;
    }
}
function $833559fe574b4225$var$il(a, b) {
    a = a.memoizedState;
    if (null !== a && null !== a.dehydrated) {
        var c = a.retryLane;
        a.retryLane = 0 !== c && c < b ? c : b;
    }
}
function $833559fe574b4225$var$jl(a, b) {
    $833559fe574b4225$var$il(a, b);
    (a = a.alternate) && $833559fe574b4225$var$il(a, b);
}
function $833559fe574b4225$var$kl() {
    return null;
}
var $833559fe574b4225$var$ll = "function" === typeof reportError ? reportError : function(a) {
    console.error(a);
};
function $833559fe574b4225$var$ml(a) {
    this._internalRoot = a;
}
$833559fe574b4225$var$nl.prototype.render = $833559fe574b4225$var$ml.prototype.render = function(a) {
    var b = this._internalRoot;
    if (null === b) throw Error($833559fe574b4225$var$p(409));
    $833559fe574b4225$var$gl(a, b, null, null);
};
$833559fe574b4225$var$nl.prototype.unmount = $833559fe574b4225$var$ml.prototype.unmount = function() {
    var a = this._internalRoot;
    if (null !== a) {
        this._internalRoot = null;
        var b = a.containerInfo;
        $833559fe574b4225$var$Sk(function() {
            $833559fe574b4225$var$gl(null, a, null, null);
        });
        b[$833559fe574b4225$var$uf] = null;
    }
};
function $833559fe574b4225$var$nl(a) {
    this._internalRoot = a;
}
$833559fe574b4225$var$nl.prototype.unstable_scheduleHydration = function(a) {
    if (a) {
        var b = $833559fe574b4225$var$Hc();
        a = {
            blockedOn: null,
            target: a,
            priority: b
        };
        for(var c = 0; c < $833559fe574b4225$var$Qc.length && 0 !== b && b < $833559fe574b4225$var$Qc[c].priority; c++);
        $833559fe574b4225$var$Qc.splice(c, 0, a);
        0 === c && $833559fe574b4225$var$Vc(a);
    }
};
function $833559fe574b4225$var$ol(a) {
    return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function $833559fe574b4225$var$pl(a) {
    return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function $833559fe574b4225$var$ql() {}
function $833559fe574b4225$var$rl(a, b, c, d, e) {
    if (e) {
        if ("function" === typeof d) {
            var f = d;
            d = function() {
                var a = $833559fe574b4225$var$hl(g);
                f.call(a);
            };
        }
        var g = $833559fe574b4225$var$fl(b, d, a, 0, null, !1, !1, "", $833559fe574b4225$var$ql);
        a._reactRootContainer = g;
        a[$833559fe574b4225$var$uf] = g.current;
        $833559fe574b4225$var$sf(8 === a.nodeType ? a.parentNode : a);
        $833559fe574b4225$var$Sk();
        return g;
    }
    for(; e = a.lastChild;)a.removeChild(e);
    if ("function" === typeof d) {
        var h = d;
        d = function() {
            var a = $833559fe574b4225$var$hl(k);
            h.call(a);
        };
    }
    var k = $833559fe574b4225$var$cl(a, 0, !1, null, null, !1, !1, "", $833559fe574b4225$var$ql);
    a._reactRootContainer = k;
    a[$833559fe574b4225$var$uf] = k.current;
    $833559fe574b4225$var$sf(8 === a.nodeType ? a.parentNode : a);
    $833559fe574b4225$var$Sk(function() {
        $833559fe574b4225$var$gl(b, k, c, d);
    });
    return k;
}
function $833559fe574b4225$var$sl(a, b, c, d, e) {
    var f = c._reactRootContainer;
    if (f) {
        var g = f;
        if ("function" === typeof e) {
            var h = e;
            e = function() {
                var a = $833559fe574b4225$var$hl(g);
                h.call(a);
            };
        }
        $833559fe574b4225$var$gl(b, g, a, e);
    } else g = $833559fe574b4225$var$rl(c, b, a, e, d);
    return $833559fe574b4225$var$hl(g);
}
$833559fe574b4225$var$Ec = function(a) {
    switch(a.tag){
        case 3:
            var b = a.stateNode;
            if (b.current.memoizedState.isDehydrated) {
                var c = $833559fe574b4225$var$tc(b.pendingLanes);
                0 !== c && ($833559fe574b4225$var$Cc(b, c | 1), $833559fe574b4225$var$Ek(b, $833559fe574b4225$var$B()), 0 === ($833559fe574b4225$var$K & 6) && ($833559fe574b4225$var$Hj = $833559fe574b4225$var$B() + 500, $833559fe574b4225$var$jg()));
            }
            break;
        case 13:
            $833559fe574b4225$var$Sk(function() {
                var b = $833559fe574b4225$var$Zg(a, 1);
                if (null !== b) {
                    var c = $833559fe574b4225$var$L();
                    $833559fe574b4225$var$mh(b, a, 1, c);
                }
            }), $833559fe574b4225$var$jl(a, 1);
    }
};
$833559fe574b4225$var$Fc = function(a) {
    if (13 === a.tag) {
        var b = $833559fe574b4225$var$Zg(a, 134217728);
        if (null !== b) {
            var c = $833559fe574b4225$var$L();
            $833559fe574b4225$var$mh(b, a, 134217728, c);
        }
        $833559fe574b4225$var$jl(a, 134217728);
    }
};
$833559fe574b4225$var$Gc = function(a) {
    if (13 === a.tag) {
        var b = $833559fe574b4225$var$lh(a), c = $833559fe574b4225$var$Zg(a, b);
        if (null !== c) {
            var d = $833559fe574b4225$var$L();
            $833559fe574b4225$var$mh(c, a, b, d);
        }
        $833559fe574b4225$var$jl(a, b);
    }
};
$833559fe574b4225$var$Hc = function() {
    return $833559fe574b4225$var$C;
};
$833559fe574b4225$var$Ic = function(a, b) {
    var c = $833559fe574b4225$var$C;
    try {
        return $833559fe574b4225$var$C = a, b();
    } finally{
        $833559fe574b4225$var$C = c;
    }
};
$833559fe574b4225$var$yb = function(a, b, c) {
    switch(b){
        case "input":
            $833559fe574b4225$var$bb(a, c);
            b = c.name;
            if ("radio" === c.type && null != b) {
                for(c = a; c.parentNode;)c = c.parentNode;
                c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
                for(b = 0; b < c.length; b++){
                    var d = c[b];
                    if (d !== a && d.form === a.form) {
                        var e = $833559fe574b4225$var$Db(d);
                        if (!e) throw Error($833559fe574b4225$var$p(90));
                        $833559fe574b4225$var$Wa(d);
                        $833559fe574b4225$var$bb(d, e);
                    }
                }
            }
            break;
        case "textarea":
            $833559fe574b4225$var$ib(a, c);
            break;
        case "select":
            b = c.value, null != b && $833559fe574b4225$var$fb(a, !!c.multiple, b, !1);
    }
};
$833559fe574b4225$var$Gb = $833559fe574b4225$var$Rk;
$833559fe574b4225$var$Hb = $833559fe574b4225$var$Sk;
var $833559fe574b4225$var$tl = {
    usingClientEntryPoint: !1,
    Events: [
        $833559fe574b4225$var$Cb,
        $833559fe574b4225$var$ue,
        $833559fe574b4225$var$Db,
        $833559fe574b4225$var$Eb,
        $833559fe574b4225$var$Fb,
        $833559fe574b4225$var$Rk
    ]
}, $833559fe574b4225$var$ul = {
    findFiberByHostInstance: $833559fe574b4225$var$Wc,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom"
};
var $833559fe574b4225$var$vl = {
    bundleType: $833559fe574b4225$var$ul.bundleType,
    version: $833559fe574b4225$var$ul.version,
    rendererPackageName: $833559fe574b4225$var$ul.rendererPackageName,
    rendererConfig: $833559fe574b4225$var$ul.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: $833559fe574b4225$var$ua.ReactCurrentDispatcher,
    findHostInstanceByFiber: function(a) {
        a = $833559fe574b4225$var$Zb(a);
        return null === a ? null : a.stateNode;
    },
    findFiberByHostInstance: $833559fe574b4225$var$ul.findFiberByHostInstance || $833559fe574b4225$var$kl,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
};
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
    var $833559fe574b4225$var$wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!$833559fe574b4225$var$wl.isDisabled && $833559fe574b4225$var$wl.supportsFiber) try {
        $833559fe574b4225$var$kc = $833559fe574b4225$var$wl.inject($833559fe574b4225$var$vl), $833559fe574b4225$var$lc = $833559fe574b4225$var$wl;
    } catch (a) {}
}
$833559fe574b4225$export$ae55be85d98224ed = $833559fe574b4225$var$tl;
$833559fe574b4225$export$d39a5bbd09211389 = function(a, b) {
    var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
    if (!$833559fe574b4225$var$ol(b)) throw Error($833559fe574b4225$var$p(200));
    return $833559fe574b4225$var$dl(a, b, null, c);
};
$833559fe574b4225$export$882461b6382ed46c = function(a, b) {
    if (!$833559fe574b4225$var$ol(a)) throw Error($833559fe574b4225$var$p(299));
    var c = !1, d = "", e = $833559fe574b4225$var$ll;
    null !== b && void 0 !== b && (!0 === b.unstable_strictMode && (c = !0), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError));
    b = $833559fe574b4225$var$cl(a, 1, !1, null, null, c, !1, d, e);
    a[$833559fe574b4225$var$uf] = b.current;
    $833559fe574b4225$var$sf(8 === a.nodeType ? a.parentNode : a);
    return new $833559fe574b4225$var$ml(b);
};
$833559fe574b4225$export$466bfc07425424d5 = function(a) {
    if (null == a) return null;
    if (1 === a.nodeType) return a;
    var b = a._reactInternals;
    if (void 0 === b) {
        if ("function" === typeof a.render) throw Error($833559fe574b4225$var$p(188));
        a = Object.keys(a).join(",");
        throw Error($833559fe574b4225$var$p(268, a));
    }
    a = $833559fe574b4225$var$Zb(b);
    a = null === a ? null : a.stateNode;
    return a;
};
$833559fe574b4225$export$cd75ccfd720a3cd4 = function(a) {
    return $833559fe574b4225$var$Sk(a);
};
$833559fe574b4225$export$fa8d919ba61d84db = function(a, b, c) {
    if (!$833559fe574b4225$var$pl(b)) throw Error($833559fe574b4225$var$p(200));
    return $833559fe574b4225$var$sl(null, a, b, !0, c);
};
$833559fe574b4225$export$757ceba2d55c277e = function(a, b, c) {
    if (!$833559fe574b4225$var$ol(a)) throw Error($833559fe574b4225$var$p(405));
    var d = null != c && c.hydratedSources || null, e = !1, f = "", g = $833559fe574b4225$var$ll;
    null !== c && void 0 !== c && (!0 === c.unstable_strictMode && (e = !0), void 0 !== c.identifierPrefix && (f = c.identifierPrefix), void 0 !== c.onRecoverableError && (g = c.onRecoverableError));
    b = $833559fe574b4225$var$fl(b, null, a, 1, null != c ? c : null, e, !1, f, g);
    a[$833559fe574b4225$var$uf] = b.current;
    $833559fe574b4225$var$sf(a);
    if (d) for(a = 0; a < d.length; a++)c = d[a], e = c._getVersion, e = e(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [
        c,
        e
    ] : b.mutableSourceEagerHydrationData.push(c, e);
    return new $833559fe574b4225$var$nl(b);
};
$833559fe574b4225$export$b3890eb0ae9dca99 = function(a, b, c) {
    if (!$833559fe574b4225$var$pl(b)) throw Error($833559fe574b4225$var$p(200));
    return $833559fe574b4225$var$sl(null, a, b, !1, c);
};
$833559fe574b4225$export$502457920280e6be = function(a) {
    if (!$833559fe574b4225$var$pl(a)) throw Error($833559fe574b4225$var$p(40));
    return a._reactRootContainer ? ($833559fe574b4225$var$Sk(function() {
        $833559fe574b4225$var$sl(null, null, a, !1, function() {
            a._reactRootContainer = null;
            a[$833559fe574b4225$var$uf] = null;
        });
    }), !0) : !1;
};
$833559fe574b4225$export$c78a37762a8d58e1 = $833559fe574b4225$var$Rk;
$833559fe574b4225$export$dc54d992c10e8a18 = function(a, b, c, d) {
    if (!$833559fe574b4225$var$pl(c)) throw Error($833559fe574b4225$var$p(200));
    if (null == a || void 0 === a._reactInternals) throw Error($833559fe574b4225$var$p(38));
    return $833559fe574b4225$var$sl(a, b, c, !1, d);
};
$833559fe574b4225$export$83d89fbfd8236492 = "18.2.0-next-9e3b772b8-20220608";

});
parcelRequire.register("fw68E", function(module, exports) {
"use strict";

module.exports = (parcelRequire("d2ro6"));

});
parcelRequire.register("d2ro6", function(module, exports) {

$parcel$export(module.exports, "unstable_now", () => $97e0b4ea877737f9$export$c4744153514ff05d, (v) => $97e0b4ea877737f9$export$c4744153514ff05d = v);
$parcel$export(module.exports, "unstable_IdlePriority", () => $97e0b4ea877737f9$export$3e506c1ccc9cc1a7, (v) => $97e0b4ea877737f9$export$3e506c1ccc9cc1a7 = v);
$parcel$export(module.exports, "unstable_ImmediatePriority", () => $97e0b4ea877737f9$export$e26fe2ed2fa76875, (v) => $97e0b4ea877737f9$export$e26fe2ed2fa76875 = v);
$parcel$export(module.exports, "unstable_LowPriority", () => $97e0b4ea877737f9$export$502329bbf4b505b1, (v) => $97e0b4ea877737f9$export$502329bbf4b505b1 = v);
$parcel$export(module.exports, "unstable_NormalPriority", () => $97e0b4ea877737f9$export$6e3807111c4874c4, (v) => $97e0b4ea877737f9$export$6e3807111c4874c4 = v);
$parcel$export(module.exports, "unstable_Profiling", () => $97e0b4ea877737f9$export$c27134553091fb3a, (v) => $97e0b4ea877737f9$export$c27134553091fb3a = v);
$parcel$export(module.exports, "unstable_UserBlockingPriority", () => $97e0b4ea877737f9$export$33ee1acdc04fd2a2, (v) => $97e0b4ea877737f9$export$33ee1acdc04fd2a2 = v);
$parcel$export(module.exports, "unstable_cancelCallback", () => $97e0b4ea877737f9$export$b00a404bbd5edef2, (v) => $97e0b4ea877737f9$export$b00a404bbd5edef2 = v);
$parcel$export(module.exports, "unstable_continueExecution", () => $97e0b4ea877737f9$export$8352ce38b91d0c62, (v) => $97e0b4ea877737f9$export$8352ce38b91d0c62 = v);
$parcel$export(module.exports, "unstable_forceFrameRate", () => $97e0b4ea877737f9$export$d66a1c1c77bd778b, (v) => $97e0b4ea877737f9$export$d66a1c1c77bd778b = v);
$parcel$export(module.exports, "unstable_getCurrentPriorityLevel", () => $97e0b4ea877737f9$export$d3dfb8e4810cb555, (v) => $97e0b4ea877737f9$export$d3dfb8e4810cb555 = v);
$parcel$export(module.exports, "unstable_getFirstCallbackNode", () => $97e0b4ea877737f9$export$839f9183b0465a69, (v) => $97e0b4ea877737f9$export$839f9183b0465a69 = v);
$parcel$export(module.exports, "unstable_next", () => $97e0b4ea877737f9$export$72fdf0e06517287b, (v) => $97e0b4ea877737f9$export$72fdf0e06517287b = v);
$parcel$export(module.exports, "unstable_pauseExecution", () => $97e0b4ea877737f9$export$4b844e58a3e414b4, (v) => $97e0b4ea877737f9$export$4b844e58a3e414b4 = v);
$parcel$export(module.exports, "unstable_requestPaint", () => $97e0b4ea877737f9$export$816d2913ae6b83b1, (v) => $97e0b4ea877737f9$export$816d2913ae6b83b1 = v);
$parcel$export(module.exports, "unstable_runWithPriority", () => $97e0b4ea877737f9$export$61bcfe829111a1d0, (v) => $97e0b4ea877737f9$export$61bcfe829111a1d0 = v);
$parcel$export(module.exports, "unstable_scheduleCallback", () => $97e0b4ea877737f9$export$7ee8c9beb337bc3f, (v) => $97e0b4ea877737f9$export$7ee8c9beb337bc3f = v);
$parcel$export(module.exports, "unstable_shouldYield", () => $97e0b4ea877737f9$export$b5836b71941fa3ed, (v) => $97e0b4ea877737f9$export$b5836b71941fa3ed = v);
$parcel$export(module.exports, "unstable_wrapCallback", () => $97e0b4ea877737f9$export$cf845f2c119da08a, (v) => $97e0b4ea877737f9$export$cf845f2c119da08a = v);
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $97e0b4ea877737f9$export$c4744153514ff05d;
var $97e0b4ea877737f9$export$3e506c1ccc9cc1a7;
var $97e0b4ea877737f9$export$e26fe2ed2fa76875;
var $97e0b4ea877737f9$export$502329bbf4b505b1;
var $97e0b4ea877737f9$export$6e3807111c4874c4;
var $97e0b4ea877737f9$export$c27134553091fb3a;
var $97e0b4ea877737f9$export$33ee1acdc04fd2a2;
var $97e0b4ea877737f9$export$b00a404bbd5edef2;
var $97e0b4ea877737f9$export$8352ce38b91d0c62;
var $97e0b4ea877737f9$export$d66a1c1c77bd778b;
var $97e0b4ea877737f9$export$d3dfb8e4810cb555;
var $97e0b4ea877737f9$export$839f9183b0465a69;
var $97e0b4ea877737f9$export$72fdf0e06517287b;
var $97e0b4ea877737f9$export$4b844e58a3e414b4;
var $97e0b4ea877737f9$export$816d2913ae6b83b1;
var $97e0b4ea877737f9$export$61bcfe829111a1d0;
var $97e0b4ea877737f9$export$7ee8c9beb337bc3f;
var $97e0b4ea877737f9$export$b5836b71941fa3ed;
var $97e0b4ea877737f9$export$cf845f2c119da08a;
"use strict";
function $97e0b4ea877737f9$var$f(a, b) {
    var c = a.length;
    a.push(b);
    a: for(; 0 < c;){
        var d = c - 1 >>> 1, e = a[d];
        if (0 < $97e0b4ea877737f9$var$g(e, b)) a[d] = b, a[c] = e, c = d;
        else break a;
    }
}
function $97e0b4ea877737f9$var$h(a) {
    return 0 === a.length ? null : a[0];
}
function $97e0b4ea877737f9$var$k(a) {
    if (0 === a.length) return null;
    var b = a[0], c = a.pop();
    if (c !== b) {
        a[0] = c;
        a: for(var d = 0, e = a.length, w = e >>> 1; d < w;){
            var m = 2 * (d + 1) - 1, C = a[m], n = m + 1, x = a[n];
            if (0 > $97e0b4ea877737f9$var$g(C, c)) n < e && 0 > $97e0b4ea877737f9$var$g(x, C) ? (a[d] = x, a[n] = c, d = n) : (a[d] = C, a[m] = c, d = m);
            else if (n < e && 0 > $97e0b4ea877737f9$var$g(x, c)) a[d] = x, a[n] = c, d = n;
            else break a;
        }
    }
    return b;
}
function $97e0b4ea877737f9$var$g(a, b) {
    var c = a.sortIndex - b.sortIndex;
    return 0 !== c ? c : a.id - b.id;
}
if ("object" === typeof performance && "function" === typeof performance.now) {
    var $97e0b4ea877737f9$var$l = performance;
    $97e0b4ea877737f9$export$c4744153514ff05d = function() {
        return $97e0b4ea877737f9$var$l.now();
    };
} else {
    var $97e0b4ea877737f9$var$p = Date, $97e0b4ea877737f9$var$q = $97e0b4ea877737f9$var$p.now();
    $97e0b4ea877737f9$export$c4744153514ff05d = function() {
        return $97e0b4ea877737f9$var$p.now() - $97e0b4ea877737f9$var$q;
    };
}
var $97e0b4ea877737f9$var$r = [], $97e0b4ea877737f9$var$t = [], $97e0b4ea877737f9$var$u = 1, $97e0b4ea877737f9$var$v = null, $97e0b4ea877737f9$var$y = 3, $97e0b4ea877737f9$var$z = !1, $97e0b4ea877737f9$var$A = !1, $97e0b4ea877737f9$var$B = !1, $97e0b4ea877737f9$var$D = "function" === typeof setTimeout ? setTimeout : null, $97e0b4ea877737f9$var$E = "function" === typeof clearTimeout ? clearTimeout : null, $97e0b4ea877737f9$var$F = "undefined" !== typeof setImmediate ? setImmediate : null;
"undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
function $97e0b4ea877737f9$var$G(a) {
    for(var b = $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$t); null !== b;){
        if (null === b.callback) $97e0b4ea877737f9$var$k($97e0b4ea877737f9$var$t);
        else if (b.startTime <= a) $97e0b4ea877737f9$var$k($97e0b4ea877737f9$var$t), b.sortIndex = b.expirationTime, $97e0b4ea877737f9$var$f($97e0b4ea877737f9$var$r, b);
        else break;
        b = $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$t);
    }
}
function $97e0b4ea877737f9$var$H(a) {
    $97e0b4ea877737f9$var$B = !1;
    $97e0b4ea877737f9$var$G(a);
    if (!$97e0b4ea877737f9$var$A) {
        if (null !== $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$r)) $97e0b4ea877737f9$var$A = !0, $97e0b4ea877737f9$var$I($97e0b4ea877737f9$var$J);
        else {
            var b = $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$t);
            null !== b && $97e0b4ea877737f9$var$K($97e0b4ea877737f9$var$H, b.startTime - a);
        }
    }
}
function $97e0b4ea877737f9$var$J(a, b) {
    $97e0b4ea877737f9$var$A = !1;
    $97e0b4ea877737f9$var$B && ($97e0b4ea877737f9$var$B = !1, $97e0b4ea877737f9$var$E($97e0b4ea877737f9$var$L), $97e0b4ea877737f9$var$L = -1);
    $97e0b4ea877737f9$var$z = !0;
    var c = $97e0b4ea877737f9$var$y;
    try {
        $97e0b4ea877737f9$var$G(b);
        for($97e0b4ea877737f9$var$v = $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$r); null !== $97e0b4ea877737f9$var$v && (!($97e0b4ea877737f9$var$v.expirationTime > b) || a && !$97e0b4ea877737f9$var$M());){
            var d = $97e0b4ea877737f9$var$v.callback;
            if ("function" === typeof d) {
                $97e0b4ea877737f9$var$v.callback = null;
                $97e0b4ea877737f9$var$y = $97e0b4ea877737f9$var$v.priorityLevel;
                var e = d($97e0b4ea877737f9$var$v.expirationTime <= b);
                b = $97e0b4ea877737f9$export$c4744153514ff05d();
                "function" === typeof e ? $97e0b4ea877737f9$var$v.callback = e : $97e0b4ea877737f9$var$v === $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$r) && $97e0b4ea877737f9$var$k($97e0b4ea877737f9$var$r);
                $97e0b4ea877737f9$var$G(b);
            } else $97e0b4ea877737f9$var$k($97e0b4ea877737f9$var$r);
            $97e0b4ea877737f9$var$v = $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$r);
        }
        if (null !== $97e0b4ea877737f9$var$v) var w = !0;
        else {
            var m = $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$t);
            null !== m && $97e0b4ea877737f9$var$K($97e0b4ea877737f9$var$H, m.startTime - b);
            w = !1;
        }
        return w;
    } finally{
        $97e0b4ea877737f9$var$v = null, $97e0b4ea877737f9$var$y = c, $97e0b4ea877737f9$var$z = !1;
    }
}
var $97e0b4ea877737f9$var$N = !1, $97e0b4ea877737f9$var$O = null, $97e0b4ea877737f9$var$L = -1, $97e0b4ea877737f9$var$P = 5, $97e0b4ea877737f9$var$Q = -1;
function $97e0b4ea877737f9$var$M() {
    return $97e0b4ea877737f9$export$c4744153514ff05d() - $97e0b4ea877737f9$var$Q < $97e0b4ea877737f9$var$P ? !1 : !0;
}
function $97e0b4ea877737f9$var$R() {
    if (null !== $97e0b4ea877737f9$var$O) {
        var a = $97e0b4ea877737f9$export$c4744153514ff05d();
        $97e0b4ea877737f9$var$Q = a;
        var b = !0;
        try {
            b = $97e0b4ea877737f9$var$O(!0, a);
        } finally{
            b ? $97e0b4ea877737f9$var$S() : ($97e0b4ea877737f9$var$N = !1, $97e0b4ea877737f9$var$O = null);
        }
    } else $97e0b4ea877737f9$var$N = !1;
}
var $97e0b4ea877737f9$var$S;
if ("function" === typeof $97e0b4ea877737f9$var$F) $97e0b4ea877737f9$var$S = function() {
    $97e0b4ea877737f9$var$F($97e0b4ea877737f9$var$R);
};
else if ("undefined" !== typeof MessageChannel) {
    var $97e0b4ea877737f9$var$T = new MessageChannel, $97e0b4ea877737f9$var$U = $97e0b4ea877737f9$var$T.port2;
    $97e0b4ea877737f9$var$T.port1.onmessage = $97e0b4ea877737f9$var$R;
    $97e0b4ea877737f9$var$S = function() {
        $97e0b4ea877737f9$var$U.postMessage(null);
    };
} else $97e0b4ea877737f9$var$S = function() {
    $97e0b4ea877737f9$var$D($97e0b4ea877737f9$var$R, 0);
};
function $97e0b4ea877737f9$var$I(a) {
    $97e0b4ea877737f9$var$O = a;
    $97e0b4ea877737f9$var$N || ($97e0b4ea877737f9$var$N = !0, $97e0b4ea877737f9$var$S());
}
function $97e0b4ea877737f9$var$K(a, b) {
    $97e0b4ea877737f9$var$L = $97e0b4ea877737f9$var$D(function() {
        a($97e0b4ea877737f9$export$c4744153514ff05d());
    }, b);
}
$97e0b4ea877737f9$export$3e506c1ccc9cc1a7 = 5;
$97e0b4ea877737f9$export$e26fe2ed2fa76875 = 1;
$97e0b4ea877737f9$export$502329bbf4b505b1 = 4;
$97e0b4ea877737f9$export$6e3807111c4874c4 = 3;
$97e0b4ea877737f9$export$c27134553091fb3a = null;
$97e0b4ea877737f9$export$33ee1acdc04fd2a2 = 2;
$97e0b4ea877737f9$export$b00a404bbd5edef2 = function(a) {
    a.callback = null;
};
$97e0b4ea877737f9$export$8352ce38b91d0c62 = function() {
    $97e0b4ea877737f9$var$A || $97e0b4ea877737f9$var$z || ($97e0b4ea877737f9$var$A = !0, $97e0b4ea877737f9$var$I($97e0b4ea877737f9$var$J));
};
$97e0b4ea877737f9$export$d66a1c1c77bd778b = function(a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : $97e0b4ea877737f9$var$P = 0 < a ? Math.floor(1E3 / a) : 5;
};
$97e0b4ea877737f9$export$d3dfb8e4810cb555 = function() {
    return $97e0b4ea877737f9$var$y;
};
$97e0b4ea877737f9$export$839f9183b0465a69 = function() {
    return $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$r);
};
$97e0b4ea877737f9$export$72fdf0e06517287b = function(a) {
    switch($97e0b4ea877737f9$var$y){
        case 1:
        case 2:
        case 3:
            var b = 3;
            break;
        default:
            b = $97e0b4ea877737f9$var$y;
    }
    var c = $97e0b4ea877737f9$var$y;
    $97e0b4ea877737f9$var$y = b;
    try {
        return a();
    } finally{
        $97e0b4ea877737f9$var$y = c;
    }
};
$97e0b4ea877737f9$export$4b844e58a3e414b4 = function() {};
$97e0b4ea877737f9$export$816d2913ae6b83b1 = function() {};
$97e0b4ea877737f9$export$61bcfe829111a1d0 = function(a, b) {
    switch(a){
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            a = 3;
    }
    var c = $97e0b4ea877737f9$var$y;
    $97e0b4ea877737f9$var$y = a;
    try {
        return b();
    } finally{
        $97e0b4ea877737f9$var$y = c;
    }
};
$97e0b4ea877737f9$export$7ee8c9beb337bc3f = function(a, b, c) {
    var d = $97e0b4ea877737f9$export$c4744153514ff05d();
    "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
    switch(a){
        case 1:
            var e = -1;
            break;
        case 2:
            e = 250;
            break;
        case 5:
            e = 1073741823;
            break;
        case 4:
            e = 1E4;
            break;
        default:
            e = 5E3;
    }
    e = c + e;
    a = {
        id: $97e0b4ea877737f9$var$u++,
        callback: b,
        priorityLevel: a,
        startTime: c,
        expirationTime: e,
        sortIndex: -1
    };
    c > d ? (a.sortIndex = c, $97e0b4ea877737f9$var$f($97e0b4ea877737f9$var$t, a), null === $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$r) && a === $97e0b4ea877737f9$var$h($97e0b4ea877737f9$var$t) && ($97e0b4ea877737f9$var$B ? ($97e0b4ea877737f9$var$E($97e0b4ea877737f9$var$L), $97e0b4ea877737f9$var$L = -1) : $97e0b4ea877737f9$var$B = !0, $97e0b4ea877737f9$var$K($97e0b4ea877737f9$var$H, c - d))) : (a.sortIndex = e, $97e0b4ea877737f9$var$f($97e0b4ea877737f9$var$r, a), $97e0b4ea877737f9$var$A || $97e0b4ea877737f9$var$z || ($97e0b4ea877737f9$var$A = !0, $97e0b4ea877737f9$var$I($97e0b4ea877737f9$var$J)));
    return a;
};
$97e0b4ea877737f9$export$b5836b71941fa3ed = $97e0b4ea877737f9$var$M;
$97e0b4ea877737f9$export$cf845f2c119da08a = function(a) {
    var b = $97e0b4ea877737f9$var$y;
    return function() {
        var c = $97e0b4ea877737f9$var$y;
        $97e0b4ea877737f9$var$y = b;
        try {
            return a.apply(this, arguments);
        } finally{
            $97e0b4ea877737f9$var$y = c;
        }
    };
};

});



parcelRequire.register("aOMYu", function(module, exports) {

$parcel$export(module.exports, "useSyncExternalStore", () => $7e0490373889fc0a$export$306c0aa65ff9ec16, (v) => $7e0490373889fc0a$export$306c0aa65ff9ec16 = v);
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $7e0490373889fc0a$export$306c0aa65ff9ec16;
"use strict";

var $d4J5n = parcelRequire("d4J5n");
function $7e0490373889fc0a$var$h(a, b) {
    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var $7e0490373889fc0a$var$k = "function" === typeof Object.is ? Object.is : $7e0490373889fc0a$var$h, $7e0490373889fc0a$var$l = $d4J5n.useState, $7e0490373889fc0a$var$m = $d4J5n.useEffect, $7e0490373889fc0a$var$n = $d4J5n.useLayoutEffect, $7e0490373889fc0a$var$p = $d4J5n.useDebugValue;
function $7e0490373889fc0a$var$q(a, b) {
    var d = b(), f = $7e0490373889fc0a$var$l({
        inst: {
            value: d,
            getSnapshot: b
        }
    }), c = f[0].inst, g = f[1];
    $7e0490373889fc0a$var$n(function() {
        c.value = d;
        c.getSnapshot = b;
        $7e0490373889fc0a$var$r(c) && g({
            inst: c
        });
    }, [
        a,
        d,
        b
    ]);
    $7e0490373889fc0a$var$m(function() {
        $7e0490373889fc0a$var$r(c) && g({
            inst: c
        });
        return a(function() {
            $7e0490373889fc0a$var$r(c) && g({
                inst: c
            });
        });
    }, [
        a
    ]);
    $7e0490373889fc0a$var$p(d);
    return d;
}
function $7e0490373889fc0a$var$r(a) {
    var b = a.getSnapshot;
    a = a.value;
    try {
        var d = b();
        return !$7e0490373889fc0a$var$k(a, d);
    } catch (f) {
        return !0;
    }
}
function $7e0490373889fc0a$var$t(a, b) {
    return b();
}
var $7e0490373889fc0a$var$u = "undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement ? $7e0490373889fc0a$var$t : $7e0490373889fc0a$var$q;
$7e0490373889fc0a$export$306c0aa65ff9ec16 = void 0 !== $d4J5n.useSyncExternalStore ? $d4J5n.useSyncExternalStore : $7e0490373889fc0a$var$u;

});

parcelRequire.register("13hFK", function(module, exports) {
"use strict";
var $0c43c7a4d3b2aab3$var$has = Object.prototype.hasOwnProperty, $0c43c7a4d3b2aab3$var$prefix = "~";
/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */ function $0c43c7a4d3b2aab3$var$Events() {}
//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
    $0c43c7a4d3b2aab3$var$Events.prototype = Object.create(null);
    //
    // This hack is needed because the `__proto__` property is still inherited in
    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
    //
    if (!new $0c43c7a4d3b2aab3$var$Events().__proto__) $0c43c7a4d3b2aab3$var$prefix = false;
}
/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */ function $0c43c7a4d3b2aab3$var$EE(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
}
/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */ function $0c43c7a4d3b2aab3$var$addListener(emitter, event, fn, context, once) {
    if (typeof fn !== "function") throw new TypeError("The listener must be a function");
    var listener = new $0c43c7a4d3b2aab3$var$EE(fn, context || emitter, once), evt = $0c43c7a4d3b2aab3$var$prefix ? $0c43c7a4d3b2aab3$var$prefix + event : event;
    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
    else emitter._events[evt] = [
        emitter._events[evt],
        listener
    ];
    return emitter;
}
/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */ function $0c43c7a4d3b2aab3$var$clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0) emitter._events = new $0c43c7a4d3b2aab3$var$Events();
    else delete emitter._events[evt];
}
/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */ function $0c43c7a4d3b2aab3$var$EventEmitter() {
    this._events = new $0c43c7a4d3b2aab3$var$Events();
    this._eventsCount = 0;
}
/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */ $0c43c7a4d3b2aab3$var$EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0) return names;
    for(name in events = this._events)if ($0c43c7a4d3b2aab3$var$has.call(events, name)) names.push($0c43c7a4d3b2aab3$var$prefix ? name.slice(1) : name);
    if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));
    return names;
};
/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */ $0c43c7a4d3b2aab3$var$EventEmitter.prototype.listeners = function listeners(event) {
    var evt = $0c43c7a4d3b2aab3$var$prefix ? $0c43c7a4d3b2aab3$var$prefix + event : event, handlers = this._events[evt];
    if (!handlers) return [];
    if (handlers.fn) return [
        handlers.fn
    ];
    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)ee[i] = handlers[i].fn;
    return ee;
};
/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */ $0c43c7a4d3b2aab3$var$EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = $0c43c7a4d3b2aab3$var$prefix ? $0c43c7a4d3b2aab3$var$prefix + event : event, listeners = this._events[evt];
    if (!listeners) return 0;
    if (listeners.fn) return 1;
    return listeners.length;
};
/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */ $0c43c7a4d3b2aab3$var$EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = $0c43c7a4d3b2aab3$var$prefix ? $0c43c7a4d3b2aab3$var$prefix + event : event;
    if (!this._events[evt]) return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);
        switch(len){
            case 1:
                return listeners.fn.call(listeners.context), true;
            case 2:
                return listeners.fn.call(listeners.context, a1), true;
            case 3:
                return listeners.fn.call(listeners.context, a1, a2), true;
            case 4:
                return listeners.fn.call(listeners.context, a1, a2, a3), true;
            case 5:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
            case 6:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
        }
        for(i = 1, args = new Array(len - 1); i < len; i++)args[i - 1] = arguments[i];
        listeners.fn.apply(listeners.context, args);
    } else {
        var length = listeners.length, j;
        for(i = 0; i < length; i++){
            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);
            switch(len){
                case 1:
                    listeners[i].fn.call(listeners[i].context);
                    break;
                case 2:
                    listeners[i].fn.call(listeners[i].context, a1);
                    break;
                case 3:
                    listeners[i].fn.call(listeners[i].context, a1, a2);
                    break;
                case 4:
                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                    break;
                default:
                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++)args[j - 1] = arguments[j];
                    listeners[i].fn.apply(listeners[i].context, args);
            }
        }
    }
    return true;
};
/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ $0c43c7a4d3b2aab3$var$EventEmitter.prototype.on = function on(event, fn, context) {
    return $0c43c7a4d3b2aab3$var$addListener(this, event, fn, context, false);
};
/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ $0c43c7a4d3b2aab3$var$EventEmitter.prototype.once = function once(event, fn, context) {
    return $0c43c7a4d3b2aab3$var$addListener(this, event, fn, context, true);
};
/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */ $0c43c7a4d3b2aab3$var$EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = $0c43c7a4d3b2aab3$var$prefix ? $0c43c7a4d3b2aab3$var$prefix + event : event;
    if (!this._events[evt]) return this;
    if (!fn) {
        $0c43c7a4d3b2aab3$var$clearEvent(this, evt);
        return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) $0c43c7a4d3b2aab3$var$clearEvent(this, evt);
    } else {
        for(var i = 0, events = [], length = listeners.length; i < length; i++)if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);
        //
        // Reset the array, or remove it completely if we have no more listeners.
        //
        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
        else $0c43c7a4d3b2aab3$var$clearEvent(this, evt);
    }
    return this;
};
/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */ $0c43c7a4d3b2aab3$var$EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
        evt = $0c43c7a4d3b2aab3$var$prefix ? $0c43c7a4d3b2aab3$var$prefix + event : event;
        if (this._events[evt]) $0c43c7a4d3b2aab3$var$clearEvent(this, evt);
    } else {
        this._events = new $0c43c7a4d3b2aab3$var$Events();
        this._eventsCount = 0;
    }
    return this;
};
//
// Alias methods names because people roll like that.
//
$0c43c7a4d3b2aab3$var$EventEmitter.prototype.off = $0c43c7a4d3b2aab3$var$EventEmitter.prototype.removeListener;
$0c43c7a4d3b2aab3$var$EventEmitter.prototype.addListener = $0c43c7a4d3b2aab3$var$EventEmitter.prototype.on;
//
// Expose the prefix.
//
$0c43c7a4d3b2aab3$var$EventEmitter.prefixed = $0c43c7a4d3b2aab3$var$prefix;
//
// Allow `EventEmitter` to be imported as module namespace.
//
$0c43c7a4d3b2aab3$var$EventEmitter.EventEmitter = $0c43c7a4d3b2aab3$var$EventEmitter;
module.exports = $0c43c7a4d3b2aab3$var$EventEmitter;

});

parcelRequire.register("7QIDV", function(module, exports) {

(function(module1, exports) {
    "use strict";
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || "Assertion failed");
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {};
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === "le" || base === "be") {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || "be");
        }
    }
    if (typeof module1 === "object") module1.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") Buffer = window.Buffer;
        else Buffer = (parcelRequire("XDU19")).Buffer;
    } catch (e) {}
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === "number") return this._initNumber(number, base, endian);
        if (typeof number === "object") return this._initArray(number, base, endian);
        if (base === "hex") base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === "le") this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 0x4000000) {
            this.words = [
                number & 0x3ffffff
            ];
            this.length = 1;
        } else if (number < 0x10000000000000) {
            this.words = [
                number & 0x3ffffff,
                number / 0x4000000 & 0x3ffffff
            ];
            this.length = 2;
        } else {
            assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
            this.words = [
                number & 0x3ffffff,
                number / 0x4000000 & 0x3ffffff,
                1
            ];
            this.length = 3;
        }
        if (endian !== "le") return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === "number");
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === "be") for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 0x3ffffff;
            this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === "le") for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 0x3ffffff;
            this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this._strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // '0' - '9'
        if (c >= 48 && c <= 57) return c - 48;
        else if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else assert(false, "Invalid character in " + string);
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 0x3ffffff;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 0x3ffffff;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this._strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) b = c - 49 + 0xa;
            else if (c >= 17) b = c - 17 + 0xa;
            else b = c;
            assert(c >= 0 && b < mul, "Invalid character");
            r += b;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 0x4000000) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 0x4000000) this.words[0] += word;
            else this._iaddn(word);
        }
        this._strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
    }
    BN.prototype._move = function _move(dest) {
        move(dest, this);
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype._strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    // Check Symbol.for because not everywhere where Symbol defined
    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
    if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") try {
        BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect;
    } catch (e) {
        BN.prototype.inspect = inspect;
    }
    else BN.prototype.inspect = inspect;
    function inspect() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === "hex") {
            out = "";
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 0xffffff).toString(16);
                carry = w >>> 24 - off & 0xffffff;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = "0" + out;
            if (this.negative !== 0) out = "-" + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = "";
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modrn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = "0" + out;
            while(out.length % padding !== 0)out = "0" + out;
            if (this.negative !== 0) out = "-" + out;
            return out;
        }
        assert(false, "Base should be between 2 and 36");
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 0x4000000;
        else if (this.length === 3 && this.words[2] === 0x01) // NOTE: at this stage it is known that the top bit is set
        ret += 0x10000000000000 + this.words[1] * 0x4000000;
        else if (this.length > 2) assert(false, "Number can only safely store up to 53 bits");
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
    };
    if (Buffer) BN.prototype.toBuffer = function toBuffer(endian, length) {
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate(ArrayType, size) {
        if (ArrayType.allocUnsafe) return ArrayType.allocUnsafe(size);
        return new ArrayType(size);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, "byte array longer than desired length");
        assert(reqLength > 0, "Requested array length <= 0");
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === "le" ? "LE" : "BE";
        this["_toArrayLike" + postfix](res, byteLength);
        return res;
    };
    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position++] = word & 0xff;
            if (position < res.length) res[position++] = word >> 8 & 0xff;
            if (position < res.length) res[position++] = word >> 16 & 0xff;
            if (shift === 6) {
                if (position < res.length) res[position++] = word >> 24 & 0xff;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position < res.length) {
            res[position++] = carry;
            while(position < res.length)res[position++] = 0;
        }
    };
    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position--] = word & 0xff;
            if (position >= 0) res[position--] = word >> 8 & 0xff;
            if (position >= 0) res[position--] = word >> 16 & 0xff;
            if (shift === 6) {
                if (position >= 0) res[position--] = word >> 24 & 0xff;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position >= 0) {
            res[position--] = carry;
            while(position >= 0)res[position--] = 0;
        }
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits(w) {
        var t = w;
        var r = 0;
        if (t >= 0x1000) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 0x40) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 0x8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 0x02) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 0x1fff) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 0x7f) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 0xf) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 0x3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 0x1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = num.words[off] >>> wbit & 0x01;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this._strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this._strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this._strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 0x3ffffff;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;
        // And remove leading zeroes
        return this._strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this._strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this._strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 0x3ffffff;
        var carry = r / 0x4000000 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 0x4000000 | 0;
                rword = r & 0x3ffffff;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out._strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 0x1fff;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 0x1fff;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 0x1fff;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 0x1fff;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 0x1fff;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 0x1fff;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 0x1fff;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 0x1fff;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 0x1fff;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 0x1fff;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 0x1fff;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 0x1fff;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 0x1fff;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 0x1fff;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 0x1fff;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 0x1fff;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 0x1fff;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 0x1fff;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 0x1fff;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 0x1fff;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 0x3ffffff;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 0x3ffffff;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 0x3ffffff;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 0x3ffffff;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 0x3ffffff;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 0x3ffffff;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 0x3ffffff;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 0x3ffffff;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 0x3ffffff;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 0x3ffffff;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 0x3ffffff;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 0x3ffffff;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 0x3ffffff;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 0x3ffffff;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 0x3ffffff;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 0x3ffffff;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 0x3ffffff;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 0x3ffffff;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 0x3ffffff;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 0x3ffffff;
                ncarry = ncarry + (r / 0x4000000 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 0x3ffffff;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 0x3ffffff;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out._strip();
    }
    function jumboMulTo(self, num, out) {
        // Temporary disable, see https://github.com/indutny/bn.js/issues/211
        // var fftm = new FFTM();
        // return fftm.mulp(self, num, out);
        return bigMulTo(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 0x3ffffff;
            if (w < 0x4000000) carry = 0;
            else carry = w / 0x4000000 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 0x1fff;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 0x1fff;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(typeof num === "number");
        assert(num < 0x4000000);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
            carry >>= 26;
            carry += w / 0x4000000 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 0x3ffffff;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if (++i < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 0x3ffffff >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this._strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this._strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this._strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === "number");
        assert(num < 0x4000000);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) <= num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 0x4000000; i++){
            this.words[i] -= 0x4000000;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === "number");
        assert(num < 0x4000000);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 0x4000000;
            this.words[i + 1] -= 1;
        }
        return this._strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul;
            w -= right & 0x3ffffff;
            carry = (w >> 26) - (right / 0x4000000 | 0);
            this.words[i + shift] = w & 0x3ffffff;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 0x3ffffff;
        }
        if (carry === 0) return this._strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 0x3ffffff;
        }
        this.negative = 1;
        return this._strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 0x3ffffff);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q._strip();
        a._strip();
        // Denormalize
        if (mode !== "div" && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== "mod") div = res.div.neg();
            if (mode !== "div") {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== "mod") div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== "div") {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === "div") return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === "mod") return {
                div: null,
                mod: new BN(this.modrn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modrn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 0x3ffffff);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return isNegNum ? -acc : acc;
    };
    // WARNING: DEPRECATED
    BN.prototype.modn = function modn(num) {
        return this.modrn(num);
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 0x3ffffff);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 0x4000000;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while(i-- > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while(j-- > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while(i-- > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while(j-- > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true);
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 0x3ffffff;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this._strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 0x3ffffff, "Number is too big");
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        assert(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is a BN v4 instance
        r.strip();
        else // r is a BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 0x3fffff;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 0x3d1;
            num.words[i] = lo & 0x3ffffff;
            lo = w * 0x40 + (lo / 0x4000000 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 0x13 + carry;
            var lo = hi & 0x3ffffff;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === "k256") prime = new K256();
        else if (name === "p224") prime = new P224();
        else if (name === "p192") prime = new P192();
        else if (name === "p25519") prime = new P25519();
        else throw new Error("Unknown prime " + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === "string") {
            var prime = BN._prime(m);
            this.m = prime.p;
            this.prime = prime;
        } else {
            assert(m.gtn(1), "modulus must be greater than 1");
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, "red works only with positives");
        assert(a.red, "red works only with red numbers");
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, "red works only with positives");
        assert(a.red && a.red === b.red, "red works only with red numbers");
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
    };
    Red.prototype.neg = function neg(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(module, this);

});
parcelRequire.register("XDU19", function(module, exports) {
"use strict";

});


parcelRequire.register("gdRew", function(module, exports) {

var $4DZrq = parcelRequire("4DZrq");
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */ /*jslint bitwise: true */ (function() {
    "use strict";
    var INPUT_ERROR = "input is invalid type";
    var FINALIZE_ERROR = "finalize already called";
    var WINDOW = typeof window === "object";
    var root = WINDOW ? window : {};
    if (root.JS_SHA3_NO_WINDOW) WINDOW = false;
    var WEB_WORKER = !WINDOW && typeof self === "object";
    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof $4DZrq === "object" && $4DZrq.versions && $4DZrq.versions.node;
    if (NODE_JS) root = $parcel$global;
    else if (WEB_WORKER) root = self;
    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && true && module.exports;
    var AMD = typeof define === "function" && define.amd;
    var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== "undefined";
    var HEX_CHARS = "0123456789abcdef".split("");
    var SHAKE_PADDING = [
        31,
        7936,
        2031616,
        520093696
    ];
    var CSHAKE_PADDING = [
        4,
        1024,
        262144,
        67108864
    ];
    var KECCAK_PADDING = [
        1,
        256,
        65536,
        16777216
    ];
    var PADDING = [
        6,
        1536,
        393216,
        100663296
    ];
    var SHIFT = [
        0,
        8,
        16,
        24
    ];
    var RC = [
        1,
        0,
        32898,
        0,
        32906,
        2147483648,
        2147516416,
        2147483648,
        32907,
        0,
        2147483649,
        0,
        2147516545,
        2147483648,
        32777,
        2147483648,
        138,
        0,
        136,
        0,
        2147516425,
        0,
        2147483658,
        0,
        2147516555,
        0,
        139,
        2147483648,
        32905,
        2147483648,
        32771,
        2147483648,
        32770,
        2147483648,
        128,
        2147483648,
        32778,
        0,
        2147483658,
        2147483648,
        2147516545,
        2147483648,
        32896,
        2147483648,
        2147483649,
        0,
        2147516424,
        2147483648
    ];
    var BITS = [
        224,
        256,
        384,
        512
    ];
    var SHAKE_BITS = [
        128,
        256
    ];
    var OUTPUT_TYPES = [
        "hex",
        "buffer",
        "arrayBuffer",
        "array",
        "digest"
    ];
    var CSHAKE_BYTEPAD = {
        "128": 168,
        "256": 136
    };
    if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) Array.isArray = function(obj) {
        return Object.prototype.toString.call(obj) === "[object Array]";
    };
    if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) ArrayBuffer.isView = function(obj) {
        return typeof obj === "object" && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
    var createOutputMethod = function(bits, padding, outputType) {
        return function(message) {
            return new Keccak(bits, padding, bits).update(message)[outputType]();
        };
    };
    var createShakeOutputMethod = function(bits, padding, outputType) {
        return function(message, outputBits) {
            return new Keccak(bits, padding, outputBits).update(message)[outputType]();
        };
    };
    var createCshakeOutputMethod = function(bits, padding, outputType) {
        return function(message, outputBits, n, s) {
            return methods["cshake" + bits].update(message, outputBits, n, s)[outputType]();
        };
    };
    var createKmacOutputMethod = function(bits, padding, outputType) {
        return function(key, message, outputBits, s) {
            return methods["kmac" + bits].update(key, message, outputBits, s)[outputType]();
        };
    };
    var createOutputMethods = function(method, createMethod, bits, padding) {
        for(var i = 0; i < OUTPUT_TYPES.length; ++i){
            var type = OUTPUT_TYPES[i];
            method[type] = createMethod(bits, padding, type);
        }
        return method;
    };
    var createMethod = function(bits, padding) {
        var method = createOutputMethod(bits, padding, "hex");
        method.create = function() {
            return new Keccak(bits, padding, bits);
        };
        method.update = function(message) {
            return method.create().update(message);
        };
        return createOutputMethods(method, createOutputMethod, bits, padding);
    };
    var createShakeMethod = function(bits, padding) {
        var method = createShakeOutputMethod(bits, padding, "hex");
        method.create = function(outputBits) {
            return new Keccak(bits, padding, outputBits);
        };
        method.update = function(message, outputBits) {
            return method.create(outputBits).update(message);
        };
        return createOutputMethods(method, createShakeOutputMethod, bits, padding);
    };
    var createCshakeMethod = function(bits, padding) {
        var w = CSHAKE_BYTEPAD[bits];
        var method = createCshakeOutputMethod(bits, padding, "hex");
        method.create = function(outputBits, n, s) {
            if (!n && !s) return methods["shake" + bits].create(outputBits);
            else return new Keccak(bits, padding, outputBits).bytepad([
                n,
                s
            ], w);
        };
        method.update = function(message, outputBits, n, s) {
            return method.create(outputBits, n, s).update(message);
        };
        return createOutputMethods(method, createCshakeOutputMethod, bits, padding);
    };
    var createKmacMethod = function(bits, padding) {
        var w = CSHAKE_BYTEPAD[bits];
        var method = createKmacOutputMethod(bits, padding, "hex");
        method.create = function(key, outputBits, s) {
            return new Kmac(bits, padding, outputBits).bytepad([
                "KMAC",
                s
            ], w).bytepad([
                key
            ], w);
        };
        method.update = function(key, message, outputBits, s) {
            return method.create(key, outputBits, s).update(message);
        };
        return createOutputMethods(method, createKmacOutputMethod, bits, padding);
    };
    var algorithms = [
        {
            name: "keccak",
            padding: KECCAK_PADDING,
            bits: BITS,
            createMethod: createMethod
        },
        {
            name: "sha3",
            padding: PADDING,
            bits: BITS,
            createMethod: createMethod
        },
        {
            name: "shake",
            padding: SHAKE_PADDING,
            bits: SHAKE_BITS,
            createMethod: createShakeMethod
        },
        {
            name: "cshake",
            padding: CSHAKE_PADDING,
            bits: SHAKE_BITS,
            createMethod: createCshakeMethod
        },
        {
            name: "kmac",
            padding: CSHAKE_PADDING,
            bits: SHAKE_BITS,
            createMethod: createKmacMethod
        }
    ];
    var methods = {}, methodNames = [];
    for(var i = 0; i < algorithms.length; ++i){
        var algorithm = algorithms[i];
        var bits = algorithm.bits;
        for(var j = 0; j < bits.length; ++j){
            var methodName = algorithm.name + "_" + bits[j];
            methodNames.push(methodName);
            methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
            if (algorithm.name !== "sha3") {
                var newMethodName = algorithm.name + bits[j];
                methodNames.push(newMethodName);
                methods[newMethodName] = methods[methodName];
            }
        }
    }
    function Keccak(bits, padding, outputBits) {
        this.blocks = [];
        this.s = [];
        this.padding = padding;
        this.outputBits = outputBits;
        this.reset = true;
        this.finalized = false;
        this.block = 0;
        this.start = 0;
        this.blockCount = 1600 - (bits << 1) >> 5;
        this.byteCount = this.blockCount << 2;
        this.outputBlocks = outputBits >> 5;
        this.extraBytes = (outputBits & 31) >> 3;
        for(var i = 0; i < 50; ++i)this.s[i] = 0;
    }
    Keccak.prototype.update = function(message) {
        if (this.finalized) throw new Error(FINALIZE_ERROR);
        var notString, type = typeof message;
        if (type !== "string") {
            if (type === "object") {
                if (message === null) throw new Error(INPUT_ERROR);
                else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) message = new Uint8Array(message);
                else if (!Array.isArray(message)) {
                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) throw new Error(INPUT_ERROR);
                }
            } else throw new Error(INPUT_ERROR);
            notString = true;
        }
        var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index = 0, s = this.s, i, code;
        while(index < length){
            if (this.reset) {
                this.reset = false;
                blocks[0] = this.block;
                for(i = 1; i < blockCount + 1; ++i)blocks[i] = 0;
            }
            if (notString) for(i = this.start; index < length && i < byteCount; ++index)blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
            else for(i = this.start; index < length && i < byteCount; ++index){
                code = message.charCodeAt(index);
                if (code < 0x80) blocks[i >> 2] |= code << SHIFT[i++ & 3];
                else if (code < 0x800) {
                    blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];
                    blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
                } else if (code < 0xd800 || code >= 0xe000) {
                    blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];
                    blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
                    blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
                } else {
                    code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);
                    blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];
                    blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];
                    blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
                    blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
                }
            }
            this.lastByteIndex = i;
            if (i >= byteCount) {
                this.start = i - byteCount;
                this.block = blocks[blockCount];
                for(i = 0; i < blockCount; ++i)s[i] ^= blocks[i];
                f(s);
                this.reset = true;
            } else this.start = i;
        }
        return this;
    };
    Keccak.prototype.encode = function(x, right) {
        var o = x & 255, n = 1;
        var bytes = [
            o
        ];
        x = x >> 8;
        o = x & 255;
        while(o > 0){
            bytes.unshift(o);
            x = x >> 8;
            o = x & 255;
            ++n;
        }
        if (right) bytes.push(n);
        else bytes.unshift(n);
        this.update(bytes);
        return bytes.length;
    };
    Keccak.prototype.encodeString = function(str) {
        var notString, type = typeof str;
        if (type !== "string") {
            if (type === "object") {
                if (str === null) throw new Error(INPUT_ERROR);
                else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) str = new Uint8Array(str);
                else if (!Array.isArray(str)) {
                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) throw new Error(INPUT_ERROR);
                }
            } else throw new Error(INPUT_ERROR);
            notString = true;
        }
        var bytes = 0, length = str.length;
        if (notString) bytes = length;
        else for(var i = 0; i < str.length; ++i){
            var code = str.charCodeAt(i);
            if (code < 0x80) bytes += 1;
            else if (code < 0x800) bytes += 2;
            else if (code < 0xd800 || code >= 0xe000) bytes += 3;
            else {
                code = 0x10000 + ((code & 0x3ff) << 10 | str.charCodeAt(++i) & 0x3ff);
                bytes += 4;
            }
        }
        bytes += this.encode(bytes * 8);
        this.update(str);
        return bytes;
    };
    Keccak.prototype.bytepad = function(strs, w) {
        var bytes = this.encode(w);
        for(var i = 0; i < strs.length; ++i)bytes += this.encodeString(strs[i]);
        var paddingBytes = w - bytes % w;
        var zeros = [];
        zeros.length = paddingBytes;
        this.update(zeros);
        return this;
    };
    Keccak.prototype.finalize = function() {
        if (this.finalized) return;
        this.finalized = true;
        var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
        blocks[i >> 2] |= this.padding[i & 3];
        if (this.lastByteIndex === this.byteCount) {
            blocks[0] = blocks[blockCount];
            for(i = 1; i < blockCount + 1; ++i)blocks[i] = 0;
        }
        blocks[blockCount - 1] |= 0x80000000;
        for(i = 0; i < blockCount; ++i)s[i] ^= blocks[i];
        f(s);
    };
    Keccak.prototype.toString = Keccak.prototype.hex = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0;
        var hex = "", block;
        while(j < outputBlocks){
            for(i = 0; i < blockCount && j < outputBlocks; ++i, ++j){
                block = s[i];
                hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];
            }
            if (j % blockCount === 0) {
                f(s);
                i = 0;
            }
        }
        if (extraBytes) {
            block = s[i];
            hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];
            if (extraBytes > 1) hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];
            if (extraBytes > 2) hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];
        }
        return hex;
    };
    Keccak.prototype.arrayBuffer = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0;
        var bytes = this.outputBits >> 3;
        var buffer;
        if (extraBytes) buffer = new ArrayBuffer(outputBlocks + 1 << 2);
        else buffer = new ArrayBuffer(bytes);
        var array = new Uint32Array(buffer);
        while(j < outputBlocks){
            for(i = 0; i < blockCount && j < outputBlocks; ++i, ++j)array[j] = s[i];
            if (j % blockCount === 0) f(s);
        }
        if (extraBytes) {
            array[i] = s[i];
            buffer = buffer.slice(0, bytes);
        }
        return buffer;
    };
    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
    Keccak.prototype.digest = Keccak.prototype.array = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0;
        var array = [], offset, block;
        while(j < outputBlocks){
            for(i = 0; i < blockCount && j < outputBlocks; ++i, ++j){
                offset = j << 2;
                block = s[i];
                array[offset] = block & 0xFF;
                array[offset + 1] = block >> 8 & 0xFF;
                array[offset + 2] = block >> 16 & 0xFF;
                array[offset + 3] = block >> 24 & 0xFF;
            }
            if (j % blockCount === 0) f(s);
        }
        if (extraBytes) {
            offset = j << 2;
            block = s[i];
            array[offset] = block & 0xFF;
            if (extraBytes > 1) array[offset + 1] = block >> 8 & 0xFF;
            if (extraBytes > 2) array[offset + 2] = block >> 16 & 0xFF;
        }
        return array;
    };
    function Kmac(bits, padding, outputBits) {
        Keccak.call(this, bits, padding, outputBits);
    }
    Kmac.prototype = new Keccak();
    Kmac.prototype.finalize = function() {
        this.encode(this.outputBits, true);
        return Keccak.prototype.finalize.call(this);
    };
    var f = function(s) {
        var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
        for(n = 0; n < 48; n += 2){
            c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
            c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
            c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
            c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
            c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
            c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
            c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
            c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
            c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
            c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];
            h = c8 ^ (c2 << 1 | c3 >>> 31);
            l = c9 ^ (c3 << 1 | c2 >>> 31);
            s[0] ^= h;
            s[1] ^= l;
            s[10] ^= h;
            s[11] ^= l;
            s[20] ^= h;
            s[21] ^= l;
            s[30] ^= h;
            s[31] ^= l;
            s[40] ^= h;
            s[41] ^= l;
            h = c0 ^ (c4 << 1 | c5 >>> 31);
            l = c1 ^ (c5 << 1 | c4 >>> 31);
            s[2] ^= h;
            s[3] ^= l;
            s[12] ^= h;
            s[13] ^= l;
            s[22] ^= h;
            s[23] ^= l;
            s[32] ^= h;
            s[33] ^= l;
            s[42] ^= h;
            s[43] ^= l;
            h = c2 ^ (c6 << 1 | c7 >>> 31);
            l = c3 ^ (c7 << 1 | c6 >>> 31);
            s[4] ^= h;
            s[5] ^= l;
            s[14] ^= h;
            s[15] ^= l;
            s[24] ^= h;
            s[25] ^= l;
            s[34] ^= h;
            s[35] ^= l;
            s[44] ^= h;
            s[45] ^= l;
            h = c4 ^ (c8 << 1 | c9 >>> 31);
            l = c5 ^ (c9 << 1 | c8 >>> 31);
            s[6] ^= h;
            s[7] ^= l;
            s[16] ^= h;
            s[17] ^= l;
            s[26] ^= h;
            s[27] ^= l;
            s[36] ^= h;
            s[37] ^= l;
            s[46] ^= h;
            s[47] ^= l;
            h = c6 ^ (c0 << 1 | c1 >>> 31);
            l = c7 ^ (c1 << 1 | c0 >>> 31);
            s[8] ^= h;
            s[9] ^= l;
            s[18] ^= h;
            s[19] ^= l;
            s[28] ^= h;
            s[29] ^= l;
            s[38] ^= h;
            s[39] ^= l;
            s[48] ^= h;
            s[49] ^= l;
            b0 = s[0];
            b1 = s[1];
            b32 = s[11] << 4 | s[10] >>> 28;
            b33 = s[10] << 4 | s[11] >>> 28;
            b14 = s[20] << 3 | s[21] >>> 29;
            b15 = s[21] << 3 | s[20] >>> 29;
            b46 = s[31] << 9 | s[30] >>> 23;
            b47 = s[30] << 9 | s[31] >>> 23;
            b28 = s[40] << 18 | s[41] >>> 14;
            b29 = s[41] << 18 | s[40] >>> 14;
            b20 = s[2] << 1 | s[3] >>> 31;
            b21 = s[3] << 1 | s[2] >>> 31;
            b2 = s[13] << 12 | s[12] >>> 20;
            b3 = s[12] << 12 | s[13] >>> 20;
            b34 = s[22] << 10 | s[23] >>> 22;
            b35 = s[23] << 10 | s[22] >>> 22;
            b16 = s[33] << 13 | s[32] >>> 19;
            b17 = s[32] << 13 | s[33] >>> 19;
            b48 = s[42] << 2 | s[43] >>> 30;
            b49 = s[43] << 2 | s[42] >>> 30;
            b40 = s[5] << 30 | s[4] >>> 2;
            b41 = s[4] << 30 | s[5] >>> 2;
            b22 = s[14] << 6 | s[15] >>> 26;
            b23 = s[15] << 6 | s[14] >>> 26;
            b4 = s[25] << 11 | s[24] >>> 21;
            b5 = s[24] << 11 | s[25] >>> 21;
            b36 = s[34] << 15 | s[35] >>> 17;
            b37 = s[35] << 15 | s[34] >>> 17;
            b18 = s[45] << 29 | s[44] >>> 3;
            b19 = s[44] << 29 | s[45] >>> 3;
            b10 = s[6] << 28 | s[7] >>> 4;
            b11 = s[7] << 28 | s[6] >>> 4;
            b42 = s[17] << 23 | s[16] >>> 9;
            b43 = s[16] << 23 | s[17] >>> 9;
            b24 = s[26] << 25 | s[27] >>> 7;
            b25 = s[27] << 25 | s[26] >>> 7;
            b6 = s[36] << 21 | s[37] >>> 11;
            b7 = s[37] << 21 | s[36] >>> 11;
            b38 = s[47] << 24 | s[46] >>> 8;
            b39 = s[46] << 24 | s[47] >>> 8;
            b30 = s[8] << 27 | s[9] >>> 5;
            b31 = s[9] << 27 | s[8] >>> 5;
            b12 = s[18] << 20 | s[19] >>> 12;
            b13 = s[19] << 20 | s[18] >>> 12;
            b44 = s[29] << 7 | s[28] >>> 25;
            b45 = s[28] << 7 | s[29] >>> 25;
            b26 = s[38] << 8 | s[39] >>> 24;
            b27 = s[39] << 8 | s[38] >>> 24;
            b8 = s[48] << 14 | s[49] >>> 18;
            b9 = s[49] << 14 | s[48] >>> 18;
            s[0] = b0 ^ ~b2 & b4;
            s[1] = b1 ^ ~b3 & b5;
            s[10] = b10 ^ ~b12 & b14;
            s[11] = b11 ^ ~b13 & b15;
            s[20] = b20 ^ ~b22 & b24;
            s[21] = b21 ^ ~b23 & b25;
            s[30] = b30 ^ ~b32 & b34;
            s[31] = b31 ^ ~b33 & b35;
            s[40] = b40 ^ ~b42 & b44;
            s[41] = b41 ^ ~b43 & b45;
            s[2] = b2 ^ ~b4 & b6;
            s[3] = b3 ^ ~b5 & b7;
            s[12] = b12 ^ ~b14 & b16;
            s[13] = b13 ^ ~b15 & b17;
            s[22] = b22 ^ ~b24 & b26;
            s[23] = b23 ^ ~b25 & b27;
            s[32] = b32 ^ ~b34 & b36;
            s[33] = b33 ^ ~b35 & b37;
            s[42] = b42 ^ ~b44 & b46;
            s[43] = b43 ^ ~b45 & b47;
            s[4] = b4 ^ ~b6 & b8;
            s[5] = b5 ^ ~b7 & b9;
            s[14] = b14 ^ ~b16 & b18;
            s[15] = b15 ^ ~b17 & b19;
            s[24] = b24 ^ ~b26 & b28;
            s[25] = b25 ^ ~b27 & b29;
            s[34] = b34 ^ ~b36 & b38;
            s[35] = b35 ^ ~b37 & b39;
            s[44] = b44 ^ ~b46 & b48;
            s[45] = b45 ^ ~b47 & b49;
            s[6] = b6 ^ ~b8 & b0;
            s[7] = b7 ^ ~b9 & b1;
            s[16] = b16 ^ ~b18 & b10;
            s[17] = b17 ^ ~b19 & b11;
            s[26] = b26 ^ ~b28 & b20;
            s[27] = b27 ^ ~b29 & b21;
            s[36] = b36 ^ ~b38 & b30;
            s[37] = b37 ^ ~b39 & b31;
            s[46] = b46 ^ ~b48 & b40;
            s[47] = b47 ^ ~b49 & b41;
            s[8] = b8 ^ ~b0 & b2;
            s[9] = b9 ^ ~b1 & b3;
            s[18] = b18 ^ ~b10 & b12;
            s[19] = b19 ^ ~b11 & b13;
            s[28] = b28 ^ ~b20 & b22;
            s[29] = b29 ^ ~b21 & b23;
            s[38] = b38 ^ ~b30 & b32;
            s[39] = b39 ^ ~b31 & b33;
            s[48] = b48 ^ ~b40 & b42;
            s[49] = b49 ^ ~b41 & b43;
            s[0] ^= RC[n];
            s[1] ^= RC[n + 1];
        }
    };
    if (COMMON_JS) module.exports = methods;
    else {
        for(i = 0; i < methodNames.length; ++i)root[methodNames[i]] = methods[methodNames[i]];
        if (AMD) define(function() {
            return methods;
        });
    }
})();

});
parcelRequire.register("4DZrq", function(module, exports) {
// shim for using process in browser
var $361a76e6ea33591f$var$process = module.exports = {};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var $361a76e6ea33591f$var$cachedSetTimeout;
var $361a76e6ea33591f$var$cachedClearTimeout;
function $361a76e6ea33591f$var$defaultSetTimout() {
    throw new Error("setTimeout has not been defined");
}
function $361a76e6ea33591f$var$defaultClearTimeout() {
    throw new Error("clearTimeout has not been defined");
}
(function() {
    try {
        if (typeof setTimeout === "function") $361a76e6ea33591f$var$cachedSetTimeout = setTimeout;
        else $361a76e6ea33591f$var$cachedSetTimeout = $361a76e6ea33591f$var$defaultSetTimout;
    } catch (e) {
        $361a76e6ea33591f$var$cachedSetTimeout = $361a76e6ea33591f$var$defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === "function") $361a76e6ea33591f$var$cachedClearTimeout = clearTimeout;
        else $361a76e6ea33591f$var$cachedClearTimeout = $361a76e6ea33591f$var$defaultClearTimeout;
    } catch (e) {
        $361a76e6ea33591f$var$cachedClearTimeout = $361a76e6ea33591f$var$defaultClearTimeout;
    }
})();
function $361a76e6ea33591f$var$runTimeout(fun) {
    if ($361a76e6ea33591f$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if (($361a76e6ea33591f$var$cachedSetTimeout === $361a76e6ea33591f$var$defaultSetTimout || !$361a76e6ea33591f$var$cachedSetTimeout) && setTimeout) {
        $361a76e6ea33591f$var$cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return $361a76e6ea33591f$var$cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return $361a76e6ea33591f$var$cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return $361a76e6ea33591f$var$cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function $361a76e6ea33591f$var$runClearTimeout(marker) {
    if ($361a76e6ea33591f$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if (($361a76e6ea33591f$var$cachedClearTimeout === $361a76e6ea33591f$var$defaultClearTimeout || !$361a76e6ea33591f$var$cachedClearTimeout) && clearTimeout) {
        $361a76e6ea33591f$var$cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return $361a76e6ea33591f$var$cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return $361a76e6ea33591f$var$cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return $361a76e6ea33591f$var$cachedClearTimeout.call(this, marker);
        }
    }
}
var $361a76e6ea33591f$var$queue = [];
var $361a76e6ea33591f$var$draining = false;
var $361a76e6ea33591f$var$currentQueue;
var $361a76e6ea33591f$var$queueIndex = -1;
function $361a76e6ea33591f$var$cleanUpNextTick() {
    if (!$361a76e6ea33591f$var$draining || !$361a76e6ea33591f$var$currentQueue) return;
    $361a76e6ea33591f$var$draining = false;
    if ($361a76e6ea33591f$var$currentQueue.length) $361a76e6ea33591f$var$queue = $361a76e6ea33591f$var$currentQueue.concat($361a76e6ea33591f$var$queue);
    else $361a76e6ea33591f$var$queueIndex = -1;
    if ($361a76e6ea33591f$var$queue.length) $361a76e6ea33591f$var$drainQueue();
}
function $361a76e6ea33591f$var$drainQueue() {
    if ($361a76e6ea33591f$var$draining) return;
    var timeout = $361a76e6ea33591f$var$runTimeout($361a76e6ea33591f$var$cleanUpNextTick);
    $361a76e6ea33591f$var$draining = true;
    var len = $361a76e6ea33591f$var$queue.length;
    while(len){
        $361a76e6ea33591f$var$currentQueue = $361a76e6ea33591f$var$queue;
        $361a76e6ea33591f$var$queue = [];
        while(++$361a76e6ea33591f$var$queueIndex < len)if ($361a76e6ea33591f$var$currentQueue) $361a76e6ea33591f$var$currentQueue[$361a76e6ea33591f$var$queueIndex].run();
        $361a76e6ea33591f$var$queueIndex = -1;
        len = $361a76e6ea33591f$var$queue.length;
    }
    $361a76e6ea33591f$var$currentQueue = null;
    $361a76e6ea33591f$var$draining = false;
    $361a76e6ea33591f$var$runClearTimeout(timeout);
}
$361a76e6ea33591f$var$process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    $361a76e6ea33591f$var$queue.push(new $361a76e6ea33591f$var$Item(fun, args));
    if ($361a76e6ea33591f$var$queue.length === 1 && !$361a76e6ea33591f$var$draining) $361a76e6ea33591f$var$runTimeout($361a76e6ea33591f$var$drainQueue);
};
// v8 likes predictible objects
function $361a76e6ea33591f$var$Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
$361a76e6ea33591f$var$Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
$361a76e6ea33591f$var$process.title = "browser";
$361a76e6ea33591f$var$process.browser = true;
$361a76e6ea33591f$var$process.env = {};
$361a76e6ea33591f$var$process.argv = [];
$361a76e6ea33591f$var$process.version = ""; // empty string to avoid regexp issues
$361a76e6ea33591f$var$process.versions = {};
function $361a76e6ea33591f$var$noop() {}
$361a76e6ea33591f$var$process.on = $361a76e6ea33591f$var$noop;
$361a76e6ea33591f$var$process.addListener = $361a76e6ea33591f$var$noop;
$361a76e6ea33591f$var$process.once = $361a76e6ea33591f$var$noop;
$361a76e6ea33591f$var$process.off = $361a76e6ea33591f$var$noop;
$361a76e6ea33591f$var$process.removeListener = $361a76e6ea33591f$var$noop;
$361a76e6ea33591f$var$process.removeAllListeners = $361a76e6ea33591f$var$noop;
$361a76e6ea33591f$var$process.emit = $361a76e6ea33591f$var$noop;
$361a76e6ea33591f$var$process.prependListener = $361a76e6ea33591f$var$noop;
$361a76e6ea33591f$var$process.prependOnceListener = $361a76e6ea33591f$var$noop;
$361a76e6ea33591f$var$process.listeners = function(name) {
    return [];
};
$361a76e6ea33591f$var$process.binding = function(name) {
    throw new Error("process.binding is not supported");
};
$361a76e6ea33591f$var$process.cwd = function() {
    return "/";
};
$361a76e6ea33591f$var$process.chdir = function(dir) {
    throw new Error("process.chdir is not supported");
};
$361a76e6ea33591f$var$process.umask = function() {
    return 0;
};

});


parcelRequire.register("gaF16", function(module, exports) {

$parcel$export(module.exports, "inherits", () => $0309c3b3eea881e8$export$69f1b2dcda23c5f8, (v) => $0309c3b3eea881e8$export$69f1b2dcda23c5f8 = v);
$parcel$export(module.exports, "toArray", () => $0309c3b3eea881e8$export$45b10814cc054894, (v) => $0309c3b3eea881e8$export$45b10814cc054894 = v);
$parcel$export(module.exports, "toHex", () => $0309c3b3eea881e8$export$7ea66e3774a60b67, (v) => $0309c3b3eea881e8$export$7ea66e3774a60b67 = v);
$parcel$export(module.exports, "htonl", () => $0309c3b3eea881e8$export$34a52f00f601f6f1, (v) => $0309c3b3eea881e8$export$34a52f00f601f6f1 = v);
$parcel$export(module.exports, "toHex32", () => $0309c3b3eea881e8$export$812b0cbd5e8a72ab, (v) => $0309c3b3eea881e8$export$812b0cbd5e8a72ab = v);
$parcel$export(module.exports, "zero2", () => $0309c3b3eea881e8$export$f24f9e11d63bb314, (v) => $0309c3b3eea881e8$export$f24f9e11d63bb314 = v);
$parcel$export(module.exports, "zero8", () => $0309c3b3eea881e8$export$b71357c7e07ca1f1, (v) => $0309c3b3eea881e8$export$b71357c7e07ca1f1 = v);
$parcel$export(module.exports, "join32", () => $0309c3b3eea881e8$export$2e58a4b541fdcbe8, (v) => $0309c3b3eea881e8$export$2e58a4b541fdcbe8 = v);
$parcel$export(module.exports, "split32", () => $0309c3b3eea881e8$export$183b950bde9faab8, (v) => $0309c3b3eea881e8$export$183b950bde9faab8 = v);
$parcel$export(module.exports, "rotr32", () => $0309c3b3eea881e8$export$4785c77169fea59e, (v) => $0309c3b3eea881e8$export$4785c77169fea59e = v);
$parcel$export(module.exports, "rotl32", () => $0309c3b3eea881e8$export$242a185dfcffac5b, (v) => $0309c3b3eea881e8$export$242a185dfcffac5b = v);
$parcel$export(module.exports, "sum32", () => $0309c3b3eea881e8$export$58c04ae0ae31877d, (v) => $0309c3b3eea881e8$export$58c04ae0ae31877d = v);
$parcel$export(module.exports, "sum32_3", () => $0309c3b3eea881e8$export$d058ca695f8c6f11, (v) => $0309c3b3eea881e8$export$d058ca695f8c6f11 = v);
$parcel$export(module.exports, "sum32_4", () => $0309c3b3eea881e8$export$a1efd7fc3e986367, (v) => $0309c3b3eea881e8$export$a1efd7fc3e986367 = v);
$parcel$export(module.exports, "sum32_5", () => $0309c3b3eea881e8$export$bbfea4a2b5abaab4, (v) => $0309c3b3eea881e8$export$bbfea4a2b5abaab4 = v);
$parcel$export(module.exports, "sum64", () => $0309c3b3eea881e8$export$97ad4afc7de86152, (v) => $0309c3b3eea881e8$export$97ad4afc7de86152 = v);
$parcel$export(module.exports, "sum64_hi", () => $0309c3b3eea881e8$export$ce4673d9a79f6a4b, (v) => $0309c3b3eea881e8$export$ce4673d9a79f6a4b = v);
$parcel$export(module.exports, "sum64_lo", () => $0309c3b3eea881e8$export$786cc99fc6eedc0b, (v) => $0309c3b3eea881e8$export$786cc99fc6eedc0b = v);
$parcel$export(module.exports, "sum64_4_hi", () => $0309c3b3eea881e8$export$45c59b9a1848dd0, (v) => $0309c3b3eea881e8$export$45c59b9a1848dd0 = v);
$parcel$export(module.exports, "sum64_4_lo", () => $0309c3b3eea881e8$export$50d8f613e76d3034, (v) => $0309c3b3eea881e8$export$50d8f613e76d3034 = v);
$parcel$export(module.exports, "sum64_5_hi", () => $0309c3b3eea881e8$export$b8e83683c60ee162, (v) => $0309c3b3eea881e8$export$b8e83683c60ee162 = v);
$parcel$export(module.exports, "sum64_5_lo", () => $0309c3b3eea881e8$export$aeeb51790d1bcc4a, (v) => $0309c3b3eea881e8$export$aeeb51790d1bcc4a = v);
$parcel$export(module.exports, "rotr64_hi", () => $0309c3b3eea881e8$export$bb7c616f719ad9c, (v) => $0309c3b3eea881e8$export$bb7c616f719ad9c = v);
$parcel$export(module.exports, "rotr64_lo", () => $0309c3b3eea881e8$export$4d63290824f9d7df, (v) => $0309c3b3eea881e8$export$4d63290824f9d7df = v);
$parcel$export(module.exports, "shr64_hi", () => $0309c3b3eea881e8$export$2f64ceb90ef28ea1, (v) => $0309c3b3eea881e8$export$2f64ceb90ef28ea1 = v);
$parcel$export(module.exports, "shr64_lo", () => $0309c3b3eea881e8$export$8d2089d465f6d10d, (v) => $0309c3b3eea881e8$export$8d2089d465f6d10d = v);
var $0309c3b3eea881e8$export$69f1b2dcda23c5f8;
var $0309c3b3eea881e8$export$45b10814cc054894;
var $0309c3b3eea881e8$export$7ea66e3774a60b67;
var $0309c3b3eea881e8$export$34a52f00f601f6f1;
var $0309c3b3eea881e8$export$812b0cbd5e8a72ab;
var $0309c3b3eea881e8$export$f24f9e11d63bb314;
var $0309c3b3eea881e8$export$b71357c7e07ca1f1;
var $0309c3b3eea881e8$export$2e58a4b541fdcbe8;
var $0309c3b3eea881e8$export$183b950bde9faab8;
var $0309c3b3eea881e8$export$4785c77169fea59e;
var $0309c3b3eea881e8$export$242a185dfcffac5b;
var $0309c3b3eea881e8$export$58c04ae0ae31877d;
var $0309c3b3eea881e8$export$d058ca695f8c6f11;
var $0309c3b3eea881e8$export$a1efd7fc3e986367;
var $0309c3b3eea881e8$export$bbfea4a2b5abaab4;
var $0309c3b3eea881e8$export$97ad4afc7de86152;
var $0309c3b3eea881e8$export$ce4673d9a79f6a4b;
var $0309c3b3eea881e8$export$786cc99fc6eedc0b;
var $0309c3b3eea881e8$export$45c59b9a1848dd0;
var $0309c3b3eea881e8$export$50d8f613e76d3034;
var $0309c3b3eea881e8$export$b8e83683c60ee162;
var $0309c3b3eea881e8$export$aeeb51790d1bcc4a;
var $0309c3b3eea881e8$export$bb7c616f719ad9c;
var $0309c3b3eea881e8$export$4d63290824f9d7df;
var $0309c3b3eea881e8$export$2f64ceb90ef28ea1;
var $0309c3b3eea881e8$export$8d2089d465f6d10d;
"use strict";

var $9lC6e = parcelRequire("9lC6e");

var $bGPXt = parcelRequire("bGPXt");
$0309c3b3eea881e8$export$69f1b2dcda23c5f8 = $bGPXt;
function $0309c3b3eea881e8$var$isSurrogatePair(msg, i) {
    if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) return false;
    if (i < 0 || i + 1 >= msg.length) return false;
    return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}
function $0309c3b3eea881e8$var$toArray(msg, enc) {
    if (Array.isArray(msg)) return msg.slice();
    if (!msg) return [];
    var res = [];
    if (typeof msg === "string") {
        if (!enc) {
            // Inspired by stringToUtf8ByteArray() in closure-library by Google
            // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
            // Apache License 2.0
            // https://github.com/google/closure-library/blob/master/LICENSE
            var p = 0;
            for(var i = 0; i < msg.length; i++){
                var c = msg.charCodeAt(i);
                if (c < 128) res[p++] = c;
                else if (c < 2048) {
                    res[p++] = c >> 6 | 192;
                    res[p++] = c & 63 | 128;
                } else if ($0309c3b3eea881e8$var$isSurrogatePair(msg, i)) {
                    c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
                    res[p++] = c >> 18 | 240;
                    res[p++] = c >> 12 & 63 | 128;
                    res[p++] = c >> 6 & 63 | 128;
                    res[p++] = c & 63 | 128;
                } else {
                    res[p++] = c >> 12 | 224;
                    res[p++] = c >> 6 & 63 | 128;
                    res[p++] = c & 63 | 128;
                }
            }
        } else if (enc === "hex") {
            msg = msg.replace(/[^a-z0-9]+/ig, "");
            if (msg.length % 2 !== 0) msg = "0" + msg;
            for(i = 0; i < msg.length; i += 2)res.push(parseInt(msg[i] + msg[i + 1], 16));
        }
    } else for(i = 0; i < msg.length; i++)res[i] = msg[i] | 0;
    return res;
}
$0309c3b3eea881e8$export$45b10814cc054894 = $0309c3b3eea881e8$var$toArray;
function $0309c3b3eea881e8$var$toHex(msg) {
    var res = "";
    for(var i = 0; i < msg.length; i++)res += $0309c3b3eea881e8$var$zero2(msg[i].toString(16));
    return res;
}
$0309c3b3eea881e8$export$7ea66e3774a60b67 = $0309c3b3eea881e8$var$toHex;
function $0309c3b3eea881e8$var$htonl(w) {
    var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;
    return res >>> 0;
}
$0309c3b3eea881e8$export$34a52f00f601f6f1 = $0309c3b3eea881e8$var$htonl;
function $0309c3b3eea881e8$var$toHex32(msg, endian) {
    var res = "";
    for(var i = 0; i < msg.length; i++){
        var w = msg[i];
        if (endian === "little") w = $0309c3b3eea881e8$var$htonl(w);
        res += $0309c3b3eea881e8$var$zero8(w.toString(16));
    }
    return res;
}
$0309c3b3eea881e8$export$812b0cbd5e8a72ab = $0309c3b3eea881e8$var$toHex32;
function $0309c3b3eea881e8$var$zero2(word) {
    if (word.length === 1) return "0" + word;
    else return word;
}
$0309c3b3eea881e8$export$f24f9e11d63bb314 = $0309c3b3eea881e8$var$zero2;
function $0309c3b3eea881e8$var$zero8(word) {
    if (word.length === 7) return "0" + word;
    else if (word.length === 6) return "00" + word;
    else if (word.length === 5) return "000" + word;
    else if (word.length === 4) return "0000" + word;
    else if (word.length === 3) return "00000" + word;
    else if (word.length === 2) return "000000" + word;
    else if (word.length === 1) return "0000000" + word;
    else return word;
}
$0309c3b3eea881e8$export$b71357c7e07ca1f1 = $0309c3b3eea881e8$var$zero8;
function $0309c3b3eea881e8$var$join32(msg, start, end, endian) {
    var len = end - start;
    $9lC6e(len % 4 === 0);
    var res = new Array(len / 4);
    for(var i = 0, k = start; i < res.length; i++, k += 4){
        var w;
        if (endian === "big") w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];
        else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
        res[i] = w >>> 0;
    }
    return res;
}
$0309c3b3eea881e8$export$2e58a4b541fdcbe8 = $0309c3b3eea881e8$var$join32;
function $0309c3b3eea881e8$var$split32(msg, endian) {
    var res = new Array(msg.length * 4);
    for(var i = 0, k = 0; i < msg.length; i++, k += 4){
        var m = msg[i];
        if (endian === "big") {
            res[k] = m >>> 24;
            res[k + 1] = m >>> 16 & 0xff;
            res[k + 2] = m >>> 8 & 0xff;
            res[k + 3] = m & 0xff;
        } else {
            res[k + 3] = m >>> 24;
            res[k + 2] = m >>> 16 & 0xff;
            res[k + 1] = m >>> 8 & 0xff;
            res[k] = m & 0xff;
        }
    }
    return res;
}
$0309c3b3eea881e8$export$183b950bde9faab8 = $0309c3b3eea881e8$var$split32;
function $0309c3b3eea881e8$var$rotr32(w, b) {
    return w >>> b | w << 32 - b;
}
$0309c3b3eea881e8$export$4785c77169fea59e = $0309c3b3eea881e8$var$rotr32;
function $0309c3b3eea881e8$var$rotl32(w, b) {
    return w << b | w >>> 32 - b;
}
$0309c3b3eea881e8$export$242a185dfcffac5b = $0309c3b3eea881e8$var$rotl32;
function $0309c3b3eea881e8$var$sum32(a, b) {
    return a + b >>> 0;
}
$0309c3b3eea881e8$export$58c04ae0ae31877d = $0309c3b3eea881e8$var$sum32;
function $0309c3b3eea881e8$var$sum32_3(a, b, c) {
    return a + b + c >>> 0;
}
$0309c3b3eea881e8$export$d058ca695f8c6f11 = $0309c3b3eea881e8$var$sum32_3;
function $0309c3b3eea881e8$var$sum32_4(a, b, c, d) {
    return a + b + c + d >>> 0;
}
$0309c3b3eea881e8$export$a1efd7fc3e986367 = $0309c3b3eea881e8$var$sum32_4;
function $0309c3b3eea881e8$var$sum32_5(a, b, c, d, e) {
    return a + b + c + d + e >>> 0;
}
$0309c3b3eea881e8$export$bbfea4a2b5abaab4 = $0309c3b3eea881e8$var$sum32_5;
function $0309c3b3eea881e8$var$sum64(buf, pos, ah, al) {
    var bh = buf[pos];
    var bl = buf[pos + 1];
    var lo = al + bl >>> 0;
    var hi = (lo < al ? 1 : 0) + ah + bh;
    buf[pos] = hi >>> 0;
    buf[pos + 1] = lo;
}
$0309c3b3eea881e8$export$97ad4afc7de86152 = $0309c3b3eea881e8$var$sum64;
function $0309c3b3eea881e8$var$sum64_hi(ah, al, bh, bl) {
    var lo = al + bl >>> 0;
    var hi = (lo < al ? 1 : 0) + ah + bh;
    return hi >>> 0;
}
$0309c3b3eea881e8$export$ce4673d9a79f6a4b = $0309c3b3eea881e8$var$sum64_hi;
function $0309c3b3eea881e8$var$sum64_lo(ah, al, bh, bl) {
    var lo = al + bl;
    return lo >>> 0;
}
$0309c3b3eea881e8$export$786cc99fc6eedc0b = $0309c3b3eea881e8$var$sum64_lo;
function $0309c3b3eea881e8$var$sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
    var carry = 0;
    var lo = al;
    lo = lo + bl >>> 0;
    carry += lo < al ? 1 : 0;
    lo = lo + cl >>> 0;
    carry += lo < cl ? 1 : 0;
    lo = lo + dl >>> 0;
    carry += lo < dl ? 1 : 0;
    var hi = ah + bh + ch + dh + carry;
    return hi >>> 0;
}
$0309c3b3eea881e8$export$45c59b9a1848dd0 = $0309c3b3eea881e8$var$sum64_4_hi;
function $0309c3b3eea881e8$var$sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
    var lo = al + bl + cl + dl;
    return lo >>> 0;
}
$0309c3b3eea881e8$export$50d8f613e76d3034 = $0309c3b3eea881e8$var$sum64_4_lo;
function $0309c3b3eea881e8$var$sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
    var carry = 0;
    var lo = al;
    lo = lo + bl >>> 0;
    carry += lo < al ? 1 : 0;
    lo = lo + cl >>> 0;
    carry += lo < cl ? 1 : 0;
    lo = lo + dl >>> 0;
    carry += lo < dl ? 1 : 0;
    lo = lo + el >>> 0;
    carry += lo < el ? 1 : 0;
    var hi = ah + bh + ch + dh + eh + carry;
    return hi >>> 0;
}
$0309c3b3eea881e8$export$b8e83683c60ee162 = $0309c3b3eea881e8$var$sum64_5_hi;
function $0309c3b3eea881e8$var$sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
    var lo = al + bl + cl + dl + el;
    return lo >>> 0;
}
$0309c3b3eea881e8$export$aeeb51790d1bcc4a = $0309c3b3eea881e8$var$sum64_5_lo;
function $0309c3b3eea881e8$var$rotr64_hi(ah, al, num) {
    var r = al << 32 - num | ah >>> num;
    return r >>> 0;
}
$0309c3b3eea881e8$export$bb7c616f719ad9c = $0309c3b3eea881e8$var$rotr64_hi;
function $0309c3b3eea881e8$var$rotr64_lo(ah, al, num) {
    var r = ah << 32 - num | al >>> num;
    return r >>> 0;
}
$0309c3b3eea881e8$export$4d63290824f9d7df = $0309c3b3eea881e8$var$rotr64_lo;
function $0309c3b3eea881e8$var$shr64_hi(ah, al, num) {
    return ah >>> num;
}
$0309c3b3eea881e8$export$2f64ceb90ef28ea1 = $0309c3b3eea881e8$var$shr64_hi;
function $0309c3b3eea881e8$var$shr64_lo(ah, al, num) {
    var r = ah << 32 - num | al >>> num;
    return r >>> 0;
}
$0309c3b3eea881e8$export$8d2089d465f6d10d = $0309c3b3eea881e8$var$shr64_lo;

});
parcelRequire.register("9lC6e", function(module, exports) {
module.exports = $6ce3a0fc5e6bc630$var$assert;
function $6ce3a0fc5e6bc630$var$assert(val, msg) {
    if (!val) throw new Error(msg || "Assertion failed");
}
$6ce3a0fc5e6bc630$var$assert.equal = function assertEqual(l, r, msg) {
    if (l != r) throw new Error(msg || "Assertion failed: " + l + " != " + r);
};

});

parcelRequire.register("bGPXt", function(module, exports) {
if (typeof Object.create === "function") // implementation from standard node.js 'util' module
module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
                value: ctor,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
    }
};
else // old school shim for old browsers
module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {};
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
};

});


parcelRequire.register("eHcpu", function(module, exports) {

$parcel$export(module.exports, "BlockHash", () => $ab2eb53c11720ca8$export$8687658379b577e6, (v) => $ab2eb53c11720ca8$export$8687658379b577e6 = v);
var $ab2eb53c11720ca8$export$8687658379b577e6;
"use strict";

var $gaF16 = parcelRequire("gaF16");

var $9lC6e = parcelRequire("9lC6e");
function $ab2eb53c11720ca8$var$BlockHash() {
    this.pending = null;
    this.pendingTotal = 0;
    this.blockSize = this.constructor.blockSize;
    this.outSize = this.constructor.outSize;
    this.hmacStrength = this.constructor.hmacStrength;
    this.padLength = this.constructor.padLength / 8;
    this.endian = "big";
    this._delta8 = this.blockSize / 8;
    this._delta32 = this.blockSize / 32;
}
$ab2eb53c11720ca8$export$8687658379b577e6 = $ab2eb53c11720ca8$var$BlockHash;
$ab2eb53c11720ca8$var$BlockHash.prototype.update = function update(msg, enc) {
    // Convert message to array, pad it, and join into 32bit blocks
    msg = $gaF16.toArray(msg, enc);
    if (!this.pending) this.pending = msg;
    else this.pending = this.pending.concat(msg);
    this.pendingTotal += msg.length;
    // Enough data, try updating
    if (this.pending.length >= this._delta8) {
        msg = this.pending;
        // Process pending data in blocks
        var r = msg.length % this._delta8;
        this.pending = msg.slice(msg.length - r, msg.length);
        if (this.pending.length === 0) this.pending = null;
        msg = $gaF16.join32(msg, 0, msg.length - r, this.endian);
        for(var i = 0; i < msg.length; i += this._delta32)this._update(msg, i, i + this._delta32);
    }
    return this;
};
$ab2eb53c11720ca8$var$BlockHash.prototype.digest = function digest(enc) {
    this.update(this._pad());
    $9lC6e(this.pending === null);
    return this._digest(enc);
};
$ab2eb53c11720ca8$var$BlockHash.prototype._pad = function pad() {
    var len = this.pendingTotal;
    var bytes = this._delta8;
    var k = bytes - (len + this.padLength) % bytes;
    var res = new Array(k + this.padLength);
    res[0] = 0x80;
    for(var i = 1; i < k; i++)res[i] = 0;
    // Append length
    len <<= 3;
    if (this.endian === "big") {
        for(var t = 8; t < this.padLength; t++)res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = len >>> 24 & 0xff;
        res[i++] = len >>> 16 & 0xff;
        res[i++] = len >>> 8 & 0xff;
        res[i++] = len & 0xff;
    } else {
        res[i++] = len & 0xff;
        res[i++] = len >>> 8 & 0xff;
        res[i++] = len >>> 16 & 0xff;
        res[i++] = len >>> 24 & 0xff;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        for(t = 8; t < this.padLength; t++)res[i++] = 0;
    }
    return res;
};

});

parcelRequire.register("bUUae", function(module, exports) {

$parcel$export(module.exports, "sha1", () => $8ad07dadeaf3548a$export$5091bdda49ba90f5, (v) => $8ad07dadeaf3548a$export$5091bdda49ba90f5 = v);
$parcel$export(module.exports, "sha224", () => $8ad07dadeaf3548a$export$97b70509d4e397ea, (v) => $8ad07dadeaf3548a$export$97b70509d4e397ea = v);
$parcel$export(module.exports, "sha256", () => $8ad07dadeaf3548a$export$bced8d2aada2d1c9, (v) => $8ad07dadeaf3548a$export$bced8d2aada2d1c9 = v);
$parcel$export(module.exports, "sha384", () => $8ad07dadeaf3548a$export$612d47d55dedde45, (v) => $8ad07dadeaf3548a$export$612d47d55dedde45 = v);
$parcel$export(module.exports, "sha512", () => $8ad07dadeaf3548a$export$a888d2532e6dc7bb, (v) => $8ad07dadeaf3548a$export$a888d2532e6dc7bb = v);
var $8ad07dadeaf3548a$export$5091bdda49ba90f5;
var $8ad07dadeaf3548a$export$97b70509d4e397ea;
var $8ad07dadeaf3548a$export$bced8d2aada2d1c9;
var $8ad07dadeaf3548a$export$612d47d55dedde45;
var $8ad07dadeaf3548a$export$a888d2532e6dc7bb;
"use strict";

$8ad07dadeaf3548a$export$5091bdda49ba90f5 = (parcelRequire("aUq2C"));

$8ad07dadeaf3548a$export$97b70509d4e397ea = (parcelRequire("1McXs"));

$8ad07dadeaf3548a$export$bced8d2aada2d1c9 = (parcelRequire("jUAlO"));

$8ad07dadeaf3548a$export$612d47d55dedde45 = (parcelRequire("2ekMO"));

$8ad07dadeaf3548a$export$a888d2532e6dc7bb = (parcelRequire("aHnRV"));

});
parcelRequire.register("aUq2C", function(module, exports) {
"use strict";

var $gaF16 = parcelRequire("gaF16");

var $eHcpu = parcelRequire("eHcpu");

var $gx7Zq = parcelRequire("gx7Zq");
var $7f135593a03029b8$var$rotl32 = $gaF16.rotl32;
var $7f135593a03029b8$var$sum32 = $gaF16.sum32;
var $7f135593a03029b8$var$sum32_5 = $gaF16.sum32_5;
var $7f135593a03029b8$var$ft_1 = $gx7Zq.ft_1;
var $7f135593a03029b8$var$BlockHash = $eHcpu.BlockHash;
var $7f135593a03029b8$var$sha1_K = [
    0x5A827999,
    0x6ED9EBA1,
    0x8F1BBCDC,
    0xCA62C1D6
];
function $7f135593a03029b8$var$SHA1() {
    if (!(this instanceof $7f135593a03029b8$var$SHA1)) return new $7f135593a03029b8$var$SHA1();
    $7f135593a03029b8$var$BlockHash.call(this);
    this.h = [
        0x67452301,
        0xefcdab89,
        0x98badcfe,
        0x10325476,
        0xc3d2e1f0
    ];
    this.W = new Array(80);
}
$gaF16.inherits($7f135593a03029b8$var$SHA1, $7f135593a03029b8$var$BlockHash);
module.exports = $7f135593a03029b8$var$SHA1;
$7f135593a03029b8$var$SHA1.blockSize = 512;
$7f135593a03029b8$var$SHA1.outSize = 160;
$7f135593a03029b8$var$SHA1.hmacStrength = 80;
$7f135593a03029b8$var$SHA1.padLength = 64;
$7f135593a03029b8$var$SHA1.prototype._update = function _update(msg, start) {
    var W = this.W;
    for(var i = 0; i < 16; i++)W[i] = msg[start + i];
    for(; i < W.length; i++)W[i] = $7f135593a03029b8$var$rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
    var a = this.h[0];
    var b = this.h[1];
    var c = this.h[2];
    var d = this.h[3];
    var e = this.h[4];
    for(i = 0; i < W.length; i++){
        var s = ~~(i / 20);
        var t = $7f135593a03029b8$var$sum32_5($7f135593a03029b8$var$rotl32(a, 5), $7f135593a03029b8$var$ft_1(s, b, c, d), e, W[i], $7f135593a03029b8$var$sha1_K[s]);
        e = d;
        d = c;
        c = $7f135593a03029b8$var$rotl32(b, 30);
        b = a;
        a = t;
    }
    this.h[0] = $7f135593a03029b8$var$sum32(this.h[0], a);
    this.h[1] = $7f135593a03029b8$var$sum32(this.h[1], b);
    this.h[2] = $7f135593a03029b8$var$sum32(this.h[2], c);
    this.h[3] = $7f135593a03029b8$var$sum32(this.h[3], d);
    this.h[4] = $7f135593a03029b8$var$sum32(this.h[4], e);
};
$7f135593a03029b8$var$SHA1.prototype._digest = function digest(enc) {
    if (enc === "hex") return $gaF16.toHex32(this.h, "big");
    else return $gaF16.split32(this.h, "big");
};

});
parcelRequire.register("gx7Zq", function(module, exports) {

$parcel$export(module.exports, "ft_1", () => $c095ecfaff4baec2$export$5a92649d7ddb9f63, (v) => $c095ecfaff4baec2$export$5a92649d7ddb9f63 = v);
$parcel$export(module.exports, "ch32", () => $c095ecfaff4baec2$export$c6d0d020c3a6269, (v) => $c095ecfaff4baec2$export$c6d0d020c3a6269 = v);
$parcel$export(module.exports, "maj32", () => $c095ecfaff4baec2$export$eb90c27fca05f956, (v) => $c095ecfaff4baec2$export$eb90c27fca05f956 = v);
$parcel$export(module.exports, "s0_256", () => $c095ecfaff4baec2$export$14a4a98e063b1999, (v) => $c095ecfaff4baec2$export$14a4a98e063b1999 = v);
$parcel$export(module.exports, "s1_256", () => $c095ecfaff4baec2$export$d20cecfa1564c686, (v) => $c095ecfaff4baec2$export$d20cecfa1564c686 = v);
$parcel$export(module.exports, "g0_256", () => $c095ecfaff4baec2$export$44fd472a12fc6db, (v) => $c095ecfaff4baec2$export$44fd472a12fc6db = v);
$parcel$export(module.exports, "g1_256", () => $c095ecfaff4baec2$export$1ed238bb6ea1dd47, (v) => $c095ecfaff4baec2$export$1ed238bb6ea1dd47 = v);
var $c095ecfaff4baec2$export$5a92649d7ddb9f63;
var $c095ecfaff4baec2$export$c6d0d020c3a6269;
var $c095ecfaff4baec2$export$eb90c27fca05f956;
var $c095ecfaff4baec2$export$cc992891a14496a1;
var $c095ecfaff4baec2$export$14a4a98e063b1999;
var $c095ecfaff4baec2$export$d20cecfa1564c686;
var $c095ecfaff4baec2$export$44fd472a12fc6db;
var $c095ecfaff4baec2$export$1ed238bb6ea1dd47;
"use strict";

var $gaF16 = parcelRequire("gaF16");
var $c095ecfaff4baec2$var$rotr32 = $gaF16.rotr32;
function $c095ecfaff4baec2$var$ft_1(s, x, y, z) {
    if (s === 0) return $c095ecfaff4baec2$var$ch32(x, y, z);
    if (s === 1 || s === 3) return $c095ecfaff4baec2$var$p32(x, y, z);
    if (s === 2) return $c095ecfaff4baec2$var$maj32(x, y, z);
}
$c095ecfaff4baec2$export$5a92649d7ddb9f63 = $c095ecfaff4baec2$var$ft_1;
function $c095ecfaff4baec2$var$ch32(x, y, z) {
    return x & y ^ ~x & z;
}
$c095ecfaff4baec2$export$c6d0d020c3a6269 = $c095ecfaff4baec2$var$ch32;
function $c095ecfaff4baec2$var$maj32(x, y, z) {
    return x & y ^ x & z ^ y & z;
}
$c095ecfaff4baec2$export$eb90c27fca05f956 = $c095ecfaff4baec2$var$maj32;
function $c095ecfaff4baec2$var$p32(x, y, z) {
    return x ^ y ^ z;
}
$c095ecfaff4baec2$export$cc992891a14496a1 = $c095ecfaff4baec2$var$p32;
function $c095ecfaff4baec2$var$s0_256(x) {
    return $c095ecfaff4baec2$var$rotr32(x, 2) ^ $c095ecfaff4baec2$var$rotr32(x, 13) ^ $c095ecfaff4baec2$var$rotr32(x, 22);
}
$c095ecfaff4baec2$export$14a4a98e063b1999 = $c095ecfaff4baec2$var$s0_256;
function $c095ecfaff4baec2$var$s1_256(x) {
    return $c095ecfaff4baec2$var$rotr32(x, 6) ^ $c095ecfaff4baec2$var$rotr32(x, 11) ^ $c095ecfaff4baec2$var$rotr32(x, 25);
}
$c095ecfaff4baec2$export$d20cecfa1564c686 = $c095ecfaff4baec2$var$s1_256;
function $c095ecfaff4baec2$var$g0_256(x) {
    return $c095ecfaff4baec2$var$rotr32(x, 7) ^ $c095ecfaff4baec2$var$rotr32(x, 18) ^ x >>> 3;
}
$c095ecfaff4baec2$export$44fd472a12fc6db = $c095ecfaff4baec2$var$g0_256;
function $c095ecfaff4baec2$var$g1_256(x) {
    return $c095ecfaff4baec2$var$rotr32(x, 17) ^ $c095ecfaff4baec2$var$rotr32(x, 19) ^ x >>> 10;
}
$c095ecfaff4baec2$export$1ed238bb6ea1dd47 = $c095ecfaff4baec2$var$g1_256;

});


parcelRequire.register("1McXs", function(module, exports) {
"use strict";

var $gaF16 = parcelRequire("gaF16");

var $jUAlO = parcelRequire("jUAlO");
function $14b45356f3fd9e6f$var$SHA224() {
    if (!(this instanceof $14b45356f3fd9e6f$var$SHA224)) return new $14b45356f3fd9e6f$var$SHA224();
    $jUAlO.call(this);
    this.h = [
        0xc1059ed8,
        0x367cd507,
        0x3070dd17,
        0xf70e5939,
        0xffc00b31,
        0x68581511,
        0x64f98fa7,
        0xbefa4fa4
    ];
}
$gaF16.inherits($14b45356f3fd9e6f$var$SHA224, $jUAlO);
module.exports = $14b45356f3fd9e6f$var$SHA224;
$14b45356f3fd9e6f$var$SHA224.blockSize = 512;
$14b45356f3fd9e6f$var$SHA224.outSize = 224;
$14b45356f3fd9e6f$var$SHA224.hmacStrength = 192;
$14b45356f3fd9e6f$var$SHA224.padLength = 64;
$14b45356f3fd9e6f$var$SHA224.prototype._digest = function digest(enc) {
    // Just truncate output
    if (enc === "hex") return $gaF16.toHex32(this.h.slice(0, 7), "big");
    else return $gaF16.split32(this.h.slice(0, 7), "big");
};

});
parcelRequire.register("jUAlO", function(module, exports) {
"use strict";

var $gaF16 = parcelRequire("gaF16");

var $eHcpu = parcelRequire("eHcpu");

var $gx7Zq = parcelRequire("gx7Zq");

var $9lC6e = parcelRequire("9lC6e");
var $e7ef71ca81609f26$var$sum32 = $gaF16.sum32;
var $e7ef71ca81609f26$var$sum32_4 = $gaF16.sum32_4;
var $e7ef71ca81609f26$var$sum32_5 = $gaF16.sum32_5;
var $e7ef71ca81609f26$var$ch32 = $gx7Zq.ch32;
var $e7ef71ca81609f26$var$maj32 = $gx7Zq.maj32;
var $e7ef71ca81609f26$var$s0_256 = $gx7Zq.s0_256;
var $e7ef71ca81609f26$var$s1_256 = $gx7Zq.s1_256;
var $e7ef71ca81609f26$var$g0_256 = $gx7Zq.g0_256;
var $e7ef71ca81609f26$var$g1_256 = $gx7Zq.g1_256;
var $e7ef71ca81609f26$var$BlockHash = $eHcpu.BlockHash;
var $e7ef71ca81609f26$var$sha256_K = [
    0x428a2f98,
    0x71374491,
    0xb5c0fbcf,
    0xe9b5dba5,
    0x3956c25b,
    0x59f111f1,
    0x923f82a4,
    0xab1c5ed5,
    0xd807aa98,
    0x12835b01,
    0x243185be,
    0x550c7dc3,
    0x72be5d74,
    0x80deb1fe,
    0x9bdc06a7,
    0xc19bf174,
    0xe49b69c1,
    0xefbe4786,
    0x0fc19dc6,
    0x240ca1cc,
    0x2de92c6f,
    0x4a7484aa,
    0x5cb0a9dc,
    0x76f988da,
    0x983e5152,
    0xa831c66d,
    0xb00327c8,
    0xbf597fc7,
    0xc6e00bf3,
    0xd5a79147,
    0x06ca6351,
    0x14292967,
    0x27b70a85,
    0x2e1b2138,
    0x4d2c6dfc,
    0x53380d13,
    0x650a7354,
    0x766a0abb,
    0x81c2c92e,
    0x92722c85,
    0xa2bfe8a1,
    0xa81a664b,
    0xc24b8b70,
    0xc76c51a3,
    0xd192e819,
    0xd6990624,
    0xf40e3585,
    0x106aa070,
    0x19a4c116,
    0x1e376c08,
    0x2748774c,
    0x34b0bcb5,
    0x391c0cb3,
    0x4ed8aa4a,
    0x5b9cca4f,
    0x682e6ff3,
    0x748f82ee,
    0x78a5636f,
    0x84c87814,
    0x8cc70208,
    0x90befffa,
    0xa4506ceb,
    0xbef9a3f7,
    0xc67178f2
];
function $e7ef71ca81609f26$var$SHA256() {
    if (!(this instanceof $e7ef71ca81609f26$var$SHA256)) return new $e7ef71ca81609f26$var$SHA256();
    $e7ef71ca81609f26$var$BlockHash.call(this);
    this.h = [
        0x6a09e667,
        0xbb67ae85,
        0x3c6ef372,
        0xa54ff53a,
        0x510e527f,
        0x9b05688c,
        0x1f83d9ab,
        0x5be0cd19
    ];
    this.k = $e7ef71ca81609f26$var$sha256_K;
    this.W = new Array(64);
}
$gaF16.inherits($e7ef71ca81609f26$var$SHA256, $e7ef71ca81609f26$var$BlockHash);
module.exports = $e7ef71ca81609f26$var$SHA256;
$e7ef71ca81609f26$var$SHA256.blockSize = 512;
$e7ef71ca81609f26$var$SHA256.outSize = 256;
$e7ef71ca81609f26$var$SHA256.hmacStrength = 192;
$e7ef71ca81609f26$var$SHA256.padLength = 64;
$e7ef71ca81609f26$var$SHA256.prototype._update = function _update(msg, start) {
    var W = this.W;
    for(var i = 0; i < 16; i++)W[i] = msg[start + i];
    for(; i < W.length; i++)W[i] = $e7ef71ca81609f26$var$sum32_4($e7ef71ca81609f26$var$g1_256(W[i - 2]), W[i - 7], $e7ef71ca81609f26$var$g0_256(W[i - 15]), W[i - 16]);
    var a = this.h[0];
    var b = this.h[1];
    var c = this.h[2];
    var d = this.h[3];
    var e = this.h[4];
    var f = this.h[5];
    var g = this.h[6];
    var h = this.h[7];
    $9lC6e(this.k.length === W.length);
    for(i = 0; i < W.length; i++){
        var T1 = $e7ef71ca81609f26$var$sum32_5(h, $e7ef71ca81609f26$var$s1_256(e), $e7ef71ca81609f26$var$ch32(e, f, g), this.k[i], W[i]);
        var T2 = $e7ef71ca81609f26$var$sum32($e7ef71ca81609f26$var$s0_256(a), $e7ef71ca81609f26$var$maj32(a, b, c));
        h = g;
        g = f;
        f = e;
        e = $e7ef71ca81609f26$var$sum32(d, T1);
        d = c;
        c = b;
        b = a;
        a = $e7ef71ca81609f26$var$sum32(T1, T2);
    }
    this.h[0] = $e7ef71ca81609f26$var$sum32(this.h[0], a);
    this.h[1] = $e7ef71ca81609f26$var$sum32(this.h[1], b);
    this.h[2] = $e7ef71ca81609f26$var$sum32(this.h[2], c);
    this.h[3] = $e7ef71ca81609f26$var$sum32(this.h[3], d);
    this.h[4] = $e7ef71ca81609f26$var$sum32(this.h[4], e);
    this.h[5] = $e7ef71ca81609f26$var$sum32(this.h[5], f);
    this.h[6] = $e7ef71ca81609f26$var$sum32(this.h[6], g);
    this.h[7] = $e7ef71ca81609f26$var$sum32(this.h[7], h);
};
$e7ef71ca81609f26$var$SHA256.prototype._digest = function digest(enc) {
    if (enc === "hex") return $gaF16.toHex32(this.h, "big");
    else return $gaF16.split32(this.h, "big");
};

});


parcelRequire.register("2ekMO", function(module, exports) {
"use strict";

var $gaF16 = parcelRequire("gaF16");

var $aHnRV = parcelRequire("aHnRV");
function $19fd03503f7e4d17$var$SHA384() {
    if (!(this instanceof $19fd03503f7e4d17$var$SHA384)) return new $19fd03503f7e4d17$var$SHA384();
    $aHnRV.call(this);
    this.h = [
        0xcbbb9d5d,
        0xc1059ed8,
        0x629a292a,
        0x367cd507,
        0x9159015a,
        0x3070dd17,
        0x152fecd8,
        0xf70e5939,
        0x67332667,
        0xffc00b31,
        0x8eb44a87,
        0x68581511,
        0xdb0c2e0d,
        0x64f98fa7,
        0x47b5481d,
        0xbefa4fa4
    ];
}
$gaF16.inherits($19fd03503f7e4d17$var$SHA384, $aHnRV);
module.exports = $19fd03503f7e4d17$var$SHA384;
$19fd03503f7e4d17$var$SHA384.blockSize = 1024;
$19fd03503f7e4d17$var$SHA384.outSize = 384;
$19fd03503f7e4d17$var$SHA384.hmacStrength = 192;
$19fd03503f7e4d17$var$SHA384.padLength = 128;
$19fd03503f7e4d17$var$SHA384.prototype._digest = function digest(enc) {
    if (enc === "hex") return $gaF16.toHex32(this.h.slice(0, 12), "big");
    else return $gaF16.split32(this.h.slice(0, 12), "big");
};

});
parcelRequire.register("aHnRV", function(module, exports) {
"use strict";

var $gaF16 = parcelRequire("gaF16");

var $eHcpu = parcelRequire("eHcpu");

var $9lC6e = parcelRequire("9lC6e");
var $7ca06f5ac29745ac$var$rotr64_hi = $gaF16.rotr64_hi;
var $7ca06f5ac29745ac$var$rotr64_lo = $gaF16.rotr64_lo;
var $7ca06f5ac29745ac$var$shr64_hi = $gaF16.shr64_hi;
var $7ca06f5ac29745ac$var$shr64_lo = $gaF16.shr64_lo;
var $7ca06f5ac29745ac$var$sum64 = $gaF16.sum64;
var $7ca06f5ac29745ac$var$sum64_hi = $gaF16.sum64_hi;
var $7ca06f5ac29745ac$var$sum64_lo = $gaF16.sum64_lo;
var $7ca06f5ac29745ac$var$sum64_4_hi = $gaF16.sum64_4_hi;
var $7ca06f5ac29745ac$var$sum64_4_lo = $gaF16.sum64_4_lo;
var $7ca06f5ac29745ac$var$sum64_5_hi = $gaF16.sum64_5_hi;
var $7ca06f5ac29745ac$var$sum64_5_lo = $gaF16.sum64_5_lo;
var $7ca06f5ac29745ac$var$BlockHash = $eHcpu.BlockHash;
var $7ca06f5ac29745ac$var$sha512_K = [
    0x428a2f98,
    0xd728ae22,
    0x71374491,
    0x23ef65cd,
    0xb5c0fbcf,
    0xec4d3b2f,
    0xe9b5dba5,
    0x8189dbbc,
    0x3956c25b,
    0xf348b538,
    0x59f111f1,
    0xb605d019,
    0x923f82a4,
    0xaf194f9b,
    0xab1c5ed5,
    0xda6d8118,
    0xd807aa98,
    0xa3030242,
    0x12835b01,
    0x45706fbe,
    0x243185be,
    0x4ee4b28c,
    0x550c7dc3,
    0xd5ffb4e2,
    0x72be5d74,
    0xf27b896f,
    0x80deb1fe,
    0x3b1696b1,
    0x9bdc06a7,
    0x25c71235,
    0xc19bf174,
    0xcf692694,
    0xe49b69c1,
    0x9ef14ad2,
    0xefbe4786,
    0x384f25e3,
    0x0fc19dc6,
    0x8b8cd5b5,
    0x240ca1cc,
    0x77ac9c65,
    0x2de92c6f,
    0x592b0275,
    0x4a7484aa,
    0x6ea6e483,
    0x5cb0a9dc,
    0xbd41fbd4,
    0x76f988da,
    0x831153b5,
    0x983e5152,
    0xee66dfab,
    0xa831c66d,
    0x2db43210,
    0xb00327c8,
    0x98fb213f,
    0xbf597fc7,
    0xbeef0ee4,
    0xc6e00bf3,
    0x3da88fc2,
    0xd5a79147,
    0x930aa725,
    0x06ca6351,
    0xe003826f,
    0x14292967,
    0x0a0e6e70,
    0x27b70a85,
    0x46d22ffc,
    0x2e1b2138,
    0x5c26c926,
    0x4d2c6dfc,
    0x5ac42aed,
    0x53380d13,
    0x9d95b3df,
    0x650a7354,
    0x8baf63de,
    0x766a0abb,
    0x3c77b2a8,
    0x81c2c92e,
    0x47edaee6,
    0x92722c85,
    0x1482353b,
    0xa2bfe8a1,
    0x4cf10364,
    0xa81a664b,
    0xbc423001,
    0xc24b8b70,
    0xd0f89791,
    0xc76c51a3,
    0x0654be30,
    0xd192e819,
    0xd6ef5218,
    0xd6990624,
    0x5565a910,
    0xf40e3585,
    0x5771202a,
    0x106aa070,
    0x32bbd1b8,
    0x19a4c116,
    0xb8d2d0c8,
    0x1e376c08,
    0x5141ab53,
    0x2748774c,
    0xdf8eeb99,
    0x34b0bcb5,
    0xe19b48a8,
    0x391c0cb3,
    0xc5c95a63,
    0x4ed8aa4a,
    0xe3418acb,
    0x5b9cca4f,
    0x7763e373,
    0x682e6ff3,
    0xd6b2b8a3,
    0x748f82ee,
    0x5defb2fc,
    0x78a5636f,
    0x43172f60,
    0x84c87814,
    0xa1f0ab72,
    0x8cc70208,
    0x1a6439ec,
    0x90befffa,
    0x23631e28,
    0xa4506ceb,
    0xde82bde9,
    0xbef9a3f7,
    0xb2c67915,
    0xc67178f2,
    0xe372532b,
    0xca273ece,
    0xea26619c,
    0xd186b8c7,
    0x21c0c207,
    0xeada7dd6,
    0xcde0eb1e,
    0xf57d4f7f,
    0xee6ed178,
    0x06f067aa,
    0x72176fba,
    0x0a637dc5,
    0xa2c898a6,
    0x113f9804,
    0xbef90dae,
    0x1b710b35,
    0x131c471b,
    0x28db77f5,
    0x23047d84,
    0x32caab7b,
    0x40c72493,
    0x3c9ebe0a,
    0x15c9bebc,
    0x431d67c4,
    0x9c100d4c,
    0x4cc5d4be,
    0xcb3e42b6,
    0x597f299c,
    0xfc657e2a,
    0x5fcb6fab,
    0x3ad6faec,
    0x6c44198c,
    0x4a475817
];
function $7ca06f5ac29745ac$var$SHA512() {
    if (!(this instanceof $7ca06f5ac29745ac$var$SHA512)) return new $7ca06f5ac29745ac$var$SHA512();
    $7ca06f5ac29745ac$var$BlockHash.call(this);
    this.h = [
        0x6a09e667,
        0xf3bcc908,
        0xbb67ae85,
        0x84caa73b,
        0x3c6ef372,
        0xfe94f82b,
        0xa54ff53a,
        0x5f1d36f1,
        0x510e527f,
        0xade682d1,
        0x9b05688c,
        0x2b3e6c1f,
        0x1f83d9ab,
        0xfb41bd6b,
        0x5be0cd19,
        0x137e2179
    ];
    this.k = $7ca06f5ac29745ac$var$sha512_K;
    this.W = new Array(160);
}
$gaF16.inherits($7ca06f5ac29745ac$var$SHA512, $7ca06f5ac29745ac$var$BlockHash);
module.exports = $7ca06f5ac29745ac$var$SHA512;
$7ca06f5ac29745ac$var$SHA512.blockSize = 1024;
$7ca06f5ac29745ac$var$SHA512.outSize = 512;
$7ca06f5ac29745ac$var$SHA512.hmacStrength = 192;
$7ca06f5ac29745ac$var$SHA512.padLength = 128;
$7ca06f5ac29745ac$var$SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
    var W = this.W;
    // 32 x 32bit words
    for(var i = 0; i < 32; i++)W[i] = msg[start + i];
    for(; i < W.length; i += 2){
        var c0_hi = $7ca06f5ac29745ac$var$g1_512_hi(W[i - 4], W[i - 3]); // i - 2
        var c0_lo = $7ca06f5ac29745ac$var$g1_512_lo(W[i - 4], W[i - 3]);
        var c1_hi = W[i - 14]; // i - 7
        var c1_lo = W[i - 13];
        var c2_hi = $7ca06f5ac29745ac$var$g0_512_hi(W[i - 30], W[i - 29]); // i - 15
        var c2_lo = $7ca06f5ac29745ac$var$g0_512_lo(W[i - 30], W[i - 29]);
        var c3_hi = W[i - 32]; // i - 16
        var c3_lo = W[i - 31];
        W[i] = $7ca06f5ac29745ac$var$sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
        W[i + 1] = $7ca06f5ac29745ac$var$sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
    }
};
$7ca06f5ac29745ac$var$SHA512.prototype._update = function _update(msg, start) {
    this._prepareBlock(msg, start);
    var W = this.W;
    var ah = this.h[0];
    var al = this.h[1];
    var bh = this.h[2];
    var bl = this.h[3];
    var ch = this.h[4];
    var cl = this.h[5];
    var dh = this.h[6];
    var dl = this.h[7];
    var eh = this.h[8];
    var el = this.h[9];
    var fh = this.h[10];
    var fl = this.h[11];
    var gh = this.h[12];
    var gl = this.h[13];
    var hh = this.h[14];
    var hl = this.h[15];
    $9lC6e(this.k.length === W.length);
    for(var i = 0; i < W.length; i += 2){
        var c0_hi = hh;
        var c0_lo = hl;
        var c1_hi = $7ca06f5ac29745ac$var$s1_512_hi(eh, el);
        var c1_lo = $7ca06f5ac29745ac$var$s1_512_lo(eh, el);
        var c2_hi = $7ca06f5ac29745ac$var$ch64_hi(eh, el, fh, fl, gh, gl);
        var c2_lo = $7ca06f5ac29745ac$var$ch64_lo(eh, el, fh, fl, gh, gl);
        var c3_hi = this.k[i];
        var c3_lo = this.k[i + 1];
        var c4_hi = W[i];
        var c4_lo = W[i + 1];
        var T1_hi = $7ca06f5ac29745ac$var$sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        var T1_lo = $7ca06f5ac29745ac$var$sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        c0_hi = $7ca06f5ac29745ac$var$s0_512_hi(ah, al);
        c0_lo = $7ca06f5ac29745ac$var$s0_512_lo(ah, al);
        c1_hi = $7ca06f5ac29745ac$var$maj64_hi(ah, al, bh, bl, ch, cl);
        c1_lo = $7ca06f5ac29745ac$var$maj64_lo(ah, al, bh, bl, ch, cl);
        var T2_hi = $7ca06f5ac29745ac$var$sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
        var T2_lo = $7ca06f5ac29745ac$var$sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        eh = $7ca06f5ac29745ac$var$sum64_hi(dh, dl, T1_hi, T1_lo);
        el = $7ca06f5ac29745ac$var$sum64_lo(dl, dl, T1_hi, T1_lo);
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        ah = $7ca06f5ac29745ac$var$sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
        al = $7ca06f5ac29745ac$var$sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
    }
    $7ca06f5ac29745ac$var$sum64(this.h, 0, ah, al);
    $7ca06f5ac29745ac$var$sum64(this.h, 2, bh, bl);
    $7ca06f5ac29745ac$var$sum64(this.h, 4, ch, cl);
    $7ca06f5ac29745ac$var$sum64(this.h, 6, dh, dl);
    $7ca06f5ac29745ac$var$sum64(this.h, 8, eh, el);
    $7ca06f5ac29745ac$var$sum64(this.h, 10, fh, fl);
    $7ca06f5ac29745ac$var$sum64(this.h, 12, gh, gl);
    $7ca06f5ac29745ac$var$sum64(this.h, 14, hh, hl);
};
$7ca06f5ac29745ac$var$SHA512.prototype._digest = function digest(enc) {
    if (enc === "hex") return $gaF16.toHex32(this.h, "big");
    else return $gaF16.split32(this.h, "big");
};
function $7ca06f5ac29745ac$var$ch64_hi(xh, xl, yh, yl, zh) {
    var r = xh & yh ^ ~xh & zh;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$ch64_lo(xh, xl, yh, yl, zh, zl) {
    var r = xl & yl ^ ~xl & zl;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$maj64_hi(xh, xl, yh, yl, zh) {
    var r = xh & yh ^ xh & zh ^ yh & zh;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$maj64_lo(xh, xl, yh, yl, zh, zl) {
    var r = xl & yl ^ xl & zl ^ yl & zl;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$s0_512_hi(xh, xl) {
    var c0_hi = $7ca06f5ac29745ac$var$rotr64_hi(xh, xl, 28);
    var c1_hi = $7ca06f5ac29745ac$var$rotr64_hi(xl, xh, 2); // 34
    var c2_hi = $7ca06f5ac29745ac$var$rotr64_hi(xl, xh, 7); // 39
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$s0_512_lo(xh, xl) {
    var c0_lo = $7ca06f5ac29745ac$var$rotr64_lo(xh, xl, 28);
    var c1_lo = $7ca06f5ac29745ac$var$rotr64_lo(xl, xh, 2); // 34
    var c2_lo = $7ca06f5ac29745ac$var$rotr64_lo(xl, xh, 7); // 39
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$s1_512_hi(xh, xl) {
    var c0_hi = $7ca06f5ac29745ac$var$rotr64_hi(xh, xl, 14);
    var c1_hi = $7ca06f5ac29745ac$var$rotr64_hi(xh, xl, 18);
    var c2_hi = $7ca06f5ac29745ac$var$rotr64_hi(xl, xh, 9); // 41
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$s1_512_lo(xh, xl) {
    var c0_lo = $7ca06f5ac29745ac$var$rotr64_lo(xh, xl, 14);
    var c1_lo = $7ca06f5ac29745ac$var$rotr64_lo(xh, xl, 18);
    var c2_lo = $7ca06f5ac29745ac$var$rotr64_lo(xl, xh, 9); // 41
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$g0_512_hi(xh, xl) {
    var c0_hi = $7ca06f5ac29745ac$var$rotr64_hi(xh, xl, 1);
    var c1_hi = $7ca06f5ac29745ac$var$rotr64_hi(xh, xl, 8);
    var c2_hi = $7ca06f5ac29745ac$var$shr64_hi(xh, xl, 7);
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$g0_512_lo(xh, xl) {
    var c0_lo = $7ca06f5ac29745ac$var$rotr64_lo(xh, xl, 1);
    var c1_lo = $7ca06f5ac29745ac$var$rotr64_lo(xh, xl, 8);
    var c2_lo = $7ca06f5ac29745ac$var$shr64_lo(xh, xl, 7);
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$g1_512_hi(xh, xl) {
    var c0_hi = $7ca06f5ac29745ac$var$rotr64_hi(xh, xl, 19);
    var c1_hi = $7ca06f5ac29745ac$var$rotr64_hi(xl, xh, 29); // 61
    var c2_hi = $7ca06f5ac29745ac$var$shr64_hi(xh, xl, 6);
    var r = c0_hi ^ c1_hi ^ c2_hi;
    if (r < 0) r += 0x100000000;
    return r;
}
function $7ca06f5ac29745ac$var$g1_512_lo(xh, xl) {
    var c0_lo = $7ca06f5ac29745ac$var$rotr64_lo(xh, xl, 19);
    var c1_lo = $7ca06f5ac29745ac$var$rotr64_lo(xl, xh, 29); // 61
    var c2_lo = $7ca06f5ac29745ac$var$shr64_lo(xh, xl, 6);
    var r = c0_lo ^ c1_lo ^ c2_lo;
    if (r < 0) r += 0x100000000;
    return r;
}

});



parcelRequire.register("esq6A", function(module, exports) {

$parcel$export(module.exports, "ripemd160", () => $a867ee2a9af69d33$export$d1cea0ee4e3f0d3e, (v) => $a867ee2a9af69d33$export$d1cea0ee4e3f0d3e = v);
var $a867ee2a9af69d33$export$d1cea0ee4e3f0d3e;
"use strict";

var $gaF16 = parcelRequire("gaF16");

var $eHcpu = parcelRequire("eHcpu");
var $a867ee2a9af69d33$var$rotl32 = $gaF16.rotl32;
var $a867ee2a9af69d33$var$sum32 = $gaF16.sum32;
var $a867ee2a9af69d33$var$sum32_3 = $gaF16.sum32_3;
var $a867ee2a9af69d33$var$sum32_4 = $gaF16.sum32_4;
var $a867ee2a9af69d33$var$BlockHash = $eHcpu.BlockHash;
function $a867ee2a9af69d33$var$RIPEMD160() {
    if (!(this instanceof $a867ee2a9af69d33$var$RIPEMD160)) return new $a867ee2a9af69d33$var$RIPEMD160();
    $a867ee2a9af69d33$var$BlockHash.call(this);
    this.h = [
        0x67452301,
        0xefcdab89,
        0x98badcfe,
        0x10325476,
        0xc3d2e1f0
    ];
    this.endian = "little";
}
$gaF16.inherits($a867ee2a9af69d33$var$RIPEMD160, $a867ee2a9af69d33$var$BlockHash);
$a867ee2a9af69d33$export$d1cea0ee4e3f0d3e = $a867ee2a9af69d33$var$RIPEMD160;
$a867ee2a9af69d33$var$RIPEMD160.blockSize = 512;
$a867ee2a9af69d33$var$RIPEMD160.outSize = 160;
$a867ee2a9af69d33$var$RIPEMD160.hmacStrength = 192;
$a867ee2a9af69d33$var$RIPEMD160.padLength = 64;
$a867ee2a9af69d33$var$RIPEMD160.prototype._update = function update(msg, start) {
    var A = this.h[0];
    var B = this.h[1];
    var C = this.h[2];
    var D = this.h[3];
    var E = this.h[4];
    var Ah = A;
    var Bh = B;
    var Ch = C;
    var Dh = D;
    var Eh = E;
    for(var j = 0; j < 80; j++){
        var T = $a867ee2a9af69d33$var$sum32($a867ee2a9af69d33$var$rotl32($a867ee2a9af69d33$var$sum32_4(A, $a867ee2a9af69d33$var$f(j, B, C, D), msg[$a867ee2a9af69d33$var$r[j] + start], $a867ee2a9af69d33$var$K(j)), $a867ee2a9af69d33$var$s[j]), E);
        A = E;
        E = D;
        D = $a867ee2a9af69d33$var$rotl32(C, 10);
        C = B;
        B = T;
        T = $a867ee2a9af69d33$var$sum32($a867ee2a9af69d33$var$rotl32($a867ee2a9af69d33$var$sum32_4(Ah, $a867ee2a9af69d33$var$f(79 - j, Bh, Ch, Dh), msg[$a867ee2a9af69d33$var$rh[j] + start], $a867ee2a9af69d33$var$Kh(j)), $a867ee2a9af69d33$var$sh[j]), Eh);
        Ah = Eh;
        Eh = Dh;
        Dh = $a867ee2a9af69d33$var$rotl32(Ch, 10);
        Ch = Bh;
        Bh = T;
    }
    T = $a867ee2a9af69d33$var$sum32_3(this.h[1], C, Dh);
    this.h[1] = $a867ee2a9af69d33$var$sum32_3(this.h[2], D, Eh);
    this.h[2] = $a867ee2a9af69d33$var$sum32_3(this.h[3], E, Ah);
    this.h[3] = $a867ee2a9af69d33$var$sum32_3(this.h[4], A, Bh);
    this.h[4] = $a867ee2a9af69d33$var$sum32_3(this.h[0], B, Ch);
    this.h[0] = T;
};
$a867ee2a9af69d33$var$RIPEMD160.prototype._digest = function digest(enc) {
    if (enc === "hex") return $gaF16.toHex32(this.h, "little");
    else return $gaF16.split32(this.h, "little");
};
function $a867ee2a9af69d33$var$f(j, x, y, z) {
    if (j <= 15) return x ^ y ^ z;
    else if (j <= 31) return x & y | ~x & z;
    else if (j <= 47) return (x | ~y) ^ z;
    else if (j <= 63) return x & z | y & ~z;
    else return x ^ (y | ~z);
}
function $a867ee2a9af69d33$var$K(j) {
    if (j <= 15) return 0x00000000;
    else if (j <= 31) return 0x5a827999;
    else if (j <= 47) return 0x6ed9eba1;
    else if (j <= 63) return 0x8f1bbcdc;
    else return 0xa953fd4e;
}
function $a867ee2a9af69d33$var$Kh(j) {
    if (j <= 15) return 0x50a28be6;
    else if (j <= 31) return 0x5c4dd124;
    else if (j <= 47) return 0x6d703ef3;
    else if (j <= 63) return 0x7a6d76e9;
    else return 0x00000000;
}
var $a867ee2a9af69d33$var$r = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    7,
    4,
    13,
    1,
    10,
    6,
    15,
    3,
    12,
    0,
    9,
    5,
    2,
    14,
    11,
    8,
    3,
    10,
    14,
    4,
    9,
    15,
    8,
    1,
    2,
    7,
    0,
    6,
    13,
    11,
    5,
    12,
    1,
    9,
    11,
    10,
    0,
    8,
    12,
    4,
    13,
    3,
    7,
    15,
    14,
    5,
    6,
    2,
    4,
    0,
    5,
    9,
    7,
    12,
    2,
    10,
    14,
    1,
    3,
    8,
    11,
    6,
    15,
    13
];
var $a867ee2a9af69d33$var$rh = [
    5,
    14,
    7,
    0,
    9,
    2,
    11,
    4,
    13,
    6,
    15,
    8,
    1,
    10,
    3,
    12,
    6,
    11,
    3,
    7,
    0,
    13,
    5,
    10,
    14,
    15,
    8,
    12,
    4,
    9,
    1,
    2,
    15,
    5,
    1,
    3,
    7,
    14,
    6,
    9,
    11,
    8,
    12,
    2,
    10,
    0,
    4,
    13,
    8,
    6,
    4,
    1,
    3,
    11,
    15,
    0,
    5,
    12,
    2,
    13,
    9,
    7,
    10,
    14,
    12,
    15,
    10,
    4,
    1,
    5,
    8,
    7,
    6,
    2,
    13,
    14,
    0,
    3,
    9,
    11
];
var $a867ee2a9af69d33$var$s = [
    11,
    14,
    15,
    12,
    5,
    8,
    7,
    9,
    11,
    13,
    14,
    15,
    6,
    7,
    9,
    8,
    7,
    6,
    8,
    13,
    11,
    9,
    7,
    15,
    7,
    12,
    15,
    9,
    11,
    7,
    13,
    12,
    11,
    13,
    6,
    7,
    14,
    9,
    13,
    15,
    14,
    8,
    13,
    6,
    5,
    12,
    7,
    5,
    11,
    12,
    14,
    15,
    14,
    15,
    9,
    8,
    9,
    14,
    5,
    6,
    8,
    6,
    5,
    12,
    9,
    15,
    5,
    11,
    6,
    8,
    13,
    12,
    5,
    12,
    13,
    14,
    11,
    8,
    5,
    6
];
var $a867ee2a9af69d33$var$sh = [
    8,
    9,
    9,
    11,
    13,
    15,
    15,
    5,
    7,
    7,
    8,
    11,
    14,
    14,
    12,
    6,
    9,
    13,
    15,
    7,
    12,
    8,
    9,
    11,
    7,
    7,
    12,
    7,
    6,
    15,
    13,
    11,
    9,
    7,
    15,
    11,
    8,
    6,
    6,
    14,
    12,
    13,
    5,
    14,
    13,
    13,
    7,
    5,
    15,
    5,
    8,
    11,
    14,
    14,
    6,
    14,
    6,
    9,
    12,
    9,
    12,
    5,
    15,
    8,
    8,
    5,
    12,
    9,
    12,
    5,
    14,
    6,
    8,
    13,
    6,
    5,
    15,
    13,
    11,
    11
];

});

parcelRequire.register("ldnBw", function(module, exports) {
"use strict";

var $gaF16 = parcelRequire("gaF16");

var $9lC6e = parcelRequire("9lC6e");
function $f71d1f2fd8263f49$var$Hmac(hash, key, enc) {
    if (!(this instanceof $f71d1f2fd8263f49$var$Hmac)) return new $f71d1f2fd8263f49$var$Hmac(hash, key, enc);
    this.Hash = hash;
    this.blockSize = hash.blockSize / 8;
    this.outSize = hash.outSize / 8;
    this.inner = null;
    this.outer = null;
    this._init($gaF16.toArray(key, enc));
}
module.exports = $f71d1f2fd8263f49$var$Hmac;
$f71d1f2fd8263f49$var$Hmac.prototype._init = function init(key) {
    // Shorten key, if needed
    if (key.length > this.blockSize) key = new this.Hash().update(key).digest();
    $9lC6e(key.length <= this.blockSize);
    // Add padding to key
    for(var i = key.length; i < this.blockSize; i++)key.push(0);
    for(i = 0; i < key.length; i++)key[i] ^= 0x36;
    this.inner = new this.Hash().update(key);
    // 0x36 ^ 0x5c = 0x6a
    for(i = 0; i < key.length; i++)key[i] ^= 0x6a;
    this.outer = new this.Hash().update(key);
};
$f71d1f2fd8263f49$var$Hmac.prototype.update = function update(msg, enc) {
    this.inner.update(msg, enc);
    return this;
};
$f71d1f2fd8263f49$var$Hmac.prototype.digest = function digest(enc) {
    this.outer.update(this.inner.digest());
    return this.outer.digest(enc);
};

});

parcelRequire.register("4G7Hv", function(module, exports) {

$parcel$export(module.exports, "encode", () => $36810ee407630a6f$export$c564cdbbe6da493);
$parcel$export(module.exports, "decode", () => $36810ee407630a6f$export$2f872c0f2117be69);

var $eg8oT = parcelRequire("eg8oT");

var $cbv61 = parcelRequire("cbv61");

var $fGPr3 = parcelRequire("fGPr3");
"use strict";
const $36810ee407630a6f$var$logger = new (0, $cbv61.Logger)((0, $fGPr3.version));
function $36810ee407630a6f$var$arrayifyInteger(value) {
    const result = [];
    while(value){
        result.unshift(value & 0xff);
        value >>= 8;
    }
    return result;
}
function $36810ee407630a6f$var$unarrayifyInteger(data, offset, length) {
    let result = 0;
    for(let i = 0; i < length; i++)result = result * 256 + data[offset + i];
    return result;
}
function $36810ee407630a6f$var$_encode(object) {
    if (Array.isArray(object)) {
        let payload = [];
        object.forEach(function(child) {
            payload = payload.concat($36810ee407630a6f$var$_encode(child));
        });
        if (payload.length <= 55) {
            payload.unshift(0xc0 + payload.length);
            return payload;
        }
        const length = $36810ee407630a6f$var$arrayifyInteger(payload.length);
        length.unshift(0xf7 + length.length);
        return length.concat(payload);
    }
    if (!(0, $eg8oT.isBytesLike)(object)) $36810ee407630a6f$var$logger.throwArgumentError("RLP object must be BytesLike", "object", object);
    const data = Array.prototype.slice.call((0, $eg8oT.arrayify)(object));
    if (data.length === 1 && data[0] <= 0x7f) return data;
    else if (data.length <= 55) {
        data.unshift(0x80 + data.length);
        return data;
    }
    const length = $36810ee407630a6f$var$arrayifyInteger(data.length);
    length.unshift(0xb7 + length.length);
    return length.concat(data);
}
function $36810ee407630a6f$export$c564cdbbe6da493(object) {
    return (0, $eg8oT.hexlify)($36810ee407630a6f$var$_encode(object));
}
function $36810ee407630a6f$var$_decodeChildren(data, offset, childOffset, length) {
    const result = [];
    while(childOffset < offset + 1 + length){
        const decoded = $36810ee407630a6f$var$_decode(data, childOffset);
        result.push(decoded.result);
        childOffset += decoded.consumed;
        if (childOffset > offset + 1 + length) $36810ee407630a6f$var$logger.throwError("child data too short", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {});
    }
    return {
        consumed: 1 + length,
        result: result
    };
}
// returns { consumed: number, result: Object }
function $36810ee407630a6f$var$_decode(data, offset) {
    if (data.length === 0) $36810ee407630a6f$var$logger.throwError("data too short", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {});
    // Array with extra length prefix
    if (data[offset] >= 0xf8) {
        const lengthLength = data[offset] - 0xf7;
        if (offset + 1 + lengthLength > data.length) $36810ee407630a6f$var$logger.throwError("data short segment too short", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {});
        const length = $36810ee407630a6f$var$unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) $36810ee407630a6f$var$logger.throwError("data long segment too short", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {});
        return $36810ee407630a6f$var$_decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);
    } else if (data[offset] >= 0xc0) {
        const length = data[offset] - 0xc0;
        if (offset + 1 + length > data.length) $36810ee407630a6f$var$logger.throwError("data array too short", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {});
        return $36810ee407630a6f$var$_decodeChildren(data, offset, offset + 1, length);
    } else if (data[offset] >= 0xb8) {
        const lengthLength = data[offset] - 0xb7;
        if (offset + 1 + lengthLength > data.length) $36810ee407630a6f$var$logger.throwError("data array too short", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {});
        const length = $36810ee407630a6f$var$unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) $36810ee407630a6f$var$logger.throwError("data array too short", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {});
        const result = (0, $eg8oT.hexlify)(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));
        return {
            consumed: 1 + lengthLength + length,
            result: result
        };
    } else if (data[offset] >= 0x80) {
        const length = data[offset] - 0x80;
        if (offset + 1 + length > data.length) $36810ee407630a6f$var$logger.throwError("data too short", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {});
        const result = (0, $eg8oT.hexlify)(data.slice(offset + 1, offset + 1 + length));
        return {
            consumed: 1 + length,
            result: result
        };
    }
    return {
        consumed: 1,
        result: (0, $eg8oT.hexlify)(data[offset])
    };
}
function $36810ee407630a6f$export$2f872c0f2117be69(data) {
    const bytes = (0, $eg8oT.arrayify)(data);
    const decoded = $36810ee407630a6f$var$_decode(bytes, 0);
    if (decoded.consumed !== bytes.length) $36810ee407630a6f$var$logger.throwArgumentError("invalid rlp data", "data", data);
    return decoded.result;
}

});
parcelRequire.register("eg8oT", function(module, exports) {

$parcel$export(module.exports, "isBytesLike", () => $a619137eeb504ad1$export$9a14abb1a440cd5e);
$parcel$export(module.exports, "isHexString", () => $a619137eeb504ad1$export$b02a40aff8e4ad18);
$parcel$export(module.exports, "isBytes", () => $a619137eeb504ad1$export$c6fabfbfd097fc30);
$parcel$export(module.exports, "arrayify", () => $a619137eeb504ad1$export$3131421a7d01b4fb);
$parcel$export(module.exports, "concat", () => $a619137eeb504ad1$export$ee1b3e54f0441b22);
$parcel$export(module.exports, "stripZeros", () => $a619137eeb504ad1$export$a8f4574d0e56446c);
$parcel$export(module.exports, "zeroPad", () => $a619137eeb504ad1$export$3cdc770bf8b2ed3d);
$parcel$export(module.exports, "hexlify", () => $a619137eeb504ad1$export$2b0d6b5fbe698c70);
$parcel$export(module.exports, "hexDataLength", () => $a619137eeb504ad1$export$13882f896d3c0683);
$parcel$export(module.exports, "hexDataSlice", () => $a619137eeb504ad1$export$15da666eba198c18);
$parcel$export(module.exports, "hexConcat", () => $a619137eeb504ad1$export$6d4b99629b38754a);
$parcel$export(module.exports, "hexValue", () => $a619137eeb504ad1$export$6916af760a341dd3);
$parcel$export(module.exports, "hexStripZeros", () => $a619137eeb504ad1$export$967bc0082a978949);
$parcel$export(module.exports, "hexZeroPad", () => $a619137eeb504ad1$export$e9c46a54370b47e8);
$parcel$export(module.exports, "splitSignature", () => $a619137eeb504ad1$export$7fb170f1e457988f);
$parcel$export(module.exports, "joinSignature", () => $a619137eeb504ad1$export$71bb9d78a59bbe25);

var $cbv61 = parcelRequire("cbv61");

var $2xGeL = parcelRequire("2xGeL");
"use strict";
const $a619137eeb504ad1$var$logger = new (0, $cbv61.Logger)((0, $2xGeL.version));
///////////////////////////////
function $a619137eeb504ad1$var$isHexable(value) {
    return !!value.toHexString;
}
function $a619137eeb504ad1$var$addSlice(array) {
    if (array.slice) return array;
    array.slice = function() {
        const args = Array.prototype.slice.call(arguments);
        return $a619137eeb504ad1$var$addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
    };
    return array;
}
function $a619137eeb504ad1$export$9a14abb1a440cd5e(value) {
    return $a619137eeb504ad1$export$b02a40aff8e4ad18(value) && !(value.length % 2) || $a619137eeb504ad1$export$c6fabfbfd097fc30(value);
}
function $a619137eeb504ad1$var$isInteger(value) {
    return typeof value === "number" && value == value && value % 1 === 0;
}
function $a619137eeb504ad1$export$c6fabfbfd097fc30(value) {
    if (value == null) return false;
    if (value.constructor === Uint8Array) return true;
    if (typeof value === "string") return false;
    if (!$a619137eeb504ad1$var$isInteger(value.length) || value.length < 0) return false;
    for(let i = 0; i < value.length; i++){
        const v = value[i];
        if (!$a619137eeb504ad1$var$isInteger(v) || v < 0 || v >= 256) return false;
    }
    return true;
}
function $a619137eeb504ad1$export$3131421a7d01b4fb(value, options) {
    if (!options) options = {};
    if (typeof value === "number") {
        $a619137eeb504ad1$var$logger.checkSafeUint53(value, "invalid arrayify value");
        const result = [];
        while(value){
            result.unshift(value & 0xff);
            value = parseInt(String(value / 256));
        }
        if (result.length === 0) result.push(0);
        return $a619137eeb504ad1$var$addSlice(new Uint8Array(result));
    }
    if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") value = "0x" + value;
    if ($a619137eeb504ad1$var$isHexable(value)) value = value.toHexString();
    if ($a619137eeb504ad1$export$b02a40aff8e4ad18(value)) {
        let hex = value.substring(2);
        if (hex.length % 2) {
            if (options.hexPad === "left") hex = "0" + hex;
            else if (options.hexPad === "right") hex += "0";
            else $a619137eeb504ad1$var$logger.throwArgumentError("hex data is odd-length", "value", value);
        }
        const result = [];
        for(let i = 0; i < hex.length; i += 2)result.push(parseInt(hex.substring(i, i + 2), 16));
        return $a619137eeb504ad1$var$addSlice(new Uint8Array(result));
    }
    if ($a619137eeb504ad1$export$c6fabfbfd097fc30(value)) return $a619137eeb504ad1$var$addSlice(new Uint8Array(value));
    return $a619137eeb504ad1$var$logger.throwArgumentError("invalid arrayify value", "value", value);
}
function $a619137eeb504ad1$export$ee1b3e54f0441b22(items) {
    const objects = items.map((item)=>$a619137eeb504ad1$export$3131421a7d01b4fb(item));
    const length = objects.reduce((accum, item)=>accum + item.length, 0);
    const result = new Uint8Array(length);
    objects.reduce((offset, object)=>{
        result.set(object, offset);
        return offset + object.length;
    }, 0);
    return $a619137eeb504ad1$var$addSlice(result);
}
function $a619137eeb504ad1$export$a8f4574d0e56446c(value) {
    let result = $a619137eeb504ad1$export$3131421a7d01b4fb(value);
    if (result.length === 0) return result;
    // Find the first non-zero entry
    let start = 0;
    while(start < result.length && result[start] === 0)start++;
    // If we started with zeros, strip them
    if (start) result = result.slice(start);
    return result;
}
function $a619137eeb504ad1$export$3cdc770bf8b2ed3d(value, length) {
    value = $a619137eeb504ad1$export$3131421a7d01b4fb(value);
    if (value.length > length) $a619137eeb504ad1$var$logger.throwArgumentError("value out of range", "value", arguments[0]);
    const result = new Uint8Array(length);
    result.set(value, length - value.length);
    return $a619137eeb504ad1$var$addSlice(result);
}
function $a619137eeb504ad1$export$b02a40aff8e4ad18(value, length) {
    if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) return false;
    if (length && value.length !== 2 + 2 * length) return false;
    return true;
}
const $a619137eeb504ad1$var$HexCharacters = "0123456789abcdef";
function $a619137eeb504ad1$export$2b0d6b5fbe698c70(value, options) {
    if (!options) options = {};
    if (typeof value === "number") {
        $a619137eeb504ad1$var$logger.checkSafeUint53(value, "invalid hexlify value");
        let hex = "";
        while(value){
            hex = $a619137eeb504ad1$var$HexCharacters[value & 0xf] + hex;
            value = Math.floor(value / 16);
        }
        if (hex.length) {
            if (hex.length % 2) hex = "0" + hex;
            return "0x" + hex;
        }
        return "0x00";
    }
    if (typeof value === "bigint") {
        value = value.toString(16);
        if (value.length % 2) return "0x0" + value;
        return "0x" + value;
    }
    if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") value = "0x" + value;
    if ($a619137eeb504ad1$var$isHexable(value)) return value.toHexString();
    if ($a619137eeb504ad1$export$b02a40aff8e4ad18(value)) {
        if (value.length % 2) {
            if (options.hexPad === "left") value = "0x0" + value.substring(2);
            else if (options.hexPad === "right") value += "0";
            else $a619137eeb504ad1$var$logger.throwArgumentError("hex data is odd-length", "value", value);
        }
        return value.toLowerCase();
    }
    if ($a619137eeb504ad1$export$c6fabfbfd097fc30(value)) {
        let result = "0x";
        for(let i = 0; i < value.length; i++){
            let v = value[i];
            result += $a619137eeb504ad1$var$HexCharacters[(v & 0xf0) >> 4] + $a619137eeb504ad1$var$HexCharacters[v & 0x0f];
        }
        return result;
    }
    return $a619137eeb504ad1$var$logger.throwArgumentError("invalid hexlify value", "value", value);
}
function $a619137eeb504ad1$export$13882f896d3c0683(data) {
    if (typeof data !== "string") data = $a619137eeb504ad1$export$2b0d6b5fbe698c70(data);
    else if (!$a619137eeb504ad1$export$b02a40aff8e4ad18(data) || data.length % 2) return null;
    return (data.length - 2) / 2;
}
function $a619137eeb504ad1$export$15da666eba198c18(data, offset, endOffset) {
    if (typeof data !== "string") data = $a619137eeb504ad1$export$2b0d6b5fbe698c70(data);
    else if (!$a619137eeb504ad1$export$b02a40aff8e4ad18(data) || data.length % 2) $a619137eeb504ad1$var$logger.throwArgumentError("invalid hexData", "value", data);
    offset = 2 + 2 * offset;
    if (endOffset != null) return "0x" + data.substring(offset, 2 + 2 * endOffset);
    return "0x" + data.substring(offset);
}
function $a619137eeb504ad1$export$6d4b99629b38754a(items) {
    let result = "0x";
    items.forEach((item)=>{
        result += $a619137eeb504ad1$export$2b0d6b5fbe698c70(item).substring(2);
    });
    return result;
}
function $a619137eeb504ad1$export$6916af760a341dd3(value) {
    const trimmed = $a619137eeb504ad1$export$967bc0082a978949($a619137eeb504ad1$export$2b0d6b5fbe698c70(value, {
        hexPad: "left"
    }));
    if (trimmed === "0x") return "0x0";
    return trimmed;
}
function $a619137eeb504ad1$export$967bc0082a978949(value) {
    if (typeof value !== "string") value = $a619137eeb504ad1$export$2b0d6b5fbe698c70(value);
    if (!$a619137eeb504ad1$export$b02a40aff8e4ad18(value)) $a619137eeb504ad1$var$logger.throwArgumentError("invalid hex string", "value", value);
    value = value.substring(2);
    let offset = 0;
    while(offset < value.length && value[offset] === "0")offset++;
    return "0x" + value.substring(offset);
}
function $a619137eeb504ad1$export$e9c46a54370b47e8(value, length) {
    if (typeof value !== "string") value = $a619137eeb504ad1$export$2b0d6b5fbe698c70(value);
    else if (!$a619137eeb504ad1$export$b02a40aff8e4ad18(value)) $a619137eeb504ad1$var$logger.throwArgumentError("invalid hex string", "value", value);
    if (value.length > 2 * length + 2) $a619137eeb504ad1$var$logger.throwArgumentError("value out of range", "value", arguments[1]);
    while(value.length < 2 * length + 2)value = "0x0" + value.substring(2);
    return value;
}
function $a619137eeb504ad1$export$7fb170f1e457988f(signature) {
    const result = {
        r: "0x",
        s: "0x",
        _vs: "0x",
        recoveryParam: 0,
        v: 0,
        yParityAndS: "0x",
        compact: "0x"
    };
    if ($a619137eeb504ad1$export$9a14abb1a440cd5e(signature)) {
        let bytes = $a619137eeb504ad1$export$3131421a7d01b4fb(signature);
        // Get the r, s and v
        if (bytes.length === 64) {
            // EIP-2098; pull the v from the top bit of s and clear it
            result.v = 27 + (bytes[32] >> 7);
            bytes[32] &= 0x7f;
            result.r = $a619137eeb504ad1$export$2b0d6b5fbe698c70(bytes.slice(0, 32));
            result.s = $a619137eeb504ad1$export$2b0d6b5fbe698c70(bytes.slice(32, 64));
        } else if (bytes.length === 65) {
            result.r = $a619137eeb504ad1$export$2b0d6b5fbe698c70(bytes.slice(0, 32));
            result.s = $a619137eeb504ad1$export$2b0d6b5fbe698c70(bytes.slice(32, 64));
            result.v = bytes[64];
        } else $a619137eeb504ad1$var$logger.throwArgumentError("invalid signature string", "signature", signature);
        // Allow a recid to be used as the v
        if (result.v < 27) {
            if (result.v === 0 || result.v === 1) result.v += 27;
            else $a619137eeb504ad1$var$logger.throwArgumentError("signature invalid v byte", "signature", signature);
        }
        // Compute recoveryParam from v
        result.recoveryParam = 1 - result.v % 2;
        // Compute _vs from recoveryParam and s
        if (result.recoveryParam) bytes[32] |= 0x80;
        result._vs = $a619137eeb504ad1$export$2b0d6b5fbe698c70(bytes.slice(32, 64));
    } else {
        result.r = signature.r;
        result.s = signature.s;
        result.v = signature.v;
        result.recoveryParam = signature.recoveryParam;
        result._vs = signature._vs;
        // If the _vs is available, use it to populate missing s, v and recoveryParam
        // and verify non-missing s, v and recoveryParam
        if (result._vs != null) {
            const vs = $a619137eeb504ad1$export$3cdc770bf8b2ed3d($a619137eeb504ad1$export$3131421a7d01b4fb(result._vs), 32);
            result._vs = $a619137eeb504ad1$export$2b0d6b5fbe698c70(vs);
            // Set or check the recid
            const recoveryParam = vs[0] >= 128 ? 1 : 0;
            if (result.recoveryParam == null) result.recoveryParam = recoveryParam;
            else if (result.recoveryParam !== recoveryParam) $a619137eeb504ad1$var$logger.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature);
            // Set or check the s
            vs[0] &= 0x7f;
            const s = $a619137eeb504ad1$export$2b0d6b5fbe698c70(vs);
            if (result.s == null) result.s = s;
            else if (result.s !== s) $a619137eeb504ad1$var$logger.throwArgumentError("signature v mismatch _vs", "signature", signature);
        }
        // Use recid and v to populate each other
        if (result.recoveryParam == null) {
            if (result.v == null) $a619137eeb504ad1$var$logger.throwArgumentError("signature missing v and recoveryParam", "signature", signature);
            else if (result.v === 0 || result.v === 1) result.recoveryParam = result.v;
            else result.recoveryParam = 1 - result.v % 2;
        } else if (result.v == null) result.v = 27 + result.recoveryParam;
        else {
            const recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;
            if (result.recoveryParam !== recId) $a619137eeb504ad1$var$logger.throwArgumentError("signature recoveryParam mismatch v", "signature", signature);
        }
        if (result.r == null || !$a619137eeb504ad1$export$b02a40aff8e4ad18(result.r)) $a619137eeb504ad1$var$logger.throwArgumentError("signature missing or invalid r", "signature", signature);
        else result.r = $a619137eeb504ad1$export$e9c46a54370b47e8(result.r, 32);
        if (result.s == null || !$a619137eeb504ad1$export$b02a40aff8e4ad18(result.s)) $a619137eeb504ad1$var$logger.throwArgumentError("signature missing or invalid s", "signature", signature);
        else result.s = $a619137eeb504ad1$export$e9c46a54370b47e8(result.s, 32);
        const vs = $a619137eeb504ad1$export$3131421a7d01b4fb(result.s);
        if (vs[0] >= 128) $a619137eeb504ad1$var$logger.throwArgumentError("signature s out of range", "signature", signature);
        if (result.recoveryParam) vs[0] |= 0x80;
        const _vs = $a619137eeb504ad1$export$2b0d6b5fbe698c70(vs);
        if (result._vs) {
            if (!$a619137eeb504ad1$export$b02a40aff8e4ad18(result._vs)) $a619137eeb504ad1$var$logger.throwArgumentError("signature invalid _vs", "signature", signature);
            result._vs = $a619137eeb504ad1$export$e9c46a54370b47e8(result._vs, 32);
        }
        // Set or check the _vs
        if (result._vs == null) result._vs = _vs;
        else if (result._vs !== _vs) $a619137eeb504ad1$var$logger.throwArgumentError("signature _vs mismatch v and s", "signature", signature);
    }
    result.yParityAndS = result._vs;
    result.compact = result.r + result.yParityAndS.substring(2);
    return result;
}
function $a619137eeb504ad1$export$71bb9d78a59bbe25(signature) {
    signature = $a619137eeb504ad1$export$7fb170f1e457988f(signature);
    return $a619137eeb504ad1$export$2b0d6b5fbe698c70($a619137eeb504ad1$export$ee1b3e54f0441b22([
        signature.r,
        signature.s,
        signature.recoveryParam ? "0x1c" : "0x1b"
    ]));
}

});
parcelRequire.register("cbv61", function(module, exports) {

$parcel$export(module.exports, "ErrorCode", () => $8deea2274d57fbb5$export$d4e71bc0b80dc0fb);
$parcel$export(module.exports, "Logger", () => $8deea2274d57fbb5$export$efa9a398d6368992);

var $exiPr = parcelRequire("exiPr");
"use strict";
let $8deea2274d57fbb5$var$_permanentCensorErrors = false;
let $8deea2274d57fbb5$var$_censorErrors = false;
const $8deea2274d57fbb5$var$LogLevels = {
    debug: 1,
    "default": 2,
    info: 2,
    warning: 3,
    error: 4,
    off: 5
};
let $8deea2274d57fbb5$var$_logLevel = $8deea2274d57fbb5$var$LogLevels["default"];
let $8deea2274d57fbb5$var$_globalLogger = null;
function $8deea2274d57fbb5$var$_checkNormalize() {
    try {
        const missing = [];
        // Make sure all forms of normalization are supported
        [
            "NFD",
            "NFC",
            "NFKD",
            "NFKC"
        ].forEach((form)=>{
            try {
                if ("test".normalize(form) !== "test") throw new Error("bad normalize");
            } catch (error) {
                missing.push(form);
            }
        });
        if (missing.length) throw new Error("missing " + missing.join(", "));
        if (String.fromCharCode(0xe9).normalize("NFD") !== String.fromCharCode(0x65, 0x0301)) throw new Error("broken implementation");
    } catch (error) {
        return error.message;
    }
    return null;
}
const $8deea2274d57fbb5$var$_normalizeError = $8deea2274d57fbb5$var$_checkNormalize();
var $8deea2274d57fbb5$export$243e62d78d3b544d;
(function(LogLevel) {
    LogLevel["DEBUG"] = "DEBUG";
    LogLevel["INFO"] = "INFO";
    LogLevel["WARNING"] = "WARNING";
    LogLevel["ERROR"] = "ERROR";
    LogLevel["OFF"] = "OFF";
})($8deea2274d57fbb5$export$243e62d78d3b544d || ($8deea2274d57fbb5$export$243e62d78d3b544d = {}));
var $8deea2274d57fbb5$export$d4e71bc0b80dc0fb;
(function(ErrorCode) {
    ///////////////////
    // Generic Errors
    // Unknown Error
    ErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
    // Not Implemented
    ErrorCode["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
    // Unsupported Operation
    //   - operation
    ErrorCode["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)
    //   - event ("noNetwork" is not re-thrown in provider.ready; otherwise thrown)
    ErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR";
    // Some sort of bad response from the server
    ErrorCode["SERVER_ERROR"] = "SERVER_ERROR";
    // Timeout
    ErrorCode["TIMEOUT"] = "TIMEOUT";
    ///////////////////
    // Operational  Errors
    // Buffer Overrun
    ErrorCode["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
    // Numeric Fault
    //   - operation: the operation being executed
    //   - fault: the reason this faulted
    ErrorCode["NUMERIC_FAULT"] = "NUMERIC_FAULT";
    ///////////////////
    // Argument Errors
    // Missing new operator to an object
    //  - name: The name of the class
    ErrorCode["MISSING_NEW"] = "MISSING_NEW";
    // Invalid argument (e.g. value is incompatible with type) to a function:
    //   - argument: The argument name that was invalid
    //   - value: The value of the argument
    ErrorCode["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
    // Missing argument to a function:
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    ErrorCode["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
    // Too many arguments
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    ErrorCode["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
    ///////////////////
    // Blockchain Errors
    // Call exception
    //  - transaction: the transaction
    //  - address?: the contract address
    //  - args?: The arguments passed into the function
    //  - method?: The Solidity method signature
    //  - errorSignature?: The EIP848 error signature
    //  - errorArgs?: The EIP848 error parameters
    //  - reason: The reason (only for EIP848 "Error(string)")
    ErrorCode["CALL_EXCEPTION"] = "CALL_EXCEPTION";
    // Insufficient funds (< value + gasLimit * gasPrice)
    //   - transaction: the transaction attempted
    ErrorCode["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
    // Nonce has already been used
    //   - transaction: the transaction attempted
    ErrorCode["NONCE_EXPIRED"] = "NONCE_EXPIRED";
    // The replacement fee for the transaction is too low
    //   - transaction: the transaction attempted
    ErrorCode["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
    // The gas limit could not be estimated
    //   - transaction: the transaction passed to estimateGas
    ErrorCode["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
    // The transaction was replaced by one with a higher gas price
    //   - reason: "cancelled", "replaced" or "repriced"
    //   - cancelled: true if reason == "cancelled" or reason == "replaced")
    //   - hash: original transaction hash
    //   - replacement: the full TransactionsResponse for the replacement
    //   - receipt: the receipt of the replacement
    ErrorCode["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
    ///////////////////
    // Interaction Errors
    // The user rejected the action, such as signing a message or sending
    // a transaction
    ErrorCode["ACTION_REJECTED"] = "ACTION_REJECTED";
})($8deea2274d57fbb5$export$d4e71bc0b80dc0fb || ($8deea2274d57fbb5$export$d4e71bc0b80dc0fb = {}));
const $8deea2274d57fbb5$var$HEX = "0123456789abcdef";
class $8deea2274d57fbb5$export$efa9a398d6368992 {
    constructor(version){
        Object.defineProperty(this, "version", {
            enumerable: true,
            value: version,
            writable: false
        });
    }
    _log(logLevel, args) {
        const level = logLevel.toLowerCase();
        if ($8deea2274d57fbb5$var$LogLevels[level] == null) this.throwArgumentError("invalid log level name", "logLevel", logLevel);
        if ($8deea2274d57fbb5$var$_logLevel > $8deea2274d57fbb5$var$LogLevels[level]) return;
        console.log.apply(console, args);
    }
    debug(...args) {
        this._log($8deea2274d57fbb5$export$efa9a398d6368992.levels.DEBUG, args);
    }
    info(...args) {
        this._log($8deea2274d57fbb5$export$efa9a398d6368992.levels.INFO, args);
    }
    warn(...args) {
        this._log($8deea2274d57fbb5$export$efa9a398d6368992.levels.WARNING, args);
    }
    makeError(message, code, params) {
        // Errors are being censored
        if ($8deea2274d57fbb5$var$_censorErrors) return this.makeError("censored error", code, {});
        if (!code) code = $8deea2274d57fbb5$export$efa9a398d6368992.errors.UNKNOWN_ERROR;
        if (!params) params = {};
        const messageDetails = [];
        Object.keys(params).forEach((key)=>{
            const value = params[key];
            try {
                if (value instanceof Uint8Array) {
                    let hex = "";
                    for(let i = 0; i < value.length; i++){
                        hex += $8deea2274d57fbb5$var$HEX[value[i] >> 4];
                        hex += $8deea2274d57fbb5$var$HEX[value[i] & 0x0f];
                    }
                    messageDetails.push(key + "=Uint8Array(0x" + hex + ")");
                } else messageDetails.push(key + "=" + JSON.stringify(value));
            } catch (error) {
                messageDetails.push(key + "=" + JSON.stringify(params[key].toString()));
            }
        });
        messageDetails.push(`code=${code}`);
        messageDetails.push(`version=${this.version}`);
        const reason = message;
        let url = "";
        switch(code){
            case $8deea2274d57fbb5$export$d4e71bc0b80dc0fb.NUMERIC_FAULT:
                {
                    url = "NUMERIC_FAULT";
                    const fault = message;
                    switch(fault){
                        case "overflow":
                        case "underflow":
                        case "division-by-zero":
                            url += "-" + fault;
                            break;
                        case "negative-power":
                        case "negative-width":
                            url += "-unsupported";
                            break;
                        case "unbound-bitwise-result":
                            url += "-unbound-result";
                            break;
                    }
                    break;
                }
            case $8deea2274d57fbb5$export$d4e71bc0b80dc0fb.CALL_EXCEPTION:
            case $8deea2274d57fbb5$export$d4e71bc0b80dc0fb.INSUFFICIENT_FUNDS:
            case $8deea2274d57fbb5$export$d4e71bc0b80dc0fb.MISSING_NEW:
            case $8deea2274d57fbb5$export$d4e71bc0b80dc0fb.NONCE_EXPIRED:
            case $8deea2274d57fbb5$export$d4e71bc0b80dc0fb.REPLACEMENT_UNDERPRICED:
            case $8deea2274d57fbb5$export$d4e71bc0b80dc0fb.TRANSACTION_REPLACED:
            case $8deea2274d57fbb5$export$d4e71bc0b80dc0fb.UNPREDICTABLE_GAS_LIMIT:
                url = code;
                break;
        }
        if (url) message += " [ See: https://links.ethers.org/v5-errors-" + url + " ]";
        if (messageDetails.length) message += " (" + messageDetails.join(", ") + ")";
        // @TODO: Any??
        const error = new Error(message);
        error.reason = reason;
        error.code = code;
        Object.keys(params).forEach(function(key) {
            error[key] = params[key];
        });
        return error;
    }
    throwError(message, code, params) {
        throw this.makeError(message, code, params);
    }
    throwArgumentError(message, name, value) {
        return this.throwError(message, $8deea2274d57fbb5$export$efa9a398d6368992.errors.INVALID_ARGUMENT, {
            argument: name,
            value: value
        });
    }
    assert(condition, message, code, params) {
        if (!!condition) return;
        this.throwError(message, code, params);
    }
    assertArgument(condition, message, name, value) {
        if (!!condition) return;
        this.throwArgumentError(message, name, value);
    }
    checkNormalize(message) {
        if (message == null) message = "platform missing String.prototype.normalize";
        if ($8deea2274d57fbb5$var$_normalizeError) this.throwError("platform missing String.prototype.normalize", $8deea2274d57fbb5$export$efa9a398d6368992.errors.UNSUPPORTED_OPERATION, {
            operation: "String.prototype.normalize",
            form: $8deea2274d57fbb5$var$_normalizeError
        });
    }
    checkSafeUint53(value, message) {
        if (typeof value !== "number") return;
        if (message == null) message = "value not safe";
        if (value < 0 || value >= 0x1fffffffffffff) this.throwError(message, $8deea2274d57fbb5$export$efa9a398d6368992.errors.NUMERIC_FAULT, {
            operation: "checkSafeInteger",
            fault: "out-of-safe-range",
            value: value
        });
        if (value % 1) this.throwError(message, $8deea2274d57fbb5$export$efa9a398d6368992.errors.NUMERIC_FAULT, {
            operation: "checkSafeInteger",
            fault: "non-integer",
            value: value
        });
    }
    checkArgumentCount(count, expectedCount, message) {
        if (message) message = ": " + message;
        else message = "";
        if (count < expectedCount) this.throwError("missing argument" + message, $8deea2274d57fbb5$export$efa9a398d6368992.errors.MISSING_ARGUMENT, {
            count: count,
            expectedCount: expectedCount
        });
        if (count > expectedCount) this.throwError("too many arguments" + message, $8deea2274d57fbb5$export$efa9a398d6368992.errors.UNEXPECTED_ARGUMENT, {
            count: count,
            expectedCount: expectedCount
        });
    }
    checkNew(target, kind) {
        if (target === Object || target == null) this.throwError("missing new", $8deea2274d57fbb5$export$efa9a398d6368992.errors.MISSING_NEW, {
            name: kind.name
        });
    }
    checkAbstract(target, kind) {
        if (target === kind) this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", $8deea2274d57fbb5$export$efa9a398d6368992.errors.UNSUPPORTED_OPERATION, {
            name: target.name,
            operation: "new"
        });
        else if (target === Object || target == null) this.throwError("missing new", $8deea2274d57fbb5$export$efa9a398d6368992.errors.MISSING_NEW, {
            name: kind.name
        });
    }
    static globalLogger() {
        if (!$8deea2274d57fbb5$var$_globalLogger) $8deea2274d57fbb5$var$_globalLogger = new $8deea2274d57fbb5$export$efa9a398d6368992((0, $exiPr.version));
        return $8deea2274d57fbb5$var$_globalLogger;
    }
    static setCensorship(censorship, permanent) {
        if (!censorship && permanent) this.globalLogger().throwError("cannot permanently disable censorship", $8deea2274d57fbb5$export$efa9a398d6368992.errors.UNSUPPORTED_OPERATION, {
            operation: "setCensorship"
        });
        if ($8deea2274d57fbb5$var$_permanentCensorErrors) {
            if (!censorship) return;
            this.globalLogger().throwError("error censorship permanent", $8deea2274d57fbb5$export$efa9a398d6368992.errors.UNSUPPORTED_OPERATION, {
                operation: "setCensorship"
            });
        }
        $8deea2274d57fbb5$var$_censorErrors = !!censorship;
        $8deea2274d57fbb5$var$_permanentCensorErrors = !!permanent;
    }
    static setLogLevel(logLevel) {
        const level = $8deea2274d57fbb5$var$LogLevels[logLevel.toLowerCase()];
        if (level == null) {
            $8deea2274d57fbb5$export$efa9a398d6368992.globalLogger().warn("invalid log level - " + logLevel);
            return;
        }
        $8deea2274d57fbb5$var$_logLevel = level;
    }
    static from(version) {
        return new $8deea2274d57fbb5$export$efa9a398d6368992(version);
    }
}
$8deea2274d57fbb5$export$efa9a398d6368992.errors = $8deea2274d57fbb5$export$d4e71bc0b80dc0fb;
$8deea2274d57fbb5$export$efa9a398d6368992.levels = $8deea2274d57fbb5$export$243e62d78d3b544d;

});
parcelRequire.register("exiPr", function(module, exports) {

$parcel$export(module.exports, "version", () => $a952c0bd932963c7$export$83d89fbfd8236492);
const $a952c0bd932963c7$export$83d89fbfd8236492 = "logger/5.7.0";

});


parcelRequire.register("2xGeL", function(module, exports) {

$parcel$export(module.exports, "version", () => $1d9f6d4410693846$export$83d89fbfd8236492);
const $1d9f6d4410693846$export$83d89fbfd8236492 = "bytes/5.7.0";

});


parcelRequire.register("fGPr3", function(module, exports) {

$parcel$export(module.exports, "version", () => $b6c2ad44890f6bab$export$83d89fbfd8236492);
const $b6c2ad44890f6bab$export$83d89fbfd8236492 = "rlp/5.7.0";

});


parcelRequire.register("j7DFn", function(module, exports) {

$parcel$export(module.exports, "decode", () => (parcelRequire("6s22a")).decode);
$parcel$export(module.exports, "encode", () => (parcelRequire("6s22a")).encode);

var $6s22a = parcelRequire("6s22a");
"use strict";

});
parcelRequire.register("6s22a", function(module, exports) {

$parcel$export(module.exports, "decode", () => $4b26ef85eb6073ae$export$2f872c0f2117be69);
$parcel$export(module.exports, "encode", () => $4b26ef85eb6073ae$export$c564cdbbe6da493);

var $eg8oT = parcelRequire("eg8oT");
"use strict";
function $4b26ef85eb6073ae$export$2f872c0f2117be69(textData) {
    textData = atob(textData);
    const data = [];
    for(let i = 0; i < textData.length; i++)data.push(textData.charCodeAt(i));
    return (0, $eg8oT.arrayify)(data);
}
function $4b26ef85eb6073ae$export$c564cdbbe6da493(data) {
    data = (0, $eg8oT.arrayify)(data);
    let textData = "";
    for(let i = 0; i < data.length; i++)textData += String.fromCharCode(data[i]);
    return btoa(textData);
}

});


parcelRequire.register("gi5BC", function(module, exports) {

$parcel$export(module.exports, "useSyncExternalStoreWithSelector", () => $bdc2acf2f0a928ca$export$bf730a2d8bf68b42, (v) => $bdc2acf2f0a928ca$export$bf730a2d8bf68b42 = v);
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $bdc2acf2f0a928ca$export$bf730a2d8bf68b42;
"use strict";

var $d4J5n = parcelRequire("d4J5n");

var $i3xEO = parcelRequire("i3xEO");
function $bdc2acf2f0a928ca$var$p(a, b) {
    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var $bdc2acf2f0a928ca$var$q = "function" === typeof Object.is ? Object.is : $bdc2acf2f0a928ca$var$p, $bdc2acf2f0a928ca$var$r = $i3xEO.useSyncExternalStore, $bdc2acf2f0a928ca$var$t = $d4J5n.useRef, $bdc2acf2f0a928ca$var$u = $d4J5n.useEffect, $bdc2acf2f0a928ca$var$v = $d4J5n.useMemo, $bdc2acf2f0a928ca$var$w = $d4J5n.useDebugValue;
$bdc2acf2f0a928ca$export$bf730a2d8bf68b42 = function(a, b, e, l, g) {
    var c = $bdc2acf2f0a928ca$var$t(null);
    if (null === c.current) {
        var f = {
            hasValue: !1,
            value: null
        };
        c.current = f;
    } else f = c.current;
    c = $bdc2acf2f0a928ca$var$v(function() {
        function a(a) {
            if (!c) {
                c = !0;
                d = a;
                a = l(a);
                if (void 0 !== g && f.hasValue) {
                    var b = f.value;
                    if (g(b, a)) return k = b;
                }
                return k = a;
            }
            b = k;
            if ($bdc2acf2f0a928ca$var$q(d, a)) return b;
            var e = l(a);
            if (void 0 !== g && g(b, e)) return b;
            d = a;
            return k = e;
        }
        var c = !1, d, k, m = void 0 === e ? null : e;
        return [
            function() {
                return a(b());
            },
            null === m ? void 0 : function() {
                return a(m());
            }
        ];
    }, [
        b,
        e,
        l,
        g
    ]);
    var d = $bdc2acf2f0a928ca$var$r(a, c[0], c[1]);
    $bdc2acf2f0a928ca$var$u(function() {
        f.hasValue = !0;
        f.value = d;
    }, [
        d
    ]);
    $bdc2acf2f0a928ca$var$w(d);
    return d;
};

});
parcelRequire.register("i3xEO", function(module, exports) {
"use strict";

module.exports = (parcelRequire("aOMYu"));

});


parcelRequire.register("aSxGG", function(module, exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";

var $gR6sg = parcelRequire("gR6sg");
function $7eb91429e284f8f2$var$emptyFunction() {}
function $7eb91429e284f8f2$var$emptyFunctionWithReset() {}
$7eb91429e284f8f2$var$emptyFunctionWithReset.resetWarningCache = $7eb91429e284f8f2$var$emptyFunction;
module.exports = function() {
    function shim(props, propName, componentName, location, propFullName, secret) {
        if (secret === $gR6sg) // It is still safe when called from React.
        return;
        var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
        err.name = "Invariant Violation";
        throw err;
    }
    shim.isRequired = shim;
    function getShim() {
        return shim;
    }
    // Important!
    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
    var ReactPropTypes = {
        array: shim,
        bigint: shim,
        bool: shim,
        func: shim,
        number: shim,
        object: shim,
        string: shim,
        symbol: shim,
        any: shim,
        arrayOf: getShim,
        element: shim,
        elementType: shim,
        instanceOf: getShim,
        node: shim,
        objectOf: getShim,
        oneOf: getShim,
        oneOfType: getShim,
        shape: getShim,
        exact: getShim,
        checkPropTypes: $7eb91429e284f8f2$var$emptyFunctionWithReset,
        resetWarningCache: $7eb91429e284f8f2$var$emptyFunction
    };
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

});
parcelRequire.register("gR6sg", function(module, exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var $c4569a61786c8538$var$ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
module.exports = $c4569a61786c8538$var$ReactPropTypesSecret;

});


parcelRequire.register("9bpDK", function(module, exports) {
module.exports = JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"InsufficientReserve","type":"error"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"MaxBuyLimit","type":"error"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"MinBuyLimit","type":"error"},{"inputs":[],"name":"NotRunning","type":"error"},{"inputs":[],"name":"PaymentError","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"Bought","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"BUSD","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLIFF_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ICO_AMOUNT","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ICO_PAUSED","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ICO_STARTED","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BUY","outputs":[{"internalType":"uint160","name":"","type":"uint160"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BUY","outputs":[{"internalType":"uint160","name":"","type":"uint160"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NEXT_DUE","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SALE_ENDED","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STARTS_FROM","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_PRICE","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOTAL_SOLD","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VESTING_TERM","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"allocations","outputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint96","name":"totalClaimed","type":"uint96"},{"internalType":"uint96","name":"totalBought","type":"uint96"},{"internalType":"uint160","name":"totalPaid","type":"uint160"},{"internalType":"uint96","name":"perPeriod","type":"uint96"},{"internalType":"uint48","name":"nextDue","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint96","name":"payment","type":"uint96"}],"name":"buy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"buyers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint96","name":"icoAmount","type":"uint96"},{"internalType":"uint160","name":"maxBuy","type":"uint160"},{"internalType":"uint160","name":"minBuy","type":"uint160"},{"internalType":"uint96","name":"tokenPrice","type":"uint96"},{"internalType":"uint48","name":"vestingTerm","type":"uint48"},{"internalType":"bool","name":"isPaused","type":"bool"}],"internalType":"struct MetapotamiansICO.ICOSettings","name":"settings","type":"tuple"}],"name":"changeICOSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint48","name":"startsFrom","type":"uint48"}],"name":"finalizeSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"getBuyer","outputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint96","name":"totalClaimed","type":"uint96"},{"internalType":"uint96","name":"totalBought","type":"uint96"},{"internalType":"uint160","name":"totalPaid","type":"uint160"},{"internalType":"uint96","name":"perPeriod","type":"uint96"},{"internalType":"uint48","name":"nextDue","type":"uint48"}],"internalType":"struct MetapotamiansICO.Allocation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"i","type":"uint256"}],"name":"getBuyer","outputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint96","name":"totalClaimed","type":"uint96"},{"internalType":"uint96","name":"totalBought","type":"uint96"},{"internalType":"uint160","name":"totalPaid","type":"uint160"},{"internalType":"uint96","name":"perPeriod","type":"uint96"},{"internalType":"uint48","name":"nextDue","type":"uint48"}],"internalType":"struct MetapotamiansICO.Allocation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBuyer","outputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint96","name":"totalClaimed","type":"uint96"},{"internalType":"uint96","name":"totalBought","type":"uint96"},{"internalType":"uint160","name":"totalPaid","type":"uint160"},{"internalType":"uint96","name":"perPeriod","type":"uint96"},{"internalType":"uint48","name":"nextDue","type":"uint48"}],"internalType":"struct MetapotamiansICO.Allocation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBuyers","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"recoverBEP20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"recoverBNB","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"i","type":"uint256"},{"internalType":"bool","name":"f","type":"bool"}],"name":"sendTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"setToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint48","name":"newGas","type":"uint48"}],"name":"setTransferGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferGas","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawUnsoldTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]');

});

parcelRequire.register("dj4BM", function(module, exports) {



module.exports = Promise.all([
    import("./" + (parcelRequire("aKzDW")).resolve("eMmRr")),
    import("./" + (parcelRequire("aKzDW")).resolve("l9yzj")),
    import("./" + (parcelRequire("aKzDW")).resolve("fQ6HN"))
]).then(()=>parcelRequire("g2wHJ"));

});

parcelRequire.register("i5sne", function(module, exports) {


module.exports = Promise.all([
    import("./" + (parcelRequire("aKzDW")).resolve("eMmRr")),
    import("./" + (parcelRequire("aKzDW")).resolve("6glUQ"))
]).then(()=>parcelRequire("kY2Cw"));

});

parcelRequire.register("5Trjc", function(module, exports) {


module.exports = Promise.all([
    import("./" + (parcelRequire("aKzDW")).resolve("l9yzj")),
    import("./" + (parcelRequire("aKzDW")).resolve("5CdJ9"))
]).then(()=>parcelRequire("8QmCb"));

});

var $e29722f2964db048$exports = {};

(parcelRequire("aKzDW")).register(JSON.parse('{"fOP43":"index.8eddf2eb.js","fQ6HN":"esm.3b8cabfe.js","l9yzj":"esm.c86626d4.js","eMmRr":"esm.20c5a426.js","6glUQ":"dist.4b8828ba.js","6sPnp":"dist.b3a32ba1.js","5CdJ9":"index.es.6c1c21c9.js","4cs7C":"index.94786efa.css"}'));

var $17b288f07ec57b56$exports = {};
"use strict";

$17b288f07ec57b56$exports = (parcelRequire("4WnG3"));


var $fef8548889890d4d$export$882461b6382ed46c;
var $fef8548889890d4d$export$757ceba2d55c277e;
"use strict";
var $4723f549251dd88b$exports = {};
"use strict";
function $4723f549251dd88b$var$checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") return;
    try {
        // Verify that the code above has been dead code eliminated (DCE'd).
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE($4723f549251dd88b$var$checkDCE);
    } catch (err) {
        // DevTools shouldn't crash React, no matter what.
        // We should still report in case we break this code.
        console.error(err);
    }
}
// DCE check should happen before ReactDOM bundle executes so that
// DevTools can report bad minification during injection.
$4723f549251dd88b$var$checkDCE();

$4723f549251dd88b$exports = (parcelRequire("bgpZC"));


var $fef8548889890d4d$var$i;
$fef8548889890d4d$export$882461b6382ed46c = $4723f549251dd88b$exports.createRoot;
$fef8548889890d4d$export$757ceba2d55c277e = $4723f549251dd88b$exports.hydrateRoot;



parcelRequire("d4J5n");
var $f2b17ba975ed8e56$exports = {};
!function(e, t) {
    $f2b17ba975ed8e56$exports = t();
}($f2b17ba975ed8e56$exports, function() {
    return function(e) {
        function t(o) {
            if (n[o]) return n[o].exports;
            var i = n[o] = {
                exports: {},
                id: o,
                loaded: !1
            };
            return e[o].call(i.exports, i, i.exports, t), i.loaded = !0, i.exports;
        }
        var n = {};
        return t.m = e, t.c = n, t.p = "dist/", t(0);
    }([
        function(e, t, n) {
            "use strict";
            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                };
            }
            var i = Object.assign || function(e) {
                for(var t = 1; t < arguments.length; t++){
                    var n = arguments[t];
                    for(var o in n)Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
                }
                return e;
            }, r = n(1), a = (o(r), n(6)), u = o(a), c = n(7), s = o(c), f = n(8), d = o(f), l = n(9), p = o(l), m = n(10), b = o(m), v = n(11), y = o(v), g = n(14), h = o(g), w = [], k = !1, x = {
                offset: 120,
                delay: 0,
                easing: "ease",
                duration: 400,
                disable: !1,
                once: !1,
                startEvent: "DOMContentLoaded",
                throttleDelay: 99,
                debounceDelay: 50,
                disableMutationObserver: !1
            }, j = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                if (e && (k = !0), k) return w = (0, y.default)(w, x), (0, b.default)(w, x.once), w;
            }, O = function() {
                w = (0, h.default)(), j();
            }, M = function() {
                w.forEach(function(e, t) {
                    e.node.removeAttribute("data-aos"), e.node.removeAttribute("data-aos-easing"), e.node.removeAttribute("data-aos-duration"), e.node.removeAttribute("data-aos-delay");
                });
            }, S = function(e) {
                return e === !0 || "mobile" === e && p.default.mobile() || "phone" === e && p.default.phone() || "tablet" === e && p.default.tablet() || "function" == typeof e && e() === !0;
            }, _ = function(e) {
                x = i(x, e), w = (0, h.default)();
                var t = document.all && !window.atob;
                return S(x.disable) || t ? M() : (x.disableMutationObserver || d.default.isSupported() || (console.info('\n      aos: MutationObserver is not supported on this browser,\n      code mutations observing has been disabled.\n      You may have to call "refreshHard()" by yourself.\n    '), x.disableMutationObserver = !0), document.querySelector("body").setAttribute("data-aos-easing", x.easing), document.querySelector("body").setAttribute("data-aos-duration", x.duration), document.querySelector("body").setAttribute("data-aos-delay", x.delay), "DOMContentLoaded" === x.startEvent && [
                    "complete",
                    "interactive"
                ].indexOf(document.readyState) > -1 ? j(!0) : "load" === x.startEvent ? window.addEventListener(x.startEvent, function() {
                    j(!0);
                }) : document.addEventListener(x.startEvent, function() {
                    j(!0);
                }), window.addEventListener("resize", (0, s.default)(j, x.debounceDelay, !0)), window.addEventListener("orientationchange", (0, s.default)(j, x.debounceDelay, !0)), window.addEventListener("scroll", (0, u.default)(function() {
                    (0, b.default)(w, x.once);
                }, x.throttleDelay)), x.disableMutationObserver || d.default.ready("[data-aos]", O), w);
            };
            e.exports = {
                init: _,
                refresh: j,
                refreshHard: O
            };
        },
        function(e, t) {},
        ,
        ,
        ,
        ,
        function(e, t) {
            (function(t) {
                "use strict";
                function n(e, t, n) {
                    function o(t) {
                        var n = b, o = v;
                        return b = v = void 0, k = t, g = e.apply(o, n);
                    }
                    function r(e) {
                        return k = e, h = setTimeout(f, t), M ? o(e) : g;
                    }
                    function a(e) {
                        var n = e - w, o = e - k, i = t - n;
                        return S ? j(i, y - o) : i;
                    }
                    function c(e) {
                        var n = e - w, o = e - k;
                        return void 0 === w || n >= t || n < 0 || S && o >= y;
                    }
                    function f() {
                        var e = O();
                        return c(e) ? d(e) : void (h = setTimeout(f, a(e)));
                    }
                    function d(e) {
                        return h = void 0, _ && b ? o(e) : (b = v = void 0, g);
                    }
                    function l() {
                        void 0 !== h && clearTimeout(h), k = 0, b = w = v = h = void 0;
                    }
                    function p() {
                        return void 0 === h ? g : d(O());
                    }
                    function m() {
                        var e = O(), n = c(e);
                        if (b = arguments, v = this, w = e, n) {
                            if (void 0 === h) return r(w);
                            if (S) return h = setTimeout(f, t), o(w);
                        }
                        return void 0 === h && (h = setTimeout(f, t)), g;
                    }
                    var b, v, y, g, h, w, k = 0, M = !1, S = !1, _ = !0;
                    if ("function" != typeof e) throw new TypeError(s);
                    return t = u(t) || 0, i(n) && (M = !!n.leading, S = "maxWait" in n, y = S ? x(u(n.maxWait) || 0, t) : y, _ = "trailing" in n ? !!n.trailing : _), m.cancel = l, m.flush = p, m;
                }
                function o(e, t, o) {
                    var r = !0, a = !0;
                    if ("function" != typeof e) throw new TypeError(s);
                    return i(o) && (r = "leading" in o ? !!o.leading : r, a = "trailing" in o ? !!o.trailing : a), n(e, t, {
                        leading: r,
                        maxWait: t,
                        trailing: a
                    });
                }
                function i(e) {
                    var t = "undefined" == typeof e ? "undefined" : c(e);
                    return !!e && ("object" == t || "function" == t);
                }
                function r(e) {
                    return !!e && "object" == ("undefined" == typeof e ? "undefined" : c(e));
                }
                function a(e) {
                    return "symbol" == ("undefined" == typeof e ? "undefined" : c(e)) || r(e) && k.call(e) == d;
                }
                function u(e) {
                    if ("number" == typeof e) return e;
                    if (a(e)) return f;
                    if (i(e)) {
                        var t = "function" == typeof e.valueOf ? e.valueOf() : e;
                        e = i(t) ? t + "" : t;
                    }
                    if ("string" != typeof e) return 0 === e ? e : +e;
                    e = e.replace(l, "");
                    var n = m.test(e);
                    return n || b.test(e) ? v(e.slice(2), n ? 2 : 8) : p.test(e) ? f : +e;
                }
                var c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e;
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }, s = "Expected a function", f = NaN, d = "[object Symbol]", l = /^\s+|\s+$/g, p = /^[-+]0x[0-9a-f]+$/i, m = /^0b[01]+$/i, b = /^0o[0-7]+$/i, v = parseInt, y = "object" == ("undefined" == typeof t ? "undefined" : c(t)) && t && t.Object === Object && t, g = "object" == ("undefined" == typeof self ? "undefined" : c(self)) && self && self.Object === Object && self, h = y || g || Function("return this")(), w = Object.prototype, k = w.toString, x = Math.max, j = Math.min, O = function() {
                    return h.Date.now();
                };
                e.exports = o;
            }).call(t, function() {
                return this;
            }());
        },
        function(e, t) {
            (function(t) {
                "use strict";
                function n(e, t, n) {
                    function i(t) {
                        var n = b, o = v;
                        return b = v = void 0, O = t, g = e.apply(o, n);
                    }
                    function r(e) {
                        return O = e, h = setTimeout(f, t), M ? i(e) : g;
                    }
                    function u(e) {
                        var n = e - w, o = e - O, i = t - n;
                        return S ? x(i, y - o) : i;
                    }
                    function s(e) {
                        var n = e - w, o = e - O;
                        return void 0 === w || n >= t || n < 0 || S && o >= y;
                    }
                    function f() {
                        var e = j();
                        return s(e) ? d(e) : void (h = setTimeout(f, u(e)));
                    }
                    function d(e) {
                        return h = void 0, _ && b ? i(e) : (b = v = void 0, g);
                    }
                    function l() {
                        void 0 !== h && clearTimeout(h), O = 0, b = w = v = h = void 0;
                    }
                    function p() {
                        return void 0 === h ? g : d(j());
                    }
                    function m() {
                        var e = j(), n = s(e);
                        if (b = arguments, v = this, w = e, n) {
                            if (void 0 === h) return r(w);
                            if (S) return h = setTimeout(f, t), i(w);
                        }
                        return void 0 === h && (h = setTimeout(f, t)), g;
                    }
                    var b, v, y, g, h, w, O = 0, M = !1, S = !1, _ = !0;
                    if ("function" != typeof e) throw new TypeError(c);
                    return t = a(t) || 0, o(n) && (M = !!n.leading, S = "maxWait" in n, y = S ? k(a(n.maxWait) || 0, t) : y, _ = "trailing" in n ? !!n.trailing : _), m.cancel = l, m.flush = p, m;
                }
                function o(e) {
                    var t = "undefined" == typeof e ? "undefined" : u(e);
                    return !!e && ("object" == t || "function" == t);
                }
                function i(e) {
                    return !!e && "object" == ("undefined" == typeof e ? "undefined" : u(e));
                }
                function r(e) {
                    return "symbol" == ("undefined" == typeof e ? "undefined" : u(e)) || i(e) && w.call(e) == f;
                }
                function a(e) {
                    if ("number" == typeof e) return e;
                    if (r(e)) return s;
                    if (o(e)) {
                        var t = "function" == typeof e.valueOf ? e.valueOf() : e;
                        e = o(t) ? t + "" : t;
                    }
                    if ("string" != typeof e) return 0 === e ? e : +e;
                    e = e.replace(d, "");
                    var n = p.test(e);
                    return n || m.test(e) ? b(e.slice(2), n ? 2 : 8) : l.test(e) ? s : +e;
                }
                var u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e;
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }, c = "Expected a function", s = NaN, f = "[object Symbol]", d = /^\s+|\s+$/g, l = /^[-+]0x[0-9a-f]+$/i, p = /^0b[01]+$/i, m = /^0o[0-7]+$/i, b = parseInt, v = "object" == ("undefined" == typeof t ? "undefined" : u(t)) && t && t.Object === Object && t, y = "object" == ("undefined" == typeof self ? "undefined" : u(self)) && self && self.Object === Object && self, g = v || y || Function("return this")(), h = Object.prototype, w = h.toString, k = Math.max, x = Math.min, j = function() {
                    return g.Date.now();
                };
                e.exports = n;
            }).call(t, function() {
                return this;
            }());
        },
        function(e, t) {
            "use strict";
            function n(e) {
                var t = void 0, o = void 0, i = void 0;
                for(t = 0; t < e.length; t += 1){
                    if (o = e[t], o.dataset && o.dataset.aos) return !0;
                    if (i = o.children && n(o.children)) return !0;
                }
                return !1;
            }
            function o() {
                return window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
            }
            function i() {
                return !!o();
            }
            function r(e, t) {
                var n = window.document, i = o(), r = new i(a);
                u = t, r.observe(n.documentElement, {
                    childList: !0,
                    subtree: !0,
                    removedNodes: !0
                });
            }
            function a(e) {
                e && e.forEach(function(e) {
                    var t = Array.prototype.slice.call(e.addedNodes), o = Array.prototype.slice.call(e.removedNodes), i = t.concat(o);
                    if (n(i)) return u();
                });
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var u = function() {};
            t.default = {
                isSupported: i,
                ready: r
            };
        },
        function(e, t) {
            "use strict";
            function n(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            }
            function o() {
                return navigator.userAgent || navigator.vendor || window.opera || "";
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = function() {
                function e(e, t) {
                    for(var n = 0; n < t.length; n++){
                        var o = t[n];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
                    }
                }
                return function(t, n, o) {
                    return n && e(t.prototype, n), o && e(t, o), t;
                };
            }(), r = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i, a = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i, u = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i, c = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i, s = function() {
                function e() {
                    n(this, e);
                }
                return i(e, [
                    {
                        key: "phone",
                        value: function() {
                            var e = o();
                            return !(!r.test(e) && !a.test(e.substr(0, 4)));
                        }
                    },
                    {
                        key: "mobile",
                        value: function() {
                            var e = o();
                            return !(!u.test(e) && !c.test(e.substr(0, 4)));
                        }
                    },
                    {
                        key: "tablet",
                        value: function() {
                            return this.mobile() && !this.phone();
                        }
                    }
                ]), e;
            }();
            t.default = new s;
        },
        function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = function(e, t, n) {
                var o = e.node.getAttribute("data-aos-once");
                t > e.position ? e.node.classList.add("aos-animate") : "undefined" != typeof o && ("false" === o || !n && "true" !== o) && e.node.classList.remove("aos-animate");
            }, o = function(e, t) {
                var o = window.pageYOffset, i = window.innerHeight;
                e.forEach(function(e, r) {
                    n(e, i + o, t);
                });
            };
            t.default = o;
        },
        function(e, t, n) {
            "use strict";
            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                };
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = n(12), r = o(i), a = function(e, t) {
                return e.forEach(function(e, n) {
                    e.node.classList.add("aos-init"), e.position = (0, r.default)(e.node, t.offset);
                }), e;
            };
            t.default = a;
        },
        function(e, t, n) {
            "use strict";
            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                };
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = n(13), r = o(i), a = function(e, t) {
                var n = 0, o = 0, i = window.innerHeight, a = {
                    offset: e.getAttribute("data-aos-offset"),
                    anchor: e.getAttribute("data-aos-anchor"),
                    anchorPlacement: e.getAttribute("data-aos-anchor-placement")
                };
                switch(a.offset && !isNaN(a.offset) && (o = parseInt(a.offset)), a.anchor && document.querySelectorAll(a.anchor) && (e = document.querySelectorAll(a.anchor)[0]), n = (0, r.default)(e).top, a.anchorPlacement){
                    case "top-bottom":
                        break;
                    case "center-bottom":
                        n += e.offsetHeight / 2;
                        break;
                    case "bottom-bottom":
                        n += e.offsetHeight;
                        break;
                    case "top-center":
                        n += i / 2;
                        break;
                    case "bottom-center":
                        n += i / 2 + e.offsetHeight;
                        break;
                    case "center-center":
                        n += i / 2 + e.offsetHeight / 2;
                        break;
                    case "top-top":
                        n += i;
                        break;
                    case "bottom-top":
                        n += e.offsetHeight + i;
                        break;
                    case "center-top":
                        n += e.offsetHeight / 2 + i;
                }
                return a.anchorPlacement || a.offset || isNaN(t) || (o = t), n + o;
            };
            t.default = a;
        },
        function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = function(e) {
                for(var t = 0, n = 0; e && !isNaN(e.offsetLeft) && !isNaN(e.offsetTop);)t += e.offsetLeft - ("BODY" != e.tagName ? e.scrollLeft : 0), n += e.offsetTop - ("BODY" != e.tagName ? e.scrollTop : 0), e = e.offsetParent;
                return {
                    top: n,
                    left: t
                };
            };
            t.default = n;
        },
        function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = function(e) {
                return e = e || document.querySelectorAll("[data-aos]"), Array.prototype.map.call(e, function(e) {
                    return {
                        node: e
                    };
                });
            };
            t.default = n;
        }
    ]);
});







// src/client.ts
function $c044e69ceb4379ed$export$35561f995d4e487d({ storage: storage , key: key = "REACT_QUERY_OFFLINE_CACHE" , throttleTime: throttleTime = 1000 , serialize: serialize = JSON.stringify , deserialize: deserialize = JSON.parse , retry: retry  }) {
    if (typeof storage !== "undefined") {
        const trySave = (persistedClient)=>{
            try {
                storage.setItem(key, serialize(persistedClient));
                return;
            } catch (error) {
                return error;
            }
        };
        return {
            persistClient: $c044e69ceb4379ed$var$throttle((persistedClient)=>{
                let client = persistedClient;
                let error = trySave(client);
                let errorCount = 0;
                while(error && client){
                    errorCount++;
                    client = retry == null ? void 0 : retry({
                        persistedClient: client,
                        error: error,
                        errorCount: errorCount
                    });
                    if (client) error = trySave(client);
                }
            }, throttleTime),
            restoreClient: ()=>{
                const cacheString = storage.getItem(key);
                if (!cacheString) return;
                return deserialize(cacheString);
            },
            removeClient: ()=>{
                storage.removeItem(key);
            }
        };
    }
    return {
        persistClient: $c044e69ceb4379ed$var$noop,
        restoreClient: ()=>undefined,
        removeClient: $c044e69ceb4379ed$var$noop
    };
}
function $c044e69ceb4379ed$var$throttle(func, wait = 100) {
    let timer = null;
    let params;
    return function(...args) {
        params = args;
        if (timer === null) timer = setTimeout(()=>{
            func(...params);
            timer = null;
        }, wait);
    };
} // eslint-disable-next-line @typescript-eslint/no-empty-function
function $c044e69ceb4379ed$var$noop() {}


// TYPES
// UTILS
const $524eefe766be9228$export$6acf61af03e62db = typeof window === "undefined" || "Deno" in window;
function $524eefe766be9228$export$8793edee2d425525() {
    return undefined;
}
function $524eefe766be9228$export$7f095f455ad5af3f(updater, input) {
    return typeof updater === "function" ? updater(input) : updater;
}
function $524eefe766be9228$export$e539f754e934e270(value) {
    return typeof value === "number" && value >= 0 && value !== Infinity;
}
function $524eefe766be9228$export$acaf96a27438246b(array1, array2) {
    return array1.filter((x)=>array2.indexOf(x) === -1);
}
function $524eefe766be9228$export$224e3b7078227b8a(array, index, value) {
    const copy = array.slice(0);
    copy[index] = value;
    return copy;
}
function $524eefe766be9228$export$811b83d62bcf47f0(updatedAt, staleTime) {
    return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);
}
function $524eefe766be9228$export$8a11fbc2c8ea08fd(arg1, arg2, arg3) {
    if (!$524eefe766be9228$export$aaae5295ec3351c9(arg1)) return arg1;
    if (typeof arg2 === "function") return {
        ...arg3,
        queryKey: arg1,
        queryFn: arg2
    };
    return {
        ...arg2,
        queryKey: arg1
    };
}
function $524eefe766be9228$export$b646c531ea475334(arg1, arg2, arg3) {
    if ($524eefe766be9228$export$aaae5295ec3351c9(arg1)) {
        if (typeof arg2 === "function") return {
            ...arg3,
            mutationKey: arg1,
            mutationFn: arg2
        };
        return {
            ...arg2,
            mutationKey: arg1
        };
    }
    if (typeof arg1 === "function") return {
        ...arg2,
        mutationFn: arg1
    };
    return {
        ...arg1
    };
}
function $524eefe766be9228$export$18e8f4b987e6c111(arg1, arg2, arg3) {
    return $524eefe766be9228$export$aaae5295ec3351c9(arg1) ? [
        {
            ...arg2,
            queryKey: arg1
        },
        arg3
    ] : [
        arg1 || {},
        arg2
    ];
}
function $524eefe766be9228$export$42387eeaac09cf54(arg1, arg2, arg3) {
    return $524eefe766be9228$export$aaae5295ec3351c9(arg1) ? [
        {
            ...arg2,
            mutationKey: arg1
        },
        arg3
    ] : [
        arg1 || {},
        arg2
    ];
}
function $524eefe766be9228$export$c5d1efe363797780(filters, query) {
    const { type: type = "all" , exact: exact , fetchStatus: fetchStatus , predicate: predicate , queryKey: queryKey , stale: stale  } = filters;
    if ($524eefe766be9228$export$aaae5295ec3351c9(queryKey)) {
        if (exact) {
            if (query.queryHash !== $524eefe766be9228$export$cc90ca97bc0d73fd(queryKey, query.options)) return false;
        } else if (!$524eefe766be9228$export$2f07189bb9fa26a7(query.queryKey, queryKey)) return false;
    }
    if (type !== "all") {
        const isActive = query.isActive();
        if (type === "active" && !isActive) return false;
        if (type === "inactive" && isActive) return false;
    }
    if (typeof stale === "boolean" && query.isStale() !== stale) return false;
    if (typeof fetchStatus !== "undefined" && fetchStatus !== query.state.fetchStatus) return false;
    if (predicate && !predicate(query)) return false;
    return true;
}
function $524eefe766be9228$export$a1ea5fb559f63ae3(filters, mutation) {
    const { exact: exact , fetching: fetching , predicate: predicate , mutationKey: mutationKey  } = filters;
    if ($524eefe766be9228$export$aaae5295ec3351c9(mutationKey)) {
        if (!mutation.options.mutationKey) return false;
        if (exact) {
            if ($524eefe766be9228$export$5fcb678681417b54(mutation.options.mutationKey) !== $524eefe766be9228$export$5fcb678681417b54(mutationKey)) return false;
        } else if (!$524eefe766be9228$export$2f07189bb9fa26a7(mutation.options.mutationKey, mutationKey)) return false;
    }
    if (typeof fetching === "boolean" && mutation.state.status === "loading" !== fetching) return false;
    if (predicate && !predicate(mutation)) return false;
    return true;
}
function $524eefe766be9228$export$cc90ca97bc0d73fd(queryKey, options) {
    const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || $524eefe766be9228$export$5fcb678681417b54;
    return hashFn(queryKey);
}
/**
 * Default query keys hash function.
 * Hashes the value into a stable hash.
 */ function $524eefe766be9228$export$5fcb678681417b54(queryKey) {
    return JSON.stringify(queryKey, (_, val)=>$524eefe766be9228$export$53b83ca8eaab0383(val) ? Object.keys(val).sort().reduce((result, key)=>{
            result[key] = val[key];
            return result;
        }, {}) : val);
}
/**
 * Checks if key `b` partially matches with key `a`.
 */ function $524eefe766be9228$export$2f07189bb9fa26a7(a, b) {
    return $524eefe766be9228$export$3bc9138b70293839(a, b);
}
/**
 * Checks if `b` partially matches with `a`.
 */ function $524eefe766be9228$export$3bc9138b70293839(a, b) {
    if (a === b) return true;
    if (typeof a !== typeof b) return false;
    if (a && b && typeof a === "object" && typeof b === "object") return !Object.keys(b).some((key)=>!$524eefe766be9228$export$3bc9138b70293839(a[key], b[key]));
    return false;
}
/**
 * This function returns `a` if `b` is deeply equal.
 * If not, it will replace any deeply equal children of `b` with those of `a`.
 * This can be used for structural sharing between JSON values for example.
 */ function $524eefe766be9228$export$77a71fc411098696(a, b) {
    if (a === b) return a;
    const array = $524eefe766be9228$export$7a8558113332b71e(a) && $524eefe766be9228$export$7a8558113332b71e(b);
    if (array || $524eefe766be9228$export$53b83ca8eaab0383(a) && $524eefe766be9228$export$53b83ca8eaab0383(b)) {
        const aSize = array ? a.length : Object.keys(a).length;
        const bItems = array ? b : Object.keys(b);
        const bSize = bItems.length;
        const copy = array ? [] : {};
        let equalItems = 0;
        for(let i = 0; i < bSize; i++){
            const key = array ? i : bItems[i];
            copy[key] = $524eefe766be9228$export$77a71fc411098696(a[key], b[key]);
            if (copy[key] === a[key]) equalItems++;
        }
        return aSize === bSize && equalItems === aSize ? a : copy;
    }
    return b;
}
/**
 * Shallow compare objects. Only works with objects that always have the same properties.
 */ function $524eefe766be9228$export$3e67810a3f0e9f1c(a, b) {
    if (a && !b || b && !a) return false;
    for(const key in a){
        if (a[key] !== b[key]) return false;
    }
    return true;
}
function $524eefe766be9228$export$7a8558113332b71e(value) {
    return Array.isArray(value) && value.length === Object.keys(value).length;
} // Copied from: https://github.com/jonschlinkert/is-plain-object
function $524eefe766be9228$export$53b83ca8eaab0383(o) {
    if (!$524eefe766be9228$var$hasObjectPrototype(o)) return false;
     // If has modified constructor
    const ctor = o.constructor;
    if (typeof ctor === "undefined") return true;
     // If has modified prototype
    const prot = ctor.prototype;
    if (!$524eefe766be9228$var$hasObjectPrototype(prot)) return false;
     // If constructor does not have an Object-specific method
    if (!prot.hasOwnProperty("isPrototypeOf")) return false;
     // Most likely a plain Object
    return true;
}
function $524eefe766be9228$var$hasObjectPrototype(o) {
    return Object.prototype.toString.call(o) === "[object Object]";
}
function $524eefe766be9228$export$aaae5295ec3351c9(value) {
    return Array.isArray(value);
}
function $524eefe766be9228$export$e6127cc7fe7395c3(value) {
    return value instanceof Error;
}
function $524eefe766be9228$export$e772c8ff12451969(timeout) {
    return new Promise((resolve)=>{
        setTimeout(resolve, timeout);
    });
}
/**
 * Schedules a microtask.
 * This can be useful to schedule state updates after rendering.
 */ function $524eefe766be9228$export$4304cb76768ca134(callback) {
    $524eefe766be9228$export$e772c8ff12451969(0).then(callback);
}
function $524eefe766be9228$export$382ca5d13a8f252c() {
    if (typeof AbortController === "function") return new AbortController();
    return;
}
function $524eefe766be9228$export$17619bac5b909b23(prevData, data, options) {
    // Use prev data if an isDataEqual function is defined and returns `true`
    if (options.isDataEqual != null && options.isDataEqual(prevData, data)) return prevData;
    else if (typeof options.structuralSharing === "function") return options.structuralSharing(prevData, data);
    else if (options.structuralSharing !== false) // Structurally share data between prev and new data if needed
    return $524eefe766be9228$export$77a71fc411098696(prevData, data);
    return data;
}



function $82bd7063bd3305fc$export$316a8efd03cd1458() {
    let queue = [];
    let transactions = 0;
    let notifyFn = (callback)=>{
        callback();
    };
    let batchNotifyFn = (callback)=>{
        callback();
    };
    const batch = (callback)=>{
        let result;
        transactions++;
        try {
            result = callback();
        } finally{
            transactions--;
            if (!transactions) flush();
        }
        return result;
    };
    const schedule = (callback)=>{
        if (transactions) queue.push(callback);
        else (0, $524eefe766be9228$export$4304cb76768ca134)(()=>{
            notifyFn(callback);
        });
    };
    /**
   * All calls to the wrapped function will be batched.
   */ const batchCalls = (callback)=>{
        return (...args)=>{
            schedule(()=>{
                callback(...args);
            });
        };
    };
    const flush = ()=>{
        const originalQueue = queue;
        queue = [];
        if (originalQueue.length) (0, $524eefe766be9228$export$4304cb76768ca134)(()=>{
            batchNotifyFn(()=>{
                originalQueue.forEach((callback)=>{
                    notifyFn(callback);
                });
            });
        });
    };
    /**
   * Use this method to set a custom notify function.
   * This can be used to for example wrap notifications with `React.act` while running tests.
   */ const setNotifyFunction = (fn)=>{
        notifyFn = fn;
    };
    /**
   * Use this method to set a custom function to batch notifications together into a single tick.
   * By default React Query will use the batch function provided by ReactDOM or React Native.
   */ const setBatchNotifyFunction = (fn)=>{
        batchNotifyFn = fn;
    };
    return {
        batch: batch,
        batchCalls: batchCalls,
        schedule: schedule,
        setNotifyFunction: setNotifyFunction,
        setBatchNotifyFunction: setBatchNotifyFunction
    };
} // SINGLETON
const $82bd7063bd3305fc$export$520687f44db6e1ab = $82bd7063bd3305fc$export$316a8efd03cd1458();


class $a2bf86d0c8473e89$export$d26086b469ecdbcc {
    constructor(){
        this.listeners = [];
        this.subscribe = this.subscribe.bind(this);
    }
    subscribe(listener) {
        this.listeners.push(listener);
        this.onSubscribe();
        return ()=>{
            this.listeners = this.listeners.filter((x)=>x !== listener);
            this.onUnsubscribe();
        };
    }
    hasListeners() {
        return this.listeners.length > 0;
    }
    onSubscribe() {}
    onUnsubscribe() {}
}



class $8c229f30805942e7$export$86f1af424b2ca4de extends (0, $a2bf86d0c8473e89$export$d26086b469ecdbcc) {
    constructor(){
        super();
        this.setup = (onFocus)=>{
            // addEventListener does not exist in React Native, but window does
            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
            if (!(0, $524eefe766be9228$export$6acf61af03e62db) && window.addEventListener) {
                const listener = ()=>onFocus(); // Listen to visibillitychange and focus
                window.addEventListener("visibilitychange", listener, false);
                window.addEventListener("focus", listener, false);
                return ()=>{
                    // Be sure to unsubscribe if a new handler is set
                    window.removeEventListener("visibilitychange", listener);
                    window.removeEventListener("focus", listener);
                };
            }
            return;
        };
    }
    onSubscribe() {
        if (!this.cleanup) this.setEventListener(this.setup);
    }
    onUnsubscribe() {
        if (!this.hasListeners()) {
            var _this$cleanup;
            (_this$cleanup = this.cleanup) == null || _this$cleanup.call(this);
            this.cleanup = undefined;
        }
    }
    setEventListener(setup) {
        var _this$cleanup2;
        this.setup = setup;
        (_this$cleanup2 = this.cleanup) == null || _this$cleanup2.call(this);
        this.cleanup = setup((focused)=>{
            if (typeof focused === "boolean") this.setFocused(focused);
            else this.onFocus();
        });
    }
    setFocused(focused) {
        this.focused = focused;
        if (focused) this.onFocus();
    }
    onFocus() {
        this.listeners.forEach((listener)=>{
            listener();
        });
    }
    isFocused() {
        if (typeof this.focused === "boolean") return this.focused;
         // document global can be unavailable in react native
        if (typeof document === "undefined") return true;
        return [
            undefined,
            "visible",
            "prerender"
        ].includes(document.visibilityState);
    }
}
const $8c229f30805942e7$export$6bf54661be5b02cf = new $8c229f30805942e7$export$86f1af424b2ca4de();






class $de7b7538a0bedbbd$export$58774fb55d5ff7fc extends (0, $a2bf86d0c8473e89$export$d26086b469ecdbcc) {
    constructor(){
        super();
        this.setup = (onOnline)=>{
            // addEventListener does not exist in React Native, but window does
            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
            if (!(0, $524eefe766be9228$export$6acf61af03e62db) && window.addEventListener) {
                const listener = ()=>onOnline(); // Listen to online
                window.addEventListener("online", listener, false);
                window.addEventListener("offline", listener, false);
                return ()=>{
                    // Be sure to unsubscribe if a new handler is set
                    window.removeEventListener("online", listener);
                    window.removeEventListener("offline", listener);
                };
            }
            return;
        };
    }
    onSubscribe() {
        if (!this.cleanup) this.setEventListener(this.setup);
    }
    onUnsubscribe() {
        if (!this.hasListeners()) {
            var _this$cleanup;
            (_this$cleanup = this.cleanup) == null || _this$cleanup.call(this);
            this.cleanup = undefined;
        }
    }
    setEventListener(setup) {
        var _this$cleanup2;
        this.setup = setup;
        (_this$cleanup2 = this.cleanup) == null || _this$cleanup2.call(this);
        this.cleanup = setup((online)=>{
            if (typeof online === "boolean") this.setOnline(online);
            else this.onOnline();
        });
    }
    setOnline(online) {
        this.online = online;
        if (online) this.onOnline();
    }
    onOnline() {
        this.listeners.forEach((listener)=>{
            listener();
        });
    }
    isOnline() {
        if (typeof this.online === "boolean") return this.online;
        if (typeof navigator === "undefined" || typeof navigator.onLine === "undefined") return true;
        return navigator.onLine;
    }
}
const $de7b7538a0bedbbd$export$b113e788b2dd3fdc = new $de7b7538a0bedbbd$export$58774fb55d5ff7fc();



function $225df3c41005028e$var$defaultRetryDelay(failureCount) {
    return Math.min(1000 * 2 ** failureCount, 30000);
}
function $225df3c41005028e$export$61b92f63f30245cf(networkMode) {
    return (networkMode != null ? networkMode : "online") === "online" ? (0, $de7b7538a0bedbbd$export$b113e788b2dd3fdc).isOnline() : true;
}
class $225df3c41005028e$export$a8430ed4188f35a9 {
    constructor(options){
        this.revert = options == null ? void 0 : options.revert;
        this.silent = options == null ? void 0 : options.silent;
    }
}
function $225df3c41005028e$export$986cc6445c1d323(value) {
    return value instanceof $225df3c41005028e$export$a8430ed4188f35a9;
}
function $225df3c41005028e$export$2cbd00fe8a2c8d85(config) {
    let isRetryCancelled = false;
    let failureCount = 0;
    let isResolved = false;
    let continueFn;
    let promiseResolve;
    let promiseReject;
    const promise = new Promise((outerResolve, outerReject)=>{
        promiseResolve = outerResolve;
        promiseReject = outerReject;
    });
    const cancel = (cancelOptions)=>{
        if (!isResolved) {
            reject(new $225df3c41005028e$export$a8430ed4188f35a9(cancelOptions));
            config.abort == null || config.abort();
        }
    };
    const cancelRetry = ()=>{
        isRetryCancelled = true;
    };
    const continueRetry = ()=>{
        isRetryCancelled = false;
    };
    const shouldPause = ()=>!(0, $8c229f30805942e7$export$6bf54661be5b02cf).isFocused() || config.networkMode !== "always" && !(0, $de7b7538a0bedbbd$export$b113e788b2dd3fdc).isOnline();
    const resolve = (value)=>{
        if (!isResolved) {
            isResolved = true;
            config.onSuccess == null || config.onSuccess(value);
            continueFn == null || continueFn();
            promiseResolve(value);
        }
    };
    const reject = (value)=>{
        if (!isResolved) {
            isResolved = true;
            config.onError == null || config.onError(value);
            continueFn == null || continueFn();
            promiseReject(value);
        }
    };
    const pause = ()=>{
        return new Promise((continueResolve)=>{
            continueFn = (value)=>{
                const canContinue = isResolved || !shouldPause();
                if (canContinue) continueResolve(value);
                return canContinue;
            };
            config.onPause == null || config.onPause();
        }).then(()=>{
            continueFn = undefined;
            if (!isResolved) config.onContinue == null || config.onContinue();
        });
    }; // Create loop function
    const run = ()=>{
        // Do nothing if already resolved
        if (isResolved) return;
        let promiseOrValue; // Execute query
        try {
            promiseOrValue = config.fn();
        } catch (error) {
            promiseOrValue = Promise.reject(error);
        }
        Promise.resolve(promiseOrValue).then(resolve).catch((error)=>{
            var _config$retry, _config$retryDelay;
            // Stop if the fetch is already resolved
            if (isResolved) return;
             // Do we need to retry the request?
            const retry = (_config$retry = config.retry) != null ? _config$retry : 3;
            const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : $225df3c41005028e$var$defaultRetryDelay;
            const delay = typeof retryDelay === "function" ? retryDelay(failureCount, error) : retryDelay;
            const shouldRetry = retry === true || typeof retry === "number" && failureCount < retry || typeof retry === "function" && retry(failureCount, error);
            if (isRetryCancelled || !shouldRetry) {
                // We are done if the query does not need to be retried
                reject(error);
                return;
            }
            failureCount++; // Notify on fail
            config.onFail == null || config.onFail(failureCount, error); // Delay
            (0, $524eefe766be9228$export$e772c8ff12451969)(delay) // Pause if the document is not visible or when the device is offline
            .then(()=>{
                if (shouldPause()) return pause();
                return;
            }).then(()=>{
                if (isRetryCancelled) reject(error);
                else run();
            });
        });
    }; // Start loop
    if ($225df3c41005028e$export$61b92f63f30245cf(config.networkMode)) run();
    else pause().then(run);
    return {
        promise: promise,
        cancel: cancel,
        continue: ()=>{
            const didContinue = continueFn == null ? void 0 : continueFn();
            return didContinue ? promise : Promise.resolve();
        },
        cancelRetry: cancelRetry,
        continueRetry: continueRetry
    };
}


class $075b77aa70d2e9f8$export$a06cf8c0066f0d4c extends (0, $a2bf86d0c8473e89$export$d26086b469ecdbcc) {
    constructor(client, options){
        super();
        this.client = client;
        this.options = options;
        this.trackedProps = new Set();
        this.selectError = null;
        this.bindMethods();
        this.setOptions(options);
    }
    bindMethods() {
        this.remove = this.remove.bind(this);
        this.refetch = this.refetch.bind(this);
    }
    onSubscribe() {
        if (this.listeners.length === 1) {
            this.currentQuery.addObserver(this);
            if ($075b77aa70d2e9f8$var$shouldFetchOnMount(this.currentQuery, this.options)) this.executeFetch();
            this.updateTimers();
        }
    }
    onUnsubscribe() {
        if (!this.listeners.length) this.destroy();
    }
    shouldFetchOnReconnect() {
        return $075b77aa70d2e9f8$var$shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);
    }
    shouldFetchOnWindowFocus() {
        return $075b77aa70d2e9f8$var$shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);
    }
    destroy() {
        this.listeners = [];
        this.clearStaleTimeout();
        this.clearRefetchInterval();
        this.currentQuery.removeObserver(this);
    }
    setOptions(options, notifyOptions) {
        const prevOptions = this.options;
        const prevQuery = this.currentQuery;
        this.options = this.client.defaultQueryOptions(options);
        if (!(0, $524eefe766be9228$export$3e67810a3f0e9f1c)(prevOptions, this.options)) this.client.getQueryCache().notify({
            type: "observerOptionsUpdated",
            query: this.currentQuery,
            observer: this
        });
        if (typeof this.options.enabled !== "undefined" && typeof this.options.enabled !== "boolean") throw new Error("Expected enabled to be a boolean");
         // Keep previous query key if the user does not supply one
        if (!this.options.queryKey) this.options.queryKey = prevOptions.queryKey;
        this.updateQuery();
        const mounted = this.hasListeners(); // Fetch if there are subscribers
        if (mounted && $075b77aa70d2e9f8$var$shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) this.executeFetch();
         // Update result
        this.updateResult(notifyOptions); // Update stale interval if needed
        if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) this.updateStaleTimeout();
        const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed
        if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) this.updateRefetchInterval(nextRefetchInterval);
    }
    getOptimisticResult(options) {
        const query = this.client.getQueryCache().build(this.client, options);
        return this.createResult(query, options);
    }
    getCurrentResult() {
        return this.currentResult;
    }
    trackResult(result) {
        const trackedResult = {};
        Object.keys(result).forEach((key)=>{
            Object.defineProperty(trackedResult, key, {
                configurable: false,
                enumerable: true,
                get: ()=>{
                    this.trackedProps.add(key);
                    return result[key];
                }
            });
        });
        return trackedResult;
    }
    getCurrentQuery() {
        return this.currentQuery;
    }
    remove() {
        this.client.getQueryCache().remove(this.currentQuery);
    }
    refetch({ refetchPage: refetchPage , ...options } = {}) {
        return this.fetch({
            ...options,
            meta: {
                refetchPage: refetchPage
            }
        });
    }
    fetchOptimistic(options) {
        const defaultedOptions = this.client.defaultQueryOptions(options);
        const query = this.client.getQueryCache().build(this.client, defaultedOptions);
        query.isFetchingOptimistic = true;
        return query.fetch().then(()=>this.createResult(query, defaultedOptions));
    }
    fetch(fetchOptions) {
        var _fetchOptions$cancelR;
        return this.executeFetch({
            ...fetchOptions,
            cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true
        }).then(()=>{
            this.updateResult();
            return this.currentResult;
        });
    }
    executeFetch(fetchOptions) {
        // Make sure we reference the latest query as the current one might have been removed
        this.updateQuery(); // Fetch
        let promise = this.currentQuery.fetch(this.options, fetchOptions);
        if (!(fetchOptions != null && fetchOptions.throwOnError)) promise = promise.catch((0, $524eefe766be9228$export$8793edee2d425525));
        return promise;
    }
    updateStaleTimeout() {
        this.clearStaleTimeout();
        if ((0, $524eefe766be9228$export$6acf61af03e62db) || this.currentResult.isStale || !(0, $524eefe766be9228$export$e539f754e934e270)(this.options.staleTime)) return;
        const time = (0, $524eefe766be9228$export$811b83d62bcf47f0)(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.
        // To mitigate this issue we always add 1 ms to the timeout.
        const timeout = time + 1;
        this.staleTimeoutId = setTimeout(()=>{
            if (!this.currentResult.isStale) this.updateResult();
        }, timeout);
    }
    computeRefetchInterval() {
        var _this$options$refetch;
        return typeof this.options.refetchInterval === "function" ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;
    }
    updateRefetchInterval(nextInterval) {
        this.clearRefetchInterval();
        this.currentRefetchInterval = nextInterval;
        if ((0, $524eefe766be9228$export$6acf61af03e62db) || this.options.enabled === false || !(0, $524eefe766be9228$export$e539f754e934e270)(this.currentRefetchInterval) || this.currentRefetchInterval === 0) return;
        this.refetchIntervalId = setInterval(()=>{
            if (this.options.refetchIntervalInBackground || (0, $8c229f30805942e7$export$6bf54661be5b02cf).isFocused()) this.executeFetch();
        }, this.currentRefetchInterval);
    }
    updateTimers() {
        this.updateStaleTimeout();
        this.updateRefetchInterval(this.computeRefetchInterval());
    }
    clearStaleTimeout() {
        if (this.staleTimeoutId) {
            clearTimeout(this.staleTimeoutId);
            this.staleTimeoutId = undefined;
        }
    }
    clearRefetchInterval() {
        if (this.refetchIntervalId) {
            clearInterval(this.refetchIntervalId);
            this.refetchIntervalId = undefined;
        }
    }
    createResult(query, options) {
        const prevQuery = this.currentQuery;
        const prevOptions = this.options;
        const prevResult = this.currentResult;
        const prevResultState = this.currentResultState;
        const prevResultOptions = this.currentResultOptions;
        const queryChange = query !== prevQuery;
        const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;
        const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;
        const { state: state  } = query;
        let { dataUpdatedAt: dataUpdatedAt , error: error , errorUpdatedAt: errorUpdatedAt , fetchStatus: fetchStatus , status: status  } = state;
        let isPreviousData = false;
        let isPlaceholderData = false;
        let data; // Optimistically set result in fetching state if needed
        if (options._optimisticResults) {
            const mounted = this.hasListeners();
            const fetchOnMount = !mounted && $075b77aa70d2e9f8$var$shouldFetchOnMount(query, options);
            const fetchOptionally = mounted && $075b77aa70d2e9f8$var$shouldFetchOptionally(query, prevQuery, options, prevOptions);
            if (fetchOnMount || fetchOptionally) {
                fetchStatus = (0, $225df3c41005028e$export$61b92f63f30245cf)(query.options.networkMode) ? "fetching" : "paused";
                if (!dataUpdatedAt) status = "loading";
            }
            if (options._optimisticResults === "isRestoring") fetchStatus = "idle";
        } // Keep previous data if needed
        if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== "error") {
            data = prevQueryResult.data;
            dataUpdatedAt = prevQueryResult.dataUpdatedAt;
            status = prevQueryResult.status;
            isPreviousData = true;
        } else if (options.select && typeof state.data !== "undefined") {
            // Memoize select result
            if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) data = this.selectResult;
            else try {
                this.selectFn = options.select;
                data = options.select(state.data);
                data = (0, $524eefe766be9228$export$17619bac5b909b23)(prevResult == null ? void 0 : prevResult.data, data, options);
                this.selectResult = data;
                this.selectError = null;
            } catch (selectError) {
                this.selectError = selectError;
            }
        } else data = state.data;
         // Show placeholder data if needed
        if (typeof options.placeholderData !== "undefined" && typeof data === "undefined" && status === "loading") {
            let placeholderData; // Memoize placeholder data
            if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) placeholderData = prevResult.data;
            else {
                placeholderData = typeof options.placeholderData === "function" ? options.placeholderData() : options.placeholderData;
                if (options.select && typeof placeholderData !== "undefined") try {
                    placeholderData = options.select(placeholderData);
                    this.selectError = null;
                } catch (selectError) {
                    this.selectError = selectError;
                }
            }
            if (typeof placeholderData !== "undefined") {
                status = "success";
                data = (0, $524eefe766be9228$export$17619bac5b909b23)(prevResult == null ? void 0 : prevResult.data, placeholderData, options);
                isPlaceholderData = true;
            }
        }
        if (this.selectError) {
            error = this.selectError;
            data = this.selectResult;
            errorUpdatedAt = Date.now();
            status = "error";
        }
        const isFetching = fetchStatus === "fetching";
        const isLoading = status === "loading";
        const isError = status === "error";
        const result = {
            status: status,
            fetchStatus: fetchStatus,
            isLoading: isLoading,
            isSuccess: status === "success",
            isError: isError,
            isInitialLoading: isLoading && isFetching,
            data: data,
            dataUpdatedAt: dataUpdatedAt,
            error: error,
            errorUpdatedAt: errorUpdatedAt,
            failureCount: state.fetchFailureCount,
            failureReason: state.fetchFailureReason,
            errorUpdateCount: state.errorUpdateCount,
            isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,
            isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,
            isFetching: isFetching,
            isRefetching: isFetching && !isLoading,
            isLoadingError: isError && state.dataUpdatedAt === 0,
            isPaused: fetchStatus === "paused",
            isPlaceholderData: isPlaceholderData,
            isPreviousData: isPreviousData,
            isRefetchError: isError && state.dataUpdatedAt !== 0,
            isStale: $075b77aa70d2e9f8$var$isStale(query, options),
            refetch: this.refetch,
            remove: this.remove
        };
        return result;
    }
    updateResult(notifyOptions) {
        const prevResult = this.currentResult;
        const nextResult = this.createResult(this.currentQuery, this.options);
        this.currentResultState = this.currentQuery.state;
        this.currentResultOptions = this.options; // Only notify and update result if something has changed
        if ((0, $524eefe766be9228$export$3e67810a3f0e9f1c)(nextResult, prevResult)) return;
        this.currentResult = nextResult; // Determine which callbacks to trigger
        const defaultNotifyOptions = {
            cache: true
        };
        const shouldNotifyListeners = ()=>{
            if (!prevResult) return true;
            const { notifyOnChangeProps: notifyOnChangeProps  } = this.options;
            if (notifyOnChangeProps === "all" || !notifyOnChangeProps && !this.trackedProps.size) return true;
            const includedProps = new Set(notifyOnChangeProps != null ? notifyOnChangeProps : this.trackedProps);
            if (this.options.useErrorBoundary) includedProps.add("error");
            return Object.keys(this.currentResult).some((key)=>{
                const typedKey = key;
                const changed = this.currentResult[typedKey] !== prevResult[typedKey];
                return changed && includedProps.has(typedKey);
            });
        };
        if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) defaultNotifyOptions.listeners = true;
        this.notify({
            ...defaultNotifyOptions,
            ...notifyOptions
        });
    }
    updateQuery() {
        const query = this.client.getQueryCache().build(this.client, this.options);
        if (query === this.currentQuery) return;
        const prevQuery = this.currentQuery;
        this.currentQuery = query;
        this.currentQueryInitialState = query.state;
        this.previousQueryResult = this.currentResult;
        if (this.hasListeners()) {
            prevQuery == null || prevQuery.removeObserver(this);
            query.addObserver(this);
        }
    }
    onQueryUpdate(action) {
        const notifyOptions = {};
        if (action.type === "success") notifyOptions.onSuccess = !action.manual;
        else if (action.type === "error" && !(0, $225df3c41005028e$export$986cc6445c1d323)(action.error)) notifyOptions.onError = true;
        this.updateResult(notifyOptions);
        if (this.hasListeners()) this.updateTimers();
    }
    notify(notifyOptions) {
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            // First trigger the configuration callbacks
            if (notifyOptions.onSuccess) {
                var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;
                (_this$options$onSucce = (_this$options = this.options).onSuccess) == null || _this$options$onSucce.call(_this$options, this.currentResult.data);
                (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null || _this$options$onSettl.call(_this$options2, this.currentResult.data, null);
            } else if (notifyOptions.onError) {
                var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;
                (_this$options$onError = (_this$options3 = this.options).onError) == null || _this$options$onError.call(_this$options3, this.currentResult.error);
                (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null || _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);
            } // Then trigger the listeners
            if (notifyOptions.listeners) this.listeners.forEach((listener)=>{
                listener(this.currentResult);
            });
             // Then the cache listeners
            if (notifyOptions.cache) this.client.getQueryCache().notify({
                query: this.currentQuery,
                type: "observerResultsUpdated"
            });
        });
    }
}
function $075b77aa70d2e9f8$var$shouldLoadOnMount(query, options) {
    return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === "error" && options.retryOnMount === false);
}
function $075b77aa70d2e9f8$var$shouldFetchOnMount(query, options) {
    return $075b77aa70d2e9f8$var$shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && $075b77aa70d2e9f8$var$shouldFetchOn(query, options, options.refetchOnMount);
}
function $075b77aa70d2e9f8$var$shouldFetchOn(query, options, field) {
    if (options.enabled !== false) {
        const value = typeof field === "function" ? field(query) : field;
        return value === "always" || value !== false && $075b77aa70d2e9f8$var$isStale(query, options);
    }
    return false;
}
function $075b77aa70d2e9f8$var$shouldFetchOptionally(query, prevQuery, options, prevOptions) {
    return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== "error") && $075b77aa70d2e9f8$var$isStale(query, options);
}
function $075b77aa70d2e9f8$var$isStale(query, options) {
    return query.isStaleByTime(options.staleTime);
}


function $3a00dd7af916a8fb$export$84470d1367601e8d() {
    return {
        onFetch: (context)=>{
            context.fetchFn = ()=>{
                var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;
                const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;
                const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;
                const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;
                const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === "forward";
                const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === "backward";
                const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];
                const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];
                let newPageParams = oldPageParams;
                let cancelled = false;
                const addSignalProperty = (object)=>{
                    Object.defineProperty(object, "signal", {
                        enumerable: true,
                        get: ()=>{
                            var _context$signal;
                            if ((_context$signal = context.signal) != null && _context$signal.aborted) cancelled = true;
                            else {
                                var _context$signal2;
                                (_context$signal2 = context.signal) == null || _context$signal2.addEventListener("abort", ()=>{
                                    cancelled = true;
                                });
                            }
                            return context.signal;
                        }
                    });
                }; // Get query function
                const queryFn = context.options.queryFn || (()=>Promise.reject("Missing queryFn"));
                const buildNewPages = (pages, param, page, previous)=>{
                    newPageParams = previous ? [
                        param,
                        ...newPageParams
                    ] : [
                        ...newPageParams,
                        param
                    ];
                    return previous ? [
                        page,
                        ...pages
                    ] : [
                        ...pages,
                        page
                    ];
                }; // Create function to fetch a page
                const fetchPage = (pages, manual, param, previous)=>{
                    if (cancelled) return Promise.reject("Cancelled");
                    if (typeof param === "undefined" && !manual && pages.length) return Promise.resolve(pages);
                    const queryFnContext = {
                        queryKey: context.queryKey,
                        pageParam: param,
                        meta: context.options.meta
                    };
                    addSignalProperty(queryFnContext);
                    const queryFnResult = queryFn(queryFnContext);
                    const promise = Promise.resolve(queryFnResult).then((page)=>buildNewPages(pages, param, page, previous));
                    return promise;
                };
                let promise; // Fetch first page?
                if (!oldPages.length) promise = fetchPage([]);
                else if (isFetchingNextPage) {
                    const manual = typeof pageParam !== "undefined";
                    const param = manual ? pageParam : $3a00dd7af916a8fb$export$1186159d57de7255(context.options, oldPages);
                    promise = fetchPage(oldPages, manual, param);
                } else if (isFetchingPreviousPage) {
                    const manual = typeof pageParam !== "undefined";
                    const param = manual ? pageParam : $3a00dd7af916a8fb$export$48efda17d8ac7ac7(context.options, oldPages);
                    promise = fetchPage(oldPages, manual, param, true);
                } else {
                    newPageParams = [];
                    const manual = typeof context.options.getNextPageParam === "undefined";
                    const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page
                    promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages
                    for(let i = 1; i < oldPages.length; i++)promise = promise.then((pages)=>{
                        const shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;
                        if (shouldFetchNextPage) {
                            const param = manual ? oldPageParams[i] : $3a00dd7af916a8fb$export$1186159d57de7255(context.options, pages);
                            return fetchPage(pages, manual, param);
                        }
                        return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));
                    });
                }
                const finalPromise = promise.then((pages)=>({
                        pages: pages,
                        pageParams: newPageParams
                    }));
                return finalPromise;
            };
        }
    };
}
function $3a00dd7af916a8fb$export$1186159d57de7255(options, pages) {
    return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);
}
function $3a00dd7af916a8fb$export$48efda17d8ac7ac7(options, pages) {
    return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);
}
/**
 * Checks if there is a next page.
 * Returns `undefined` if it cannot be determined.
 */ function $3a00dd7af916a8fb$export$b9c88add8b8b5e6a(options, pages) {
    if (options.getNextPageParam && Array.isArray(pages)) {
        const nextPageParam = $3a00dd7af916a8fb$export$1186159d57de7255(options, pages);
        return typeof nextPageParam !== "undefined" && nextPageParam !== null && nextPageParam !== false;
    }
    return;
}
/**
 * Checks if there is a previous page.
 * Returns `undefined` if it cannot be determined.
 */ function $3a00dd7af916a8fb$export$db1663b730a8e6e4(options, pages) {
    if (options.getPreviousPageParam && Array.isArray(pages)) {
        const previousPageParam = $3a00dd7af916a8fb$export$48efda17d8ac7ac7(options, pages);
        return typeof previousPageParam !== "undefined" && previousPageParam !== null && previousPageParam !== false;
    }
    return;
}


class $e7c4f18cdb7fe215$export$85d960eb3ab339c8 extends (0, $075b77aa70d2e9f8$export$a06cf8c0066f0d4c) {
    // Type override
    // Type override
    // Type override
    // eslint-disable-next-line @typescript-eslint/no-useless-constructor
    constructor(client, options){
        super(client, options);
    }
    bindMethods() {
        super.bindMethods();
        this.fetchNextPage = this.fetchNextPage.bind(this);
        this.fetchPreviousPage = this.fetchPreviousPage.bind(this);
    }
    setOptions(options, notifyOptions) {
        super.setOptions({
            ...options,
            behavior: (0, $3a00dd7af916a8fb$export$84470d1367601e8d)()
        }, notifyOptions);
    }
    getOptimisticResult(options) {
        options.behavior = (0, $3a00dd7af916a8fb$export$84470d1367601e8d)();
        return super.getOptimisticResult(options);
    }
    fetchNextPage({ pageParam: pageParam , ...options } = {}) {
        return this.fetch({
            ...options,
            meta: {
                fetchMore: {
                    direction: "forward",
                    pageParam: pageParam
                }
            }
        });
    }
    fetchPreviousPage({ pageParam: pageParam , ...options } = {}) {
        return this.fetch({
            ...options,
            meta: {
                fetchMore: {
                    direction: "backward",
                    pageParam: pageParam
                }
            }
        });
    }
    createResult(query, options) {
        var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;
        const { state: state  } = query;
        const result = super.createResult(query, options);
        const { isFetching: isFetching , isRefetching: isRefetching  } = result;
        const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === "forward";
        const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === "backward";
        return {
            ...result,
            fetchNextPage: this.fetchNextPage,
            fetchPreviousPage: this.fetchPreviousPage,
            hasNextPage: (0, $3a00dd7af916a8fb$export$b9c88add8b8b5e6a)(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),
            hasPreviousPage: (0, $3a00dd7af916a8fb$export$db1663b730a8e6e4)(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),
            isFetchingNextPage: isFetchingNextPage,
            isFetchingPreviousPage: isFetchingPreviousPage,
            isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage
        };
    }
}




const $dbb89927ab847f13$export$1cf3d545f2d4635c = console;





class $0e13264ea0b535a8$export$e09608847fcc8c59 {
    destroy() {
        this.clearGcTimeout();
    }
    scheduleGc() {
        this.clearGcTimeout();
        if ((0, $524eefe766be9228$export$e539f754e934e270)(this.cacheTime)) this.gcTimeout = setTimeout(()=>{
            this.optionalRemove();
        }, this.cacheTime);
    }
    updateCacheTime(newCacheTime) {
        // Default to 5 minutes (Infinity for server-side) if no cache time is set
        this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : (0, $524eefe766be9228$export$6acf61af03e62db) ? Infinity : 300000);
    }
    clearGcTimeout() {
        if (this.gcTimeout) {
            clearTimeout(this.gcTimeout);
            this.gcTimeout = undefined;
        }
    }
}


// CLASS
class $f6e57817ce71c75d$export$62297b13309008b2 extends (0, $0e13264ea0b535a8$export$e09608847fcc8c59) {
    constructor(config){
        super();
        this.abortSignalConsumed = false;
        this.defaultOptions = config.defaultOptions;
        this.setOptions(config.options);
        this.observers = [];
        this.cache = config.cache;
        this.logger = config.logger || (0, $dbb89927ab847f13$export$1cf3d545f2d4635c);
        this.queryKey = config.queryKey;
        this.queryHash = config.queryHash;
        this.initialState = config.state || $f6e57817ce71c75d$var$getDefaultState(this.options);
        this.state = this.initialState;
        this.scheduleGc();
    }
    get meta() {
        return this.options.meta;
    }
    setOptions(options) {
        this.options = {
            ...this.defaultOptions,
            ...options
        };
        this.updateCacheTime(this.options.cacheTime);
    }
    optionalRemove() {
        if (!this.observers.length && this.state.fetchStatus === "idle") this.cache.remove(this);
    }
    setData(newData, options) {
        const data = (0, $524eefe766be9228$export$17619bac5b909b23)(this.state.data, newData, this.options); // Set data and mark it as cached
        this.dispatch({
            data: data,
            type: "success",
            dataUpdatedAt: options == null ? void 0 : options.updatedAt,
            manual: options == null ? void 0 : options.manual
        });
        return data;
    }
    setState(state, setStateOptions) {
        this.dispatch({
            type: "setState",
            state: state,
            setStateOptions: setStateOptions
        });
    }
    cancel(options) {
        var _this$retryer;
        const promise = this.promise;
        (_this$retryer = this.retryer) == null || _this$retryer.cancel(options);
        return promise ? promise.then((0, $524eefe766be9228$export$8793edee2d425525)).catch((0, $524eefe766be9228$export$8793edee2d425525)) : Promise.resolve();
    }
    destroy() {
        super.destroy();
        this.cancel({
            silent: true
        });
    }
    reset() {
        this.destroy();
        this.setState(this.initialState);
    }
    isActive() {
        return this.observers.some((observer)=>observer.options.enabled !== false);
    }
    isDisabled() {
        return this.getObserversCount() > 0 && !this.isActive();
    }
    isStale() {
        return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some((observer)=>observer.getCurrentResult().isStale);
    }
    isStaleByTime(staleTime = 0) {
        return this.state.isInvalidated || !this.state.dataUpdatedAt || !(0, $524eefe766be9228$export$811b83d62bcf47f0)(this.state.dataUpdatedAt, staleTime);
    }
    onFocus() {
        var _this$retryer2;
        const observer = this.observers.find((x)=>x.shouldFetchOnWindowFocus());
        if (observer) observer.refetch({
            cancelRefetch: false
        });
         // Continue fetch if currently paused
        (_this$retryer2 = this.retryer) == null || _this$retryer2.continue();
    }
    onOnline() {
        var _this$retryer3;
        const observer = this.observers.find((x)=>x.shouldFetchOnReconnect());
        if (observer) observer.refetch({
            cancelRefetch: false
        });
         // Continue fetch if currently paused
        (_this$retryer3 = this.retryer) == null || _this$retryer3.continue();
    }
    addObserver(observer) {
        if (this.observers.indexOf(observer) === -1) {
            this.observers.push(observer); // Stop the query from being garbage collected
            this.clearGcTimeout();
            this.cache.notify({
                type: "observerAdded",
                query: this,
                observer: observer
            });
        }
    }
    removeObserver(observer) {
        if (this.observers.indexOf(observer) !== -1) {
            this.observers = this.observers.filter((x)=>x !== observer);
            if (!this.observers.length) {
                // If the transport layer does not support cancellation
                // we'll let the query continue so the result can be cached
                if (this.retryer) {
                    if (this.abortSignalConsumed) this.retryer.cancel({
                        revert: true
                    });
                    else this.retryer.cancelRetry();
                }
                this.scheduleGc();
            }
            this.cache.notify({
                type: "observerRemoved",
                query: this,
                observer: observer
            });
        }
    }
    getObserversCount() {
        return this.observers.length;
    }
    invalidate() {
        if (!this.state.isInvalidated) this.dispatch({
            type: "invalidate"
        });
    }
    fetch(options, fetchOptions) {
        var _this$options$behavio, _context$fetchOptions;
        if (this.state.fetchStatus !== "idle") {
            if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) // Silently cancel current fetch if the user wants to cancel refetches
            this.cancel({
                silent: true
            });
            else if (this.promise) {
                var _this$retryer4;
                // make sure that retries that were potentially cancelled due to unmounts can continue
                (_this$retryer4 = this.retryer) == null || _this$retryer4.continueRetry(); // Return current promise if we are already fetching
                return this.promise;
            }
        } // Update config if passed, otherwise the config from the last execution is used
        if (options) this.setOptions(options);
         // Use the options from the first observer with a query function if no function is found.
        // This can happen when the query is hydrated or created with setQueryData.
        if (!this.options.queryFn) {
            const observer = this.observers.find((x)=>x.options.queryFn);
            if (observer) this.setOptions(observer.options);
        }
        Array.isArray(this.options.queryKey);
        const abortController = (0, $524eefe766be9228$export$382ca5d13a8f252c)(); // Create query function context
        const queryFnContext = {
            queryKey: this.queryKey,
            pageParam: undefined,
            meta: this.meta
        }; // Adds an enumerable signal property to the object that
        // which sets abortSignalConsumed to true when the signal
        // is read.
        const addSignalProperty = (object)=>{
            Object.defineProperty(object, "signal", {
                enumerable: true,
                get: ()=>{
                    if (abortController) {
                        this.abortSignalConsumed = true;
                        return abortController.signal;
                    }
                    return undefined;
                }
            });
        };
        addSignalProperty(queryFnContext); // Create fetch function
        const fetchFn = ()=>{
            if (!this.options.queryFn) return Promise.reject("Missing queryFn");
            this.abortSignalConsumed = false;
            return this.options.queryFn(queryFnContext);
        }; // Trigger behavior hook
        const context = {
            fetchOptions: fetchOptions,
            options: this.options,
            queryKey: this.queryKey,
            state: this.state,
            fetchFn: fetchFn
        };
        addSignalProperty(context);
        (_this$options$behavio = this.options.behavior) == null || _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted
        this.revertState = this.state; // Set to fetching state if not already in it
        if (this.state.fetchStatus === "idle" || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {
            var _context$fetchOptions2;
            this.dispatch({
                type: "fetch",
                meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta
            });
        }
        const onError = (error)=>{
            // Optimistically update state if needed
            if (!((0, $225df3c41005028e$export$986cc6445c1d323)(error) && error.silent)) this.dispatch({
                type: "error",
                error: error
            });
            if (!(0, $225df3c41005028e$export$986cc6445c1d323)(error)) {
                var _this$cache$config$on, _this$cache$config;
                // Notify cache callback
                (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null || _this$cache$config$on.call(_this$cache$config, error, this);
            }
            if (!this.isFetchingOptimistic) // Schedule query gc after fetching
            this.scheduleGc();
            this.isFetchingOptimistic = false;
        }; // Try to fetch the data
        this.retryer = (0, $225df3c41005028e$export$2cbd00fe8a2c8d85)({
            fn: context.fetchFn,
            abort: abortController == null ? void 0 : abortController.abort.bind(abortController),
            onSuccess: (data)=>{
                var _this$cache$config$on2, _this$cache$config2;
                if (typeof data === "undefined") {
                    onError(new Error("undefined"));
                    return;
                }
                this.setData(data); // Notify cache callback
                (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSuccess) == null || _this$cache$config$on2.call(_this$cache$config2, data, this);
                if (!this.isFetchingOptimistic) // Schedule query gc after fetching
                this.scheduleGc();
                this.isFetchingOptimistic = false;
            },
            onError: onError,
            onFail: (failureCount, error)=>{
                this.dispatch({
                    type: "failed",
                    failureCount: failureCount,
                    error: error
                });
            },
            onPause: ()=>{
                this.dispatch({
                    type: "pause"
                });
            },
            onContinue: ()=>{
                this.dispatch({
                    type: "continue"
                });
            },
            retry: context.options.retry,
            retryDelay: context.options.retryDelay,
            networkMode: context.options.networkMode
        });
        this.promise = this.retryer.promise;
        return this.promise;
    }
    dispatch(action) {
        const reducer = (state)=>{
            var _action$meta, _action$dataUpdatedAt;
            switch(action.type){
                case "failed":
                    return {
                        ...state,
                        fetchFailureCount: action.failureCount,
                        fetchFailureReason: action.error
                    };
                case "pause":
                    return {
                        ...state,
                        fetchStatus: "paused"
                    };
                case "continue":
                    return {
                        ...state,
                        fetchStatus: "fetching"
                    };
                case "fetch":
                    return {
                        ...state,
                        fetchFailureCount: 0,
                        fetchFailureReason: null,
                        fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,
                        fetchStatus: (0, $225df3c41005028e$export$61b92f63f30245cf)(this.options.networkMode) ? "fetching" : "paused",
                        ...!state.dataUpdatedAt && {
                            error: null,
                            status: "loading"
                        }
                    };
                case "success":
                    return {
                        ...state,
                        data: action.data,
                        dataUpdateCount: state.dataUpdateCount + 1,
                        dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),
                        error: null,
                        isInvalidated: false,
                        status: "success",
                        ...!action.manual && {
                            fetchStatus: "idle",
                            fetchFailureCount: 0,
                            fetchFailureReason: null
                        }
                    };
                case "error":
                    const error = action.error;
                    if ((0, $225df3c41005028e$export$986cc6445c1d323)(error) && error.revert && this.revertState) return {
                        ...this.revertState
                    };
                    return {
                        ...state,
                        error: error,
                        errorUpdateCount: state.errorUpdateCount + 1,
                        errorUpdatedAt: Date.now(),
                        fetchFailureCount: state.fetchFailureCount + 1,
                        fetchFailureReason: error,
                        fetchStatus: "idle",
                        status: "error"
                    };
                case "invalidate":
                    return {
                        ...state,
                        isInvalidated: true
                    };
                case "setState":
                    return {
                        ...state,
                        ...action.state
                    };
            }
        };
        this.state = reducer(this.state);
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            this.observers.forEach((observer)=>{
                observer.onQueryUpdate(action);
            });
            this.cache.notify({
                query: this,
                type: "updated",
                action: action
            });
        });
    }
}
function $f6e57817ce71c75d$var$getDefaultState(options) {
    const data = typeof options.initialData === "function" ? options.initialData() : options.initialData;
    const hasData = typeof data !== "undefined";
    const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === "function" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;
    return {
        data: data,
        dataUpdateCount: 0,
        dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,
        error: null,
        errorUpdateCount: 0,
        errorUpdatedAt: 0,
        fetchFailureCount: 0,
        fetchFailureReason: null,
        fetchMeta: null,
        isInvalidated: false,
        status: hasData ? "success" : "loading",
        fetchStatus: "idle"
    };
}




// CLASS
class $4fce295efc35d5d7$export$5dde0cd941da8468 extends (0, $a2bf86d0c8473e89$export$d26086b469ecdbcc) {
    constructor(config){
        super();
        this.config = config || {};
        this.queries = [];
        this.queriesMap = {};
    }
    build(client, options, state) {
        var _options$queryHash;
        const queryKey = options.queryKey;
        const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : (0, $524eefe766be9228$export$cc90ca97bc0d73fd)(queryKey, options);
        let query = this.get(queryHash);
        if (!query) {
            query = new (0, $f6e57817ce71c75d$export$62297b13309008b2)({
                cache: this,
                logger: client.getLogger(),
                queryKey: queryKey,
                queryHash: queryHash,
                options: client.defaultQueryOptions(options),
                state: state,
                defaultOptions: client.getQueryDefaults(queryKey)
            });
            this.add(query);
        }
        return query;
    }
    add(query) {
        if (!this.queriesMap[query.queryHash]) {
            this.queriesMap[query.queryHash] = query;
            this.queries.push(query);
            this.notify({
                type: "added",
                query: query
            });
        }
    }
    remove(query) {
        const queryInMap = this.queriesMap[query.queryHash];
        if (queryInMap) {
            query.destroy();
            this.queries = this.queries.filter((x)=>x !== query);
            if (queryInMap === query) delete this.queriesMap[query.queryHash];
            this.notify({
                type: "removed",
                query: query
            });
        }
    }
    clear() {
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            this.queries.forEach((query)=>{
                this.remove(query);
            });
        });
    }
    get(queryHash) {
        return this.queriesMap[queryHash];
    }
    getAll() {
        return this.queries;
    }
    find(arg1, arg2) {
        const [filters] = (0, $524eefe766be9228$export$18e8f4b987e6c111)(arg1, arg2);
        if (typeof filters.exact === "undefined") filters.exact = true;
        return this.queries.find((query)=>(0, $524eefe766be9228$export$c5d1efe363797780)(filters, query));
    }
    findAll(arg1, arg2) {
        const [filters] = (0, $524eefe766be9228$export$18e8f4b987e6c111)(arg1, arg2);
        return Object.keys(filters).length > 0 ? this.queries.filter((query)=>(0, $524eefe766be9228$export$c5d1efe363797780)(filters, query)) : this.queries;
    }
    notify(event) {
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            this.listeners.forEach((listener)=>{
                listener(event);
            });
        });
    }
    onFocus() {
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            this.queries.forEach((query)=>{
                query.onFocus();
            });
        });
    }
    onOnline() {
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            this.queries.forEach((query)=>{
                query.onOnline();
            });
        });
    }
}







// CLASS
class $116cbabdfc9ce434$export$17b8b19c814bcf56 extends (0, $0e13264ea0b535a8$export$e09608847fcc8c59) {
    constructor(config){
        super();
        this.options = {
            ...config.defaultOptions,
            ...config.options
        };
        this.mutationId = config.mutationId;
        this.mutationCache = config.mutationCache;
        this.logger = config.logger || (0, $dbb89927ab847f13$export$1cf3d545f2d4635c);
        this.observers = [];
        this.state = config.state || $116cbabdfc9ce434$export$a1659b54bac3252a();
        this.updateCacheTime(this.options.cacheTime);
        this.scheduleGc();
    }
    get meta() {
        return this.options.meta;
    }
    setState(state) {
        this.dispatch({
            type: "setState",
            state: state
        });
    }
    addObserver(observer) {
        if (this.observers.indexOf(observer) === -1) {
            this.observers.push(observer); // Stop the mutation from being garbage collected
            this.clearGcTimeout();
            this.mutationCache.notify({
                type: "observerAdded",
                mutation: this,
                observer: observer
            });
        }
    }
    removeObserver(observer) {
        this.observers = this.observers.filter((x)=>x !== observer);
        this.scheduleGc();
        this.mutationCache.notify({
            type: "observerRemoved",
            mutation: this,
            observer: observer
        });
    }
    optionalRemove() {
        if (!this.observers.length) {
            if (this.state.status === "loading") this.scheduleGc();
            else this.mutationCache.remove(this);
        }
    }
    continue() {
        var _this$retryer$continu, _this$retryer;
        return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();
    }
    async execute() {
        const executeMutation = ()=>{
            var _this$options$retry;
            this.retryer = (0, $225df3c41005028e$export$2cbd00fe8a2c8d85)({
                fn: ()=>{
                    if (!this.options.mutationFn) return Promise.reject("No mutationFn found");
                    return this.options.mutationFn(this.state.variables);
                },
                onFail: (failureCount, error)=>{
                    this.dispatch({
                        type: "failed",
                        failureCount: failureCount,
                        error: error
                    });
                },
                onPause: ()=>{
                    this.dispatch({
                        type: "pause"
                    });
                },
                onContinue: ()=>{
                    this.dispatch({
                        type: "continue"
                    });
                },
                retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,
                retryDelay: this.options.retryDelay,
                networkMode: this.options.networkMode
            });
            return this.retryer.promise;
        };
        const restored = this.state.status === "loading";
        try {
            var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$options$onSettl, _this$options3;
            if (!restored) {
                var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;
                this.dispatch({
                    type: "loading",
                    variables: this.options.variables
                }); // Notify cache callback
                await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));
                const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));
                if (context !== this.state.context) this.dispatch({
                    type: "loading",
                    context: context,
                    variables: this.state.variables
                });
            }
            const data = await executeMutation(); // Notify cache callback
            await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));
            await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context));
            await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));
            this.dispatch({
                type: "success",
                data: data
            });
            return data;
        } catch (error) {
            try {
                var _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onError, _this$options4, _this$options$onSettl2, _this$options5;
                // Notify cache callback
                await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, error, this.state.variables, this.state.context, this));
                await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context));
                await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));
                throw error;
            } finally{
                this.dispatch({
                    type: "error",
                    error: error
                });
            }
        }
    }
    dispatch(action) {
        const reducer = (state)=>{
            switch(action.type){
                case "failed":
                    return {
                        ...state,
                        failureCount: action.failureCount,
                        failureReason: action.error
                    };
                case "pause":
                    return {
                        ...state,
                        isPaused: true
                    };
                case "continue":
                    return {
                        ...state,
                        isPaused: false
                    };
                case "loading":
                    return {
                        ...state,
                        context: action.context,
                        data: undefined,
                        failureCount: 0,
                        failureReason: null,
                        error: null,
                        isPaused: !(0, $225df3c41005028e$export$61b92f63f30245cf)(this.options.networkMode),
                        status: "loading",
                        variables: action.variables
                    };
                case "success":
                    return {
                        ...state,
                        data: action.data,
                        failureCount: 0,
                        failureReason: null,
                        error: null,
                        status: "success",
                        isPaused: false
                    };
                case "error":
                    return {
                        ...state,
                        data: undefined,
                        error: action.error,
                        failureCount: state.failureCount + 1,
                        failureReason: action.error,
                        isPaused: false,
                        status: "error"
                    };
                case "setState":
                    return {
                        ...state,
                        ...action.state
                    };
            }
        };
        this.state = reducer(this.state);
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            this.observers.forEach((observer)=>{
                observer.onMutationUpdate(action);
            });
            this.mutationCache.notify({
                mutation: this,
                type: "updated",
                action: action
            });
        });
    }
}
function $116cbabdfc9ce434$export$a1659b54bac3252a() {
    return {
        context: undefined,
        data: undefined,
        error: null,
        failureCount: 0,
        failureReason: null,
        isPaused: false,
        status: "idle",
        variables: undefined
    };
}




// CLASS
class $0dd4f7d306645117$export$1fcfd9a244434844 extends (0, $a2bf86d0c8473e89$export$d26086b469ecdbcc) {
    constructor(config){
        super();
        this.config = config || {};
        this.mutations = [];
        this.mutationId = 0;
    }
    build(client, options, state) {
        const mutation = new (0, $116cbabdfc9ce434$export$17b8b19c814bcf56)({
            mutationCache: this,
            logger: client.getLogger(),
            mutationId: ++this.mutationId,
            options: client.defaultMutationOptions(options),
            state: state,
            defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined
        });
        this.add(mutation);
        return mutation;
    }
    add(mutation) {
        this.mutations.push(mutation);
        this.notify({
            type: "added",
            mutation: mutation
        });
    }
    remove(mutation) {
        this.mutations = this.mutations.filter((x)=>x !== mutation);
        this.notify({
            type: "removed",
            mutation: mutation
        });
    }
    clear() {
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            this.mutations.forEach((mutation)=>{
                this.remove(mutation);
            });
        });
    }
    getAll() {
        return this.mutations;
    }
    find(filters) {
        if (typeof filters.exact === "undefined") filters.exact = true;
        return this.mutations.find((mutation)=>(0, $524eefe766be9228$export$a1ea5fb559f63ae3)(filters, mutation));
    }
    findAll(filters) {
        return this.mutations.filter((mutation)=>(0, $524eefe766be9228$export$a1ea5fb559f63ae3)(filters, mutation));
    }
    notify(event) {
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            this.listeners.forEach((listener)=>{
                listener(event);
            });
        });
    }
    resumePausedMutations() {
        var _this$resuming;
        this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(()=>{
            const pausedMutations = this.mutations.filter((x)=>x.state.isPaused);
            return (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>pausedMutations.reduce((promise, mutation)=>promise.then(()=>mutation.continue().catch((0, $524eefe766be9228$export$8793edee2d425525))), Promise.resolve()));
        }).then(()=>{
            this.resuming = undefined;
        });
        return this.resuming;
    }
}







// CLASS
class $c8591a1b68a984d4$export$405d0624ed55a03f {
    constructor(config = {}){
        this.queryCache = config.queryCache || new (0, $4fce295efc35d5d7$export$5dde0cd941da8468)();
        this.mutationCache = config.mutationCache || new (0, $0dd4f7d306645117$export$1fcfd9a244434844)();
        this.logger = config.logger || (0, $dbb89927ab847f13$export$1cf3d545f2d4635c);
        this.defaultOptions = config.defaultOptions || {};
        this.queryDefaults = [];
        this.mutationDefaults = [];
        this.mountCount = 0;
    }
    mount() {
        this.mountCount++;
        if (this.mountCount !== 1) return;
        this.unsubscribeFocus = (0, $8c229f30805942e7$export$6bf54661be5b02cf).subscribe(()=>{
            if ((0, $8c229f30805942e7$export$6bf54661be5b02cf).isFocused()) {
                this.resumePausedMutations();
                this.queryCache.onFocus();
            }
        });
        this.unsubscribeOnline = (0, $de7b7538a0bedbbd$export$b113e788b2dd3fdc).subscribe(()=>{
            if ((0, $de7b7538a0bedbbd$export$b113e788b2dd3fdc).isOnline()) {
                this.resumePausedMutations();
                this.queryCache.onOnline();
            }
        });
    }
    unmount() {
        var _this$unsubscribeFocu, _this$unsubscribeOnli;
        this.mountCount--;
        if (this.mountCount !== 0) return;
        (_this$unsubscribeFocu = this.unsubscribeFocus) == null || _this$unsubscribeFocu.call(this);
        this.unsubscribeFocus = undefined;
        (_this$unsubscribeOnli = this.unsubscribeOnline) == null || _this$unsubscribeOnli.call(this);
        this.unsubscribeOnline = undefined;
    }
    isFetching(arg1, arg2) {
        const [filters] = (0, $524eefe766be9228$export$18e8f4b987e6c111)(arg1, arg2);
        filters.fetchStatus = "fetching";
        return this.queryCache.findAll(filters).length;
    }
    isMutating(filters) {
        return this.mutationCache.findAll({
            ...filters,
            fetching: true
        }).length;
    }
    getQueryData(queryKey, filters) {
        var _this$queryCache$find;
        return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;
    }
    ensureQueryData(arg1, arg2, arg3) {
        const parsedOptions = (0, $524eefe766be9228$export$8a11fbc2c8ea08fd)(arg1, arg2, arg3);
        const cachedData = this.getQueryData(parsedOptions.queryKey);
        return cachedData ? Promise.resolve(cachedData) : this.fetchQuery(parsedOptions);
    }
    getQueriesData(queryKeyOrFilters) {
        return this.getQueryCache().findAll(queryKeyOrFilters).map(({ queryKey: queryKey , state: state  })=>{
            const data = state.data;
            return [
                queryKey,
                data
            ];
        });
    }
    setQueryData(queryKey, updater, options) {
        const query = this.queryCache.find(queryKey);
        const prevData = query == null ? void 0 : query.state.data;
        const data = (0, $524eefe766be9228$export$7f095f455ad5af3f)(updater, prevData);
        if (typeof data === "undefined") return undefined;
        const parsedOptions = (0, $524eefe766be9228$export$8a11fbc2c8ea08fd)(queryKey);
        const defaultedOptions = this.defaultQueryOptions(parsedOptions);
        return this.queryCache.build(this, defaultedOptions).setData(data, {
            ...options,
            manual: true
        });
    }
    setQueriesData(queryKeyOrFilters, updater, options) {
        return (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>this.getQueryCache().findAll(queryKeyOrFilters).map(({ queryKey: queryKey  })=>[
                    queryKey,
                    this.setQueryData(queryKey, updater, options)
                ]));
    }
    getQueryState(queryKey, filters) {
        var _this$queryCache$find2;
        return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;
    }
    removeQueries(arg1, arg2) {
        const [filters] = (0, $524eefe766be9228$export$18e8f4b987e6c111)(arg1, arg2);
        const queryCache = this.queryCache;
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            queryCache.findAll(filters).forEach((query)=>{
                queryCache.remove(query);
            });
        });
    }
    resetQueries(arg1, arg2, arg3) {
        const [filters, options] = (0, $524eefe766be9228$export$18e8f4b987e6c111)(arg1, arg2, arg3);
        const queryCache = this.queryCache;
        const refetchFilters = {
            type: "active",
            ...filters
        };
        return (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            queryCache.findAll(filters).forEach((query)=>{
                query.reset();
            });
            return this.refetchQueries(refetchFilters, options);
        });
    }
    cancelQueries(arg1, arg2, arg3) {
        const [filters, cancelOptions = {}] = (0, $524eefe766be9228$export$18e8f4b987e6c111)(arg1, arg2, arg3);
        if (typeof cancelOptions.revert === "undefined") cancelOptions.revert = true;
        const promises = (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>this.queryCache.findAll(filters).map((query)=>query.cancel(cancelOptions)));
        return Promise.all(promises).then((0, $524eefe766be9228$export$8793edee2d425525)).catch((0, $524eefe766be9228$export$8793edee2d425525));
    }
    invalidateQueries(arg1, arg2, arg3) {
        const [filters, options] = (0, $524eefe766be9228$export$18e8f4b987e6c111)(arg1, arg2, arg3);
        return (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            var _ref, _filters$refetchType;
            this.queryCache.findAll(filters).forEach((query)=>{
                query.invalidate();
            });
            if (filters.refetchType === "none") return Promise.resolve();
            const refetchFilters = {
                ...filters,
                type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : "active"
            };
            return this.refetchQueries(refetchFilters, options);
        });
    }
    refetchQueries(arg1, arg2, arg3) {
        const [filters, options] = (0, $524eefe766be9228$export$18e8f4b987e6c111)(arg1, arg2, arg3);
        const promises = (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>this.queryCache.findAll(filters).filter((query)=>!query.isDisabled()).map((query)=>{
                var _options$cancelRefetc;
                return query.fetch(undefined, {
                    ...options,
                    cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,
                    meta: {
                        refetchPage: filters.refetchPage
                    }
                });
            }));
        let promise = Promise.all(promises).then((0, $524eefe766be9228$export$8793edee2d425525));
        if (!(options != null && options.throwOnError)) promise = promise.catch((0, $524eefe766be9228$export$8793edee2d425525));
        return promise;
    }
    fetchQuery(arg1, arg2, arg3) {
        const parsedOptions = (0, $524eefe766be9228$export$8a11fbc2c8ea08fd)(arg1, arg2, arg3);
        const defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652
        if (typeof defaultedOptions.retry === "undefined") defaultedOptions.retry = false;
        const query = this.queryCache.build(this, defaultedOptions);
        return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);
    }
    prefetchQuery(arg1, arg2, arg3) {
        return this.fetchQuery(arg1, arg2, arg3).then((0, $524eefe766be9228$export$8793edee2d425525)).catch((0, $524eefe766be9228$export$8793edee2d425525));
    }
    fetchInfiniteQuery(arg1, arg2, arg3) {
        const parsedOptions = (0, $524eefe766be9228$export$8a11fbc2c8ea08fd)(arg1, arg2, arg3);
        parsedOptions.behavior = (0, $3a00dd7af916a8fb$export$84470d1367601e8d)();
        return this.fetchQuery(parsedOptions);
    }
    prefetchInfiniteQuery(arg1, arg2, arg3) {
        return this.fetchInfiniteQuery(arg1, arg2, arg3).then((0, $524eefe766be9228$export$8793edee2d425525)).catch((0, $524eefe766be9228$export$8793edee2d425525));
    }
    resumePausedMutations() {
        return this.mutationCache.resumePausedMutations();
    }
    getQueryCache() {
        return this.queryCache;
    }
    getMutationCache() {
        return this.mutationCache;
    }
    getLogger() {
        return this.logger;
    }
    getDefaultOptions() {
        return this.defaultOptions;
    }
    setDefaultOptions(options) {
        this.defaultOptions = options;
    }
    setQueryDefaults(queryKey, options) {
        const result = this.queryDefaults.find((x)=>(0, $524eefe766be9228$export$5fcb678681417b54)(queryKey) === (0, $524eefe766be9228$export$5fcb678681417b54)(x.queryKey));
        if (result) result.defaultOptions = options;
        else this.queryDefaults.push({
            queryKey: queryKey,
            defaultOptions: options
        });
    }
    getQueryDefaults(queryKey) {
        if (!queryKey) return undefined;
         // Get the first matching defaults
        const firstMatchingDefaults = this.queryDefaults.find((x)=>(0, $524eefe766be9228$export$2f07189bb9fa26a7)(queryKey, x.queryKey)); // Additional checks and error in dev mode
        return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;
    }
    setMutationDefaults(mutationKey, options) {
        const result = this.mutationDefaults.find((x)=>(0, $524eefe766be9228$export$5fcb678681417b54)(mutationKey) === (0, $524eefe766be9228$export$5fcb678681417b54)(x.mutationKey));
        if (result) result.defaultOptions = options;
        else this.mutationDefaults.push({
            mutationKey: mutationKey,
            defaultOptions: options
        });
    }
    getMutationDefaults(mutationKey) {
        if (!mutationKey) return undefined;
         // Get the first matching defaults
        const firstMatchingDefaults = this.mutationDefaults.find((x)=>(0, $524eefe766be9228$export$2f07189bb9fa26a7)(mutationKey, x.mutationKey)); // Additional checks and error in dev mode
        return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;
    }
    defaultQueryOptions(options) {
        if (options != null && options._defaulted) return options;
        const defaultedOptions = {
            ...this.defaultOptions.queries,
            ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),
            ...options,
            _defaulted: true
        };
        if (!defaultedOptions.queryHash && defaultedOptions.queryKey) defaultedOptions.queryHash = (0, $524eefe766be9228$export$cc90ca97bc0d73fd)(defaultedOptions.queryKey, defaultedOptions);
         // dependent default values
        if (typeof defaultedOptions.refetchOnReconnect === "undefined") defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== "always";
        if (typeof defaultedOptions.useErrorBoundary === "undefined") defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;
        return defaultedOptions;
    }
    defaultMutationOptions(options) {
        if (options != null && options._defaulted) return options;
        return {
            ...this.defaultOptions.mutations,
            ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),
            ...options,
            _defaulted: true
        };
    }
    clear() {
        this.queryCache.clear();
        this.mutationCache.clear();
    }
}


var $d4J5n = parcelRequire("d4J5n");
const $0d3bfacad5ad2b85$export$2fba198b5b2e37fa = /*#__PURE__*/ $d4J5n.createContext(undefined);
const $0d3bfacad5ad2b85$var$QueryClientSharingContext = /*#__PURE__*/ $d4J5n.createContext(false); // If we are given a context, we will use it.
// Otherwise, if contextSharing is on, we share the first and at least one
// instance of the context across the window
// to ensure that if React Query is used across
// different bundles or microfrontends they will
// all use the same **instance** of context, regardless
// of module scoping.
function $0d3bfacad5ad2b85$var$getQueryClientContext(context, contextSharing) {
    if (context) return context;
    if (contextSharing && typeof window !== "undefined") {
        if (!window.ReactQueryClientContext) window.ReactQueryClientContext = $0d3bfacad5ad2b85$export$2fba198b5b2e37fa;
        return window.ReactQueryClientContext;
    }
    return $0d3bfacad5ad2b85$export$2fba198b5b2e37fa;
}
const $0d3bfacad5ad2b85$export$22e77b9572c4fded = ({ context: context  } = {})=>{
    const queryClient = $d4J5n.useContext($0d3bfacad5ad2b85$var$getQueryClientContext(context, $d4J5n.useContext($0d3bfacad5ad2b85$var$QueryClientSharingContext)));
    if (!queryClient) throw new Error("No QueryClient set, use QueryClientProvider to set one");
    return queryClient;
};
const $0d3bfacad5ad2b85$export$45604f0cc8ae667b = ({ client: client , children: children , context: context , contextSharing: contextSharing = false  })=>{
    $d4J5n.useEffect(()=>{
        client.mount();
        return ()=>{
            client.unmount();
        };
    }, [
        client
    ]);
    const Context = $0d3bfacad5ad2b85$var$getQueryClientContext(context, contextSharing);
    return /*#__PURE__*/ $d4J5n.createElement($0d3bfacad5ad2b85$var$QueryClientSharingContext.Provider, {
        value: !context && contextSharing
    }, /*#__PURE__*/ $d4J5n.createElement(Context.Provider, {
        value: client
    }, children));
};


var $d4J5n = parcelRequire("d4J5n");
const $c1d1f845430bc59c$var$IsRestoringContext = /*#__PURE__*/ $d4J5n.createContext(false);
const $c1d1f845430bc59c$export$4da0178d6b5f553 = ()=>$d4J5n.useContext($c1d1f845430bc59c$var$IsRestoringContext);
const $c1d1f845430bc59c$export$593807d4e94f9621 = $c1d1f845430bc59c$var$IsRestoringContext.Provider;


var $d4J5n = parcelRequire("d4J5n");

var $i3xEO = parcelRequire("i3xEO");
// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601
const $962000f1cff6a797$export$306c0aa65ff9ec16 = (0, $i3xEO.useSyncExternalStore);






// CLASS
class $1d732d74e02c2cb2$export$d3c1860ee66f291a extends (0, $a2bf86d0c8473e89$export$d26086b469ecdbcc) {
    constructor(client, options){
        super();
        this.client = client;
        this.setOptions(options);
        this.bindMethods();
        this.updateResult();
    }
    bindMethods() {
        this.mutate = this.mutate.bind(this);
        this.reset = this.reset.bind(this);
    }
    setOptions(options) {
        const prevOptions = this.options;
        this.options = this.client.defaultMutationOptions(options);
        if (!(0, $524eefe766be9228$export$3e67810a3f0e9f1c)(prevOptions, this.options)) this.client.getMutationCache().notify({
            type: "observerOptionsUpdated",
            mutation: this.currentMutation,
            observer: this
        });
    }
    onUnsubscribe() {
        if (!this.listeners.length) {
            var _this$currentMutation;
            (_this$currentMutation = this.currentMutation) == null || _this$currentMutation.removeObserver(this);
        }
    }
    onMutationUpdate(action) {
        this.updateResult(); // Determine which callbacks to trigger
        const notifyOptions = {
            listeners: true
        };
        if (action.type === "success") notifyOptions.onSuccess = true;
        else if (action.type === "error") notifyOptions.onError = true;
        this.notify(notifyOptions);
    }
    getCurrentResult() {
        return this.currentResult;
    }
    reset() {
        this.currentMutation = undefined;
        this.updateResult();
        this.notify({
            listeners: true
        });
    }
    mutate(variables, options) {
        this.mutateOptions = options;
        if (this.currentMutation) this.currentMutation.removeObserver(this);
        this.currentMutation = this.client.getMutationCache().build(this.client, {
            ...this.options,
            variables: typeof variables !== "undefined" ? variables : this.options.variables
        });
        this.currentMutation.addObserver(this);
        return this.currentMutation.execute();
    }
    updateResult() {
        const state = this.currentMutation ? this.currentMutation.state : (0, $116cbabdfc9ce434$export$a1659b54bac3252a)();
        const result = {
            ...state,
            isLoading: state.status === "loading",
            isSuccess: state.status === "success",
            isError: state.status === "error",
            isIdle: state.status === "idle",
            mutate: this.mutate,
            reset: this.reset
        };
        this.currentResult = result;
    }
    notify(options) {
        (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batch(()=>{
            // First trigger the mutate callbacks
            if (this.mutateOptions && this.hasListeners()) {
                if (options.onSuccess) {
                    var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;
                    (_this$mutateOptions$o = (_this$mutateOptions = this.mutateOptions).onSuccess) == null || _this$mutateOptions$o.call(_this$mutateOptions, this.currentResult.data, this.currentResult.variables, this.currentResult.context);
                    (_this$mutateOptions$o2 = (_this$mutateOptions2 = this.mutateOptions).onSettled) == null || _this$mutateOptions$o2.call(_this$mutateOptions2, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context);
                } else if (options.onError) {
                    var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;
                    (_this$mutateOptions$o3 = (_this$mutateOptions3 = this.mutateOptions).onError) == null || _this$mutateOptions$o3.call(_this$mutateOptions3, this.currentResult.error, this.currentResult.variables, this.currentResult.context);
                    (_this$mutateOptions$o4 = (_this$mutateOptions4 = this.mutateOptions).onSettled) == null || _this$mutateOptions$o4.call(_this$mutateOptions4, undefined, this.currentResult.error, this.currentResult.variables, this.currentResult.context);
                }
            } // Then trigger the listeners
            if (options.listeners) this.listeners.forEach((listener)=>{
                listener(this.currentResult);
            });
        });
    }
}



function $c1e286b51de84ee6$export$2072f68e6c3507cf(_useErrorBoundary, params) {
    // Allow useErrorBoundary function to override throwing behavior on a per-error basis
    if (typeof _useErrorBoundary === "function") return _useErrorBoundary(...params);
    return !!_useErrorBoundary;
}


function $403f014b1f0d9752$export$609860bf8b0084c(arg1, arg2, arg3) {
    const options = (0, $524eefe766be9228$export$b646c531ea475334)(arg1, arg2, arg3);
    const queryClient = (0, $0d3bfacad5ad2b85$export$22e77b9572c4fded)({
        context: options.context
    });
    const [observer] = $d4J5n.useState(()=>new (0, $1d732d74e02c2cb2$export$d3c1860ee66f291a)(queryClient, options));
    $d4J5n.useEffect(()=>{
        observer.setOptions(options);
    }, [
        observer,
        options
    ]);
    const result = (0, $962000f1cff6a797$export$306c0aa65ff9ec16)($d4J5n.useCallback((onStoreChange)=>observer.subscribe((0, $82bd7063bd3305fc$export$520687f44db6e1ab).batchCalls(onStoreChange)), [
        observer
    ]), ()=>observer.getCurrentResult(), ()=>observer.getCurrentResult());
    const mutate = $d4J5n.useCallback((variables, mutateOptions)=>{
        observer.mutate(variables, mutateOptions).catch($403f014b1f0d9752$var$noop);
    }, [
        observer
    ]);
    if (result.error && (0, $c1e286b51de84ee6$export$2072f68e6c3507cf)(observer.options.useErrorBoundary, [
        result.error
    ])) throw result.error;
    return {
        ...result,
        mutate: mutate,
        mutateAsync: result.mutate
    };
} // eslint-disable-next-line @typescript-eslint/no-empty-function
function $403f014b1f0d9752$var$noop() {}


var $d4J5n = parcelRequire("d4J5n");
function $aaa5ffc78fa38e88$var$createValue() {
    let isReset = false;
    return {
        clearReset: ()=>{
            isReset = false;
        },
        reset: ()=>{
            isReset = true;
        },
        isReset: ()=>{
            return isReset;
        }
    };
}
const $aaa5ffc78fa38e88$var$QueryErrorResetBoundaryContext = /*#__PURE__*/ $d4J5n.createContext($aaa5ffc78fa38e88$var$createValue()); // HOOK
const $aaa5ffc78fa38e88$export$50dfac555130cafd = ()=>$d4J5n.useContext($aaa5ffc78fa38e88$var$QueryErrorResetBoundaryContext); // COMPONENT
const $aaa5ffc78fa38e88$export$ddb9962d870f2330 = ({ children: children  })=>{
    const [value] = $d4J5n.useState(()=>$aaa5ffc78fa38e88$var$createValue());
    return /*#__PURE__*/ $d4J5n.createElement($aaa5ffc78fa38e88$var$QueryErrorResetBoundaryContext.Provider, {
        value: value
    }, typeof children === "function" ? children(value) : children);
};


// TYPES
// FUNCTIONS
function $6b7345365c689bb8$var$dehydrateMutation(mutation) {
    return {
        mutationKey: mutation.options.mutationKey,
        state: mutation.state
    };
} // Most config is not dehydrated but instead meant to configure again when
// consuming the de/rehydrated data, typically with useQuery on the client.
// Sometimes it might make sense to prefetch data on the server and include
// in the html-payload, but not consume it on the initial render.
function $6b7345365c689bb8$var$dehydrateQuery(query) {
    return {
        state: query.state,
        queryKey: query.queryKey,
        queryHash: query.queryHash
    };
}
function $6b7345365c689bb8$export$3aa4c2840e01e53(mutation) {
    return mutation.state.isPaused;
}
function $6b7345365c689bb8$export$e71bc20295698fa1(query) {
    return query.state.status === "success";
}
function $6b7345365c689bb8$export$12aee8bb597e7dfe(client, options = {}) {
    const mutations = [];
    const queries = [];
    if (options.dehydrateMutations !== false) {
        const shouldDehydrateMutation = options.shouldDehydrateMutation || $6b7345365c689bb8$export$3aa4c2840e01e53;
        client.getMutationCache().getAll().forEach((mutation)=>{
            if (shouldDehydrateMutation(mutation)) mutations.push($6b7345365c689bb8$var$dehydrateMutation(mutation));
        });
    }
    if (options.dehydrateQueries !== false) {
        const shouldDehydrateQuery = options.shouldDehydrateQuery || $6b7345365c689bb8$export$e71bc20295698fa1;
        client.getQueryCache().getAll().forEach((query)=>{
            if (shouldDehydrateQuery(query)) queries.push($6b7345365c689bb8$var$dehydrateQuery(query));
        });
    }
    return {
        mutations: mutations,
        queries: queries
    };
}
function $6b7345365c689bb8$export$fa8d919ba61d84db(client, dehydratedState, options) {
    if (typeof dehydratedState !== "object" || dehydratedState === null) return;
    const mutationCache = client.getMutationCache();
    const queryCache = client.getQueryCache(); // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    const mutations = dehydratedState.mutations || []; // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    const queries = dehydratedState.queries || [];
    mutations.forEach((dehydratedMutation)=>{
        var _options$defaultOptio;
        mutationCache.build(client, {
            ...options == null ? void 0 : (_options$defaultOptio = options.defaultOptions) == null ? void 0 : _options$defaultOptio.mutations,
            mutationKey: dehydratedMutation.mutationKey
        }, dehydratedMutation.state);
    });
    queries.forEach((dehydratedQuery)=>{
        var _options$defaultOptio2;
        const query = queryCache.get(dehydratedQuery.queryHash); // Do not hydrate if an existing query exists with newer data
        if (query) {
            if (query.state.dataUpdatedAt < dehydratedQuery.state.dataUpdatedAt) query.setState(dehydratedQuery.state);
            return;
        } // Restore query
        queryCache.build(client, {
            ...options == null ? void 0 : (_options$defaultOptio2 = options.defaultOptions) == null ? void 0 : _options$defaultOptio2.queries,
            queryKey: dehydratedQuery.queryKey,
            queryHash: dehydratedQuery.queryHash
        }, dehydratedQuery.state);
    });
}


/**
 * Restores persisted data to the QueryCache
 *  - data obtained from persister.restoreClient
 *  - data is hydrated using hydrateOptions
 * If data is expired, busted, empty, or throws, it runs persister.removeClient
 */ async function $6ae5885f1089e784$export$781eb0ebad7272a1({ queryClient: queryClient , persister: persister , maxAge: maxAge = 86400000 , buster: buster = "" , hydrateOptions: hydrateOptions  }) {
    try {
        const persistedClient = await persister.restoreClient();
        if (persistedClient) {
            if (persistedClient.timestamp) {
                const expired = Date.now() - persistedClient.timestamp > maxAge;
                const busted = persistedClient.buster !== buster;
                if (expired || busted) persister.removeClient();
                else (0, $6b7345365c689bb8$export$fa8d919ba61d84db)(queryClient, persistedClient.clientState, hydrateOptions);
            } else persister.removeClient();
        }
    } catch (err) {
        persister.removeClient();
    }
}
/**
 * Persists data from the QueryCache
 *  - data dehydrated using dehydrateOptions
 *  - data is persisted using persister.persistClient
 */ async function $6ae5885f1089e784$export$8a3b4786a14f2528({ queryClient: queryClient , persister: persister , buster: buster = "" , dehydrateOptions: dehydrateOptions  }) {
    const persistClient = {
        buster: buster,
        timestamp: Date.now(),
        clientState: (0, $6b7345365c689bb8$export$12aee8bb597e7dfe)(queryClient, dehydrateOptions)
    };
    await persister.persistClient(persistClient);
}
/**
 * Subscribe to QueryCache and MutationCache updates (for persisting)
 * @returns an unsubscribe function (to discontinue monitoring)
 */ function $6ae5885f1089e784$export$9fe01d80627be88c(props) {
    const unsubscribeQueryCache = props.queryClient.getQueryCache().subscribe(()=>{
        $6ae5885f1089e784$export$8a3b4786a14f2528(props);
    });
    const unusbscribeMutationCache = props.queryClient.getMutationCache().subscribe(()=>{
        $6ae5885f1089e784$export$8a3b4786a14f2528(props);
    });
    return ()=>{
        unsubscribeQueryCache();
        unusbscribeMutationCache();
    };
}
/**
 * Restores persisted data to QueryCache and persists further changes.
 */ function $6ae5885f1089e784$export$217ab42a80f50b3b(props) {
    let hasUnsubscribed = false;
    let persistQueryClientUnsubscribe;
    const unsubscribe = ()=>{
        hasUnsubscribed = true;
        persistQueryClientUnsubscribe == null || persistQueryClientUnsubscribe();
    }; // Attempt restore
    const restorePromise = $6ae5885f1089e784$export$781eb0ebad7272a1(props).then(()=>{
        if (!hasUnsubscribed) // Subscribe to changes in the query cache to trigger the save
        persistQueryClientUnsubscribe = $6ae5885f1089e784$export$9fe01d80627be88c(props);
    });
    return [
        unsubscribe,
        restorePromise
    ];
}


// src/arbitrum.ts
var $9c8743126c7e32de$export$625cf84d855940d4 = {
    id: 42161,
    name: "Arbitrum One",
    network: "arbitrum",
    nativeCurrency: {
        name: "Ether",
        symbol: "ETH",
        decimals: 18
    },
    rpcUrls: {
        alchemy: {
            http: [
                "https://arb-mainnet.g.alchemy.com/v2"
            ],
            webSocket: [
                "wss://arb-mainnet.g.alchemy.com/v2"
            ]
        },
        infura: {
            http: [
                "https://arbitrum-mainnet.infura.io/v3"
            ],
            webSocket: [
                "wss://arbitrum-mainnet.infura.io/ws/v3"
            ]
        },
        default: {
            http: [
                "https://arb1.arbitrum.io/rpc"
            ]
        },
        public: {
            http: [
                "https://arb1.arbitrum.io/rpc"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Arbiscan",
            url: "https://arbiscan.io"
        },
        default: {
            name: "Arbiscan",
            url: "https://arbiscan.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 7654707
        }
    }
};
// src/arbitrumGoerli.ts
var $9c8743126c7e32de$export$857f1b5f596fb425 = {
    id: 421613,
    name: "Arbitrum Goerli",
    network: "arbitrum-goerli",
    nativeCurrency: {
        name: "Arbitrum Goerli Ether",
        symbol: "ETH",
        decimals: 18
    },
    rpcUrls: {
        alchemy: {
            http: [
                "https://arb-goerli.g.alchemy.com/v2"
            ],
            webSocket: [
                "wss://arb-goerli.g.alchemy.com/v2"
            ]
        },
        infura: {
            http: [
                "https://arbitrum-goerli.infura.io/v3"
            ],
            webSocket: [
                "wss://arbitrum-goerli.infura.io/ws/v3"
            ]
        },
        default: {
            http: [
                "https://goerli-rollup.arbitrum.io/rpc"
            ]
        },
        public: {
            http: [
                "https://goerli-rollup.arbitrum.io/rpc"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Arbiscan",
            url: "https://goerli.arbiscan.io/"
        },
        default: {
            name: "Arbiscan",
            url: "https://goerli.arbiscan.io/"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 88114
        }
    },
    testnet: true
};
// src/aurora.ts
var $9c8743126c7e32de$export$e918949a31c8842 = {
    id: 1313161554,
    name: "Aurora",
    network: "aurora",
    nativeCurrency: {
        decimals: 18,
        name: "Ether",
        symbol: "ETH"
    },
    rpcUrls: {
        infura: {
            http: [
                "https://aurora-mainnet.infura.io/v3"
            ]
        },
        default: {
            http: [
                "https://mainnet.aurora.dev"
            ]
        },
        public: {
            http: [
                "https://mainnet.aurora.dev"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Aurorascan",
            url: "https://aurorascan.dev"
        },
        default: {
            name: "Aurorascan",
            url: "https://aurorascan.dev"
        }
    }
};
// src/auroraTestnet.ts
var $9c8743126c7e32de$export$f22eafb342244b6c = {
    id: 1313161555,
    name: "Aurora Testnet",
    network: "aurora-testnet",
    nativeCurrency: {
        decimals: 18,
        name: "Ether",
        symbol: "ETH"
    },
    rpcUrls: {
        infura: {
            http: [
                "https://aurora-testnet.infura.io/v3"
            ]
        },
        default: {
            http: [
                "https://testnet.aurora.dev"
            ]
        },
        public: {
            http: [
                "https://testnet.aurora.dev"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Aurorascan",
            url: "https://testnet.aurorascan.dev"
        },
        default: {
            name: "Aurorascan",
            url: "https://testnet.aurorascan.dev"
        }
    },
    testnet: true
};
// src/avalanche.ts
var $9c8743126c7e32de$export$ca1d15c01fde7266 = {
    id: 43114,
    name: "Avalanche",
    network: "avalanche",
    nativeCurrency: {
        decimals: 18,
        name: "Avalanche",
        symbol: "AVAX"
    },
    rpcUrls: {
        default: {
            http: [
                "https://api.avax.network/ext/bc/C/rpc"
            ]
        },
        public: {
            http: [
                "https://api.avax.network/ext/bc/C/rpc"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "SnowTrace",
            url: "https://snowtrace.io"
        },
        default: {
            name: "SnowTrace",
            url: "https://snowtrace.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 11907934
        }
    }
};
// src/avalancheFuji.ts
var $9c8743126c7e32de$export$714c92acd9d3100a = {
    id: 43113,
    name: "Avalanche Fuji",
    network: "avalanche-fuji",
    nativeCurrency: {
        decimals: 18,
        name: "Avalanche Fuji",
        symbol: "AVAX"
    },
    rpcUrls: {
        default: {
            http: [
                "https://api.avax-test.network/ext/bc/C/rpc"
            ]
        },
        public: {
            http: [
                "https://api.avax-test.network/ext/bc/C/rpc"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "SnowTrace",
            url: "https://testnet.snowtrace.io"
        },
        default: {
            name: "SnowTrace",
            url: "https://testnet.snowtrace.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 7096959
        }
    },
    testnet: true
};
// src/bronos.ts
var $9c8743126c7e32de$export$20a477b7ab0dd9d = {
    id: 1039,
    name: "Bronos",
    network: "bronos",
    nativeCurrency: {
        decimals: 18,
        name: "BRO",
        symbol: "BRO"
    },
    rpcUrls: {
        default: {
            http: [
                "https://evm.bronos.org"
            ]
        },
        public: {
            http: [
                "https://evm.bronos.org"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "BronoScan",
            url: "https://broscan.bronos.org"
        }
    }
};
// src/bronosTestnet.ts
var $9c8743126c7e32de$export$9b111fa5536a102f = {
    id: 1038,
    name: "Bronos Testnet",
    network: "bronos-testnet",
    nativeCurrency: {
        decimals: 18,
        name: "Bronos Coin",
        symbol: "tBRO"
    },
    rpcUrls: {
        default: {
            http: [
                "https://evm-testnet.bronos.org"
            ]
        },
        public: {
            http: [
                "https://evm-testnet.bronos.org"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "BronoScan",
            url: "https://tbroscan.bronos.org"
        }
    },
    testnet: true
};
// src/bsc.ts
var $9c8743126c7e32de$export$170e8cdd0c4e59c8 = {
    id: 56,
    name: "BNB Smart Chain",
    network: "bsc",
    nativeCurrency: {
        decimals: 18,
        name: "BNB",
        symbol: "BNB"
    },
    rpcUrls: {
        default: {
            http: [
                "https://rpc.ankr.com/bsc"
            ]
        },
        public: {
            http: [
                "https://rpc.ankr.com/bsc"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "BscScan",
            url: "https://bscscan.com"
        },
        default: {
            name: "BscScan",
            url: "https://bscscan.com"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 15921452
        }
    }
};
// src/bscTestnet.ts
var $9c8743126c7e32de$export$1c182ebff3ea4eef = {
    id: 97,
    name: "Binance Smart Chain Testnet",
    network: "bsc-testnet",
    nativeCurrency: {
        decimals: 18,
        name: "BNB",
        symbol: "tBNB"
    },
    rpcUrls: {
        default: {
            http: [
                "https://bsc-testnet.public.blastapi.io"
            ]
        },
        public: {
            http: [
                "https://bsc-testnet.public.blastapi.io"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "BscScan",
            url: "https://testnet.bscscan.com"
        },
        default: {
            name: "BscScan",
            url: "https://testnet.bscscan.com"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 17422483
        }
    },
    testnet: true
};
// src/canto.ts
var $9c8743126c7e32de$export$c6ff1a9c2da4c533 = {
    id: 7700,
    name: "Canto",
    network: "canto",
    nativeCurrency: {
        decimals: 18,
        name: "Canto",
        symbol: "CANTO"
    },
    rpcUrls: {
        default: {
            http: [
                "https://canto.slingshot.finance"
            ]
        },
        public: {
            http: [
                "https://canto.slingshot.finance"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Canto EVM Explorer (Blockscout)",
            url: "https://evm.explorer.canto.io"
        }
    }
};
// src/celo.ts
var $9c8743126c7e32de$export$671bdf559232d1e0 = {
    id: 42220,
    name: "Celo",
    network: "celo",
    nativeCurrency: {
        decimals: 18,
        name: "CELO",
        symbol: "CELO"
    },
    rpcUrls: {
        default: {
            http: [
                "https://forno.celo.org"
            ]
        },
        infura: {
            http: [
                "https://celo-mainnet.infura.io/v3"
            ]
        },
        public: {
            http: [
                "https://forno.celo.org"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Celo Explorer",
            url: "https://explorer.celo.org/mainnet"
        },
        etherscan: {
            name: "CeloScan",
            url: "https://celoscan.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 13112599
        }
    },
    testnet: false
};
// src/celoAlfajores.ts
var $9c8743126c7e32de$export$ea1d1a16df546697 = {
    id: 44787,
    name: "Alfajores",
    network: "celo-alfajores",
    nativeCurrency: {
        decimals: 18,
        name: "CELO",
        symbol: "A-CELO"
    },
    rpcUrls: {
        default: {
            http: [
                "https://alfajores-forno.celo-testnet.org"
            ]
        },
        infura: {
            http: [
                "https://celo-alfajores.infura.io/v3"
            ]
        },
        public: {
            http: [
                "https://alfajores-forno.celo-testnet.org"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Celo Explorer",
            url: "https://explorer.celo.org/alfajores"
        },
        etherscan: {
            name: "CeloScan",
            url: "https://alfajores.celoscan.io/"
        }
    },
    contracts: {
        multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 14569001
        }
    },
    testnet: true
};
// src/crossbell.ts
var $9c8743126c7e32de$export$f3c5f5ff5db9f737 = {
    id: 3737,
    network: "crossbell",
    name: "Crossbell",
    nativeCurrency: {
        decimals: 18,
        name: "CSB",
        symbol: "CSB"
    },
    rpcUrls: {
        default: {
            http: [
                "https://rpc.crossbell.io"
            ]
        },
        public: {
            http: [
                "https://rpc.crossbell.io"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "CrossScan",
            url: "https://scan.crossbell.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xBB9759009cDaC82774EfC84D94cD9F7440f75Fcf",
            blockCreated: 23499787
        }
    }
};
// src/evmos.ts
var $9c8743126c7e32de$export$db511b2886fa729 = {
    id: 9001,
    name: "Evmos",
    network: "evmos",
    nativeCurrency: {
        decimals: 18,
        name: "Evmos",
        symbol: "EVMOS"
    },
    rpcUrls: {
        default: {
            http: [
                "https://eth.bd.evmos.org:8545"
            ]
        },
        public: {
            http: [
                "https://eth.bd.evmos.org:8545"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Evmos Block Explorer",
            url: "https://escan.live/"
        }
    }
};
// src/evmosTestnet.ts
var $9c8743126c7e32de$export$3e2d2e155d0b325b = {
    id: 9e3,
    name: "Evmos Testnet",
    network: "evmos-testnet",
    nativeCurrency: {
        decimals: 18,
        name: "Evmos",
        symbol: "EVMOS"
    },
    rpcUrls: {
        default: {
            http: [
                "https://eth.bd.evmos.dev:8545"
            ]
        },
        public: {
            http: [
                "https://eth.bd.evmos.dev:8545"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Evmos Testnet Block Explorer",
            url: "https://evm.evmos.dev/"
        }
    }
};
// src/fantom.ts
var $9c8743126c7e32de$export$9875520d86614358 = {
    id: 250,
    name: "Fantom",
    network: "fantom",
    nativeCurrency: {
        decimals: 18,
        name: "Fantom",
        symbol: "FTM"
    },
    rpcUrls: {
        default: {
            http: [
                "https://rpc.ankr.com/fantom"
            ]
        },
        public: {
            http: [
                "https://rpc.ankr.com/fantom"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "FTMScan",
            url: "https://ftmscan.com"
        },
        default: {
            name: "FTMScan",
            url: "https://ftmscan.com"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 33001987
        }
    }
};
// src/fantomTestnet.ts
var $9c8743126c7e32de$export$70ba235ed4ec8bd0 = {
    id: 4002,
    name: "Fantom Testnet",
    network: "fantom-testnet",
    nativeCurrency: {
        decimals: 18,
        name: "Fantom",
        symbol: "FTM"
    },
    rpcUrls: {
        default: {
            http: [
                "https://rpc.testnet.fantom.network"
            ]
        },
        public: {
            http: [
                "https://rpc.testnet.fantom.network"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "FTMScan",
            url: "https://testnet.ftmscan.com"
        },
        default: {
            name: "FTMScan",
            url: "https://testnet.ftmscan.com"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 8328688
        }
    }
};
// src/filecoin.ts
var $9c8743126c7e32de$export$d5a6d2ad15089d83 = {
    id: 314,
    name: "Filecoin Mainnet",
    network: "filecoin-mainnet",
    nativeCurrency: {
        decimals: 18,
        name: "filecoin",
        symbol: "FIL"
    },
    rpcUrls: {
        default: {
            http: [
                "https://api.node.glif.io/rpc/v1"
            ]
        },
        public: {
            http: [
                "https://api.node.glif.io/rpc/v1"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Filfox",
            url: "https://filfox.info/en"
        },
        filscan: {
            name: "Filscan",
            url: "https://filscan.io"
        },
        filscout: {
            name: "Filscout",
            url: "https://filscout.io/en"
        },
        glif: {
            name: "Glif",
            url: "https://explorer.glif.io"
        }
    }
};
// src/filecoinCalibration.ts
var $9c8743126c7e32de$export$de9b05abdae7c2c = {
    id: 314159,
    name: "Filecoin Calibration",
    network: "filecoin-calibration",
    nativeCurrency: {
        decimals: 18,
        name: "testnet filecoin",
        symbol: "tFIL"
    },
    rpcUrls: {
        default: {
            http: [
                "https://api.calibration.node.glif.io/rpc/v1"
            ]
        },
        public: {
            http: [
                "https://api.calibration.node.glif.io/rpc/v1"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Filscan",
            url: "https://calibration.filscan.io"
        }
    }
};
// src/filecoinHyperspace.ts
var $9c8743126c7e32de$export$a6a2834f522bcf36 = {
    id: 3141,
    name: "Filecoin Hyperspace",
    network: "filecoin-hyperspace",
    nativeCurrency: {
        decimals: 18,
        name: "testnet filecoin",
        symbol: "tFIL"
    },
    rpcUrls: {
        default: {
            http: [
                "https://api.hyperspace.node.glif.io/rpc/v1"
            ]
        },
        public: {
            http: [
                "https://api.hyperspace.node.glif.io/rpc/v1"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Filfox",
            url: "https://hyperspace.filfox.info/en"
        },
        filscan: {
            name: "Filscan",
            url: "https://hyperspace.filscan.io"
        }
    }
};
// src/foundry.ts
var $9c8743126c7e32de$export$c685795d6cec6bc9 = {
    id: 31337,
    name: "Foundry",
    network: "foundry",
    nativeCurrency: {
        decimals: 18,
        name: "Ether",
        symbol: "ETH"
    },
    rpcUrls: {
        default: {
            http: [
                "http://127.0.0.1:8545"
            ]
        },
        public: {
            http: [
                "http://127.0.0.1:8545"
            ]
        }
    }
};
// src/iotex.ts
var $9c8743126c7e32de$export$80841251a290ee3e = {
    id: 4689,
    name: "IoTeX",
    network: "iotex",
    nativeCurrency: {
        decimals: 18,
        name: "IoTeX",
        symbol: "IOTX"
    },
    rpcUrls: {
        default: {
            http: [
                "https://babel-api.mainnet.iotex.io"
            ],
            webSocket: [
                "wss://babel-api.mainnet.iotex.io"
            ]
        },
        public: {
            http: [
                "https://babel-api.mainnet.iotex.io"
            ],
            webSocket: [
                "wss://babel-api.mainnet.iotex.io"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "IoTeXScan",
            url: "https://iotexscan.io"
        }
    }
};
// src/iotexTestnet.ts
var $9c8743126c7e32de$export$a773cccd948da87b = {
    id: 4690,
    name: "IoTeX Testnet",
    network: "iotex-testnet",
    nativeCurrency: {
        decimals: 18,
        name: "IoTeX",
        symbol: "IOTX"
    },
    rpcUrls: {
        default: {
            http: [
                "https://babel-api.testnet.iotex.io"
            ],
            webSocket: [
                "wss://babel-api.testnet.iotex.io"
            ]
        },
        public: {
            http: [
                "https://babel-api.testnet.iotex.io"
            ],
            webSocket: [
                "wss://babel-api.testnet.iotex.io"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "IoTeXScan",
            url: "https://testnet.iotexscan.io"
        }
    }
};
// src/goerli.ts
var $9c8743126c7e32de$export$50b37201a1017e1e = {
    id: 5,
    network: "goerli",
    name: "Goerli",
    nativeCurrency: {
        name: "Goerli Ether",
        symbol: "ETH",
        decimals: 18
    },
    rpcUrls: {
        alchemy: {
            http: [
                "https://eth-goerli.g.alchemy.com/v2"
            ],
            webSocket: [
                "wss://eth-goerli.g.alchemy.com/v2"
            ]
        },
        infura: {
            http: [
                "https://goerli.infura.io/v3"
            ],
            webSocket: [
                "wss://goerli.infura.io/ws/v3"
            ]
        },
        default: {
            http: [
                "https://rpc.ankr.com/eth_goerli"
            ]
        },
        public: {
            http: [
                "https://rpc.ankr.com/eth_goerli"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Etherscan",
            url: "https://goerli.etherscan.io"
        },
        default: {
            name: "Etherscan",
            url: "https://goerli.etherscan.io"
        }
    },
    contracts: {
        ensRegistry: {
            address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
        },
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 6507670
        }
    },
    testnet: true
};
// src/gnosis.ts
var $9c8743126c7e32de$export$fe962c1cd3b6d0b = {
    id: 100,
    name: "Gnosis",
    network: "gnosis",
    nativeCurrency: {
        decimals: 18,
        name: "Gnosis",
        symbol: "xDAI"
    },
    rpcUrls: {
        default: {
            http: [
                "https://rpc.gnosischain.com"
            ]
        },
        public: {
            http: [
                "https://rpc.gnosischain.com"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Gnosisscan",
            url: "https://gnosisscan.io/"
        },
        default: {
            name: "Gnosis Chain Explorer",
            url: "https://blockscout.com/xdai/mainnet/"
        }
    }
};
// src/gnosisChiado.ts
var $9c8743126c7e32de$export$7a430fb03087826a = {
    id: 10200,
    name: "Gnosis Chiado",
    network: "chiado",
    nativeCurrency: {
        decimals: 18,
        name: "Gnosis",
        symbol: "xDAI"
    },
    rpcUrls: {
        default: {
            http: [
                "https://rpc.chiadochain.net"
            ]
        },
        public: {
            http: [
                "https://rpc.chiadochain.net"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Blockscout",
            url: "https://blockscout.chiadochain.net"
        }
    }
};
// src/hardhat.ts
var $9c8743126c7e32de$export$185991ab7d10fc56 = {
    id: 31337,
    name: "Hardhat",
    network: "hardhat",
    nativeCurrency: {
        decimals: 18,
        name: "Ether",
        symbol: "ETH"
    },
    rpcUrls: {
        default: {
            http: [
                "http://127.0.0.1:8545"
            ]
        },
        public: {
            http: [
                "http://127.0.0.1:8545"
            ]
        }
    }
};
// src/localhost.ts
var $9c8743126c7e32de$export$aaaefd65b65939a = {
    id: 1337,
    name: "Localhost",
    network: "localhost",
    nativeCurrency: {
        decimals: 18,
        name: "Ether",
        symbol: "ETH"
    },
    rpcUrls: {
        default: {
            http: [
                "http://127.0.0.1:8545"
            ]
        },
        public: {
            http: [
                "http://127.0.0.1:8545"
            ]
        }
    }
};
// src/mainnet.ts
var $9c8743126c7e32de$export$536d3e0d2c7baf54 = {
    id: 1,
    network: "homestead",
    name: "Ethereum",
    nativeCurrency: {
        name: "Ether",
        symbol: "ETH",
        decimals: 18
    },
    rpcUrls: {
        alchemy: {
            http: [
                "https://eth-mainnet.g.alchemy.com/v2"
            ],
            webSocket: [
                "wss://eth-mainnet.g.alchemy.com/v2"
            ]
        },
        infura: {
            http: [
                "https://mainnet.infura.io/v3"
            ],
            webSocket: [
                "wss://mainnet.infura.io/ws/v3"
            ]
        },
        default: {
            http: [
                "https://cloudflare-eth.com"
            ]
        },
        public: {
            http: [
                "https://cloudflare-eth.com"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Etherscan",
            url: "https://etherscan.io"
        },
        default: {
            name: "Etherscan",
            url: "https://etherscan.io"
        }
    },
    contracts: {
        ensRegistry: {
            address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
        },
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 14353601
        }
    }
};
// src/metis.ts
var $9c8743126c7e32de$export$aa6d23b04ceee995 = {
    id: 1088,
    name: "Metis",
    network: "andromeda",
    nativeCurrency: {
        decimals: 18,
        name: "Metis",
        symbol: "METIS"
    },
    rpcUrls: {
        default: {
            http: [
                "https://andromeda.metis.io/?owner=1088"
            ]
        },
        public: {
            http: [
                "https://andromeda.metis.io/?owner=1088"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Andromeda Explorer",
            url: "https://andromeda-explorer.metis.io"
        }
    }
};
// src/metisGoerli.ts
var $9c8743126c7e32de$export$a50d3390310ff40a = {
    id: 599,
    name: "Metis Goerli",
    network: "metis-goerli",
    nativeCurrency: {
        decimals: 18,
        name: "Metis Goerli",
        symbol: "METIS"
    },
    rpcUrls: {
        default: {
            http: [
                "https://goerli.gateway.metisdevops.link"
            ]
        },
        public: {
            http: [
                "https://goerli.gateway.metisdevops.link"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Metis Goerli Explorer",
            url: "https://goerli.explorer.metisdevops.link"
        }
    }
};
// src/moonbaseAlpha.ts
var $9c8743126c7e32de$export$f11b1e99aba33de1 = {
    id: 1287,
    name: "Moonbase Alpha",
    network: "moonbase-alpha",
    nativeCurrency: {
        decimals: 18,
        name: "DEV",
        symbol: "DEV"
    },
    rpcUrls: {
        default: {
            http: [
                "https://rpc.api.moonbase.moonbeam.network"
            ],
            webSocket: [
                "wss://wss.api.moonbase.moonbeam.network"
            ]
        },
        public: {
            http: [
                "https://rpc.api.moonbase.moonbeam.network"
            ],
            webSocket: [
                "wss://wss.api.moonbase.moonbeam.network"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Moonscan",
            url: "https://moonbase.moonscan.io"
        },
        etherscan: {
            name: "Moonscan",
            url: "https://moonbase.moonscan.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 1850686
        }
    },
    testnet: true
};
// src/moonbeam.ts
var $9c8743126c7e32de$export$6d025bfa24a6c3e1 = {
    id: 1284,
    name: "Moonbeam",
    network: "moonbeam",
    nativeCurrency: {
        decimals: 18,
        name: "GLMR",
        symbol: "GLMR"
    },
    rpcUrls: {
        public: {
            http: [
                "https://moonbeam.public.blastapi.io"
            ],
            webSocket: [
                "wss://moonbeam.public.blastapi.io"
            ]
        },
        default: {
            http: [
                "https://moonbeam.public.blastapi.io"
            ],
            webSocket: [
                "wss://moonbeam.public.blastapi.io"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Moonscan",
            url: "https://moonscan.io"
        },
        etherscan: {
            name: "Moonscan",
            url: "https://moonscan.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 609002
        }
    },
    testnet: false
};
// src/moonriver.ts
var $9c8743126c7e32de$export$216f9047f2743a6f = {
    id: 1285,
    name: "Moonriver",
    network: "moonriver",
    nativeCurrency: {
        decimals: 18,
        name: "MOVR",
        symbol: "MOVR"
    },
    rpcUrls: {
        public: {
            http: [
                "https://moonriver.public.blastapi.io"
            ],
            webSocket: [
                "wss://moonriver.public.blastapi.io"
            ]
        },
        default: {
            http: [
                "https://moonriver.public.blastapi.io"
            ],
            webSocket: [
                "wss://moonriver.public.blastapi.io"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Moonscan",
            url: "https://moonriver.moonscan.io"
        },
        etherscan: {
            name: "Moonscan",
            url: "https://moonriver.moonscan.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 1597904
        }
    },
    testnet: false
};
// src/okc.ts
var $9c8743126c7e32de$export$cda27ac7f3424270 = {
    id: 66,
    name: "OKC",
    network: "okc",
    nativeCurrency: {
        decimals: 18,
        name: "OKT",
        symbol: "OKT"
    },
    rpcUrls: {
        default: {
            http: [
                "https://exchainrpc.okex.org"
            ]
        },
        public: {
            http: [
                "https://exchainrpc.okex.org"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "oklink",
            url: "https://www.oklink.com/okc"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 10364792
        }
    }
};
// src/optimism.ts
var $9c8743126c7e32de$export$e584d4a579189f9b = {
    id: 10,
    name: "Optimism",
    network: "optimism",
    nativeCurrency: {
        name: "Ether",
        symbol: "ETH",
        decimals: 18
    },
    rpcUrls: {
        alchemy: {
            http: [
                "https://opt-mainnet.g.alchemy.com/v2"
            ],
            webSocket: [
                "wss://opt-mainnet.g.alchemy.com/v2"
            ]
        },
        infura: {
            http: [
                "https://optimism-mainnet.infura.io/v3"
            ],
            webSocket: [
                "wss://optimism-mainnet.infura.io/ws/v3"
            ]
        },
        default: {
            http: [
                "https://mainnet.optimism.io"
            ]
        },
        public: {
            http: [
                "https://mainnet.optimism.io"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Etherscan",
            url: "https://optimistic.etherscan.io"
        },
        default: {
            name: "Optimism Explorer",
            url: "https://explorer.optimism.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 4286263
        }
    }
};
// src/optimismGoerli.ts
var $9c8743126c7e32de$export$50b3e5cabd7d7a60 = {
    id: 420,
    name: "Optimism Goerli",
    network: "optimism-goerli",
    nativeCurrency: {
        name: "Goerli Ether",
        symbol: "ETH",
        decimals: 18
    },
    rpcUrls: {
        alchemy: {
            http: [
                "https://opt-goerli.g.alchemy.com/v2"
            ],
            webSocket: [
                "wss://opt-goerli.g.alchemy.com/v2"
            ]
        },
        infura: {
            http: [
                "https://optimism-goerli.infura.io/v3"
            ],
            webSocket: [
                "wss://optimism-goerli.infura.io/ws/v3"
            ]
        },
        default: {
            http: [
                "https://goerli.optimism.io"
            ]
        },
        public: {
            http: [
                "https://goerli.optimism.io"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Etherscan",
            url: "https://goerli-optimism.etherscan.io"
        },
        default: {
            name: "Etherscan",
            url: "https://goerli-optimism.etherscan.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 49461
        }
    },
    testnet: true
};
// src/polygon.ts
var $9c8743126c7e32de$export$b7b19aa0ee06c73 = {
    id: 137,
    name: "Polygon",
    network: "matic",
    nativeCurrency: {
        name: "MATIC",
        symbol: "MATIC",
        decimals: 18
    },
    rpcUrls: {
        alchemy: {
            http: [
                "https://polygon-mainnet.g.alchemy.com/v2"
            ],
            webSocket: [
                "wss://polygon-mainnet.g.alchemy.com/v2"
            ]
        },
        infura: {
            http: [
                "https://polygon-mainnet.infura.io/v3"
            ],
            webSocket: [
                "wss://polygon-mainnet.infura.io/ws/v3"
            ]
        },
        default: {
            http: [
                "https://polygon-rpc.com"
            ]
        },
        public: {
            http: [
                "https://polygon-rpc.com"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "PolygonScan",
            url: "https://polygonscan.com"
        },
        default: {
            name: "PolygonScan",
            url: "https://polygonscan.com"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 25770160
        }
    }
};
// src/polygonMumbai.ts
var $9c8743126c7e32de$export$34b6ef3a78067459 = {
    id: 80001,
    name: "Polygon Mumbai",
    network: "maticmum",
    nativeCurrency: {
        name: "MATIC",
        symbol: "MATIC",
        decimals: 18
    },
    rpcUrls: {
        alchemy: {
            http: [
                "https://polygon-mumbai.g.alchemy.com/v2"
            ],
            webSocket: [
                "wss://polygon-mumbai.g.alchemy.com/v2"
            ]
        },
        infura: {
            http: [
                "https://polygon-mumbai.infura.io/v3"
            ],
            webSocket: [
                "wss://polygon-mumbai.infura.io/ws/v3"
            ]
        },
        default: {
            http: [
                "https://matic-mumbai.chainstacklabs.com"
            ]
        },
        public: {
            http: [
                "https://matic-mumbai.chainstacklabs.com"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "PolygonScan",
            url: "https://mumbai.polygonscan.com"
        },
        default: {
            name: "PolygonScan",
            url: "https://mumbai.polygonscan.com"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 25770160
        }
    },
    testnet: true
};
// src/sepolia.ts
var $9c8743126c7e32de$export$31254237fd28c61a = {
    id: 11155111,
    network: "sepolia",
    name: "Sepolia",
    nativeCurrency: {
        name: "Sepolia Ether",
        symbol: "SEP",
        decimals: 18
    },
    rpcUrls: {
        infura: {
            http: [
                "https://sepolia.infura.io/v3"
            ],
            webSocket: [
                "wss://sepolia.infura.io/ws/v3"
            ]
        },
        default: {
            http: [
                "https://rpc.sepolia.org"
            ]
        },
        public: {
            http: [
                "https://rpc.sepolia.org"
            ]
        }
    },
    blockExplorers: {
        etherscan: {
            name: "Etherscan",
            url: "https://sepolia.etherscan.io"
        },
        default: {
            name: "Etherscan",
            url: "https://sepolia.etherscan.io"
        }
    },
    contracts: {
        multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 6507670
        }
    },
    testnet: true
};
// src/taraxa.ts
var $9c8743126c7e32de$export$acc9c3454f8243c9 = {
    id: 841,
    name: "Taraxa Mainnet",
    network: "taraxa",
    nativeCurrency: {
        name: "Tara",
        symbol: "TARA",
        decimals: 18
    },
    rpcUrls: {
        default: {
            http: [
                "https://rpc.mainnet.taraxa.io"
            ]
        },
        public: {
            http: [
                "https://rpc.mainnet.taraxa.io"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Taraxa Explorer",
            url: "https://explorer.mainnet.taraxa.io"
        }
    }
};
// src/taraxaTestnet.ts
var $9c8743126c7e32de$export$682f3393e7281b25 = {
    id: 842,
    name: "Taraxa Testnet",
    network: "taraxa-testnet",
    nativeCurrency: {
        name: "Tara",
        symbol: "TARA",
        decimals: 18
    },
    rpcUrls: {
        default: {
            http: [
                "https://rpc.testnet.taraxa.io"
            ]
        },
        public: {
            http: [
                "https://rpc.testnet.taraxa.io"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Taraxa Explorer",
            url: "https://explorer.testnet.taraxa.io"
        }
    },
    testnet: true
};
// src/telos.ts
var $9c8743126c7e32de$export$b0cfdef906071ec8 = {
    id: 40,
    name: "Telos",
    network: "telos",
    nativeCurrency: {
        decimals: 18,
        name: "Telos",
        symbol: "TLOS"
    },
    rpcUrls: {
        default: {
            http: [
                "https://mainnet.telos.net/evm"
            ]
        },
        public: {
            http: [
                "https://mainnet.telos.net/evm"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Teloscan",
            url: "https://www.teloscan.io/"
        }
    },
    contracts: {
        multicall3: {
            address: "0xcA11bde05977b3631167028862bE2a173976CA11",
            blockCreated: 246530709
        }
    }
};
// src/telosTestnet.ts
var $9c8743126c7e32de$export$cb4c438c9db467d7 = {
    id: 41,
    name: "Telos",
    network: "telosTestnet",
    nativeCurrency: {
        decimals: 18,
        name: "Telos",
        symbol: "TLOS"
    },
    rpcUrls: {
        default: {
            http: [
                "https://testnet.telos.net/evm"
            ]
        },
        public: {
            http: [
                "https://testnet.telos.net/evm"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "Teloscan (testnet)",
            url: "https://testnet.teloscan.io/"
        }
    },
    testnet: true
};
// src/zkSync.ts
var $9c8743126c7e32de$export$e42cf0c08d988ff0 = {
    id: 324,
    name: "zkSync",
    network: "zksync",
    nativeCurrency: {
        decimals: 18,
        name: "Ether",
        symbol: "ETH"
    },
    rpcUrls: {
        default: {
            http: [
                "https://zksync2-mainnet.zksync.io"
            ],
            webSocket: [
                "wss://zksync2-mainnet.zksync.io/ws"
            ]
        },
        public: {
            http: [
                "https://zksync2-mainnet.zksync.io"
            ],
            webSocket: [
                "wss://zksync2-mainnet.zksync.io/ws"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "zkExplorer",
            url: "https://explorer.zksync.io"
        }
    }
};
// src/zkSyncTestnet.ts
var $9c8743126c7e32de$export$d5f346c7f17f608 = {
    id: 280,
    name: "zkSync Testnet",
    network: "zksync-testnet",
    nativeCurrency: {
        name: "Ether",
        symbol: "ETH",
        decimals: 18
    },
    rpcUrls: {
        default: {
            http: [
                "https://zksync2-testnet.zksync.dev"
            ],
            webSocket: [
                "wss://zksync2-testnet.zksync.dev/ws"
            ]
        },
        public: {
            http: [
                "https://zksync2-testnet.zksync.dev"
            ],
            webSocket: [
                "wss://zksync2-testnet.zksync.dev/ws"
            ]
        }
    },
    blockExplorers: {
        default: {
            name: "zkExplorer",
            url: "https://goerli.explorer.zksync.io"
        }
    },
    testnet: true
};



var $13hFK = parcelRequire("13hFK");
var $52c74cade626a703$var$__defProp = Object.defineProperty;
var $52c74cade626a703$var$__defNormalProp = (obj, key, value)=>key in obj ? $52c74cade626a703$var$__defProp(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value: value
    }) : obj[key] = value;
var $52c74cade626a703$export$5cb848ba4d1f099 = (obj, key, value)=>{
    $52c74cade626a703$var$__defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
    return value;
};
var $52c74cade626a703$var$__accessCheck = (obj, member, msg)=>{
    if (!member.has(obj)) throw TypeError("Cannot " + msg);
};
var $52c74cade626a703$export$18a094aefa070634 = (obj, member, getter)=>{
    $52c74cade626a703$var$__accessCheck(obj, member, "read from private field");
    return getter ? getter.call(obj) : member.get(obj);
};
var $52c74cade626a703$export$addf369becd23283 = (obj, member, value)=>{
    if (member.has(obj)) throw TypeError("Cannot add the same private member more than once");
    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var $52c74cade626a703$export$42432efe6614d3b4 = (obj, member, value, setter)=>{
    $52c74cade626a703$var$__accessCheck(obj, member, "write to private field");
    setter ? setter.call(obj, value) : member.set(obj, value);
    return value;
};
var $52c74cade626a703$export$fa92d15b718fce20 = (obj, member, method)=>{
    $52c74cade626a703$var$__accessCheck(obj, member, "access private method");
    return method;
};
var $52c74cade626a703$export$b2278035370d6017 = class extends (0, (/*@__PURE__*/$parcel$interopDefault($13hFK))) {
    constructor({ chains: chains = [
        (0, $9c8743126c7e32de$export$536d3e0d2c7baf54),
        (0, $9c8743126c7e32de$export$50b37201a1017e1e)
    ] , options: options  }){
        super();
        $52c74cade626a703$export$5cb848ba4d1f099(this, "chains");
        $52c74cade626a703$export$5cb848ba4d1f099(this, "options");
        this.chains = chains;
        this.options = options;
    }
    getBlockExplorerUrls(chain) {
        const { default: blockExplorer , ...blockExplorers } = chain.blockExplorers ?? {};
        if (blockExplorer) return [
            blockExplorer.url,
            ...Object.values(blockExplorers).map((x)=>x.url)
        ];
    }
    isChainUnsupported(chainId) {
        return !this.chains.some((x)=>x.id === chainId);
    }
};



var $7fc15fb0220a0397$exports = {};

$parcel$export($7fc15fb0220a0397$exports, "getDefaultProvider", () => $7fc15fb0220a0397$export$4f77a1d3c1ac6642);
$parcel$export($7fc15fb0220a0397$exports, "Provider", () => $443be65109ed3525$exports.Provider);
$parcel$export($7fc15fb0220a0397$exports, "BaseProvider", () => $bc831430ade2c52d$exports.BaseProvider);
$parcel$export($7fc15fb0220a0397$exports, "Resolver", () => $bc831430ade2c52d$exports.Resolver);
$parcel$export($7fc15fb0220a0397$exports, "UrlJsonRpcProvider", () => $66618fedffa44f16$exports.UrlJsonRpcProvider);
$parcel$export($7fc15fb0220a0397$exports, "FallbackProvider", () => $da3a7bd74daa9b73$exports.FallbackProvider);
$parcel$export($7fc15fb0220a0397$exports, "AlchemyProvider", () => $f2984339429a6468$export$999cc40da3fbc6f);
$parcel$export($7fc15fb0220a0397$exports, "AlchemyWebSocketProvider", () => $f2984339429a6468$export$f6c13301c7b76371);
$parcel$export($7fc15fb0220a0397$exports, "AnkrProvider", () => $85fc28b257416515$export$72783b2aefa72a45);
$parcel$export($7fc15fb0220a0397$exports, "CloudflareProvider", () => $09e6347f3c9c6931$exports.CloudflareProvider);
$parcel$export($7fc15fb0220a0397$exports, "EtherscanProvider", () => $f5918f77586c5069$exports.EtherscanProvider);
$parcel$export($7fc15fb0220a0397$exports, "InfuraProvider", () => $f827a0cbfed8474e$export$60ff1a559b5c6ebd);
$parcel$export($7fc15fb0220a0397$exports, "InfuraWebSocketProvider", () => $f827a0cbfed8474e$export$dd168a807d60da4f);
$parcel$export($7fc15fb0220a0397$exports, "JsonRpcProvider", () => $7f2d24163dd74616$exports.JsonRpcProvider);
$parcel$export($7fc15fb0220a0397$exports, "JsonRpcBatchProvider", () => $3b78c8d022d58bfd$export$5a16092bf20edf97);
$parcel$export($7fc15fb0220a0397$exports, "NodesmithProvider", () => $3b3efbf62d6a89cd$export$8235cbce3ce273bd);
$parcel$export($7fc15fb0220a0397$exports, "PocketProvider", () => $91da800566d01550$export$58bb47e42f6b092e);
$parcel$export($7fc15fb0220a0397$exports, "StaticJsonRpcProvider", () => $66618fedffa44f16$exports.StaticJsonRpcProvider);
$parcel$export($7fc15fb0220a0397$exports, "Web3Provider", () => $89c96b5cc4961dd5$export$d05096c9fd9d936d);
$parcel$export($7fc15fb0220a0397$exports, "WebSocketProvider", () => $852e4865dd1a0824$exports.WebSocketProvider);
$parcel$export($7fc15fb0220a0397$exports, "IpcProvider", () => $a4adb2fbafa1b445$export$fbe151f90a1ece01);
$parcel$export($7fc15fb0220a0397$exports, "JsonRpcSigner", () => $7f2d24163dd74616$exports.JsonRpcSigner);
$parcel$export($7fc15fb0220a0397$exports, "getNetwork", () => $1c19460a5712cfcc$export$7de4970ebfd8206d);
$parcel$export($7fc15fb0220a0397$exports, "isCommunityResource", () => $a833276422c6da56$export$d93d5f61c2498b6);
$parcel$export($7fc15fb0220a0397$exports, "isCommunityResourcable", () => $a833276422c6da56$export$3091239f5b20b896);
$parcel$export($7fc15fb0220a0397$exports, "showThrottleMessage", () => $a833276422c6da56$export$4c41bd49e82e82ab);
$parcel$export($7fc15fb0220a0397$exports, "Formatter", () => $a833276422c6da56$export$a06636add2a09fd8);
var $443be65109ed3525$exports = {};

$parcel$export($443be65109ed3525$exports, "ForkEvent", () => $443be65109ed3525$export$406ece1549ccd00e, (v) => $443be65109ed3525$export$406ece1549ccd00e = v);
$parcel$export($443be65109ed3525$exports, "Provider", () => $443be65109ed3525$export$2881499e37b75b9a, (v) => $443be65109ed3525$export$2881499e37b75b9a = v);

var $7QIDV = parcelRequire("7QIDV");

var $eg8oT = parcelRequire("eg8oT");

var $cbv61 = parcelRequire("cbv61");
const $156aa2266a46bfdf$export$83d89fbfd8236492 = "bignumber/5.7.0";


"use strict";
var $66faa3baf2af8a8b$var$BN = (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV))).BN;
const $66faa3baf2af8a8b$var$logger = new (0, $cbv61.Logger)((0, $156aa2266a46bfdf$export$83d89fbfd8236492));
const $66faa3baf2af8a8b$var$_constructorGuard = {};
const $66faa3baf2af8a8b$var$MAX_SAFE = 0x1fffffffffffff;
function $66faa3baf2af8a8b$export$a3d0a7fa9b65683b(value) {
    return value != null && ($66faa3baf2af8a8b$export$d97aa349ed20696.isBigNumber(value) || typeof value === "number" && value % 1 === 0 || typeof value === "string" && !!value.match(/^-?[0-9]+$/) || (0, $eg8oT.isHexString)(value) || typeof value === "bigint" || (0, $eg8oT.isBytes)(value));
}
// Only warn about passing 10 into radix once
let $66faa3baf2af8a8b$var$_warnedToStringRadix = false;
class $66faa3baf2af8a8b$export$d97aa349ed20696 {
    constructor(constructorGuard, hex){
        if (constructorGuard !== $66faa3baf2af8a8b$var$_constructorGuard) $66faa3baf2af8a8b$var$logger.throwError("cannot call constructor directly; use BigNumber.from", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "new (BigNumber)"
        });
        this._hex = hex;
        this._isBigNumber = true;
        Object.freeze(this);
    }
    fromTwos(value) {
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).fromTwos(value));
    }
    toTwos(value) {
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).toTwos(value));
    }
    abs() {
        if (this._hex[0] === "-") return $66faa3baf2af8a8b$export$d97aa349ed20696.from(this._hex.substring(1));
        return this;
    }
    add(other) {
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).add($66faa3baf2af8a8b$var$toBN(other)));
    }
    sub(other) {
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).sub($66faa3baf2af8a8b$var$toBN(other)));
    }
    div(other) {
        const o = $66faa3baf2af8a8b$export$d97aa349ed20696.from(other);
        if (o.isZero()) $66faa3baf2af8a8b$var$throwFault("division-by-zero", "div");
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).div($66faa3baf2af8a8b$var$toBN(other)));
    }
    mul(other) {
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).mul($66faa3baf2af8a8b$var$toBN(other)));
    }
    mod(other) {
        const value = $66faa3baf2af8a8b$var$toBN(other);
        if (value.isNeg()) $66faa3baf2af8a8b$var$throwFault("division-by-zero", "mod");
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).umod(value));
    }
    pow(other) {
        const value = $66faa3baf2af8a8b$var$toBN(other);
        if (value.isNeg()) $66faa3baf2af8a8b$var$throwFault("negative-power", "pow");
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).pow(value));
    }
    and(other) {
        const value = $66faa3baf2af8a8b$var$toBN(other);
        if (this.isNegative() || value.isNeg()) $66faa3baf2af8a8b$var$throwFault("unbound-bitwise-result", "and");
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).and(value));
    }
    or(other) {
        const value = $66faa3baf2af8a8b$var$toBN(other);
        if (this.isNegative() || value.isNeg()) $66faa3baf2af8a8b$var$throwFault("unbound-bitwise-result", "or");
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).or(value));
    }
    xor(other) {
        const value = $66faa3baf2af8a8b$var$toBN(other);
        if (this.isNegative() || value.isNeg()) $66faa3baf2af8a8b$var$throwFault("unbound-bitwise-result", "xor");
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).xor(value));
    }
    mask(value) {
        if (this.isNegative() || value < 0) $66faa3baf2af8a8b$var$throwFault("negative-width", "mask");
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).maskn(value));
    }
    shl(value) {
        if (this.isNegative() || value < 0) $66faa3baf2af8a8b$var$throwFault("negative-width", "shl");
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).shln(value));
    }
    shr(value) {
        if (this.isNegative() || value < 0) $66faa3baf2af8a8b$var$throwFault("negative-width", "shr");
        return $66faa3baf2af8a8b$var$toBigNumber($66faa3baf2af8a8b$var$toBN(this).shrn(value));
    }
    eq(other) {
        return $66faa3baf2af8a8b$var$toBN(this).eq($66faa3baf2af8a8b$var$toBN(other));
    }
    lt(other) {
        return $66faa3baf2af8a8b$var$toBN(this).lt($66faa3baf2af8a8b$var$toBN(other));
    }
    lte(other) {
        return $66faa3baf2af8a8b$var$toBN(this).lte($66faa3baf2af8a8b$var$toBN(other));
    }
    gt(other) {
        return $66faa3baf2af8a8b$var$toBN(this).gt($66faa3baf2af8a8b$var$toBN(other));
    }
    gte(other) {
        return $66faa3baf2af8a8b$var$toBN(this).gte($66faa3baf2af8a8b$var$toBN(other));
    }
    isNegative() {
        return this._hex[0] === "-";
    }
    isZero() {
        return $66faa3baf2af8a8b$var$toBN(this).isZero();
    }
    toNumber() {
        try {
            return $66faa3baf2af8a8b$var$toBN(this).toNumber();
        } catch (error) {
            $66faa3baf2af8a8b$var$throwFault("overflow", "toNumber", this.toString());
        }
        return null;
    }
    toBigInt() {
        try {
            return BigInt(this.toString());
        } catch (e) {}
        return $66faa3baf2af8a8b$var$logger.throwError("this platform does not support BigInt", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            value: this.toString()
        });
    }
    toString() {
        // Lots of people expect this, which we do not support, so check (See: #889)
        if (arguments.length > 0) {
            if (arguments[0] === 10) {
                if (!$66faa3baf2af8a8b$var$_warnedToStringRadix) {
                    $66faa3baf2af8a8b$var$_warnedToStringRadix = true;
                    $66faa3baf2af8a8b$var$logger.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
                }
            } else if (arguments[0] === 16) $66faa3baf2af8a8b$var$logger.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", (0, $cbv61.Logger).errors.UNEXPECTED_ARGUMENT, {});
            else $66faa3baf2af8a8b$var$logger.throwError("BigNumber.toString does not accept parameters", (0, $cbv61.Logger).errors.UNEXPECTED_ARGUMENT, {});
        }
        return $66faa3baf2af8a8b$var$toBN(this).toString(10);
    }
    toHexString() {
        return this._hex;
    }
    toJSON(key) {
        return {
            type: "BigNumber",
            hex: this.toHexString()
        };
    }
    static from(value) {
        if (value instanceof $66faa3baf2af8a8b$export$d97aa349ed20696) return value;
        if (typeof value === "string") {
            if (value.match(/^-?0x[0-9a-f]+$/i)) return new $66faa3baf2af8a8b$export$d97aa349ed20696($66faa3baf2af8a8b$var$_constructorGuard, $66faa3baf2af8a8b$var$toHex(value));
            if (value.match(/^-?[0-9]+$/)) return new $66faa3baf2af8a8b$export$d97aa349ed20696($66faa3baf2af8a8b$var$_constructorGuard, $66faa3baf2af8a8b$var$toHex(new $66faa3baf2af8a8b$var$BN(value)));
            return $66faa3baf2af8a8b$var$logger.throwArgumentError("invalid BigNumber string", "value", value);
        }
        if (typeof value === "number") {
            if (value % 1) $66faa3baf2af8a8b$var$throwFault("underflow", "BigNumber.from", value);
            if (value >= $66faa3baf2af8a8b$var$MAX_SAFE || value <= -$66faa3baf2af8a8b$var$MAX_SAFE) $66faa3baf2af8a8b$var$throwFault("overflow", "BigNumber.from", value);
            return $66faa3baf2af8a8b$export$d97aa349ed20696.from(String(value));
        }
        const anyValue = value;
        if (typeof anyValue === "bigint") return $66faa3baf2af8a8b$export$d97aa349ed20696.from(anyValue.toString());
        if ((0, $eg8oT.isBytes)(anyValue)) return $66faa3baf2af8a8b$export$d97aa349ed20696.from((0, $eg8oT.hexlify)(anyValue));
        if (anyValue) {
            // Hexable interface (takes priority)
            if (anyValue.toHexString) {
                const hex = anyValue.toHexString();
                if (typeof hex === "string") return $66faa3baf2af8a8b$export$d97aa349ed20696.from(hex);
            } else {
                // For now, handle legacy JSON-ified values (goes away in v6)
                let hex = anyValue._hex;
                // New-form JSON
                if (hex == null && anyValue.type === "BigNumber") hex = anyValue.hex;
                if (typeof hex === "string") {
                    if ((0, $eg8oT.isHexString)(hex) || hex[0] === "-" && (0, $eg8oT.isHexString)(hex.substring(1))) return $66faa3baf2af8a8b$export$d97aa349ed20696.from(hex);
                }
            }
        }
        return $66faa3baf2af8a8b$var$logger.throwArgumentError("invalid BigNumber value", "value", value);
    }
    static isBigNumber(value) {
        return !!(value && value._isBigNumber);
    }
}
// Normalize the hex string
function $66faa3baf2af8a8b$var$toHex(value) {
    // For BN, call on the hex string
    if (typeof value !== "string") return $66faa3baf2af8a8b$var$toHex(value.toString(16));
    // If negative, prepend the negative sign to the normalized positive value
    if (value[0] === "-") {
        // Strip off the negative sign
        value = value.substring(1);
        // Cannot have multiple negative signs (e.g. "--0x04")
        if (value[0] === "-") $66faa3baf2af8a8b$var$logger.throwArgumentError("invalid hex", "value", value);
        // Call toHex on the positive component
        value = $66faa3baf2af8a8b$var$toHex(value);
        // Do not allow "-0x00"
        if (value === "0x00") return value;
        // Negate the value
        return "-" + value;
    }
    // Add a "0x" prefix if missing
    if (value.substring(0, 2) !== "0x") value = "0x" + value;
    // Normalize zero
    if (value === "0x") return "0x00";
    // Make the string even length
    if (value.length % 2) value = "0x0" + value.substring(2);
    // Trim to smallest even-length string
    while(value.length > 4 && value.substring(0, 4) === "0x00")value = "0x" + value.substring(4);
    return value;
}
function $66faa3baf2af8a8b$var$toBigNumber(value) {
    return $66faa3baf2af8a8b$export$d97aa349ed20696.from($66faa3baf2af8a8b$var$toHex(value));
}
function $66faa3baf2af8a8b$var$toBN(value) {
    const hex = $66faa3baf2af8a8b$export$d97aa349ed20696.from(value).toHexString();
    if (hex[0] === "-") return new $66faa3baf2af8a8b$var$BN("-" + hex.substring(3), 16);
    return new $66faa3baf2af8a8b$var$BN(hex.substring(2), 16);
}
function $66faa3baf2af8a8b$var$throwFault(fault, operation, value) {
    const params = {
        fault: fault,
        operation: operation
    };
    if (value != null) params.value = value;
    return $66faa3baf2af8a8b$var$logger.throwError(fault, (0, $cbv61.Logger).errors.NUMERIC_FAULT, params);
}
function $66faa3baf2af8a8b$export$51e4a08295f7770f(value) {
    return new $66faa3baf2af8a8b$var$BN(value, 36).toString(16);
}
function $66faa3baf2af8a8b$export$1293db5d29c264ff(value) {
    return new $66faa3baf2af8a8b$var$BN(value, 16).toString(36);
}



var $eg8oT = parcelRequire("eg8oT");
var $b19fb92a27e5f35f$exports = {};

$parcel$export($b19fb92a27e5f35f$exports, "defineReadOnly", () => $b19fb92a27e5f35f$export$104236534534f9be, (v) => $b19fb92a27e5f35f$export$104236534534f9be = v);
$parcel$export($b19fb92a27e5f35f$exports, "getStatic", () => $b19fb92a27e5f35f$export$f695fbbf3cdaaf47, (v) => $b19fb92a27e5f35f$export$f695fbbf3cdaaf47 = v);
$parcel$export($b19fb92a27e5f35f$exports, "resolveProperties", () => $b19fb92a27e5f35f$export$d503dd157d963b60, (v) => $b19fb92a27e5f35f$export$d503dd157d963b60 = v);
$parcel$export($b19fb92a27e5f35f$exports, "checkProperties", () => $b19fb92a27e5f35f$export$ae5a316ba623b73a, (v) => $b19fb92a27e5f35f$export$ae5a316ba623b73a = v);
$parcel$export($b19fb92a27e5f35f$exports, "shallowCopy", () => $b19fb92a27e5f35f$export$9c13236873b118a5, (v) => $b19fb92a27e5f35f$export$9c13236873b118a5 = v);
$parcel$export($b19fb92a27e5f35f$exports, "deepCopy", () => $b19fb92a27e5f35f$export$6c40052bed430212, (v) => $b19fb92a27e5f35f$export$6c40052bed430212 = v);
$parcel$export($b19fb92a27e5f35f$exports, "Description", () => $b19fb92a27e5f35f$export$393edc798c47379d, (v) => $b19fb92a27e5f35f$export$393edc798c47379d = v);

var $cbv61 = parcelRequire("cbv61");
const $ed47afe9a12b220e$export$83d89fbfd8236492 = "properties/5.7.0";


"use strict";
var $b19fb92a27e5f35f$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $b19fb92a27e5f35f$var$logger = new (0, $cbv61.Logger)((0, $ed47afe9a12b220e$export$83d89fbfd8236492));
function $b19fb92a27e5f35f$export$104236534534f9be(object, name, value) {
    Object.defineProperty(object, name, {
        enumerable: true,
        value: value,
        writable: false
    });
}
function $b19fb92a27e5f35f$export$f695fbbf3cdaaf47(ctor, key) {
    for(let i = 0; i < 32; i++){
        if (ctor[key]) return ctor[key];
        if (!ctor.prototype || typeof ctor.prototype !== "object") break;
        ctor = Object.getPrototypeOf(ctor.prototype).constructor;
    }
    return null;
}
function $b19fb92a27e5f35f$export$d503dd157d963b60(object) {
    return $b19fb92a27e5f35f$var$__awaiter(this, void 0, void 0, function*() {
        const promises = Object.keys(object).map((key)=>{
            const value = object[key];
            return Promise.resolve(value).then((v)=>({
                    key: key,
                    value: v
                }));
        });
        const results = yield Promise.all(promises);
        return results.reduce((accum, result)=>{
            accum[result.key] = result.value;
            return accum;
        }, {});
    });
}
function $b19fb92a27e5f35f$export$ae5a316ba623b73a(object, properties) {
    if (!object || typeof object !== "object") $b19fb92a27e5f35f$var$logger.throwArgumentError("invalid object", "object", object);
    Object.keys(object).forEach((key)=>{
        if (!properties[key]) $b19fb92a27e5f35f$var$logger.throwArgumentError("invalid object key - " + key, "transaction:" + key, object);
    });
}
function $b19fb92a27e5f35f$export$9c13236873b118a5(object) {
    const result = {};
    for(const key in object)result[key] = object[key];
    return result;
}
const $b19fb92a27e5f35f$var$opaque = {
    bigint: true,
    boolean: true,
    "function": true,
    number: true,
    string: true
};
function $b19fb92a27e5f35f$var$_isFrozen(object) {
    // Opaque objects are not mutable, so safe to copy by assignment
    if (object === undefined || object === null || $b19fb92a27e5f35f$var$opaque[typeof object]) return true;
    if (Array.isArray(object) || typeof object === "object") {
        if (!Object.isFrozen(object)) return false;
        const keys = Object.keys(object);
        for(let i = 0; i < keys.length; i++){
            let value = null;
            try {
                value = object[keys[i]];
            } catch (error) {
                continue;
            }
            if (!$b19fb92a27e5f35f$var$_isFrozen(value)) return false;
        }
        return true;
    }
    return $b19fb92a27e5f35f$var$logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
}
// Returns a new copy of object, such that no properties may be replaced.
// New properties may be added only to objects.
function $b19fb92a27e5f35f$var$_deepCopy(object) {
    if ($b19fb92a27e5f35f$var$_isFrozen(object)) return object;
    // Arrays are mutable, so we need to create a copy
    if (Array.isArray(object)) return Object.freeze(object.map((item)=>$b19fb92a27e5f35f$export$6c40052bed430212(item)));
    if (typeof object === "object") {
        const result = {};
        for(const key in object){
            const value = object[key];
            if (value === undefined) continue;
            $b19fb92a27e5f35f$export$104236534534f9be(result, key, $b19fb92a27e5f35f$export$6c40052bed430212(value));
        }
        return result;
    }
    return $b19fb92a27e5f35f$var$logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
}
function $b19fb92a27e5f35f$export$6c40052bed430212(object) {
    return $b19fb92a27e5f35f$var$_deepCopy(object);
}
class $b19fb92a27e5f35f$export$393edc798c47379d {
    constructor(info){
        for(const key in info)this[key] = $b19fb92a27e5f35f$export$6c40052bed430212(info[key]);
    }
}



var $cbv61 = parcelRequire("cbv61");
const $528fc47e8f371aae$export$83d89fbfd8236492 = "abstract-provider/5.7.0";


"use strict";
var $443be65109ed3525$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $443be65109ed3525$var$logger = new (0, $cbv61.Logger)((0, $528fc47e8f371aae$export$83d89fbfd8236492));
class $443be65109ed3525$export$406ece1549ccd00e extends (0, $b19fb92a27e5f35f$exports.Description) {
    static isForkEvent(value) {
        return !!(value && value._isForkEvent);
    }
}
class $443be65109ed3525$export$5b2cada8494f9d99 extends $443be65109ed3525$export$406ece1549ccd00e {
    constructor(blockHash, expiry){
        if (!(0, $eg8oT.isHexString)(blockHash, 32)) $443be65109ed3525$var$logger.throwArgumentError("invalid blockHash", "blockHash", blockHash);
        super({
            _isForkEvent: true,
            _isBlockForkEvent: true,
            expiry: expiry || 0,
            blockHash: blockHash
        });
    }
}
class $443be65109ed3525$export$26bcd61a55716c98 extends $443be65109ed3525$export$406ece1549ccd00e {
    constructor(hash, expiry){
        if (!(0, $eg8oT.isHexString)(hash, 32)) $443be65109ed3525$var$logger.throwArgumentError("invalid transaction hash", "hash", hash);
        super({
            _isForkEvent: true,
            _isTransactionForkEvent: true,
            expiry: expiry || 0,
            hash: hash
        });
    }
}
class $443be65109ed3525$export$8f8609bfee47c93 extends $443be65109ed3525$export$406ece1549ccd00e {
    constructor(beforeHash, afterHash, expiry){
        if (!(0, $eg8oT.isHexString)(beforeHash, 32)) $443be65109ed3525$var$logger.throwArgumentError("invalid transaction hash", "beforeHash", beforeHash);
        if (!(0, $eg8oT.isHexString)(afterHash, 32)) $443be65109ed3525$var$logger.throwArgumentError("invalid transaction hash", "afterHash", afterHash);
        super({
            _isForkEvent: true,
            _isTransactionOrderForkEvent: true,
            expiry: expiry || 0,
            beforeHash: beforeHash,
            afterHash: afterHash
        });
    }
}
class $443be65109ed3525$export$2881499e37b75b9a {
    constructor(){
        $443be65109ed3525$var$logger.checkAbstract(new.target, $443be65109ed3525$export$2881499e37b75b9a);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_isProvider", true);
    }
    getFeeData() {
        return $443be65109ed3525$var$__awaiter(this, void 0, void 0, function*() {
            const { block: block , gasPrice: gasPrice  } = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                block: this.getBlock("latest"),
                gasPrice: this.getGasPrice().catch((error)=>{
                    // @TODO: Why is this now failing on Calaveras?
                    //console.log(error);
                    return null;
                })
            });
            let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;
            if (block && block.baseFeePerGas) {
                // We may want to compute this more accurately in the future,
                // using the formula "check if the base fee is correct".
                // See: https://eips.ethereum.org/EIPS/eip-1559
                lastBaseFeePerGas = block.baseFeePerGas;
                maxPriorityFeePerGas = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from("1500000000");
                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
            }
            return {
                lastBaseFeePerGas: lastBaseFeePerGas,
                maxFeePerGas: maxFeePerGas,
                maxPriorityFeePerGas: maxPriorityFeePerGas,
                gasPrice: gasPrice
            };
        });
    }
    // Alias for "on"
    addListener(eventName, listener) {
        return this.on(eventName, listener);
    }
    // Alias for "off"
    removeListener(eventName, listener) {
        return this.off(eventName, listener);
    }
    static isProvider(value) {
        return !!(value && value._isProvider);
    }
}



var $cbv61 = parcelRequire("cbv61");
const $2f60eb1ca7d8c48a$export$83d89fbfd8236492 = "networks/5.7.1";


"use strict";
const $1c19460a5712cfcc$var$logger = new (0, $cbv61.Logger)((0, $2f60eb1ca7d8c48a$export$83d89fbfd8236492));
function $1c19460a5712cfcc$var$isRenetworkable(value) {
    return value && typeof value.renetwork === "function";
}
function $1c19460a5712cfcc$var$ethDefaultProvider(network) {
    const func = function(providers, options) {
        if (options == null) options = {};
        const providerList = [];
        if (providers.InfuraProvider && options.infura !== "-") try {
            providerList.push(new providers.InfuraProvider(network, options.infura));
        } catch (error) {}
        if (providers.EtherscanProvider && options.etherscan !== "-") try {
            providerList.push(new providers.EtherscanProvider(network, options.etherscan));
        } catch (error) {}
        if (providers.AlchemyProvider && options.alchemy !== "-") try {
            providerList.push(new providers.AlchemyProvider(network, options.alchemy));
        } catch (error) {}
        if (providers.PocketProvider && options.pocket !== "-") {
            // These networks are currently faulty on Pocket as their
            // network does not handle the Berlin hardfork, which is
            // live on these ones.
            // @TODO: This goes away once Pocket has upgraded their nodes
            const skip = [
                "goerli",
                "ropsten",
                "rinkeby",
                "sepolia"
            ];
            try {
                const provider = new providers.PocketProvider(network, options.pocket);
                if (provider.network && skip.indexOf(provider.network.name) === -1) providerList.push(provider);
            } catch (error) {}
        }
        if (providers.CloudflareProvider && options.cloudflare !== "-") try {
            providerList.push(new providers.CloudflareProvider(network));
        } catch (error) {}
        if (providers.AnkrProvider && options.ankr !== "-") try {
            const skip = [
                "ropsten"
            ];
            const provider = new providers.AnkrProvider(network, options.ankr);
            if (provider.network && skip.indexOf(provider.network.name) === -1) providerList.push(provider);
        } catch (error) {}
        if (providerList.length === 0) return null;
        if (providers.FallbackProvider) {
            let quorum = 1;
            if (options.quorum != null) quorum = options.quorum;
            else if (network === "homestead") quorum = 2;
            return new providers.FallbackProvider(providerList, quorum);
        }
        return providerList[0];
    };
    func.renetwork = function(network) {
        return $1c19460a5712cfcc$var$ethDefaultProvider(network);
    };
    return func;
}
function $1c19460a5712cfcc$var$etcDefaultProvider(url, network) {
    const func = function(providers, options) {
        if (providers.JsonRpcProvider) return new providers.JsonRpcProvider(url, network);
        return null;
    };
    func.renetwork = function(network) {
        return $1c19460a5712cfcc$var$etcDefaultProvider(url, network);
    };
    return func;
}
const $1c19460a5712cfcc$var$homestead = {
    chainId: 1,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "homestead",
    _defaultProvider: $1c19460a5712cfcc$var$ethDefaultProvider("homestead")
};
const $1c19460a5712cfcc$var$ropsten = {
    chainId: 3,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "ropsten",
    _defaultProvider: $1c19460a5712cfcc$var$ethDefaultProvider("ropsten")
};
const $1c19460a5712cfcc$var$classicMordor = {
    chainId: 63,
    name: "classicMordor",
    _defaultProvider: $1c19460a5712cfcc$var$etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor")
};
// See: https://chainlist.org
const $1c19460a5712cfcc$var$networks = {
    unspecified: {
        chainId: 0,
        name: "unspecified"
    },
    homestead: $1c19460a5712cfcc$var$homestead,
    mainnet: $1c19460a5712cfcc$var$homestead,
    morden: {
        chainId: 2,
        name: "morden"
    },
    ropsten: $1c19460a5712cfcc$var$ropsten,
    testnet: $1c19460a5712cfcc$var$ropsten,
    rinkeby: {
        chainId: 4,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "rinkeby",
        _defaultProvider: $1c19460a5712cfcc$var$ethDefaultProvider("rinkeby")
    },
    kovan: {
        chainId: 42,
        name: "kovan",
        _defaultProvider: $1c19460a5712cfcc$var$ethDefaultProvider("kovan")
    },
    goerli: {
        chainId: 5,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "goerli",
        _defaultProvider: $1c19460a5712cfcc$var$ethDefaultProvider("goerli")
    },
    kintsugi: {
        chainId: 1337702,
        name: "kintsugi"
    },
    sepolia: {
        chainId: 11155111,
        name: "sepolia",
        _defaultProvider: $1c19460a5712cfcc$var$ethDefaultProvider("sepolia")
    },
    // ETC (See: #351)
    classic: {
        chainId: 61,
        name: "classic",
        _defaultProvider: $1c19460a5712cfcc$var$etcDefaultProvider("https://www.ethercluster.com/etc", "classic")
    },
    classicMorden: {
        chainId: 62,
        name: "classicMorden"
    },
    classicMordor: $1c19460a5712cfcc$var$classicMordor,
    classicTestnet: $1c19460a5712cfcc$var$classicMordor,
    classicKotti: {
        chainId: 6,
        name: "classicKotti",
        _defaultProvider: $1c19460a5712cfcc$var$etcDefaultProvider("https://www.ethercluster.com/kotti", "classicKotti")
    },
    xdai: {
        chainId: 100,
        name: "xdai"
    },
    matic: {
        chainId: 137,
        name: "matic",
        _defaultProvider: $1c19460a5712cfcc$var$ethDefaultProvider("matic")
    },
    maticmum: {
        chainId: 80001,
        name: "maticmum"
    },
    optimism: {
        chainId: 10,
        name: "optimism",
        _defaultProvider: $1c19460a5712cfcc$var$ethDefaultProvider("optimism")
    },
    "optimism-kovan": {
        chainId: 69,
        name: "optimism-kovan"
    },
    "optimism-goerli": {
        chainId: 420,
        name: "optimism-goerli"
    },
    arbitrum: {
        chainId: 42161,
        name: "arbitrum"
    },
    "arbitrum-rinkeby": {
        chainId: 421611,
        name: "arbitrum-rinkeby"
    },
    "arbitrum-goerli": {
        chainId: 421613,
        name: "arbitrum-goerli"
    },
    bnb: {
        chainId: 56,
        name: "bnb"
    },
    bnbt: {
        chainId: 97,
        name: "bnbt"
    }
};
function $1c19460a5712cfcc$export$7de4970ebfd8206d(network) {
    // No network (null)
    if (network == null) return null;
    if (typeof network === "number") {
        for(const name in $1c19460a5712cfcc$var$networks){
            const standard = $1c19460a5712cfcc$var$networks[name];
            if (standard.chainId === network) return {
                name: standard.name,
                chainId: standard.chainId,
                ensAddress: standard.ensAddress || null,
                _defaultProvider: standard._defaultProvider || null
            };
        }
        return {
            chainId: network,
            name: "unknown"
        };
    }
    if (typeof network === "string") {
        const standard = $1c19460a5712cfcc$var$networks[network];
        if (standard == null) return null;
        return {
            name: standard.name,
            chainId: standard.chainId,
            ensAddress: standard.ensAddress,
            _defaultProvider: standard._defaultProvider || null
        };
    }
    const standard = $1c19460a5712cfcc$var$networks[network.name];
    // Not a standard network; check that it is a valid network in general
    if (!standard) {
        if (typeof network.chainId !== "number") $1c19460a5712cfcc$var$logger.throwArgumentError("invalid network chainId", "network", network);
        return network;
    }
    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)
    if (network.chainId !== 0 && network.chainId !== standard.chainId) $1c19460a5712cfcc$var$logger.throwArgumentError("network chainId mismatch", "network", network);
    // @TODO: In the next major version add an attach function to a defaultProvider
    // class and move the _defaultProvider internal to this file (extend Network)
    let defaultProvider = network._defaultProvider || null;
    if (defaultProvider == null && standard._defaultProvider) {
        if ($1c19460a5712cfcc$var$isRenetworkable(standard._defaultProvider)) defaultProvider = standard._defaultProvider.renetwork(network);
        else defaultProvider = standard._defaultProvider;
    }
    // Standard Network (allow overriding the ENS address)
    return {
        name: network.name,
        chainId: standard.chainId,
        ensAddress: network.ensAddress || standard.ensAddress || null,
        _defaultProvider: defaultProvider
    };
}


var $bc831430ade2c52d$exports = {};

$parcel$export($bc831430ade2c52d$exports, "Resolver", () => $bc831430ade2c52d$export$8b4c839865b08288, (v) => $bc831430ade2c52d$export$8b4c839865b08288 = v);
$parcel$export($bc831430ade2c52d$exports, "BaseProvider", () => $bc831430ade2c52d$export$ff3f6dd83125ac45, (v) => $bc831430ade2c52d$export$ff3f6dd83125ac45 = v);


var $6s22a = parcelRequire("6s22a");
/**
 * var basex = require("base-x");
 *
 * This implementation is heavily based on base-x. The main reason to
 * deviate was to prevent the dependency of Buffer.
 *
 * Contributors:
 *
 * base-x encoding
 * Forked from https://github.com/cryptocoinjs/bs58
 * Originally written by Mike Hearn for BitcoinJ
 * Copyright (c) 2011 Google Inc
 * Ported to JavaScript by Stefan Thomas
 * Merged Buffer refactorings from base58-native by Stephen Pair
 * Copyright (c) 2013 BitPay Inc
 *
 * The MIT License (MIT)
 *
 * Copyright base-x contributors (c) 2016
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 */ 
var $eg8oT = parcelRequire("eg8oT");

class $34e4ad7d2aa99cc1$export$240043ab8e806ec7 {
    constructor(alphabet){
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "alphabet", alphabet);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "base", alphabet.length);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_alphabetMap", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_leader", alphabet.charAt(0));
        // pre-compute lookup table
        for(let i = 0; i < alphabet.length; i++)this._alphabetMap[alphabet.charAt(i)] = i;
    }
    encode(value) {
        let source = (0, $eg8oT.arrayify)(value);
        if (source.length === 0) return "";
        let digits = [
            0
        ];
        for(let i = 0; i < source.length; ++i){
            let carry = source[i];
            for(let j = 0; j < digits.length; ++j){
                carry += digits[j] << 8;
                digits[j] = carry % this.base;
                carry = carry / this.base | 0;
            }
            while(carry > 0){
                digits.push(carry % this.base);
                carry = carry / this.base | 0;
            }
        }
        let string = "";
        // deal with leading zeros
        for(let k = 0; source[k] === 0 && k < source.length - 1; ++k)string += this._leader;
        // convert digits to a string
        for(let q = digits.length - 1; q >= 0; --q)string += this.alphabet[digits[q]];
        return string;
    }
    decode(value) {
        if (typeof value !== "string") throw new TypeError("Expected String");
        let bytes = [];
        if (value.length === 0) return new Uint8Array(bytes);
        bytes.push(0);
        for(let i = 0; i < value.length; i++){
            let byte = this._alphabetMap[value[i]];
            if (byte === undefined) throw new Error("Non-base" + this.base + " character");
            let carry = byte;
            for(let j = 0; j < bytes.length; ++j){
                carry += bytes[j] * this.base;
                bytes[j] = carry & 0xff;
                carry >>= 8;
            }
            while(carry > 0){
                bytes.push(carry & 0xff);
                carry >>= 8;
            }
        }
        // deal with leading zeros
        for(let k = 0; value[k] === this._leader && k < value.length - 1; ++k)bytes.push(0);
        return (0, $eg8oT.arrayify)(new Uint8Array(bytes.reverse()));
    }
}
const $34e4ad7d2aa99cc1$export$cfabb2852920f5ec = new $34e4ad7d2aa99cc1$export$240043ab8e806ec7("abcdefghijklmnopqrstuvwxyz234567");
const $34e4ad7d2aa99cc1$export$45a587635c9954b2 = new $34e4ad7d2aa99cc1$export$240043ab8e806ec7("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
 //console.log(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj"))
 //console.log(Base58.encode(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj")))




var $eg8oT = parcelRequire("eg8oT");
const $479bed3ace97c359$export$71c2e4e213dcb7f2 = "0x0000000000000000000000000000000000000000000000000000000000000000";



var $eg8oT = parcelRequire("eg8oT");

var $eg8oT = parcelRequire("eg8oT");

var $cbv61 = parcelRequire("cbv61");
const $5dca5943a858c8c7$export$83d89fbfd8236492 = "strings/5.7.0";


"use strict";
const $cde319f07c8777da$var$logger = new (0, $cbv61.Logger)((0, $5dca5943a858c8c7$export$83d89fbfd8236492));
var $cde319f07c8777da$export$c6986442964129f5;
(function(UnicodeNormalizationForm) {
    UnicodeNormalizationForm["current"] = "";
    UnicodeNormalizationForm["NFC"] = "NFC";
    UnicodeNormalizationForm["NFD"] = "NFD";
    UnicodeNormalizationForm["NFKC"] = "NFKC";
    UnicodeNormalizationForm["NFKD"] = "NFKD";
})($cde319f07c8777da$export$c6986442964129f5 || ($cde319f07c8777da$export$c6986442964129f5 = {}));
var $cde319f07c8777da$export$c285fa6ac15ff6a6;
(function(Utf8ErrorReason) {
    // A continuation byte was present where there was nothing to continue
    // - offset = the index the codepoint began in
    Utf8ErrorReason["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found
    // - offset = the index the codepoint began in
    Utf8ErrorReason["BAD_PREFIX"] = "bad codepoint prefix";
    // The string is too short to process the expected codepoint
    // - offset = the index the codepoint began in
    Utf8ErrorReason["OVERRUN"] = "string overrun";
    // A missing continuation byte was expected but not found
    // - offset = the index the continuation byte was expected at
    Utf8ErrorReason["MISSING_CONTINUE"] = "missing continuation byte";
    // The computed code point is outside the range for UTF-8
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; outside the UTF-8 range
    Utf8ErrorReason["OUT_OF_RANGE"] = "out of UTF-8 range";
    // UTF-8 strings may not contain UTF-16 surrogate pairs
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range
    Utf8ErrorReason["UTF16_SURROGATE"] = "UTF-16 surrogate";
    // The string is an overlong representation
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; already bounds checked
    Utf8ErrorReason["OVERLONG"] = "overlong representation";
})($cde319f07c8777da$export$c285fa6ac15ff6a6 || ($cde319f07c8777da$export$c285fa6ac15ff6a6 = {}));
function $cde319f07c8777da$var$errorFunc(reason, offset, bytes, output, badCodepoint) {
    return $cde319f07c8777da$var$logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
}
function $cde319f07c8777da$var$ignoreFunc(reason, offset, bytes, output, badCodepoint) {
    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes
    if (reason === $cde319f07c8777da$export$c285fa6ac15ff6a6.BAD_PREFIX || reason === $cde319f07c8777da$export$c285fa6ac15ff6a6.UNEXPECTED_CONTINUE) {
        let i = 0;
        for(let o = offset + 1; o < bytes.length; o++){
            if (bytes[o] >> 6 !== 0x02) break;
            i++;
        }
        return i;
    }
    // This byte runs us past the end of the string, so just jump to the end
    // (but the first byte was read already read and therefore skipped)
    if (reason === $cde319f07c8777da$export$c285fa6ac15ff6a6.OVERRUN) return bytes.length - offset - 1;
    // Nothing to skip
    return 0;
}
function $cde319f07c8777da$var$replaceFunc(reason, offset, bytes, output, badCodepoint) {
    // Overlong representations are otherwise "valid" code points; just non-deistingtished
    if (reason === $cde319f07c8777da$export$c285fa6ac15ff6a6.OVERLONG) {
        output.push(badCodepoint);
        return 0;
    }
    // Put the replacement character into the output
    output.push(0xfffd);
    // Otherwise, process as if ignoring errors
    return $cde319f07c8777da$var$ignoreFunc(reason, offset, bytes, output, badCodepoint);
}
const $cde319f07c8777da$export$c6e2180c5bb5bc05 = Object.freeze({
    error: $cde319f07c8777da$var$errorFunc,
    ignore: $cde319f07c8777da$var$ignoreFunc,
    replace: $cde319f07c8777da$var$replaceFunc
});
// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499
function $cde319f07c8777da$var$getUtf8CodePoints(bytes, onError) {
    if (onError == null) onError = $cde319f07c8777da$export$c6e2180c5bb5bc05.error;
    bytes = (0, $eg8oT.arrayify)(bytes);
    const result = [];
    let i = 0;
    // Invalid bytes are ignored
    while(i < bytes.length){
        const c = bytes[i++];
        // 0xxx xxxx
        if (c >> 7 === 0) {
            result.push(c);
            continue;
        }
        // Multibyte; how many bytes left for this character?
        let extraLength = null;
        let overlongMask = null;
        // 110x xxxx 10xx xxxx
        if ((c & 0xe0) === 0xc0) {
            extraLength = 1;
            overlongMask = 0x7f;
        // 1110 xxxx 10xx xxxx 10xx xxxx
        } else if ((c & 0xf0) === 0xe0) {
            extraLength = 2;
            overlongMask = 0x7ff;
        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx
        } else if ((c & 0xf8) === 0xf0) {
            extraLength = 3;
            overlongMask = 0xffff;
        } else {
            if ((c & 0xc0) === 0x80) i += onError($cde319f07c8777da$export$c285fa6ac15ff6a6.UNEXPECTED_CONTINUE, i - 1, bytes, result);
            else i += onError($cde319f07c8777da$export$c285fa6ac15ff6a6.BAD_PREFIX, i - 1, bytes, result);
            continue;
        }
        // Do we have enough bytes in our data?
        if (i - 1 + extraLength >= bytes.length) {
            i += onError($cde319f07c8777da$export$c285fa6ac15ff6a6.OVERRUN, i - 1, bytes, result);
            continue;
        }
        // Remove the length prefix from the char
        let res = c & (1 << 8 - extraLength - 1) - 1;
        for(let j = 0; j < extraLength; j++){
            let nextChar = bytes[i];
            // Invalid continuation byte
            if ((nextChar & 0xc0) != 0x80) {
                i += onError($cde319f07c8777da$export$c285fa6ac15ff6a6.MISSING_CONTINUE, i, bytes, result);
                res = null;
                break;
            }
            res = res << 6 | nextChar & 0x3f;
            i++;
        }
        // See above loop for invalid continuation byte
        if (res === null) continue;
        // Maximum code point
        if (res > 0x10ffff) {
            i += onError($cde319f07c8777da$export$c285fa6ac15ff6a6.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        // Reserved for UTF-16 surrogate halves
        if (res >= 0xd800 && res <= 0xdfff) {
            i += onError($cde319f07c8777da$export$c285fa6ac15ff6a6.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        // Check for overlong sequences (more bytes than needed)
        if (res <= overlongMask) {
            i += onError($cde319f07c8777da$export$c285fa6ac15ff6a6.OVERLONG, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        result.push(res);
    }
    return result;
}
function $cde319f07c8777da$export$8feeb310b4b4752f(str, form = $cde319f07c8777da$export$c6986442964129f5.current) {
    if (form != $cde319f07c8777da$export$c6986442964129f5.current) {
        $cde319f07c8777da$var$logger.checkNormalize();
        str = str.normalize(form);
    }
    let result = [];
    for(let i = 0; i < str.length; i++){
        const c = str.charCodeAt(i);
        if (c < 0x80) result.push(c);
        else if (c < 0x800) {
            result.push(c >> 6 | 0xc0);
            result.push(c & 0x3f | 0x80);
        } else if ((c & 0xfc00) == 0xd800) {
            i++;
            const c2 = str.charCodeAt(i);
            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) throw new Error("invalid utf-8 string");
            // Surrogate Pair
            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);
            result.push(pair >> 18 | 0xf0);
            result.push(pair >> 12 & 0x3f | 0x80);
            result.push(pair >> 6 & 0x3f | 0x80);
            result.push(pair & 0x3f | 0x80);
        } else {
            result.push(c >> 12 | 0xe0);
            result.push(c >> 6 & 0x3f | 0x80);
            result.push(c & 0x3f | 0x80);
        }
    }
    return (0, $eg8oT.arrayify)(result);
}
function $cde319f07c8777da$var$escapeChar(value) {
    const hex = "0000" + value.toString(16);
    return "\\u" + hex.substring(hex.length - 4);
}
function $cde319f07c8777da$export$a7a0ec15960b9055(bytes, onError) {
    return '"' + $cde319f07c8777da$var$getUtf8CodePoints(bytes, onError).map((codePoint)=>{
        if (codePoint < 256) {
            switch(codePoint){
                case 8:
                    return "\\b";
                case 9:
                    return "\\t";
                case 10:
                    return "\\n";
                case 13:
                    return "\\r";
                case 34:
                    return '\\"';
                case 92:
                    return "\\\\";
            }
            if (codePoint >= 32 && codePoint < 127) return String.fromCharCode(codePoint);
        }
        if (codePoint <= 0xffff) return $cde319f07c8777da$var$escapeChar(codePoint);
        codePoint -= 0x10000;
        return $cde319f07c8777da$var$escapeChar((codePoint >> 10 & 0x3ff) + 0xd800) + $cde319f07c8777da$var$escapeChar((codePoint & 0x3ff) + 0xdc00);
    }).join("") + '"';
}
function $cde319f07c8777da$export$232e1dab03132235(codePoints) {
    return codePoints.map((codePoint)=>{
        if (codePoint <= 0xffff) return String.fromCharCode(codePoint);
        codePoint -= 0x10000;
        return String.fromCharCode((codePoint >> 10 & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);
    }).join("");
}
function $cde319f07c8777da$export$7643a1dc2c38d5eb(bytes, onError) {
    return $cde319f07c8777da$export$232e1dab03132235($cde319f07c8777da$var$getUtf8CodePoints(bytes, onError));
}
function $cde319f07c8777da$export$ae470a36a31b28c2(str, form = $cde319f07c8777da$export$c6986442964129f5.current) {
    return $cde319f07c8777da$var$getUtf8CodePoints($cde319f07c8777da$export$8feeb310b4b4752f(str, form));
}



var $gdRew = parcelRequire("gdRew");

var $eg8oT = parcelRequire("eg8oT");
"use strict";
function $dd686f272f8051f8$export$f8151fce47ad1c35(data) {
    return "0x" + (0, (/*@__PURE__*/$parcel$interopDefault($gdRew))).keccak_256((0, $eg8oT.arrayify)(data));
}



var $cbv61 = parcelRequire("cbv61");
const $6c7d8a122a074e25$export$83d89fbfd8236492 = "hash/5.7.0";


/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */ 
/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */ 
var $6s22a = parcelRequire("6s22a");
/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */ // https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js
function $45ef5bab16eb119a$var$flat(array, depth) {
    if (depth == null) depth = 1;
    const result = [];
    const forEach = result.forEach;
    const flatDeep = function(arr, depth) {
        forEach.call(arr, function(val) {
            if (depth > 0 && Array.isArray(val)) flatDeep(val, depth - 1);
            else result.push(val);
        });
    };
    flatDeep(array, depth);
    return result;
}
function $45ef5bab16eb119a$var$fromEntries(array) {
    const result = {};
    for(let i = 0; i < array.length; i++){
        const value = array[i];
        result[value[0]] = value[1];
    }
    return result;
}
function $45ef5bab16eb119a$export$956eeed0f8f2ceff(bytes) {
    let pos = 0;
    function u16() {
        return bytes[pos++] << 8 | bytes[pos++];
    }
    // decode the frequency table
    let symbol_count = u16();
    let total = 1;
    let acc = [
        0,
        1
    ]; // first symbol has frequency 1
    for(let i = 1; i < symbol_count; i++)acc.push(total += u16());
    // skip the sized-payload that the last 3 symbols index into
    let skip = u16();
    let pos_payload = pos;
    pos += skip;
    let read_width = 0;
    let read_buffer = 0;
    function read_bit() {
        if (read_width == 0) {
            // this will read beyond end of buffer
            // but (undefined|0) => zero pad
            read_buffer = read_buffer << 8 | bytes[pos++];
            read_width = 8;
        }
        return read_buffer >> --read_width & 1;
    }
    const N = 31;
    const FULL = Math.pow(2, N);
    const HALF = FULL >>> 1;
    const QRTR = HALF >> 1;
    const MASK = FULL - 1;
    // fill register
    let register = 0;
    for(let i = 0; i < N; i++)register = register << 1 | read_bit();
    let symbols = [];
    let low = 0;
    let range = FULL; // treat like a float
    while(true){
        let value = Math.floor(((register - low + 1) * total - 1) / range);
        let start = 0;
        let end = symbol_count;
        while(end - start > 1){
            let mid = start + end >>> 1;
            if (value < acc[mid]) end = mid;
            else start = mid;
        }
        if (start == 0) break; // first symbol is end mark
        symbols.push(start);
        let a = low + Math.floor(range * acc[start] / total);
        let b = low + Math.floor(range * acc[start + 1] / total) - 1;
        while(((a ^ b) & HALF) == 0){
            register = register << 1 & MASK | read_bit();
            a = a << 1 & MASK;
            b = b << 1 & MASK | 1;
        }
        while(a & ~b & QRTR){
            register = register & HALF | register << 1 & MASK >>> 1 | read_bit();
            a = a << 1 ^ HALF;
            b = (b ^ HALF) << 1 | HALF | 1;
        }
        low = a;
        range = 1 + b - a;
    }
    let offset = symbol_count - 4;
    return symbols.map((x)=>{
        switch(x - offset){
            case 3:
                return offset + 0x10100 + (bytes[pos_payload++] << 16 | bytes[pos_payload++] << 8 | bytes[pos_payload++]);
            case 2:
                return offset + 0x100 + (bytes[pos_payload++] << 8 | bytes[pos_payload++]);
            case 1:
                return offset + bytes[pos_payload++];
            default:
                return x - 1;
        }
    });
}
function $45ef5bab16eb119a$export$2cda812f22276871(v) {
    let pos = 0;
    return ()=>v[pos++];
}
function $45ef5bab16eb119a$export$671d8b4ebc0c42ad(bytes) {
    return $45ef5bab16eb119a$export$2cda812f22276871($45ef5bab16eb119a$export$956eeed0f8f2ceff(bytes));
}
function $45ef5bab16eb119a$export$a785de3a2a8dd1aa(i) {
    return i & 1 ? ~i >> 1 : i >> 1;
}
function $45ef5bab16eb119a$var$read_counts(n, next) {
    let v = Array(n);
    for(let i = 0; i < n; i++)v[i] = 1 + next();
    return v;
}
function $45ef5bab16eb119a$var$read_ascending(n, next) {
    let v = Array(n);
    for(let i = 0, x = -1; i < n; i++)v[i] = x += 1 + next();
    return v;
}
function $45ef5bab16eb119a$var$read_deltas(n, next) {
    let v = Array(n);
    for(let i = 0, x = 0; i < n; i++)v[i] = x += $45ef5bab16eb119a$export$a785de3a2a8dd1aa(next());
    return v;
}
function $45ef5bab16eb119a$export$9303bf4e1ede4914(next, lookup) {
    let v = $45ef5bab16eb119a$var$read_ascending(next(), next);
    let n = next();
    let vX = $45ef5bab16eb119a$var$read_ascending(n, next);
    let vN = $45ef5bab16eb119a$var$read_counts(n, next);
    for(let i = 0; i < n; i++)for(let j = 0; j < vN[i]; j++)v.push(vX[i] + j);
    return lookup ? v.map((x)=>lookup[x]) : v;
}
function $45ef5bab16eb119a$export$824d00fb01c38bd9(next) {
    let ret = [];
    while(true){
        let w = next();
        if (w == 0) break;
        ret.push($45ef5bab16eb119a$var$read_linear_table(w, next));
    }
    while(true){
        let w = next() - 1;
        if (w < 0) break;
        ret.push($45ef5bab16eb119a$var$read_replacement_table(w, next));
    }
    return $45ef5bab16eb119a$var$fromEntries($45ef5bab16eb119a$var$flat(ret));
}
function $45ef5bab16eb119a$export$e9011071590ab431(next) {
    let v = [];
    while(true){
        let i = next();
        if (i == 0) break;
        v.push(i);
    }
    return v;
}
function $45ef5bab16eb119a$var$read_transposed(n, w, next) {
    let m = Array(n).fill(undefined).map(()=>[]);
    for(let i = 0; i < w; i++)$45ef5bab16eb119a$var$read_deltas(n, next).forEach((x, j)=>m[j].push(x));
    return m;
}
function $45ef5bab16eb119a$var$read_linear_table(w, next) {
    let dx = 1 + next();
    let dy = next();
    let vN = $45ef5bab16eb119a$export$e9011071590ab431(next);
    let m = $45ef5bab16eb119a$var$read_transposed(vN.length, 1 + w, next);
    return $45ef5bab16eb119a$var$flat(m.map((v, i)=>{
        const x = v[0], ys = v.slice(1);
        //let [x, ...ys] = v;
        //return Array(vN[i]).fill().map((_, j) => {
        return Array(vN[i]).fill(undefined).map((_, j)=>{
            let j_dy = j * dy;
            return [
                x + j * dx,
                ys.map((y)=>y + j_dy)
            ];
        });
    }));
}
function $45ef5bab16eb119a$var$read_replacement_table(w, next) {
    let n = 1 + next();
    let m = $45ef5bab16eb119a$var$read_transposed(n, 1 + w, next);
    return m.map((v)=>[
            v[0],
            v.slice(1)
        ]);
}
function $45ef5bab16eb119a$export$d7b24c6ce369e1b7(next) {
    let sorted = $45ef5bab16eb119a$export$9303bf4e1ede4914(next).sort((a, b)=>a - b);
    return read();
    function read() {
        let branches = [];
        while(true){
            let keys = $45ef5bab16eb119a$export$9303bf4e1ede4914(next, sorted);
            if (keys.length == 0) break;
            branches.push({
                set: new Set(keys),
                node: read()
            });
        }
        branches.sort((a, b)=>b.set.size - a.set.size); // sort by likelihood
        let temp = next();
        let valid = temp % 3;
        temp = temp / 3 | 0;
        let fe0f = !!(temp & 1);
        temp >>= 1;
        let save = temp == 1;
        let check = temp == 2;
        return {
            branches: branches,
            valid: valid,
            fe0f: fe0f,
            save: save,
            check: check
        };
    }
}


function $e186620f9bff9bbe$export$7a171f172be0782e() {
    return (0, $45ef5bab16eb119a$export$671d8b4ebc0c42ad)((0, $6s22a.decode)(""));
}



const $764c03bc19059b64$var$r = (0, $e186620f9bff9bbe$export$7a171f172be0782e)();
// @TODO: This should be lazily loaded
const $764c03bc19059b64$var$VALID = new Set((0, $45ef5bab16eb119a$export$9303bf4e1ede4914)($764c03bc19059b64$var$r));
const $764c03bc19059b64$var$IGNORED = new Set((0, $45ef5bab16eb119a$export$9303bf4e1ede4914)($764c03bc19059b64$var$r));
const $764c03bc19059b64$var$MAPPED = (0, $45ef5bab16eb119a$export$824d00fb01c38bd9)($764c03bc19059b64$var$r);
const $764c03bc19059b64$var$EMOJI_ROOT = (0, $45ef5bab16eb119a$export$d7b24c6ce369e1b7)($764c03bc19059b64$var$r);
//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));
//const STOP = 0x2E;
const $764c03bc19059b64$var$HYPHEN = 0x2D;
const $764c03bc19059b64$var$UNDERSCORE = 0x5F;
function $764c03bc19059b64$var$explode_cp(name) {
    return (0, $cde319f07c8777da$export$ae470a36a31b28c2)(name);
}
function $764c03bc19059b64$var$filter_fe0f(cps) {
    return cps.filter((cp)=>cp != 0xFE0F);
}
function $764c03bc19059b64$export$5252e54b57fcf4fd(name) {
    for (let label of name.split(".")){
        let cps = $764c03bc19059b64$var$explode_cp(label);
        try {
            for(let i = cps.lastIndexOf($764c03bc19059b64$var$UNDERSCORE) - 1; i >= 0; i--){
                if (cps[i] !== $764c03bc19059b64$var$UNDERSCORE) throw new Error(`underscore only allowed at start`);
            }
            if (cps.length >= 4 && cps.every((cp)=>cp < 0x80) && cps[2] === $764c03bc19059b64$var$HYPHEN && cps[3] === $764c03bc19059b64$var$HYPHEN) throw new Error(`invalid label extension`);
        } catch (err) {
            throw new Error(`Invalid label "${label}": ${err.message}`);
        }
    }
    return name;
}
function $764c03bc19059b64$export$499f715881831a51(name) {
    return $764c03bc19059b64$export$5252e54b57fcf4fd($764c03bc19059b64$var$normalize(name, $764c03bc19059b64$var$filter_fe0f));
}
function $764c03bc19059b64$var$normalize(name, emoji_filter) {
    let input = $764c03bc19059b64$var$explode_cp(name).reverse(); // flip for pop
    let output = [];
    while(input.length){
        let emoji = $764c03bc19059b64$var$consume_emoji_reversed(input);
        if (emoji) {
            output.push(...emoji_filter(emoji));
            continue;
        }
        let cp = input.pop();
        if ($764c03bc19059b64$var$VALID.has(cp)) {
            output.push(cp);
            continue;
        }
        if ($764c03bc19059b64$var$IGNORED.has(cp)) continue;
        let cps = $764c03bc19059b64$var$MAPPED[cp];
        if (cps) {
            output.push(...cps);
            continue;
        }
        throw new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);
    }
    return $764c03bc19059b64$export$5252e54b57fcf4fd($764c03bc19059b64$var$nfc(String.fromCodePoint(...output)));
}
function $764c03bc19059b64$var$nfc(s) {
    return s.normalize("NFC");
}
function $764c03bc19059b64$var$consume_emoji_reversed(cps, eaten) {
    var _a;
    let node = $764c03bc19059b64$var$EMOJI_ROOT;
    let emoji;
    let saved;
    let stack = [];
    let pos = cps.length;
    if (eaten) eaten.length = 0; // clear input buffer (if needed)
    while(pos){
        let cp = cps[--pos];
        node = (_a = node.branches.find((x)=>x.set.has(cp))) === null || _a === void 0 ? void 0 : _a.node;
        if (!node) break;
        if (node.save) saved = cp;
        else if (node.check) {
            if (cp === saved) break;
        }
        stack.push(cp);
        if (node.fe0f) {
            stack.push(0xFE0F);
            if (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F
        }
        if (node.valid) {
            emoji = stack.slice(); // copy stack
            if (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)
            if (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)
            cps.length = pos; // truncate
        }
    }
    return emoji;
}


const $ce31ee151995bdb4$var$logger = new (0, $cbv61.Logger)((0, $6c7d8a122a074e25$export$83d89fbfd8236492));
const $ce31ee151995bdb4$var$Zeros = new Uint8Array(32);
$ce31ee151995bdb4$var$Zeros.fill(0);
function $ce31ee151995bdb4$var$checkComponent(comp) {
    if (comp.length === 0) throw new Error("invalid ENS name; empty component");
    return comp;
}
function $ce31ee151995bdb4$var$ensNameSplit(name) {
    const bytes = (0, $cde319f07c8777da$export$8feeb310b4b4752f)((0, $764c03bc19059b64$export$499f715881831a51)(name));
    const comps = [];
    if (name.length === 0) return comps;
    let last = 0;
    for(let i = 0; i < bytes.length; i++){
        const d = bytes[i];
        // A separator (i.e. "."); copy this component
        if (d === 0x2e) {
            comps.push($ce31ee151995bdb4$var$checkComponent(bytes.slice(last, i)));
            last = i + 1;
        }
    }
    // There was a stray separator at the end of the name
    if (last >= bytes.length) throw new Error("invalid ENS name; empty component");
    comps.push($ce31ee151995bdb4$var$checkComponent(bytes.slice(last)));
    return comps;
}
function $ce31ee151995bdb4$export$5f232fd2f1a1e8ac(name) {
    return $ce31ee151995bdb4$var$ensNameSplit(name).map((comp)=>(0, $cde319f07c8777da$export$7643a1dc2c38d5eb)(comp)).join(".");
}
function $ce31ee151995bdb4$export$cce2300886e7ace6(name) {
    try {
        return $ce31ee151995bdb4$var$ensNameSplit(name).length !== 0;
    } catch (error) {}
    return false;
}
function $ce31ee151995bdb4$export$91d651ee363e1209(name) {
    /* istanbul ignore if */ if (typeof name !== "string") $ce31ee151995bdb4$var$logger.throwArgumentError("invalid ENS name; not a string", "name", name);
    let result = $ce31ee151995bdb4$var$Zeros;
    const comps = $ce31ee151995bdb4$var$ensNameSplit(name);
    while(comps.length)result = (0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $eg8oT.concat)([
        result,
        (0, $dd686f272f8051f8$export$f8151fce47ad1c35)(comps.pop())
    ]));
    return (0, $eg8oT.hexlify)(result);
}
function $ce31ee151995bdb4$export$6c0a8cdae51cb512(name) {
    return (0, $eg8oT.hexlify)((0, $eg8oT.concat)($ce31ee151995bdb4$var$ensNameSplit(name).map((comp)=>{
        // DNS does not allow components over 63 bytes in length
        if (comp.length > 63) throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
        const bytes = new Uint8Array(comp.length + 1);
        bytes.set(comp, 1);
        bytes[0] = bytes.length - 1;
        return bytes;
    }))) + "00";
}




var $8419e017f3d4d0cb$exports = {};
var $8419e017f3d4d0cb$var$hash = $8419e017f3d4d0cb$exports;

$8419e017f3d4d0cb$var$hash.utils = (parcelRequire("gaF16"));

$8419e017f3d4d0cb$var$hash.common = (parcelRequire("eHcpu"));

$8419e017f3d4d0cb$var$hash.sha = (parcelRequire("bUUae"));

$8419e017f3d4d0cb$var$hash.ripemd = (parcelRequire("esq6A"));

$8419e017f3d4d0cb$var$hash.hmac = (parcelRequire("ldnBw"));
// Proxy hash functions to the main object
$8419e017f3d4d0cb$var$hash.sha1 = $8419e017f3d4d0cb$var$hash.sha.sha1;
$8419e017f3d4d0cb$var$hash.sha256 = $8419e017f3d4d0cb$var$hash.sha.sha256;
$8419e017f3d4d0cb$var$hash.sha224 = $8419e017f3d4d0cb$var$hash.sha.sha224;
$8419e017f3d4d0cb$var$hash.sha384 = $8419e017f3d4d0cb$var$hash.sha.sha384;
$8419e017f3d4d0cb$var$hash.sha512 = $8419e017f3d4d0cb$var$hash.sha.sha512;
$8419e017f3d4d0cb$var$hash.ripemd160 = $8419e017f3d4d0cb$var$hash.ripemd.ripemd160;



var $eg8oT = parcelRequire("eg8oT");
var $acdfd7c13cce7a9a$export$d2a8849cfb277c;
(function(SupportedAlgorithm) {
    SupportedAlgorithm["sha256"] = "sha256";
    SupportedAlgorithm["sha512"] = "sha512";
})($acdfd7c13cce7a9a$export$d2a8849cfb277c || ($acdfd7c13cce7a9a$export$d2a8849cfb277c = {}));



var $cbv61 = parcelRequire("cbv61");
const $60ff8a765115606f$export$83d89fbfd8236492 = "sha2/5.7.0";


"use strict";
const $cdc53f4b1672f85d$var$logger = new (0, $cbv61.Logger)((0, $60ff8a765115606f$export$83d89fbfd8236492));
function $cdc53f4b1672f85d$export$d1cea0ee4e3f0d3e(data) {
    return "0x" + (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).ripemd160().update((0, $eg8oT.arrayify)(data)).digest("hex");
}
function $cdc53f4b1672f85d$export$bced8d2aada2d1c9(data) {
    return "0x" + (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha256().update((0, $eg8oT.arrayify)(data)).digest("hex");
}
function $cdc53f4b1672f85d$export$a888d2532e6dc7bb(data) {
    return "0x" + (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha512().update((0, $eg8oT.arrayify)(data)).digest("hex");
}
function $cdc53f4b1672f85d$export$967075d2f3b8e7ff(algorithm, key, data) {
    if (!(0, $acdfd7c13cce7a9a$export$d2a8849cfb277c)[algorithm]) $cdc53f4b1672f85d$var$logger.throwError("unsupported algorithm " + algorithm, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
        operation: "hmac",
        algorithm: algorithm
    });
    return "0x" + (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).hmac((0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports)))[algorithm], (0, $eg8oT.arrayify)(key)).update((0, $eg8oT.arrayify)(data)).digest("hex");
}



var $68f1849f3b633900$exports = {};

$parcel$export($68f1849f3b633900$exports, "_fetchData", () => $68f1849f3b633900$export$e37fa27017c6c012, (v) => $68f1849f3b633900$export$e37fa27017c6c012 = v);
$parcel$export($68f1849f3b633900$exports, "fetchJson", () => $68f1849f3b633900$export$6d71b655afe1638d, (v) => $68f1849f3b633900$export$6d71b655afe1638d = v);
$parcel$export($68f1849f3b633900$exports, "poll", () => $68f1849f3b633900$export$e0c10349b2c5e1d4, (v) => $68f1849f3b633900$export$e0c10349b2c5e1d4 = v);

var $6s22a = parcelRequire("6s22a");

var $eg8oT = parcelRequire("eg8oT");



var $cbv61 = parcelRequire("cbv61");
const $240a035d17e03034$export$83d89fbfd8236492 = "web/5.7.1";


var $ebd07662a05a0720$exports = {};

$parcel$export($ebd07662a05a0720$exports, "getUrl", () => $ebd07662a05a0720$export$94df0e59ebebf4a7, (v) => $ebd07662a05a0720$export$94df0e59ebebf4a7 = v);

var $eg8oT = parcelRequire("eg8oT");
"use strict";
var $ebd07662a05a0720$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
function $ebd07662a05a0720$export$94df0e59ebebf4a7(href, options) {
    return $ebd07662a05a0720$var$__awaiter(this, void 0, void 0, function*() {
        if (options == null) options = {};
        const request = {
            method: options.method || "GET",
            headers: options.headers || {},
            body: options.body || undefined
        };
        if (options.skipFetchSetup !== true) {
            request.mode = "cors"; // no-cors, cors, *same-origin
            request.cache = "no-cache"; // *default, no-cache, reload, force-cache, only-if-cached
            request.credentials = "same-origin"; // include, *same-origin, omit
            request.redirect = "follow"; // manual, *follow, error
            request.referrer = "client"; // no-referrer, *client
        }
        if (options.fetchOptions != null) {
            const opts = options.fetchOptions;
            if (opts.mode) request.mode = opts.mode;
            if (opts.cache) request.cache = opts.cache;
            if (opts.credentials) request.credentials = opts.credentials;
            if (opts.redirect) request.redirect = opts.redirect;
            if (opts.referrer) request.referrer = opts.referrer;
        }
        const response = yield fetch(href, request);
        const body = yield response.arrayBuffer();
        const headers = {};
        if (response.headers.forEach) response.headers.forEach((value, key)=>{
            headers[key.toLowerCase()] = value;
        });
        else response.headers.keys().forEach((key)=>{
            headers[key.toLowerCase()] = response.headers.get(key);
        });
        return {
            headers: headers,
            statusCode: response.status,
            statusMessage: response.statusText,
            body: (0, $eg8oT.arrayify)(new Uint8Array(body))
        };
    });
}


"use strict";
var $68f1849f3b633900$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $68f1849f3b633900$var$logger = new (0, $cbv61.Logger)((0, $240a035d17e03034$export$83d89fbfd8236492));
function $68f1849f3b633900$var$staller(duration) {
    return new Promise((resolve)=>{
        setTimeout(resolve, duration);
    });
}
function $68f1849f3b633900$var$bodyify(value, type) {
    if (value == null) return null;
    if (typeof value === "string") return value;
    if ((0, $eg8oT.isBytesLike)(value)) {
        if (type && (type.split("/")[0] === "text" || type.split(";")[0].trim() === "application/json")) try {
            return (0, $cde319f07c8777da$export$7643a1dc2c38d5eb)(value);
        } catch (error) {}
        return (0, $eg8oT.hexlify)(value);
    }
    return value;
}
function $68f1849f3b633900$var$unpercent(value) {
    return (0, $cde319f07c8777da$export$8feeb310b4b4752f)(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code)=>{
        return String.fromCharCode(parseInt(code, 16));
    }));
}
function $68f1849f3b633900$export$e37fa27017c6c012(connection, body, processFunc) {
    // How many times to retry in the event of a throttle
    const attemptLimit = typeof connection === "object" && connection.throttleLimit != null ? connection.throttleLimit : 12;
    $68f1849f3b633900$var$logger.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
    const throttleCallback = typeof connection === "object" ? connection.throttleCallback : null;
    const throttleSlotInterval = typeof connection === "object" && typeof connection.throttleSlotInterval === "number" ? connection.throttleSlotInterval : 100;
    $68f1849f3b633900$var$logger.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
    const errorPassThrough = typeof connection === "object" ? !!connection.errorPassThrough : false;
    const headers = {};
    let url = null;
    // @TODO: Allow ConnectionInfo to override some of these values
    const options = {
        method: "GET"
    };
    let allow304 = false;
    let timeout = 120000;
    if (typeof connection === "string") url = connection;
    else if (typeof connection === "object") {
        if (connection == null || connection.url == null) $68f1849f3b633900$var$logger.throwArgumentError("missing URL", "connection.url", connection);
        url = connection.url;
        if (typeof connection.timeout === "number" && connection.timeout > 0) timeout = connection.timeout;
        if (connection.headers) for(const key in connection.headers){
            headers[key.toLowerCase()] = {
                key: key,
                value: String(connection.headers[key])
            };
            if ([
                "if-none-match",
                "if-modified-since"
            ].indexOf(key.toLowerCase()) >= 0) allow304 = true;
        }
        options.allowGzip = !!connection.allowGzip;
        if (connection.user != null && connection.password != null) {
            if (url.substring(0, 6) !== "https:" && connection.allowInsecureAuthentication !== true) $68f1849f3b633900$var$logger.throwError("basic authentication requires a secure https url", (0, $cbv61.Logger).errors.INVALID_ARGUMENT, {
                argument: "url",
                url: url,
                user: connection.user,
                password: "[REDACTED]"
            });
            const authorization = connection.user + ":" + connection.password;
            headers["authorization"] = {
                key: "Authorization",
                value: "Basic " + (0, $6s22a.encode)((0, $cde319f07c8777da$export$8feeb310b4b4752f)(authorization))
            };
        }
        if (connection.skipFetchSetup != null) options.skipFetchSetup = !!connection.skipFetchSetup;
        if (connection.fetchOptions != null) options.fetchOptions = (0, $b19fb92a27e5f35f$exports.shallowCopy)(connection.fetchOptions);
    }
    const reData = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i");
    const dataMatch = url ? url.match(reData) : null;
    if (dataMatch) try {
        const response = {
            statusCode: 200,
            statusMessage: "OK",
            headers: {
                "content-type": dataMatch[1] || "text/plain"
            },
            body: dataMatch[2] ? (0, $6s22a.decode)(dataMatch[3]) : $68f1849f3b633900$var$unpercent(dataMatch[3])
        };
        let result = response.body;
        if (processFunc) result = processFunc(response.body, response);
        return Promise.resolve(result);
    } catch (error) {
        $68f1849f3b633900$var$logger.throwError("processing response error", (0, $cbv61.Logger).errors.SERVER_ERROR, {
            body: $68f1849f3b633900$var$bodyify(dataMatch[1], dataMatch[2]),
            error: error,
            requestBody: null,
            requestMethod: "GET",
            url: url
        });
    }
    if (body) {
        options.method = "POST";
        options.body = body;
        if (headers["content-type"] == null) headers["content-type"] = {
            key: "Content-Type",
            value: "application/octet-stream"
        };
        if (headers["content-length"] == null) headers["content-length"] = {
            key: "Content-Length",
            value: String(body.length)
        };
    }
    const flatHeaders = {};
    Object.keys(headers).forEach((key)=>{
        const header = headers[key];
        flatHeaders[header.key] = header.value;
    });
    options.headers = flatHeaders;
    const runningTimeout = function() {
        let timer = null;
        const promise = new Promise(function(resolve, reject) {
            if (timeout) timer = setTimeout(()=>{
                if (timer == null) return;
                timer = null;
                reject($68f1849f3b633900$var$logger.makeError("timeout", (0, $cbv61.Logger).errors.TIMEOUT, {
                    requestBody: $68f1849f3b633900$var$bodyify(options.body, flatHeaders["content-type"]),
                    requestMethod: options.method,
                    timeout: timeout,
                    url: url
                }));
            }, timeout);
        });
        const cancel = function() {
            if (timer == null) return;
            clearTimeout(timer);
            timer = null;
        };
        return {
            promise: promise,
            cancel: cancel
        };
    }();
    const runningFetch = function() {
        return $68f1849f3b633900$var$__awaiter(this, void 0, void 0, function*() {
            for(let attempt = 0; attempt < attemptLimit; attempt++){
                let response = null;
                try {
                    response = yield (0, $ebd07662a05a0720$exports.getUrl)(url, options);
                    if (attempt < attemptLimit) {
                        if (response.statusCode === 301 || response.statusCode === 302) {
                            // Redirection; for now we only support absolute locataions
                            const location = response.headers.location || "";
                            if (options.method === "GET" && location.match(/^https:/)) {
                                url = response.headers.location;
                                continue;
                            }
                        } else if (response.statusCode === 429) {
                            // Exponential back-off throttling
                            let tryAgain = true;
                            if (throttleCallback) tryAgain = yield throttleCallback(attempt, url);
                            if (tryAgain) {
                                let stall = 0;
                                const retryAfter = response.headers["retry-after"];
                                if (typeof retryAfter === "string" && retryAfter.match(/^[1-9][0-9]*$/)) stall = parseInt(retryAfter) * 1000;
                                else stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                                //console.log("Stalling 429");
                                yield $68f1849f3b633900$var$staller(stall);
                                continue;
                            }
                        }
                    }
                } catch (error) {
                    response = error.response;
                    if (response == null) {
                        runningTimeout.cancel();
                        $68f1849f3b633900$var$logger.throwError("missing response", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                            requestBody: $68f1849f3b633900$var$bodyify(options.body, flatHeaders["content-type"]),
                            requestMethod: options.method,
                            serverError: error,
                            url: url
                        });
                    }
                }
                let body = response.body;
                if (allow304 && response.statusCode === 304) body = null;
                else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {
                    runningTimeout.cancel();
                    $68f1849f3b633900$var$logger.throwError("bad response", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                        status: response.statusCode,
                        headers: response.headers,
                        body: $68f1849f3b633900$var$bodyify(body, response.headers ? response.headers["content-type"] : null),
                        requestBody: $68f1849f3b633900$var$bodyify(options.body, flatHeaders["content-type"]),
                        requestMethod: options.method,
                        url: url
                    });
                }
                if (processFunc) try {
                    const result = yield processFunc(body, response);
                    runningTimeout.cancel();
                    return result;
                } catch (error) {
                    // Allow the processFunc to trigger a throttle
                    if (error.throttleRetry && attempt < attemptLimit) {
                        let tryAgain = true;
                        if (throttleCallback) tryAgain = yield throttleCallback(attempt, url);
                        if (tryAgain) {
                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                            //console.log("Stalling callback");
                            yield $68f1849f3b633900$var$staller(timeout);
                            continue;
                        }
                    }
                    runningTimeout.cancel();
                    $68f1849f3b633900$var$logger.throwError("processing response error", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                        body: $68f1849f3b633900$var$bodyify(body, response.headers ? response.headers["content-type"] : null),
                        error: error,
                        requestBody: $68f1849f3b633900$var$bodyify(options.body, flatHeaders["content-type"]),
                        requestMethod: options.method,
                        url: url
                    });
                }
                runningTimeout.cancel();
                // If we had a processFunc, it either returned a T or threw above.
                // The "body" is now a Uint8Array.
                return body;
            }
            return $68f1849f3b633900$var$logger.throwError("failed response", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                requestBody: $68f1849f3b633900$var$bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url: url
            });
        });
    }();
    return Promise.race([
        runningTimeout.promise,
        runningFetch
    ]);
}
function $68f1849f3b633900$export$6d71b655afe1638d(connection, json, processFunc) {
    let processJsonFunc = (value, response)=>{
        let result = null;
        if (value != null) try {
            result = JSON.parse((0, $cde319f07c8777da$export$7643a1dc2c38d5eb)(value));
        } catch (error) {
            $68f1849f3b633900$var$logger.throwError("invalid JSON", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                body: value,
                error: error
            });
        }
        if (processFunc) result = processFunc(result, response);
        return result;
    };
    // If we have json to send, we must
    // - add content-type of application/json (unless already overridden)
    // - convert the json to bytes
    let body = null;
    if (json != null) {
        body = (0, $cde319f07c8777da$export$8feeb310b4b4752f)(json);
        // Create a connection with the content-type set for JSON
        const updated = typeof connection === "string" ? {
            url: connection
        } : (0, $b19fb92a27e5f35f$exports.shallowCopy)(connection);
        if (updated.headers) {
            const hasContentType = Object.keys(updated.headers).filter((k)=>k.toLowerCase() === "content-type").length !== 0;
            if (!hasContentType) {
                updated.headers = (0, $b19fb92a27e5f35f$exports.shallowCopy)(updated.headers);
                updated.headers["content-type"] = "application/json";
            }
        } else updated.headers = {
            "content-type": "application/json"
        };
        connection = updated;
    }
    return $68f1849f3b633900$export$e37fa27017c6c012(connection, body, processJsonFunc);
}
function $68f1849f3b633900$export$e0c10349b2c5e1d4(func, options) {
    if (!options) options = {};
    options = (0, $b19fb92a27e5f35f$exports.shallowCopy)(options);
    if (options.floor == null) options.floor = 0;
    if (options.ceiling == null) options.ceiling = 10000;
    if (options.interval == null) options.interval = 250;
    return new Promise(function(resolve, reject) {
        let timer = null;
        let done = false;
        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.
        const cancel = ()=>{
            if (done) return false;
            done = true;
            if (timer) clearTimeout(timer);
            return true;
        };
        if (options.timeout) timer = setTimeout(()=>{
            if (cancel()) reject(new Error("timeout"));
        }, options.timeout);
        const retryLimit = options.retryLimit;
        let attempt = 0;
        function check() {
            return func().then(function(result) {
                // If we have a result, or are allowed null then we're done
                if (result !== undefined) {
                    if (cancel()) resolve(result);
                } else if (options.oncePoll) options.oncePoll.once("poll", check);
                else if (options.onceBlock) options.onceBlock.once("block", check);
                else if (!done) {
                    attempt++;
                    if (attempt > retryLimit) {
                        if (cancel()) reject(new Error("retry limit reached"));
                        return;
                    }
                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                    if (timeout < options.floor) timeout = options.floor;
                    if (timeout > options.ceiling) timeout = options.ceiling;
                    setTimeout(check, timeout);
                }
                return null;
            }, function(error) {
                if (cancel()) reject(error);
            });
        }
        check();
    });
}


var $696f60cb4808b190$exports = {};
"use strict";
var $696f60cb4808b190$var$ALPHABET = "qpzry9x8gf2tvdw0s3jn54khce6mua7l";
// pre-compute lookup table
var $696f60cb4808b190$var$ALPHABET_MAP = {};
for(var $696f60cb4808b190$var$z = 0; $696f60cb4808b190$var$z < $696f60cb4808b190$var$ALPHABET.length; $696f60cb4808b190$var$z++){
    var $696f60cb4808b190$var$x = $696f60cb4808b190$var$ALPHABET.charAt($696f60cb4808b190$var$z);
    if ($696f60cb4808b190$var$ALPHABET_MAP[$696f60cb4808b190$var$x] !== undefined) throw new TypeError($696f60cb4808b190$var$x + " is ambiguous");
    $696f60cb4808b190$var$ALPHABET_MAP[$696f60cb4808b190$var$x] = $696f60cb4808b190$var$z;
}
function $696f60cb4808b190$var$polymodStep(pre) {
    var b = pre >> 25;
    return (pre & 0x1FFFFFF) << 5 ^ -(b >> 0 & 1) & 0x3b6a57b2 ^ -(b >> 1 & 1) & 0x26508e6d ^ -(b >> 2 & 1) & 0x1ea119fa ^ -(b >> 3 & 1) & 0x3d4233dd ^ -(b >> 4 & 1) & 0x2a1462b3;
}
function $696f60cb4808b190$var$prefixChk(prefix) {
    var chk = 1;
    for(var i = 0; i < prefix.length; ++i){
        var c = prefix.charCodeAt(i);
        if (c < 33 || c > 126) return "Invalid prefix (" + prefix + ")";
        chk = $696f60cb4808b190$var$polymodStep(chk) ^ c >> 5;
    }
    chk = $696f60cb4808b190$var$polymodStep(chk);
    for(i = 0; i < prefix.length; ++i){
        var v = prefix.charCodeAt(i);
        chk = $696f60cb4808b190$var$polymodStep(chk) ^ v & 0x1f;
    }
    return chk;
}
function $696f60cb4808b190$var$encode(prefix, words, LIMIT) {
    LIMIT = LIMIT || 90;
    if (prefix.length + 7 + words.length > LIMIT) throw new TypeError("Exceeds length limit");
    prefix = prefix.toLowerCase();
    // determine chk mod
    var chk = $696f60cb4808b190$var$prefixChk(prefix);
    if (typeof chk === "string") throw new Error(chk);
    var result = prefix + "1";
    for(var i = 0; i < words.length; ++i){
        var x = words[i];
        if (x >> 5 !== 0) throw new Error("Non 5-bit word");
        chk = $696f60cb4808b190$var$polymodStep(chk) ^ x;
        result += $696f60cb4808b190$var$ALPHABET.charAt(x);
    }
    for(i = 0; i < 6; ++i)chk = $696f60cb4808b190$var$polymodStep(chk);
    chk ^= 1;
    for(i = 0; i < 6; ++i){
        var v = chk >> (5 - i) * 5 & 0x1f;
        result += $696f60cb4808b190$var$ALPHABET.charAt(v);
    }
    return result;
}
function $696f60cb4808b190$var$__decode(str, LIMIT) {
    LIMIT = LIMIT || 90;
    if (str.length < 8) return str + " too short";
    if (str.length > LIMIT) return "Exceeds length limit";
    // don't allow mixed case
    var lowered = str.toLowerCase();
    var uppered = str.toUpperCase();
    if (str !== lowered && str !== uppered) return "Mixed-case string " + str;
    str = lowered;
    var split = str.lastIndexOf("1");
    if (split === -1) return "No separator character for " + str;
    if (split === 0) return "Missing prefix for " + str;
    var prefix = str.slice(0, split);
    var wordChars = str.slice(split + 1);
    if (wordChars.length < 6) return "Data too short";
    var chk = $696f60cb4808b190$var$prefixChk(prefix);
    if (typeof chk === "string") return chk;
    var words = [];
    for(var i = 0; i < wordChars.length; ++i){
        var c = wordChars.charAt(i);
        var v = $696f60cb4808b190$var$ALPHABET_MAP[c];
        if (v === undefined) return "Unknown character " + c;
        chk = $696f60cb4808b190$var$polymodStep(chk) ^ v;
        // not in the checksum?
        if (i + 6 >= wordChars.length) continue;
        words.push(v);
    }
    if (chk !== 1) return "Invalid checksum for " + str;
    return {
        prefix: prefix,
        words: words
    };
}
function $696f60cb4808b190$var$decodeUnsafe() {
    var res = $696f60cb4808b190$var$__decode.apply(null, arguments);
    if (typeof res === "object") return res;
}
function $696f60cb4808b190$var$decode(str) {
    var res = $696f60cb4808b190$var$__decode.apply(null, arguments);
    if (typeof res === "object") return res;
    throw new Error(res);
}
function $696f60cb4808b190$var$convert(data, inBits, outBits, pad) {
    var value = 0;
    var bits = 0;
    var maxV = (1 << outBits) - 1;
    var result = [];
    for(var i = 0; i < data.length; ++i){
        value = value << inBits | data[i];
        bits += inBits;
        while(bits >= outBits){
            bits -= outBits;
            result.push(value >> bits & maxV);
        }
    }
    if (pad) {
        if (bits > 0) result.push(value << outBits - bits & maxV);
    } else {
        if (bits >= inBits) return "Excess padding";
        if (value << outBits - bits & maxV) return "Non-zero padding";
    }
    return result;
}
function $696f60cb4808b190$var$toWordsUnsafe(bytes) {
    var res = $696f60cb4808b190$var$convert(bytes, 8, 5, true);
    if (Array.isArray(res)) return res;
}
function $696f60cb4808b190$var$toWords(bytes) {
    var res = $696f60cb4808b190$var$convert(bytes, 8, 5, true);
    if (Array.isArray(res)) return res;
    throw new Error(res);
}
function $696f60cb4808b190$var$fromWordsUnsafe(words) {
    var res = $696f60cb4808b190$var$convert(words, 5, 8, false);
    if (Array.isArray(res)) return res;
}
function $696f60cb4808b190$var$fromWords(words) {
    var res = $696f60cb4808b190$var$convert(words, 5, 8, false);
    if (Array.isArray(res)) return res;
    throw new Error(res);
}
$696f60cb4808b190$exports = {
    decodeUnsafe: $696f60cb4808b190$var$decodeUnsafe,
    decode: $696f60cb4808b190$var$decode,
    encode: $696f60cb4808b190$var$encode,
    toWordsUnsafe: $696f60cb4808b190$var$toWordsUnsafe,
    toWords: $696f60cb4808b190$var$toWords,
    fromWordsUnsafe: $696f60cb4808b190$var$fromWordsUnsafe,
    fromWords: $696f60cb4808b190$var$fromWords
};



var $cbv61 = parcelRequire("cbv61");
const $7d273a805b01cc1c$export$83d89fbfd8236492 = "providers/5.7.2";



var $eg8oT = parcelRequire("eg8oT");



var $4G7Hv = parcelRequire("4G7Hv");

var $cbv61 = parcelRequire("cbv61");
const $2e5a2d8bbac326b4$export$83d89fbfd8236492 = "address/5.7.0";


"use strict";
const $8b38701037b2e5d8$var$logger = new (0, $cbv61.Logger)((0, $2e5a2d8bbac326b4$export$83d89fbfd8236492));
function $8b38701037b2e5d8$var$getChecksumAddress(address) {
    if (!(0, $eg8oT.isHexString)(address, 20)) $8b38701037b2e5d8$var$logger.throwArgumentError("invalid address", "address", address);
    address = address.toLowerCase();
    const chars = address.substring(2).split("");
    const expanded = new Uint8Array(40);
    for(let i = 0; i < 40; i++)expanded[i] = chars[i].charCodeAt(0);
    const hashed = (0, $eg8oT.arrayify)((0, $dd686f272f8051f8$export$f8151fce47ad1c35)(expanded));
    for(let i = 0; i < 40; i += 2){
        if (hashed[i >> 1] >> 4 >= 8) chars[i] = chars[i].toUpperCase();
        if ((hashed[i >> 1] & 0x0f) >= 8) chars[i + 1] = chars[i + 1].toUpperCase();
    }
    return "0x" + chars.join("");
}
// Shims for environments that are missing some required constants and functions
const $8b38701037b2e5d8$var$MAX_SAFE_INTEGER = 0x1fffffffffffff;
function $8b38701037b2e5d8$var$log10(x) {
    if (Math.log10) return Math.log10(x);
    return Math.log(x) / Math.LN10;
}
// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number
// Create lookup table
const $8b38701037b2e5d8$var$ibanLookup = {};
for(let i = 0; i < 10; i++)$8b38701037b2e5d8$var$ibanLookup[String(i)] = String(i);
for(let i = 0; i < 26; i++)$8b38701037b2e5d8$var$ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
// How many decimal digits can we process? (for 64-bit float, this is 15)
const $8b38701037b2e5d8$var$safeDigits = Math.floor($8b38701037b2e5d8$var$log10($8b38701037b2e5d8$var$MAX_SAFE_INTEGER));
function $8b38701037b2e5d8$var$ibanChecksum(address) {
    address = address.toUpperCase();
    address = address.substring(4) + address.substring(0, 2) + "00";
    let expanded = address.split("").map((c)=>{
        return $8b38701037b2e5d8$var$ibanLookup[c];
    }).join("");
    // Javascript can handle integers safely up to 15 (decimal) digits
    while(expanded.length >= $8b38701037b2e5d8$var$safeDigits){
        let block = expanded.substring(0, $8b38701037b2e5d8$var$safeDigits);
        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
    }
    let checksum = String(98 - parseInt(expanded, 10) % 97);
    while(checksum.length < 2)checksum = "0" + checksum;
    return checksum;
}
function $8b38701037b2e5d8$export$88411125f012957a(address) {
    let result = null;
    if (typeof address !== "string") $8b38701037b2e5d8$var$logger.throwArgumentError("invalid address", "address", address);
    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
        // Missing the 0x prefix
        if (address.substring(0, 2) !== "0x") address = "0x" + address;
        result = $8b38701037b2e5d8$var$getChecksumAddress(address);
        // It is a checksummed address with a bad checksum
        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) $8b38701037b2e5d8$var$logger.throwArgumentError("bad address checksum", "address", address);
    // Maybe ICAP? (we only support direct mode)
    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
        // It is an ICAP address with a bad checksum
        if (address.substring(2, 4) !== $8b38701037b2e5d8$var$ibanChecksum(address)) $8b38701037b2e5d8$var$logger.throwArgumentError("bad icap checksum", "address", address);
        result = (0, $66faa3baf2af8a8b$export$51e4a08295f7770f)(address.substring(4));
        while(result.length < 40)result = "0" + result;
        result = $8b38701037b2e5d8$var$getChecksumAddress("0x" + result);
    } else $8b38701037b2e5d8$var$logger.throwArgumentError("invalid address", "address", address);
    return result;
}
function $8b38701037b2e5d8$export$977e255126d763d6(address) {
    try {
        $8b38701037b2e5d8$export$88411125f012957a(address);
        return true;
    } catch (error) {}
    return false;
}
function $8b38701037b2e5d8$export$962c4ddada9f668f(address) {
    let base36 = (0, $66faa3baf2af8a8b$export$1293db5d29c264ff)($8b38701037b2e5d8$export$88411125f012957a(address).substring(2)).toUpperCase();
    while(base36.length < 30)base36 = "0" + base36;
    return "XE" + $8b38701037b2e5d8$var$ibanChecksum("XE00" + base36) + base36;
}
function $8b38701037b2e5d8$export$b7fbffef12272e40(transaction) {
    let from = null;
    try {
        from = $8b38701037b2e5d8$export$88411125f012957a(transaction.from);
    } catch (error) {
        $8b38701037b2e5d8$var$logger.throwArgumentError("missing from address", "transaction", transaction);
    }
    const nonce = (0, $eg8oT.stripZeros)((0, $eg8oT.arrayify)((0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(transaction.nonce).toHexString()));
    return $8b38701037b2e5d8$export$88411125f012957a((0, $eg8oT.hexDataSlice)((0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $4G7Hv.encode)([
        from,
        nonce
    ])), 12));
}
function $8b38701037b2e5d8$export$e0b22d96621f73a2(from, salt, initCodeHash) {
    if ((0, $eg8oT.hexDataLength)(salt) !== 32) $8b38701037b2e5d8$var$logger.throwArgumentError("salt must be 32 bytes", "salt", salt);
    if ((0, $eg8oT.hexDataLength)(initCodeHash) !== 32) $8b38701037b2e5d8$var$logger.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", initCodeHash);
    return $8b38701037b2e5d8$export$88411125f012957a((0, $eg8oT.hexDataSlice)((0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $eg8oT.concat)([
        "0xff",
        $8b38701037b2e5d8$export$88411125f012957a(from),
        salt,
        initCodeHash
    ])), 12));
}




var $eg8oT = parcelRequire("eg8oT");
const $e7e9bdb72e0755b8$export$badd13187c087617 = "0x0000000000000000000000000000000000000000";






var $eg8oT = parcelRequire("eg8oT");

const $5fc7f78f7b47b638$export$c83ef0909a6ddeec = /*#__PURE__*/ (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(-1);
const $5fc7f78f7b47b638$export$aaef8a3eae948f03 = /*#__PURE__*/ (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(0);
const $5fc7f78f7b47b638$export$9aa05a5866350bcf = /*#__PURE__*/ (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(1);
const $5fc7f78f7b47b638$export$9276dd97bf62cc8d = /*#__PURE__*/ (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(2);
const $5fc7f78f7b47b638$export$c8db55bd7405209e = /*#__PURE__*/ (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from("1000000000000000000");
const $5fc7f78f7b47b638$export$1b53890de5aabdd0 = /*#__PURE__*/ (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
const $5fc7f78f7b47b638$export$963c9b9317b80aaf = /*#__PURE__*/ (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from("-0x8000000000000000000000000000000000000000000000000000000000000000");
const $5fc7f78f7b47b638$export$6f8dbb07ebe6d738 = /*#__PURE__*/ (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");





var $4G7Hv = parcelRequire("4G7Hv");

var $7QIDV = parcelRequire("7QIDV");

var $c00edaef8129c70f$var$commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof $parcel$global !== "undefined" ? $parcel$global : typeof self !== "undefined" ? self : {};
function $c00edaef8129c70f$var$getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
function $c00edaef8129c70f$var$createCommonjsModule(fn, basedir, module) {
    return module = {
        path: basedir,
        exports: {},
        require: function(path, base) {
            return $c00edaef8129c70f$var$commonjsRequire(path, base === undefined || base === null ? module.path : base);
        }
    }, fn(module, module.exports), module.exports;
}
function $c00edaef8129c70f$var$getDefaultExportFromNamespaceIfPresent(n) {
    return n && Object.prototype.hasOwnProperty.call(n, "default") ? n["default"] : n;
}
function $c00edaef8129c70f$var$getDefaultExportFromNamespaceIfNotNamed(n) {
    return n && Object.prototype.hasOwnProperty.call(n, "default") && Object.keys(n).length === 1 ? n["default"] : n;
}
function $c00edaef8129c70f$var$getAugmentedNamespace(n) {
    if (n.__esModule) return n;
    var a = Object.defineProperty({}, "__esModule", {
        value: true
    });
    Object.keys(n).forEach(function(k) {
        var d = Object.getOwnPropertyDescriptor(n, k);
        Object.defineProperty(a, k, d.get ? d : {
            enumerable: true,
            get: function() {
                return n[k];
            }
        });
    });
    return a;
}
function $c00edaef8129c70f$var$commonjsRequire() {
    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var $c00edaef8129c70f$var$minimalisticAssert = $c00edaef8129c70f$var$assert;
function $c00edaef8129c70f$var$assert(val, msg) {
    if (!val) throw new Error(msg || "Assertion failed");
}
$c00edaef8129c70f$var$assert.equal = function assertEqual(l, r, msg) {
    if (l != r) throw new Error(msg || "Assertion failed: " + l + " != " + r);
};
var $c00edaef8129c70f$var$utils_1 = $c00edaef8129c70f$var$createCommonjsModule(function(module, exports) {
    "use strict";
    var utils = exports;
    function toArray(msg, enc) {
        if (Array.isArray(msg)) return msg.slice();
        if (!msg) return [];
        var res = [];
        if (typeof msg !== "string") {
            for(var i = 0; i < msg.length; i++)res[i] = msg[i] | 0;
            return res;
        }
        if (enc === "hex") {
            msg = msg.replace(/[^a-z0-9]+/ig, "");
            if (msg.length % 2 !== 0) msg = "0" + msg;
            for(var i = 0; i < msg.length; i += 2)res.push(parseInt(msg[i] + msg[i + 1], 16));
        } else for(var i = 0; i < msg.length; i++){
            var c = msg.charCodeAt(i);
            var hi = c >> 8;
            var lo = c & 0xff;
            if (hi) res.push(hi, lo);
            else res.push(lo);
        }
        return res;
    }
    utils.toArray = toArray;
    function zero2(word) {
        if (word.length === 1) return "0" + word;
        else return word;
    }
    utils.zero2 = zero2;
    function toHex(msg) {
        var res = "";
        for(var i = 0; i < msg.length; i++)res += zero2(msg[i].toString(16));
        return res;
    }
    utils.toHex = toHex;
    utils.encode = function encode(arr, enc) {
        if (enc === "hex") return toHex(arr);
        else return arr;
    };
});
var $c00edaef8129c70f$var$utils_1$1 = $c00edaef8129c70f$var$createCommonjsModule(function(module, exports) {
    "use strict";
    var utils = exports;
    utils.assert = $c00edaef8129c70f$var$minimalisticAssert;
    utils.toArray = $c00edaef8129c70f$var$utils_1.toArray;
    utils.zero2 = $c00edaef8129c70f$var$utils_1.zero2;
    utils.toHex = $c00edaef8129c70f$var$utils_1.toHex;
    utils.encode = $c00edaef8129c70f$var$utils_1.encode;
    // Represent num in a w-NAF form
    function getNAF(num, w, bits) {
        var naf = new Array(Math.max(num.bitLength(), bits) + 1);
        naf.fill(0);
        var ws = 1 << w + 1;
        var k = num.clone();
        for(var i = 0; i < naf.length; i++){
            var z;
            var mod = k.andln(ws - 1);
            if (k.isOdd()) {
                if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;
                else z = mod;
                k.isubn(z);
            } else z = 0;
            naf[i] = z;
            k.iushrn(1);
        }
        return naf;
    }
    utils.getNAF = getNAF;
    // Represent k1, k2 in a Joint Sparse Form
    function getJSF(k1, k2) {
        var jsf = [
            [],
            []
        ];
        k1 = k1.clone();
        k2 = k2.clone();
        var d1 = 0;
        var d2 = 0;
        var m8;
        while(k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0){
            // First phase
            var m14 = k1.andln(3) + d1 & 3;
            var m24 = k2.andln(3) + d2 & 3;
            if (m14 === 3) m14 = -1;
            if (m24 === 3) m24 = -1;
            var u1;
            if ((m14 & 1) === 0) u1 = 0;
            else {
                m8 = k1.andln(7) + d1 & 7;
                if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;
                else u1 = m14;
            }
            jsf[0].push(u1);
            var u2;
            if ((m24 & 1) === 0) u2 = 0;
            else {
                m8 = k2.andln(7) + d2 & 7;
                if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;
                else u2 = m24;
            }
            jsf[1].push(u2);
            // Second phase
            if (2 * d1 === u1 + 1) d1 = 1 - d1;
            if (2 * d2 === u2 + 1) d2 = 1 - d2;
            k1.iushrn(1);
            k2.iushrn(1);
        }
        return jsf;
    }
    utils.getJSF = getJSF;
    function cachedProperty(obj, name, computer) {
        var key = "_" + name;
        obj.prototype[name] = function cachedProperty() {
            return this[key] !== undefined ? this[key] : this[key] = computer.call(this);
        };
    }
    utils.cachedProperty = cachedProperty;
    function parseBytes(bytes) {
        return typeof bytes === "string" ? utils.toArray(bytes, "hex") : bytes;
    }
    utils.parseBytes = parseBytes;
    function intFromLE(bytes) {
        return new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(bytes, "hex", "le");
    }
    utils.intFromLE = intFromLE;
});
"use strict";
var $c00edaef8129c70f$var$getNAF = $c00edaef8129c70f$var$utils_1$1.getNAF;
var $c00edaef8129c70f$var$getJSF = $c00edaef8129c70f$var$utils_1$1.getJSF;
var $c00edaef8129c70f$var$assert$1 = $c00edaef8129c70f$var$utils_1$1.assert;
function $c00edaef8129c70f$var$BaseCurve(type, conf) {
    this.type = type;
    this.p = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(conf.p, 16);
    // Use Montgomery, when there is no fast reduction for the prime
    this.red = conf.prime ? (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV))).red(conf.prime) : (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV))).mont(this.p);
    // Useful for many curves
    this.zero = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(0).toRed(this.red);
    this.one = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(1).toRed(this.red);
    this.two = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(2).toRed(this.red);
    // Curve configuration, optional
    this.n = conf.n && new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(conf.n, 16);
    this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
    // Temporary arrays
    this._wnafT1 = new Array(4);
    this._wnafT2 = new Array(4);
    this._wnafT3 = new Array(4);
    this._wnafT4 = new Array(4);
    this._bitLength = this.n ? this.n.bitLength() : 0;
    // Generalized Greg Maxwell's trick
    var adjustCount = this.n && this.p.div(this.n);
    if (!adjustCount || adjustCount.cmpn(100) > 0) this.redN = null;
    else {
        this._maxwellTrick = true;
        this.redN = this.n.toRed(this.red);
    }
}
var $c00edaef8129c70f$var$base = $c00edaef8129c70f$var$BaseCurve;
$c00edaef8129c70f$var$BaseCurve.prototype.point = function point() {
    throw new Error("Not implemented");
};
$c00edaef8129c70f$var$BaseCurve.prototype.validate = function validate() {
    throw new Error("Not implemented");
};
$c00edaef8129c70f$var$BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
    $c00edaef8129c70f$var$assert$1(p.precomputed);
    var doubles = p._getDoubles();
    var naf = $c00edaef8129c70f$var$getNAF(k, 1, this._bitLength);
    var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
    I /= 3;
    // Translate into more windowed form
    var repr = [];
    var j;
    var nafW;
    for(j = 0; j < naf.length; j += doubles.step){
        nafW = 0;
        for(var l = j + doubles.step - 1; l >= j; l--)nafW = (nafW << 1) + naf[l];
        repr.push(nafW);
    }
    var a = this.jpoint(null, null, null);
    var b = this.jpoint(null, null, null);
    for(var i = I; i > 0; i--){
        for(j = 0; j < repr.length; j++){
            nafW = repr[j];
            if (nafW === i) b = b.mixedAdd(doubles.points[j]);
            else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());
        }
        a = a.add(b);
    }
    return a.toP();
};
$c00edaef8129c70f$var$BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
    var w = 4;
    // Precompute window
    var nafPoints = p._getNAFPoints(w);
    w = nafPoints.wnd;
    var wnd = nafPoints.points;
    // Get NAF form
    var naf = $c00edaef8129c70f$var$getNAF(k, w, this._bitLength);
    // Add `this`*(N+1) for every w-NAF index
    var acc = this.jpoint(null, null, null);
    for(var i = naf.length - 1; i >= 0; i--){
        // Count zeroes
        for(var l = 0; i >= 0 && naf[i] === 0; i--)l++;
        if (i >= 0) l++;
        acc = acc.dblp(l);
        if (i < 0) break;
        var z = naf[i];
        $c00edaef8129c70f$var$assert$1(z !== 0);
        if (p.type === "affine") {
            // J +- P
            if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);
            else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
        } else // J +- J
        if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);
        else acc = acc.add(wnd[-z - 1 >> 1].neg());
    }
    return p.type === "affine" ? acc.toP() : acc;
};
$c00edaef8129c70f$var$BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
    var wndWidth = this._wnafT1;
    var wnd = this._wnafT2;
    var naf = this._wnafT3;
    // Fill all arrays
    var max = 0;
    var i;
    var j;
    var p;
    for(i = 0; i < len; i++){
        p = points[i];
        var nafPoints = p._getNAFPoints(defW);
        wndWidth[i] = nafPoints.wnd;
        wnd[i] = nafPoints.points;
    }
    // Comb small window NAFs
    for(i = len - 1; i >= 1; i -= 2){
        var a = i - 1;
        var b = i;
        if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
            naf[a] = $c00edaef8129c70f$var$getNAF(coeffs[a], wndWidth[a], this._bitLength);
            naf[b] = $c00edaef8129c70f$var$getNAF(coeffs[b], wndWidth[b], this._bitLength);
            max = Math.max(naf[a].length, max);
            max = Math.max(naf[b].length, max);
            continue;
        }
        var comb = [
            points[a],
            /* 1 */ null,
            /* 3 */ null,
            /* 5 */ points[b]
        ];
        // Try to avoid Projective points, if possible
        if (points[a].y.cmp(points[b].y) === 0) {
            comb[1] = points[a].add(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].add(points[b].neg());
        } else {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        }
        var index = [
            -3,
            /* -1 -1 */ -1,
            /* -1 0 */ -5,
            /* -1 1 */ -7,
            /* 0 -1 */ 0,
            /* 0 0 */ 7,
            /* 0 1 */ 5,
            /* 1 -1 */ 1,
            /* 1 0 */ 3
        ];
        var jsf = $c00edaef8129c70f$var$getJSF(coeffs[a], coeffs[b]);
        max = Math.max(jsf[0].length, max);
        naf[a] = new Array(max);
        naf[b] = new Array(max);
        for(j = 0; j < max; j++){
            var ja = jsf[0][j] | 0;
            var jb = jsf[1][j] | 0;
            naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
            naf[b][j] = 0;
            wnd[a] = comb;
        }
    }
    var acc = this.jpoint(null, null, null);
    var tmp = this._wnafT4;
    for(i = max; i >= 0; i--){
        var k = 0;
        while(i >= 0){
            var zero = true;
            for(j = 0; j < len; j++){
                tmp[j] = naf[j][i] | 0;
                if (tmp[j] !== 0) zero = false;
            }
            if (!zero) break;
            k++;
            i--;
        }
        if (i >= 0) k++;
        acc = acc.dblp(k);
        if (i < 0) break;
        for(j = 0; j < len; j++){
            var z = tmp[j];
            p;
            if (z === 0) continue;
            else if (z > 0) p = wnd[j][z - 1 >> 1];
            else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();
            if (p.type === "affine") acc = acc.mixedAdd(p);
            else acc = acc.add(p);
        }
    }
    // Zeroify references
    for(i = 0; i < len; i++)wnd[i] = null;
    if (jacobianResult) return acc;
    else return acc.toP();
};
function $c00edaef8129c70f$var$BasePoint(curve, type) {
    this.curve = curve;
    this.type = type;
    this.precomputed = null;
}
$c00edaef8129c70f$var$BaseCurve.BasePoint = $c00edaef8129c70f$var$BasePoint;
$c00edaef8129c70f$var$BasePoint.prototype.eq = function eq() {
    throw new Error("Not implemented");
};
$c00edaef8129c70f$var$BasePoint.prototype.validate = function validate() {
    return this.curve.validate(this);
};
$c00edaef8129c70f$var$BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
    bytes = $c00edaef8129c70f$var$utils_1$1.toArray(bytes, enc);
    var len = this.p.byteLength();
    // uncompressed, hybrid-odd, hybrid-even
    if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {
        if (bytes[0] === 0x06) $c00edaef8129c70f$var$assert$1(bytes[bytes.length - 1] % 2 === 0);
        else if (bytes[0] === 0x07) $c00edaef8129c70f$var$assert$1(bytes[bytes.length - 1] % 2 === 1);
        var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
        return res;
    } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
    throw new Error("Unknown point format");
};
$c00edaef8129c70f$var$BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
    return this.encode(enc, true);
};
$c00edaef8129c70f$var$BasePoint.prototype._encode = function _encode(compact) {
    var len = this.curve.p.byteLength();
    var x = this.getX().toArray("be", len);
    if (compact) return [
        this.getY().isEven() ? 0x02 : 0x03
    ].concat(x);
    return [
        0x04
    ].concat(x, this.getY().toArray("be", len));
};
$c00edaef8129c70f$var$BasePoint.prototype.encode = function encode(enc, compact) {
    return $c00edaef8129c70f$var$utils_1$1.encode(this._encode(compact), enc);
};
$c00edaef8129c70f$var$BasePoint.prototype.precompute = function precompute(power) {
    if (this.precomputed) return this;
    var precomputed = {
        doubles: null,
        naf: null,
        beta: null
    };
    precomputed.naf = this._getNAFPoints(8);
    precomputed.doubles = this._getDoubles(4, power);
    precomputed.beta = this._getBeta();
    this.precomputed = precomputed;
    return this;
};
$c00edaef8129c70f$var$BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
    if (!this.precomputed) return false;
    var doubles = this.precomputed.doubles;
    if (!doubles) return false;
    return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};
$c00edaef8129c70f$var$BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
    var doubles = [
        this
    ];
    var acc = this;
    for(var i = 0; i < power; i += step){
        for(var j = 0; j < step; j++)acc = acc.dbl();
        doubles.push(acc);
    }
    return {
        step: step,
        points: doubles
    };
};
$c00edaef8129c70f$var$BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
    var res = [
        this
    ];
    var max = (1 << wnd) - 1;
    var dbl = max === 1 ? null : this.dbl();
    for(var i = 1; i < max; i++)res[i] = res[i - 1].add(dbl);
    return {
        wnd: wnd,
        points: res
    };
};
$c00edaef8129c70f$var$BasePoint.prototype._getBeta = function _getBeta() {
    return null;
};
$c00edaef8129c70f$var$BasePoint.prototype.dblp = function dblp(k) {
    var r = this;
    for(var i = 0; i < k; i++)r = r.dbl();
    return r;
};
var $c00edaef8129c70f$var$inherits_browser = $c00edaef8129c70f$var$createCommonjsModule(function(module) {
    if (typeof Object.create === "function") // implementation from standard node.js 'util' module
    module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
            ctor.super_ = superCtor;
            ctor.prototype = Object.create(superCtor.prototype, {
                constructor: {
                    value: ctor,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
        }
    };
    else // old school shim for old browsers
    module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
            ctor.super_ = superCtor;
            var TempCtor = function() {};
            TempCtor.prototype = superCtor.prototype;
            ctor.prototype = new TempCtor();
            ctor.prototype.constructor = ctor;
        }
    };
});
"use strict";
var $c00edaef8129c70f$var$assert$2 = $c00edaef8129c70f$var$utils_1$1.assert;
function $c00edaef8129c70f$var$ShortCurve(conf) {
    $c00edaef8129c70f$var$base.call(this, "short", conf);
    this.a = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(conf.a, 16).toRed(this.red);
    this.b = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(conf.b, 16).toRed(this.red);
    this.tinv = this.two.redInvm();
    this.zeroA = this.a.fromRed().cmpn(0) === 0;
    this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
    // If the curve is endomorphic, precalculate beta and lambda
    this.endo = this._getEndomorphism(conf);
    this._endoWnafT1 = new Array(4);
    this._endoWnafT2 = new Array(4);
}
$c00edaef8129c70f$var$inherits_browser($c00edaef8129c70f$var$ShortCurve, $c00edaef8129c70f$var$base);
var $c00edaef8129c70f$var$short_1 = $c00edaef8129c70f$var$ShortCurve;
$c00edaef8129c70f$var$ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
    // No efficient endomorphism
    if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;
    // Compute beta and lambda, that lambda * P = (beta * Px; Py)
    var beta;
    var lambda;
    if (conf.beta) beta = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(conf.beta, 16).toRed(this.red);
    else {
        var betas = this._getEndoRoots(this.p);
        // Choose the smallest beta
        beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
        beta = beta.toRed(this.red);
    }
    if (conf.lambda) lambda = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(conf.lambda, 16);
    else {
        // Choose the lambda that is matching selected beta
        var lambdas = this._getEndoRoots(this.n);
        if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) lambda = lambdas[0];
        else {
            lambda = lambdas[1];
            $c00edaef8129c70f$var$assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
        }
    }
    // Get basis vectors, used for balanced length-two representation
    var basis;
    if (conf.basis) basis = conf.basis.map(function(vec) {
        return {
            a: new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(vec.a, 16),
            b: new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(vec.b, 16)
        };
    });
    else basis = this._getEndoBasis(lambda);
    return {
        beta: beta,
        lambda: lambda,
        basis: basis
    };
};
$c00edaef8129c70f$var$ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
    // Find roots of for x^2 + x + 1 in F
    // Root = (-1 +- Sqrt(-3)) / 2
    //
    var red = num === this.p ? this.red : (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV))).mont(num);
    var tinv = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(2).toRed(red).redInvm();
    var ntinv = tinv.redNeg();
    var s = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(3).toRed(red).redNeg().redSqrt().redMul(tinv);
    var l1 = ntinv.redAdd(s).fromRed();
    var l2 = ntinv.redSub(s).fromRed();
    return [
        l1,
        l2
    ];
};
$c00edaef8129c70f$var$ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
    // aprxSqrt >= sqrt(this.n)
    var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
    // 3.74
    // Run EGCD, until r(L + 1) < aprxSqrt
    var u = lambda;
    var v = this.n.clone();
    var x1 = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(1);
    var y1 = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(0);
    var x2 = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(0);
    var y2 = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(1);
    // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
    var a0;
    var b0;
    // First vector
    var a1;
    var b1;
    // Second vector
    var a2;
    var b2;
    var prevR;
    var i = 0;
    var r;
    var x;
    while(u.cmpn(0) !== 0){
        var q = v.div(u);
        r = v.sub(q.mul(u));
        x = x2.sub(q.mul(x1));
        var y = y2.sub(q.mul(y1));
        if (!a1 && r.cmp(aprxSqrt) < 0) {
            a0 = prevR.neg();
            b0 = x1;
            a1 = r.neg();
            b1 = x;
        } else if (a1 && ++i === 2) break;
        prevR = r;
        v = u;
        u = r;
        x2 = x1;
        x1 = x;
        y2 = y1;
        y1 = y;
    }
    a2 = r.neg();
    b2 = x;
    var len1 = a1.sqr().add(b1.sqr());
    var len2 = a2.sqr().add(b2.sqr());
    if (len2.cmp(len1) >= 0) {
        a2 = a0;
        b2 = b0;
    }
    // Normalize signs
    if (a1.negative) {
        a1 = a1.neg();
        b1 = b1.neg();
    }
    if (a2.negative) {
        a2 = a2.neg();
        b2 = b2.neg();
    }
    return [
        {
            a: a1,
            b: b1
        },
        {
            a: a2,
            b: b2
        }
    ];
};
$c00edaef8129c70f$var$ShortCurve.prototype._endoSplit = function _endoSplit(k) {
    var basis = this.endo.basis;
    var v1 = basis[0];
    var v2 = basis[1];
    var c1 = v2.b.mul(k).divRound(this.n);
    var c2 = v1.b.neg().mul(k).divRound(this.n);
    var p1 = c1.mul(v1.a);
    var p2 = c2.mul(v2.a);
    var q1 = c1.mul(v1.b);
    var q2 = c2.mul(v2.b);
    // Calculate answer
    var k1 = k.sub(p1).sub(p2);
    var k2 = q1.add(q2).neg();
    return {
        k1: k1,
        k2: k2
    };
};
$c00edaef8129c70f$var$ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
    x = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(x, 16);
    if (!x.red) x = x.toRed(this.red);
    var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
    var y = y2.redSqrt();
    if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error("invalid point");
    // XXX Is there any way to tell if the number is odd without converting it
    // to non-red form?
    var isOdd = y.fromRed().isOdd();
    if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
    return this.point(x, y);
};
$c00edaef8129c70f$var$ShortCurve.prototype.validate = function validate(point) {
    if (point.inf) return true;
    var x = point.x;
    var y = point.y;
    var ax = this.a.redMul(x);
    var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
    return y.redSqr().redISub(rhs).cmpn(0) === 0;
};
$c00edaef8129c70f$var$ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
    var npoints = this._endoWnafT1;
    var ncoeffs = this._endoWnafT2;
    for(var i = 0; i < points.length; i++){
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();
        if (split.k1.negative) {
            split.k1.ineg();
            p = p.neg(true);
        }
        if (split.k2.negative) {
            split.k2.ineg();
            beta = beta.neg(true);
        }
        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
    }
    var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
    // Clean-up references to points and coefficients
    for(var j = 0; j < i * 2; j++){
        npoints[j] = null;
        ncoeffs[j] = null;
    }
    return res;
};
function $c00edaef8129c70f$var$Point(curve, x, y, isRed) {
    $c00edaef8129c70f$var$base.BasePoint.call(this, curve, "affine");
    if (x === null && y === null) {
        this.x = null;
        this.y = null;
        this.inf = true;
    } else {
        this.x = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(x, 16);
        this.y = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(y, 16);
        // Force redgomery representation when loading from JSON
        if (isRed) {
            this.x.forceRed(this.curve.red);
            this.y.forceRed(this.curve.red);
        }
        if (!this.x.red) this.x = this.x.toRed(this.curve.red);
        if (!this.y.red) this.y = this.y.toRed(this.curve.red);
        this.inf = false;
    }
}
$c00edaef8129c70f$var$inherits_browser($c00edaef8129c70f$var$Point, $c00edaef8129c70f$var$base.BasePoint);
$c00edaef8129c70f$var$ShortCurve.prototype.point = function point(x, y, isRed) {
    return new $c00edaef8129c70f$var$Point(this, x, y, isRed);
};
$c00edaef8129c70f$var$ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
    return $c00edaef8129c70f$var$Point.fromJSON(this, obj, red);
};
$c00edaef8129c70f$var$Point.prototype._getBeta = function _getBeta() {
    if (!this.curve.endo) return;
    var pre = this.precomputed;
    if (pre && pre.beta) return pre.beta;
    var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (pre) {
        var curve = this.curve;
        var endoMul = function(p) {
            return curve.point(p.x.redMul(curve.endo.beta), p.y);
        };
        pre.beta = beta;
        beta.precomputed = {
            beta: null,
            naf: pre.naf && {
                wnd: pre.naf.wnd,
                points: pre.naf.points.map(endoMul)
            },
            doubles: pre.doubles && {
                step: pre.doubles.step,
                points: pre.doubles.points.map(endoMul)
            }
        };
    }
    return beta;
};
$c00edaef8129c70f$var$Point.prototype.toJSON = function toJSON() {
    if (!this.precomputed) return [
        this.x,
        this.y
    ];
    return [
        this.x,
        this.y,
        this.precomputed && {
            doubles: this.precomputed.doubles && {
                step: this.precomputed.doubles.step,
                points: this.precomputed.doubles.points.slice(1)
            },
            naf: this.precomputed.naf && {
                wnd: this.precomputed.naf.wnd,
                points: this.precomputed.naf.points.slice(1)
            }
        }
    ];
};
$c00edaef8129c70f$var$Point.fromJSON = function fromJSON(curve, obj, red) {
    if (typeof obj === "string") obj = JSON.parse(obj);
    var res = curve.point(obj[0], obj[1], red);
    if (!obj[2]) return res;
    function obj2point(obj) {
        return curve.point(obj[0], obj[1], red);
    }
    var pre = obj[2];
    res.precomputed = {
        beta: null,
        doubles: pre.doubles && {
            step: pre.doubles.step,
            points: [
                res
            ].concat(pre.doubles.points.map(obj2point))
        },
        naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: [
                res
            ].concat(pre.naf.points.map(obj2point))
        }
    };
    return res;
};
$c00edaef8129c70f$var$Point.prototype.inspect = function inspect() {
    if (this.isInfinity()) return "<EC Point Infinity>";
    return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
};
$c00edaef8129c70f$var$Point.prototype.isInfinity = function isInfinity() {
    return this.inf;
};
$c00edaef8129c70f$var$Point.prototype.add = function add(p) {
    // O + P = P
    if (this.inf) return p;
    // P + O = P
    if (p.inf) return this;
    // P + P = 2P
    if (this.eq(p)) return this.dbl();
    // P + (-P) = O
    if (this.neg().eq(p)) return this.curve.point(null, null);
    // P + Q = O
    if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);
    var c = this.y.redSub(p.y);
    if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());
    var nx = c.redSqr().redISub(this.x).redISub(p.x);
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
};
$c00edaef8129c70f$var$Point.prototype.dbl = function dbl() {
    if (this.inf) return this;
    // 2P = O
    var ys1 = this.y.redAdd(this.y);
    if (ys1.cmpn(0) === 0) return this.curve.point(null, null);
    var a = this.curve.a;
    var x2 = this.x.redSqr();
    var dyinv = ys1.redInvm();
    var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
    var nx = c.redSqr().redISub(this.x.redAdd(this.x));
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
};
$c00edaef8129c70f$var$Point.prototype.getX = function getX() {
    return this.x.fromRed();
};
$c00edaef8129c70f$var$Point.prototype.getY = function getY() {
    return this.y.fromRed();
};
$c00edaef8129c70f$var$Point.prototype.mul = function mul(k) {
    k = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(k, 16);
    if (this.isInfinity()) return this;
    else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);
    else if (this.curve.endo) return this.curve._endoWnafMulAdd([
        this
    ], [
        k
    ]);
    else return this.curve._wnafMul(this, k);
};
$c00edaef8129c70f$var$Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
    var points = [
        this,
        p2
    ];
    var coeffs = [
        k1,
        k2
    ];
    if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);
    else return this.curve._wnafMulAdd(1, points, coeffs, 2);
};
$c00edaef8129c70f$var$Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
    var points = [
        this,
        p2
    ];
    var coeffs = [
        k1,
        k2
    ];
    if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);
    else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};
$c00edaef8129c70f$var$Point.prototype.eq = function eq(p) {
    return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};
$c00edaef8129c70f$var$Point.prototype.neg = function neg(_precompute) {
    if (this.inf) return this;
    var res = this.curve.point(this.x, this.y.redNeg());
    if (_precompute && this.precomputed) {
        var pre = this.precomputed;
        var negate = function(p) {
            return p.neg();
        };
        res.precomputed = {
            naf: pre.naf && {
                wnd: pre.naf.wnd,
                points: pre.naf.points.map(negate)
            },
            doubles: pre.doubles && {
                step: pre.doubles.step,
                points: pre.doubles.points.map(negate)
            }
        };
    }
    return res;
};
$c00edaef8129c70f$var$Point.prototype.toJ = function toJ() {
    if (this.inf) return this.curve.jpoint(null, null, null);
    var res = this.curve.jpoint(this.x, this.y, this.curve.one);
    return res;
};
function $c00edaef8129c70f$var$JPoint(curve, x, y, z) {
    $c00edaef8129c70f$var$base.BasePoint.call(this, curve, "jacobian");
    if (x === null && y === null && z === null) {
        this.x = this.curve.one;
        this.y = this.curve.one;
        this.z = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(0);
    } else {
        this.x = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(x, 16);
        this.y = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(y, 16);
        this.z = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(z, 16);
    }
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.y.red) this.y = this.y.toRed(this.curve.red);
    if (!this.z.red) this.z = this.z.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;
}
$c00edaef8129c70f$var$inherits_browser($c00edaef8129c70f$var$JPoint, $c00edaef8129c70f$var$base.BasePoint);
$c00edaef8129c70f$var$ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
    return new $c00edaef8129c70f$var$JPoint(this, x, y, z);
};
$c00edaef8129c70f$var$JPoint.prototype.toP = function toP() {
    if (this.isInfinity()) return this.curve.point(null, null);
    var zinv = this.z.redInvm();
    var zinv2 = zinv.redSqr();
    var ax = this.x.redMul(zinv2);
    var ay = this.y.redMul(zinv2).redMul(zinv);
    return this.curve.point(ax, ay);
};
$c00edaef8129c70f$var$JPoint.prototype.neg = function neg() {
    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
$c00edaef8129c70f$var$JPoint.prototype.add = function add(p) {
    // O + P = P
    if (this.isInfinity()) return p;
    // P + O = P
    if (p.isInfinity()) return this;
    // 12M + 4S + 7A
    var pz2 = p.z.redSqr();
    var z2 = this.z.redSqr();
    var u1 = this.x.redMul(pz2);
    var u2 = p.x.redMul(z2);
    var s1 = this.y.redMul(pz2.redMul(p.z));
    var s2 = p.y.redMul(z2.redMul(this.z));
    var h = u1.redSub(u2);
    var r = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);
        else return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(p.z).redMul(h);
    return this.curve.jpoint(nx, ny, nz);
};
$c00edaef8129c70f$var$JPoint.prototype.mixedAdd = function mixedAdd(p) {
    // O + P = P
    if (this.isInfinity()) return p.toJ();
    // P + O = P
    if (p.isInfinity()) return this;
    // 8M + 3S + 7A
    var z2 = this.z.redSqr();
    var u1 = this.x;
    var u2 = p.x.redMul(z2);
    var s1 = this.y;
    var s2 = p.y.redMul(z2).redMul(this.z);
    var h = u1.redSub(u2);
    var r = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);
        else return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(h);
    return this.curve.jpoint(nx, ny, nz);
};
$c00edaef8129c70f$var$JPoint.prototype.dblp = function dblp(pow) {
    if (pow === 0) return this;
    if (this.isInfinity()) return this;
    if (!pow) return this.dbl();
    var i;
    if (this.curve.zeroA || this.curve.threeA) {
        var r = this;
        for(i = 0; i < pow; i++)r = r.dbl();
        return r;
    }
    // 1M + 2S + 1A + N * (4S + 5M + 8A)
    // N = 1 => 6M + 6S + 9A
    var a = this.curve.a;
    var tinv = this.curve.tinv;
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    // Reuse results
    var jyd = jy.redAdd(jy);
    for(i = 0; i < pow; i++){
        var jx2 = jx.redSqr();
        var jyd2 = jyd.redSqr();
        var jyd4 = jyd2.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
        var t1 = jx.redMul(jyd2);
        var nx = c.redSqr().redISub(t1.redAdd(t1));
        var t2 = t1.redISub(nx);
        var dny = c.redMul(t2);
        dny = dny.redIAdd(dny).redISub(jyd4);
        var nz = jyd.redMul(jz);
        if (i + 1 < pow) jz4 = jz4.redMul(jyd4);
        jx = nx;
        jz = nz;
        jyd = dny;
    }
    return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};
$c00edaef8129c70f$var$JPoint.prototype.dbl = function dbl() {
    if (this.isInfinity()) return this;
    if (this.curve.zeroA) return this._zeroDbl();
    else if (this.curve.threeA) return this._threeDbl();
    else return this._dbl();
};
$c00edaef8129c70f$var$JPoint.prototype._zeroDbl = function _zeroDbl() {
    var nx;
    var ny;
    var nz;
    // Z = 1
    if (this.zOne) {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
        //     #doubling-mdbl-2007-bl
        // 1M + 5S + 14A
        // XX = X1^2
        var xx = this.x.redSqr();
        // YY = Y1^2
        var yy = this.y.redSqr();
        // YYYY = YY^2
        var yyyy = yy.redSqr();
        // S = 2 * ((X1 + YY)^2 - XX - YYYY)
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        // M = 3 * XX + a; a = 0
        var m = xx.redAdd(xx).redIAdd(xx);
        // T = M ^ 2 - 2*S
        var t = m.redSqr().redISub(s).redISub(s);
        // 8 * YYYY
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        // X3 = T
        nx = t;
        // Y3 = M * (S - T) - 8 * YYYY
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        // Z3 = 2*Y1
        nz = this.y.redAdd(this.y);
    } else {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
        //     #doubling-dbl-2009-l
        // 2M + 5S + 13A
        // A = X1^2
        var a = this.x.redSqr();
        // B = Y1^2
        var b = this.y.redSqr();
        // C = B^2
        var c = b.redSqr();
        // D = 2 * ((X1 + B)^2 - A - C)
        var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
        d = d.redIAdd(d);
        // E = 3 * A
        var e = a.redAdd(a).redIAdd(a);
        // F = E^2
        var f = e.redSqr();
        // 8 * C
        var c8 = c.redIAdd(c);
        c8 = c8.redIAdd(c8);
        c8 = c8.redIAdd(c8);
        // X3 = F - 2 * D
        nx = f.redISub(d).redISub(d);
        // Y3 = E * (D - X3) - 8 * C
        ny = e.redMul(d.redISub(nx)).redISub(c8);
        // Z3 = 2 * Y1 * Z1
        nz = this.y.redMul(this.z);
        nz = nz.redIAdd(nz);
    }
    return this.curve.jpoint(nx, ny, nz);
};
$c00edaef8129c70f$var$JPoint.prototype._threeDbl = function _threeDbl() {
    var nx;
    var ny;
    var nz;
    // Z = 1
    if (this.zOne) {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
        //     #doubling-mdbl-2007-bl
        // 1M + 5S + 15A
        // XX = X1^2
        var xx = this.x.redSqr();
        // YY = Y1^2
        var yy = this.y.redSqr();
        // YYYY = YY^2
        var yyyy = yy.redSqr();
        // S = 2 * ((X1 + YY)^2 - XX - YYYY)
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        // M = 3 * XX + a
        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
        // T = M^2 - 2 * S
        var t = m.redSqr().redISub(s).redISub(s);
        // X3 = T
        nx = t;
        // Y3 = M * (S - T) - 8 * YYYY
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        // Z3 = 2 * Y1
        nz = this.y.redAdd(this.y);
    } else {
        // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
        // 3M + 5S
        // delta = Z1^2
        var delta = this.z.redSqr();
        // gamma = Y1^2
        var gamma = this.y.redSqr();
        // beta = X1 * gamma
        var beta = this.x.redMul(gamma);
        // alpha = 3 * (X1 - delta) * (X1 + delta)
        var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
        alpha = alpha.redAdd(alpha).redIAdd(alpha);
        // X3 = alpha^2 - 8 * beta
        var beta4 = beta.redIAdd(beta);
        beta4 = beta4.redIAdd(beta4);
        var beta8 = beta4.redAdd(beta4);
        nx = alpha.redSqr().redISub(beta8);
        // Z3 = (Y1 + Z1)^2 - gamma - delta
        nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
        // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
        var ggamma8 = gamma.redSqr();
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
    }
    return this.curve.jpoint(nx, ny, nz);
};
$c00edaef8129c70f$var$JPoint.prototype._dbl = function _dbl() {
    var a = this.curve.a;
    // 4M + 6S + 10A
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    var jx2 = jx.redSqr();
    var jy2 = jy.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var jxd4 = jx.redAdd(jx);
    jxd4 = jxd4.redIAdd(jxd4);
    var t1 = jxd4.redMul(jy2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var jyd8 = jy2.redSqr();
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    var ny = c.redMul(t2).redISub(jyd8);
    var nz = jy.redAdd(jy).redMul(jz);
    return this.curve.jpoint(nx, ny, nz);
};
$c00edaef8129c70f$var$JPoint.prototype.trpl = function trpl() {
    if (!this.curve.zeroA) return this.dbl().add(this);
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
    // 5M + 10S + ...
    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // ZZ = Z1^2
    var zz = this.z.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // M = 3 * XX + a * ZZ2; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // MM = M^2
    var mm = m.redSqr();
    // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
    var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    e = e.redIAdd(e);
    e = e.redAdd(e).redIAdd(e);
    e = e.redISub(mm);
    // EE = E^2
    var ee = e.redSqr();
    // T = 16*YYYY
    var t = yyyy.redIAdd(yyyy);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    // U = (M + E)^2 - MM - EE - T
    var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
    // X3 = 4 * (X1 * EE - 4 * YY * U)
    var yyu4 = yy.redMul(u);
    yyu4 = yyu4.redIAdd(yyu4);
    yyu4 = yyu4.redIAdd(yyu4);
    var nx = this.x.redMul(ee).redISub(yyu4);
    nx = nx.redIAdd(nx);
    nx = nx.redIAdd(nx);
    // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
    var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    // Z3 = (Z1 + E)^2 - ZZ - EE
    var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
    return this.curve.jpoint(nx, ny, nz);
};
$c00edaef8129c70f$var$JPoint.prototype.mul = function mul(k, kbase) {
    k = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(k, kbase);
    return this.curve._wnafMul(this, k);
};
$c00edaef8129c70f$var$JPoint.prototype.eq = function eq(p) {
    if (p.type === "affine") return this.eq(p.toJ());
    if (this === p) return true;
    // x1 * z2^2 == x2 * z1^2
    var z2 = this.z.redSqr();
    var pz2 = p.z.redSqr();
    if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;
    // y1 * z2^3 == y2 * z1^3
    var z3 = z2.redMul(this.z);
    var pz3 = pz2.redMul(p.z);
    return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};
$c00edaef8129c70f$var$JPoint.prototype.eqXToP = function eqXToP(x) {
    var zs = this.z.redSqr();
    var rx = x.toRed(this.curve.red).redMul(zs);
    if (this.x.cmp(rx) === 0) return true;
    var xc = x.clone();
    var t = this.curve.redN.redMul(zs);
    for(;;){
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0) return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0) return true;
    }
};
$c00edaef8129c70f$var$JPoint.prototype.inspect = function inspect() {
    if (this.isInfinity()) return "<EC JPoint Infinity>";
    return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
};
$c00edaef8129c70f$var$JPoint.prototype.isInfinity = function isInfinity() {
    // XXX This code assumes that zero is always zero in red
    return this.z.cmpn(0) === 0;
};
var $c00edaef8129c70f$var$curve_1 = $c00edaef8129c70f$var$createCommonjsModule(function(module, exports) {
    "use strict";
    var curve = exports;
    curve.base = $c00edaef8129c70f$var$base;
    curve.short = $c00edaef8129c70f$var$short_1;
    curve.mont = /*RicMoo:ethers:require(./mont)*/ null;
    curve.edwards = /*RicMoo:ethers:require(./edwards)*/ null;
});
var $c00edaef8129c70f$var$curves_1 = $c00edaef8129c70f$var$createCommonjsModule(function(module, exports) {
    "use strict";
    var curves = exports;
    var assert = $c00edaef8129c70f$var$utils_1$1.assert;
    function PresetCurve(options) {
        if (options.type === "short") this.curve = new $c00edaef8129c70f$var$curve_1.short(options);
        else if (options.type === "edwards") this.curve = new $c00edaef8129c70f$var$curve_1.edwards(options);
        else this.curve = new $c00edaef8129c70f$var$curve_1.mont(options);
        this.g = this.curve.g;
        this.n = this.curve.n;
        this.hash = options.hash;
        assert(this.g.validate(), "Invalid curve");
        assert(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    curves.PresetCurve = PresetCurve;
    function defineCurve(name, options) {
        Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            get: function() {
                var curve = new PresetCurve(options);
                Object.defineProperty(curves, name, {
                    configurable: true,
                    enumerable: true,
                    value: curve
                });
                return curve;
            }
        });
    }
    defineCurve("p192", {
        type: "short",
        prime: "p192",
        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
        hash: (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha256,
        gRed: false,
        g: [
            "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
            "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
        ]
    });
    defineCurve("p224", {
        type: "short",
        prime: "p224",
        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
        hash: (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha256,
        gRed: false,
        g: [
            "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
            "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
        ]
    });
    defineCurve("p256", {
        type: "short",
        prime: null,
        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
        hash: (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha256,
        gRed: false,
        g: [
            "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
            "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
        ]
    });
    defineCurve("p384", {
        type: "short",
        prime: null,
        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
        hash: (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha384,
        gRed: false,
        g: [
            "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
            "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
        ]
    });
    defineCurve("p521", {
        type: "short",
        prime: null,
        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
        hash: (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha512,
        gRed: false,
        g: [
            "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
            "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
        ]
    });
    defineCurve("curve25519", {
        type: "mont",
        prime: "p25519",
        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "76d06",
        b: "1",
        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha256,
        gRed: false,
        g: [
            "9"
        ]
    });
    defineCurve("ed25519", {
        type: "edwards",
        prime: "p25519",
        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "-1",
        c: "1",
        // -121665 * (121666^(-1)) (mod P)
        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha256,
        gRed: false,
        g: [
            "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
            // 4/5
            "6666666666666666666666666666666666666666666666666666666666666658"
        ]
    });
    var pre;
    try {
        pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/ null.crash();
    } catch (e) {
        pre = undefined;
    }
    defineCurve("secp256k1", {
        type: "short",
        prime: "k256",
        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
        a: "0",
        b: "7",
        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
        h: "1",
        hash: (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).sha256,
        // Precomputed endomorphism
        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
        basis: [
            {
                a: "3086d221a7d46bcde86c90e49284eb15",
                b: "-e4437ed6010e88286f547fa90abfe4c3"
            },
            {
                a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                b: "3086d221a7d46bcde86c90e49284eb15"
            }
        ],
        gRed: false,
        g: [
            "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
            "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
            pre
        ]
    });
});
"use strict";
function $c00edaef8129c70f$var$HmacDRBG(options) {
    if (!(this instanceof $c00edaef8129c70f$var$HmacDRBG)) return new $c00edaef8129c70f$var$HmacDRBG(options);
    this.hash = options.hash;
    this.predResist = !!options.predResist;
    this.outLen = this.hash.outSize;
    this.minEntropy = options.minEntropy || this.hash.hmacStrength;
    this._reseed = null;
    this.reseedInterval = null;
    this.K = null;
    this.V = null;
    var entropy = $c00edaef8129c70f$var$utils_1.toArray(options.entropy, options.entropyEnc || "hex");
    var nonce = $c00edaef8129c70f$var$utils_1.toArray(options.nonce, options.nonceEnc || "hex");
    var pers = $c00edaef8129c70f$var$utils_1.toArray(options.pers, options.persEnc || "hex");
    $c00edaef8129c70f$var$minimalisticAssert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
    this._init(entropy, nonce, pers);
}
var $c00edaef8129c70f$var$hmacDrbg = $c00edaef8129c70f$var$HmacDRBG;
$c00edaef8129c70f$var$HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
    var seed = entropy.concat(nonce).concat(pers);
    this.K = new Array(this.outLen / 8);
    this.V = new Array(this.outLen / 8);
    for(var i = 0; i < this.V.length; i++){
        this.K[i] = 0x00;
        this.V[i] = 0x01;
    }
    this._update(seed);
    this._reseed = 1;
    this.reseedInterval = 0x1000000000000; // 2^48
};
$c00edaef8129c70f$var$HmacDRBG.prototype._hmac = function hmac() {
    return new (0, (/*@__PURE__*/$parcel$interopDefault($8419e017f3d4d0cb$exports))).hmac(this.hash, this.K);
};
$c00edaef8129c70f$var$HmacDRBG.prototype._update = function update(seed) {
    var kmac = this._hmac().update(this.V).update([
        0x00
    ]);
    if (seed) kmac = kmac.update(seed);
    this.K = kmac.digest();
    this.V = this._hmac().update(this.V).digest();
    if (!seed) return;
    this.K = this._hmac().update(this.V).update([
        0x01
    ]).update(seed).digest();
    this.V = this._hmac().update(this.V).digest();
};
$c00edaef8129c70f$var$HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
    // Optional entropy enc
    if (typeof entropyEnc !== "string") {
        addEnc = add;
        add = entropyEnc;
        entropyEnc = null;
    }
    entropy = $c00edaef8129c70f$var$utils_1.toArray(entropy, entropyEnc);
    add = $c00edaef8129c70f$var$utils_1.toArray(add, addEnc);
    $c00edaef8129c70f$var$minimalisticAssert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
    this._update(entropy.concat(add || []));
    this._reseed = 1;
};
$c00edaef8129c70f$var$HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
    if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
    // Optional encoding
    if (typeof enc !== "string") {
        addEnc = add;
        add = enc;
        enc = null;
    }
    // Optional additional data
    if (add) {
        add = $c00edaef8129c70f$var$utils_1.toArray(add, addEnc || "hex");
        this._update(add);
    }
    var temp = [];
    while(temp.length < len){
        this.V = this._hmac().update(this.V).digest();
        temp = temp.concat(this.V);
    }
    var res = temp.slice(0, len);
    this._update(add);
    this._reseed++;
    return $c00edaef8129c70f$var$utils_1.encode(res, enc);
};
"use strict";
var $c00edaef8129c70f$var$assert$3 = $c00edaef8129c70f$var$utils_1$1.assert;
function $c00edaef8129c70f$var$KeyPair(ec, options) {
    this.ec = ec;
    this.priv = null;
    this.pub = null;
    // KeyPair(ec, { priv: ..., pub: ... })
    if (options.priv) this._importPrivate(options.priv, options.privEnc);
    if (options.pub) this._importPublic(options.pub, options.pubEnc);
}
var $c00edaef8129c70f$var$key = $c00edaef8129c70f$var$KeyPair;
$c00edaef8129c70f$var$KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
    if (pub instanceof $c00edaef8129c70f$var$KeyPair) return pub;
    return new $c00edaef8129c70f$var$KeyPair(ec, {
        pub: pub,
        pubEnc: enc
    });
};
$c00edaef8129c70f$var$KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
    if (priv instanceof $c00edaef8129c70f$var$KeyPair) return priv;
    return new $c00edaef8129c70f$var$KeyPair(ec, {
        priv: priv,
        privEnc: enc
    });
};
$c00edaef8129c70f$var$KeyPair.prototype.validate = function validate() {
    var pub = this.getPublic();
    if (pub.isInfinity()) return {
        result: false,
        reason: "Invalid public key"
    };
    if (!pub.validate()) return {
        result: false,
        reason: "Public key is not a point"
    };
    if (!pub.mul(this.ec.curve.n).isInfinity()) return {
        result: false,
        reason: "Public key * N != O"
    };
    return {
        result: true,
        reason: null
    };
};
$c00edaef8129c70f$var$KeyPair.prototype.getPublic = function getPublic(compact, enc) {
    // compact is optional argument
    if (typeof compact === "string") {
        enc = compact;
        compact = null;
    }
    if (!this.pub) this.pub = this.ec.g.mul(this.priv);
    if (!enc) return this.pub;
    return this.pub.encode(enc, compact);
};
$c00edaef8129c70f$var$KeyPair.prototype.getPrivate = function getPrivate(enc) {
    if (enc === "hex") return this.priv.toString(16, 2);
    else return this.priv;
};
$c00edaef8129c70f$var$KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
    this.priv = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(key, enc || 16);
    // Ensure that the priv won't be bigger than n, otherwise we may fail
    // in fixed multiplication method
    this.priv = this.priv.umod(this.ec.curve.n);
};
$c00edaef8129c70f$var$KeyPair.prototype._importPublic = function _importPublic(key, enc) {
    if (key.x || key.y) {
        // Montgomery points only have an `x` coordinate.
        // Weierstrass/Edwards points on the other hand have both `x` and
        // `y` coordinates.
        if (this.ec.curve.type === "mont") $c00edaef8129c70f$var$assert$3(key.x, "Need x coordinate");
        else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") $c00edaef8129c70f$var$assert$3(key.x && key.y, "Need both x and y coordinate");
        this.pub = this.ec.curve.point(key.x, key.y);
        return;
    }
    this.pub = this.ec.curve.decodePoint(key, enc);
};
// ECDH
$c00edaef8129c70f$var$KeyPair.prototype.derive = function derive(pub) {
    if (!pub.validate()) $c00edaef8129c70f$var$assert$3(pub.validate(), "public point not validated");
    return pub.mul(this.priv).getX();
};
// ECDSA
$c00edaef8129c70f$var$KeyPair.prototype.sign = function sign(msg, enc, options) {
    return this.ec.sign(msg, this, enc, options);
};
$c00edaef8129c70f$var$KeyPair.prototype.verify = function verify(msg, signature) {
    return this.ec.verify(msg, signature, this);
};
$c00edaef8129c70f$var$KeyPair.prototype.inspect = function inspect() {
    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
"use strict";
var $c00edaef8129c70f$var$assert$4 = $c00edaef8129c70f$var$utils_1$1.assert;
function $c00edaef8129c70f$var$Signature(options, enc) {
    if (options instanceof $c00edaef8129c70f$var$Signature) return options;
    if (this._importDER(options, enc)) return;
    $c00edaef8129c70f$var$assert$4(options.r && options.s, "Signature without r or s");
    this.r = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(options.r, 16);
    this.s = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(options.s, 16);
    if (options.recoveryParam === undefined) this.recoveryParam = null;
    else this.recoveryParam = options.recoveryParam;
}
var $c00edaef8129c70f$var$signature = $c00edaef8129c70f$var$Signature;
function $c00edaef8129c70f$var$Position() {
    this.place = 0;
}
function $c00edaef8129c70f$var$getLength(buf, p) {
    var initial = buf[p.place++];
    if (!(initial & 0x80)) return initial;
    var octetLen = initial & 0xf;
    // Indefinite length or overflow
    if (octetLen === 0 || octetLen > 4) return false;
    var val = 0;
    for(var i = 0, off = p.place; i < octetLen; i++, off++){
        val <<= 8;
        val |= buf[off];
        val >>>= 0;
    }
    // Leading zeroes
    if (val <= 0x7f) return false;
    p.place = off;
    return val;
}
function $c00edaef8129c70f$var$rmPadding(buf) {
    var i = 0;
    var len = buf.length - 1;
    while(!buf[i] && !(buf[i + 1] & 0x80) && i < len)i++;
    if (i === 0) return buf;
    return buf.slice(i);
}
$c00edaef8129c70f$var$Signature.prototype._importDER = function _importDER(data, enc) {
    data = $c00edaef8129c70f$var$utils_1$1.toArray(data, enc);
    var p = new $c00edaef8129c70f$var$Position();
    if (data[p.place++] !== 0x30) return false;
    var len = $c00edaef8129c70f$var$getLength(data, p);
    if (len === false) return false;
    if (len + p.place !== data.length) return false;
    if (data[p.place++] !== 0x02) return false;
    var rlen = $c00edaef8129c70f$var$getLength(data, p);
    if (rlen === false) return false;
    var r = data.slice(p.place, rlen + p.place);
    p.place += rlen;
    if (data[p.place++] !== 0x02) return false;
    var slen = $c00edaef8129c70f$var$getLength(data, p);
    if (slen === false) return false;
    if (data.length !== slen + p.place) return false;
    var s = data.slice(p.place, slen + p.place);
    if (r[0] === 0) {
        if (r[1] & 0x80) r = r.slice(1);
        else // Leading zeroes
        return false;
    }
    if (s[0] === 0) {
        if (s[1] & 0x80) s = s.slice(1);
        else // Leading zeroes
        return false;
    }
    this.r = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(r);
    this.s = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(s);
    this.recoveryParam = null;
    return true;
};
function $c00edaef8129c70f$var$constructLength(arr, len) {
    if (len < 0x80) {
        arr.push(len);
        return;
    }
    var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
    arr.push(octets | 0x80);
    while(--octets)arr.push(len >>> (octets << 3) & 0xff);
    arr.push(len);
}
$c00edaef8129c70f$var$Signature.prototype.toDER = function toDER(enc) {
    var r = this.r.toArray();
    var s = this.s.toArray();
    // Pad values
    if (r[0] & 0x80) r = [
        0
    ].concat(r);
    // Pad values
    if (s[0] & 0x80) s = [
        0
    ].concat(s);
    r = $c00edaef8129c70f$var$rmPadding(r);
    s = $c00edaef8129c70f$var$rmPadding(s);
    while(!s[0] && !(s[1] & 0x80))s = s.slice(1);
    var arr = [
        0x02
    ];
    $c00edaef8129c70f$var$constructLength(arr, r.length);
    arr = arr.concat(r);
    arr.push(0x02);
    $c00edaef8129c70f$var$constructLength(arr, s.length);
    var backHalf = arr.concat(s);
    var res = [
        0x30
    ];
    $c00edaef8129c70f$var$constructLength(res, backHalf.length);
    res = res.concat(backHalf);
    return $c00edaef8129c70f$var$utils_1$1.encode(res, enc);
};
"use strict";
var $c00edaef8129c70f$var$rand = /*RicMoo:ethers:require(brorand)*/ function() {
    throw new Error("unsupported");
};
var $c00edaef8129c70f$var$assert$5 = $c00edaef8129c70f$var$utils_1$1.assert;
function $c00edaef8129c70f$var$EC(options) {
    if (!(this instanceof $c00edaef8129c70f$var$EC)) return new $c00edaef8129c70f$var$EC(options);
    // Shortcut `elliptic.ec(curve-name)`
    if (typeof options === "string") {
        $c00edaef8129c70f$var$assert$5(Object.prototype.hasOwnProperty.call($c00edaef8129c70f$var$curves_1, options), "Unknown curve " + options);
        options = $c00edaef8129c70f$var$curves_1[options];
    }
    // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
    if (options instanceof $c00edaef8129c70f$var$curves_1.PresetCurve) options = {
        curve: options
    };
    this.curve = options.curve.curve;
    this.n = this.curve.n;
    this.nh = this.n.ushrn(1);
    this.g = this.curve.g;
    // Point on curve
    this.g = options.curve.g;
    this.g.precompute(options.curve.n.bitLength() + 1);
    // Hash for function for DRBG
    this.hash = options.hash || options.curve.hash;
}
var $c00edaef8129c70f$var$ec = $c00edaef8129c70f$var$EC;
$c00edaef8129c70f$var$EC.prototype.keyPair = function keyPair(options) {
    return new $c00edaef8129c70f$var$key(this, options);
};
$c00edaef8129c70f$var$EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
    return $c00edaef8129c70f$var$key.fromPrivate(this, priv, enc);
};
$c00edaef8129c70f$var$EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
    return $c00edaef8129c70f$var$key.fromPublic(this, pub, enc);
};
$c00edaef8129c70f$var$EC.prototype.genKeyPair = function genKeyPair(options) {
    if (!options) options = {};
    // Instantiate Hmac_DRBG
    var drbg = new $c00edaef8129c70f$var$hmacDrbg({
        hash: this.hash,
        pers: options.pers,
        persEnc: options.persEnc || "utf8",
        entropy: options.entropy || $c00edaef8129c70f$var$rand(this.hash.hmacStrength),
        entropyEnc: options.entropy && options.entropyEnc || "utf8",
        nonce: this.n.toArray()
    });
    var bytes = this.n.byteLength();
    var ns2 = this.n.sub(new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(2));
    for(;;){
        var priv = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(drbg.generate(bytes));
        if (priv.cmp(ns2) > 0) continue;
        priv.iaddn(1);
        return this.keyFromPrivate(priv);
    }
};
$c00edaef8129c70f$var$EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
    var delta = msg.byteLength() * 8 - this.n.bitLength();
    if (delta > 0) msg = msg.ushrn(delta);
    if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);
    else return msg;
};
$c00edaef8129c70f$var$EC.prototype.sign = function sign(msg, key, enc, options) {
    if (typeof enc === "object") {
        options = enc;
        enc = null;
    }
    if (!options) options = {};
    key = this.keyFromPrivate(key, enc);
    msg = this._truncateToN(new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(msg, 16));
    // Zero-extend key to provide enough entropy
    var bytes = this.n.byteLength();
    var bkey = key.getPrivate().toArray("be", bytes);
    // Zero-extend nonce to have the same byte size as N
    var nonce = msg.toArray("be", bytes);
    // Instantiate Hmac_DRBG
    var drbg = new $c00edaef8129c70f$var$hmacDrbg({
        hash: this.hash,
        entropy: bkey,
        nonce: nonce,
        pers: options.pers,
        persEnc: options.persEnc || "utf8"
    });
    // Number of bytes to generate
    var ns1 = this.n.sub(new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(1));
    for(var iter = 0;; iter++){
        var k = options.k ? options.k(iter) : new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(drbg.generate(this.n.byteLength()));
        k = this._truncateToN(k, true);
        if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;
        var kp = this.g.mul(k);
        if (kp.isInfinity()) continue;
        var kpX = kp.getX();
        var r = kpX.umod(this.n);
        if (r.cmpn(0) === 0) continue;
        var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
        s = s.umod(this.n);
        if (s.cmpn(0) === 0) continue;
        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);
        // Use complement of `s`, if it is > `n / 2`
        if (options.canonical && s.cmp(this.nh) > 0) {
            s = this.n.sub(s);
            recoveryParam ^= 1;
        }
        return new $c00edaef8129c70f$var$signature({
            r: r,
            s: s,
            recoveryParam: recoveryParam
        });
    }
};
$c00edaef8129c70f$var$EC.prototype.verify = function verify(msg, signature$1, key, enc) {
    msg = this._truncateToN(new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(msg, 16));
    key = this.keyFromPublic(key, enc);
    signature$1 = new $c00edaef8129c70f$var$signature(signature$1, "hex");
    // Perform primitive values validation
    var r = signature$1.r;
    var s = signature$1.s;
    if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;
    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;
    // Validate signature
    var sinv = s.invm(this.n);
    var u1 = sinv.mul(msg).umod(this.n);
    var u2 = sinv.mul(r).umod(this.n);
    var p;
    if (!this.curve._maxwellTrick) {
        p = this.g.mulAdd(u1, key.getPublic(), u2);
        if (p.isInfinity()) return false;
        return p.getX().umod(this.n).cmp(r) === 0;
    }
    // NOTE: Greg Maxwell's trick, inspired by:
    // https://git.io/vad3K
    p = this.g.jmulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity()) return false;
    // Compare `p.x` of Jacobian point with `r`,
    // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
    // inverse of `p.z^2`
    return p.eqXToP(r);
};
$c00edaef8129c70f$var$EC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
    $c00edaef8129c70f$var$assert$5((3 & j) === j, "The recovery param is more than two bits");
    signature$1 = new $c00edaef8129c70f$var$signature(signature$1, enc);
    var n = this.n;
    var e = new (0, (/*@__PURE__*/$parcel$interopDefault($7QIDV)))(msg);
    var r = signature$1.r;
    var s = signature$1.s;
    // A set LSB signifies that the y-coordinate is odd
    var isYOdd = j & 1;
    var isSecondKey = j >> 1;
    if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error("Unable to find sencond key candinate");
    // 1.1. Let x = r + jn.
    if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
    else r = this.curve.pointFromX(r, isYOdd);
    var rInv = signature$1.r.invm(n);
    var s1 = n.sub(e).mul(rInv).umod(n);
    var s2 = s.mul(rInv).umod(n);
    // 1.6.1 Compute Q = r^-1 (sR -  eG)
    //               Q = r^-1 (sR + -eG)
    return this.g.mulAdd(s1, r, s2);
};
$c00edaef8129c70f$var$EC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
    signature$1 = new $c00edaef8129c70f$var$signature(signature$1, enc);
    if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;
    for(var i = 0; i < 4; i++){
        var Qprime;
        try {
            Qprime = this.recoverPubKey(e, signature$1, i);
        } catch (e) {
            continue;
        }
        if (Qprime.eq(Q)) return i;
    }
    throw new Error("Unable to find valid recovery factor");
};
var $c00edaef8129c70f$var$elliptic_1 = $c00edaef8129c70f$var$createCommonjsModule(function(module, exports) {
    "use strict";
    var elliptic = exports;
    elliptic.version = "6.5.4";
    elliptic.utils = $c00edaef8129c70f$var$utils_1$1;
    elliptic.rand = /*RicMoo:ethers:require(brorand)*/ function() {
        throw new Error("unsupported");
    };
    elliptic.curve = $c00edaef8129c70f$var$curve_1;
    elliptic.curves = $c00edaef8129c70f$var$curves_1;
    // Protocols
    elliptic.ec = $c00edaef8129c70f$var$ec;
    elliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/ null;
});
var $c00edaef8129c70f$export$129fe12d32abc311 = $c00edaef8129c70f$var$elliptic_1.ec;



var $eg8oT = parcelRequire("eg8oT");


var $cbv61 = parcelRequire("cbv61");
const $c6688d29f691052a$export$83d89fbfd8236492 = "signing-key/5.7.0";


"use strict";
const $bccb365df25a232d$var$logger = new (0, $cbv61.Logger)((0, $c6688d29f691052a$export$83d89fbfd8236492));
let $bccb365df25a232d$var$_curve = null;
function $bccb365df25a232d$var$getCurve() {
    if (!$bccb365df25a232d$var$_curve) $bccb365df25a232d$var$_curve = new (0, $c00edaef8129c70f$export$129fe12d32abc311)("secp256k1");
    return $bccb365df25a232d$var$_curve;
}
class $bccb365df25a232d$export$21643ca94aed3e83 {
    constructor(privateKey){
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "curve", "secp256k1");
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "privateKey", (0, $eg8oT.hexlify)(privateKey));
        if ((0, $eg8oT.hexDataLength)(this.privateKey) !== 32) $bccb365df25a232d$var$logger.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
        const keyPair = $bccb365df25a232d$var$getCurve().keyFromPrivate((0, $eg8oT.arrayify)(this.privateKey));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "publicKey", "0x" + keyPair.getPublic(false, "hex"));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "compressedPublicKey", "0x" + keyPair.getPublic(true, "hex"));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_isSigningKey", true);
    }
    _addPoint(other) {
        const p0 = $bccb365df25a232d$var$getCurve().keyFromPublic((0, $eg8oT.arrayify)(this.publicKey));
        const p1 = $bccb365df25a232d$var$getCurve().keyFromPublic((0, $eg8oT.arrayify)(other));
        return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
    }
    signDigest(digest) {
        const keyPair = $bccb365df25a232d$var$getCurve().keyFromPrivate((0, $eg8oT.arrayify)(this.privateKey));
        const digestBytes = (0, $eg8oT.arrayify)(digest);
        if (digestBytes.length !== 32) $bccb365df25a232d$var$logger.throwArgumentError("bad digest length", "digest", digest);
        const signature = keyPair.sign(digestBytes, {
            canonical: true
        });
        return (0, $eg8oT.splitSignature)({
            recoveryParam: signature.recoveryParam,
            r: (0, $eg8oT.hexZeroPad)("0x" + signature.r.toString(16), 32),
            s: (0, $eg8oT.hexZeroPad)("0x" + signature.s.toString(16), 32)
        });
    }
    computeSharedSecret(otherKey) {
        const keyPair = $bccb365df25a232d$var$getCurve().keyFromPrivate((0, $eg8oT.arrayify)(this.privateKey));
        const otherKeyPair = $bccb365df25a232d$var$getCurve().keyFromPublic((0, $eg8oT.arrayify)($bccb365df25a232d$export$4a89473d39301224(otherKey)));
        return (0, $eg8oT.hexZeroPad)("0x" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);
    }
    static isSigningKey(value) {
        return !!(value && value._isSigningKey);
    }
}
function $bccb365df25a232d$export$952dd09fbe0232b7(digest, signature) {
    const sig = (0, $eg8oT.splitSignature)(signature);
    const rs = {
        r: (0, $eg8oT.arrayify)(sig.r),
        s: (0, $eg8oT.arrayify)(sig.s)
    };
    return "0x" + $bccb365df25a232d$var$getCurve().recoverPubKey((0, $eg8oT.arrayify)(digest), rs, sig.recoveryParam).encode("hex", false);
}
function $bccb365df25a232d$export$4a89473d39301224(key, compressed) {
    const bytes = (0, $eg8oT.arrayify)(key);
    if (bytes.length === 32) {
        const signingKey = new $bccb365df25a232d$export$21643ca94aed3e83(bytes);
        if (compressed) return "0x" + $bccb365df25a232d$var$getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
        return signingKey.publicKey;
    } else if (bytes.length === 33) {
        if (compressed) return (0, $eg8oT.hexlify)(bytes);
        return "0x" + $bccb365df25a232d$var$getCurve().keyFromPublic(bytes).getPublic(false, "hex");
    } else if (bytes.length === 65) {
        if (!compressed) return (0, $eg8oT.hexlify)(bytes);
        return "0x" + $bccb365df25a232d$var$getCurve().keyFromPublic(bytes).getPublic(true, "hex");
    }
    return $bccb365df25a232d$var$logger.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}



var $cbv61 = parcelRequire("cbv61");
const $2007c6ecd28aca7a$export$83d89fbfd8236492 = "transactions/5.7.0";


"use strict";
const $1b59a48ea3c080da$var$logger = new (0, $cbv61.Logger)((0, $2007c6ecd28aca7a$export$83d89fbfd8236492));
var $1b59a48ea3c080da$export$80349e05e0724e11;
(function(TransactionTypes) {
    TransactionTypes[TransactionTypes["legacy"] = 0] = "legacy";
    TransactionTypes[TransactionTypes["eip2930"] = 1] = "eip2930";
    TransactionTypes[TransactionTypes["eip1559"] = 2] = "eip1559";
})($1b59a48ea3c080da$export$80349e05e0724e11 || ($1b59a48ea3c080da$export$80349e05e0724e11 = {}));
///////////////////////////////
function $1b59a48ea3c080da$var$handleAddress(value) {
    if (value === "0x") return null;
    return (0, $8b38701037b2e5d8$export$88411125f012957a)(value);
}
function $1b59a48ea3c080da$var$handleNumber(value) {
    if (value === "0x") return 0, $5fc7f78f7b47b638$export$aaef8a3eae948f03;
    return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value);
}
// Legacy Transaction Fields
const $1b59a48ea3c080da$var$transactionFields = [
    {
        name: "nonce",
        maxLength: 32,
        numeric: true
    },
    {
        name: "gasPrice",
        maxLength: 32,
        numeric: true
    },
    {
        name: "gasLimit",
        maxLength: 32,
        numeric: true
    },
    {
        name: "to",
        length: 20
    },
    {
        name: "value",
        maxLength: 32,
        numeric: true
    },
    {
        name: "data"
    }
];
const $1b59a48ea3c080da$var$allowedTransactionKeys = {
    chainId: true,
    data: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    type: true,
    value: true
};
function $1b59a48ea3c080da$export$e67e2732ba9803f9(key) {
    const publicKey = (0, $bccb365df25a232d$export$4a89473d39301224)(key);
    return (0, $8b38701037b2e5d8$export$88411125f012957a)((0, $eg8oT.hexDataSlice)((0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $eg8oT.hexDataSlice)(publicKey, 1)), 12));
}
function $1b59a48ea3c080da$export$23cc18f96d8510e2(digest, signature) {
    return $1b59a48ea3c080da$export$e67e2732ba9803f9((0, $bccb365df25a232d$export$952dd09fbe0232b7)((0, $eg8oT.arrayify)(digest), signature));
}
function $1b59a48ea3c080da$var$formatNumber(value, name) {
    const result = (0, $eg8oT.stripZeros)((0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value).toHexString());
    if (result.length > 32) $1b59a48ea3c080da$var$logger.throwArgumentError("invalid length for " + name, "transaction:" + name, value);
    return result;
}
function $1b59a48ea3c080da$var$accessSetify(addr, storageKeys) {
    return {
        address: (0, $8b38701037b2e5d8$export$88411125f012957a)(addr),
        storageKeys: (storageKeys || []).map((storageKey, index)=>{
            if ((0, $eg8oT.hexDataLength)(storageKey) !== 32) $1b59a48ea3c080da$var$logger.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index}]`, storageKey);
            return storageKey.toLowerCase();
        })
    };
}
function $1b59a48ea3c080da$export$6c8662b1600dce2(value) {
    if (Array.isArray(value)) return value.map((set, index)=>{
        if (Array.isArray(set)) {
            if (set.length > 2) $1b59a48ea3c080da$var$logger.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index}]`, set);
            return $1b59a48ea3c080da$var$accessSetify(set[0], set[1]);
        }
        return $1b59a48ea3c080da$var$accessSetify(set.address, set.storageKeys);
    });
    const result = Object.keys(value).map((addr)=>{
        const storageKeys = value[addr].reduce((accum, storageKey)=>{
            accum[storageKey] = true;
            return accum;
        }, {});
        return $1b59a48ea3c080da$var$accessSetify(addr, Object.keys(storageKeys).sort());
    });
    result.sort((a, b)=>a.address.localeCompare(b.address));
    return result;
}
function $1b59a48ea3c080da$var$formatAccessList(value) {
    return $1b59a48ea3c080da$export$6c8662b1600dce2(value).map((set)=>[
            set.address,
            set.storageKeys
        ]);
}
function $1b59a48ea3c080da$var$_serializeEip1559(transaction, signature) {
    // If there is an explicit gasPrice, make sure it matches the
    // EIP-1559 fees; otherwise they may not understand what they
    // think they are setting in terms of fee.
    if (transaction.gasPrice != null) {
        const gasPrice = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(transaction.gasPrice);
        const maxFeePerGas = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(transaction.maxFeePerGas || 0);
        if (!gasPrice.eq(maxFeePerGas)) $1b59a48ea3c080da$var$logger.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
            gasPrice: gasPrice,
            maxFeePerGas: maxFeePerGas
        });
    }
    const fields = [
        $1b59a48ea3c080da$var$formatNumber(transaction.chainId || 0, "chainId"),
        $1b59a48ea3c080da$var$formatNumber(transaction.nonce || 0, "nonce"),
        $1b59a48ea3c080da$var$formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
        $1b59a48ea3c080da$var$formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"),
        $1b59a48ea3c080da$var$formatNumber(transaction.gasLimit || 0, "gasLimit"),
        transaction.to != null ? (0, $8b38701037b2e5d8$export$88411125f012957a)(transaction.to) : "0x",
        $1b59a48ea3c080da$var$formatNumber(transaction.value || 0, "value"),
        transaction.data || "0x",
        $1b59a48ea3c080da$var$formatAccessList(transaction.accessList || [])
    ];
    if (signature) {
        const sig = (0, $eg8oT.splitSignature)(signature);
        fields.push($1b59a48ea3c080da$var$formatNumber(sig.recoveryParam, "recoveryParam"));
        fields.push((0, $eg8oT.stripZeros)(sig.r));
        fields.push((0, $eg8oT.stripZeros)(sig.s));
    }
    return (0, $eg8oT.hexConcat)([
        "0x02",
        $4G7Hv.encode(fields)
    ]);
}
function $1b59a48ea3c080da$var$_serializeEip2930(transaction, signature) {
    const fields = [
        $1b59a48ea3c080da$var$formatNumber(transaction.chainId || 0, "chainId"),
        $1b59a48ea3c080da$var$formatNumber(transaction.nonce || 0, "nonce"),
        $1b59a48ea3c080da$var$formatNumber(transaction.gasPrice || 0, "gasPrice"),
        $1b59a48ea3c080da$var$formatNumber(transaction.gasLimit || 0, "gasLimit"),
        transaction.to != null ? (0, $8b38701037b2e5d8$export$88411125f012957a)(transaction.to) : "0x",
        $1b59a48ea3c080da$var$formatNumber(transaction.value || 0, "value"),
        transaction.data || "0x",
        $1b59a48ea3c080da$var$formatAccessList(transaction.accessList || [])
    ];
    if (signature) {
        const sig = (0, $eg8oT.splitSignature)(signature);
        fields.push($1b59a48ea3c080da$var$formatNumber(sig.recoveryParam, "recoveryParam"));
        fields.push((0, $eg8oT.stripZeros)(sig.r));
        fields.push((0, $eg8oT.stripZeros)(sig.s));
    }
    return (0, $eg8oT.hexConcat)([
        "0x01",
        $4G7Hv.encode(fields)
    ]);
}
// Legacy Transactions and EIP-155
function $1b59a48ea3c080da$var$_serialize(transaction, signature) {
    (0, $b19fb92a27e5f35f$exports.checkProperties)(transaction, $1b59a48ea3c080da$var$allowedTransactionKeys);
    const raw = [];
    $1b59a48ea3c080da$var$transactionFields.forEach(function(fieldInfo) {
        let value = transaction[fieldInfo.name] || [];
        const options = {};
        if (fieldInfo.numeric) options.hexPad = "left";
        value = (0, $eg8oT.arrayify)((0, $eg8oT.hexlify)(value, options));
        // Fixed-width field
        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) $1b59a48ea3c080da$var$logger.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
        // Variable-width (with a maximum)
        if (fieldInfo.maxLength) {
            value = (0, $eg8oT.stripZeros)(value);
            if (value.length > fieldInfo.maxLength) $1b59a48ea3c080da$var$logger.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
        }
        raw.push((0, $eg8oT.hexlify)(value));
    });
    let chainId = 0;
    if (transaction.chainId != null) {
        // A chainId was provided; if non-zero we'll use EIP-155
        chainId = transaction.chainId;
        if (typeof chainId !== "number") $1b59a48ea3c080da$var$logger.throwArgumentError("invalid transaction.chainId", "transaction", transaction);
    } else if (signature && !(0, $eg8oT.isBytesLike)(signature) && signature.v > 28) // No chainId provided, but the signature is signing with EIP-155; derive chainId
    chainId = Math.floor((signature.v - 35) / 2);
    // We have an EIP-155 transaction (chainId was specified and non-zero)
    if (chainId !== 0) {
        raw.push((0, $eg8oT.hexlify)(chainId)); // @TODO: hexValue?
        raw.push("0x");
        raw.push("0x");
    }
    // Requesting an unsigned transaction
    if (!signature) return $4G7Hv.encode(raw);
    // The splitSignature will ensure the transaction has a recoveryParam in the
    // case that the signTransaction function only adds a v.
    const sig = (0, $eg8oT.splitSignature)(signature);
    // We pushed a chainId and null r, s on for hashing only; remove those
    let v = 27 + sig.recoveryParam;
    if (chainId !== 0) {
        raw.pop();
        raw.pop();
        raw.pop();
        v += chainId * 2 + 8;
        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!
        if (sig.v > 28 && sig.v !== v) $1b59a48ea3c080da$var$logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
    } else if (sig.v !== v) $1b59a48ea3c080da$var$logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
    raw.push((0, $eg8oT.hexlify)(v));
    raw.push((0, $eg8oT.stripZeros)((0, $eg8oT.arrayify)(sig.r)));
    raw.push((0, $eg8oT.stripZeros)((0, $eg8oT.arrayify)(sig.s)));
    return $4G7Hv.encode(raw);
}
function $1b59a48ea3c080da$export$dfdc1655ccc5b9cb(transaction, signature) {
    // Legacy and EIP-155 Transactions
    if (transaction.type == null || transaction.type === 0) {
        if (transaction.accessList != null) $1b59a48ea3c080da$var$logger.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", transaction);
        return $1b59a48ea3c080da$var$_serialize(transaction, signature);
    }
    // Typed Transactions (EIP-2718)
    switch(transaction.type){
        case 1:
            return $1b59a48ea3c080da$var$_serializeEip2930(transaction, signature);
        case 2:
            return $1b59a48ea3c080da$var$_serializeEip1559(transaction, signature);
        default:
            break;
    }
    return $1b59a48ea3c080da$var$logger.throwError(`unsupported transaction type: ${transaction.type}`, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
        operation: "serializeTransaction",
        transactionType: transaction.type
    });
}
function $1b59a48ea3c080da$var$_parseEipSignature(tx, fields, serialize) {
    try {
        const recid = $1b59a48ea3c080da$var$handleNumber(fields[0]).toNumber();
        if (recid !== 0 && recid !== 1) throw new Error("bad recid");
        tx.v = recid;
    } catch (error) {
        $1b59a48ea3c080da$var$logger.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
    }
    tx.r = (0, $eg8oT.hexZeroPad)(fields[1], 32);
    tx.s = (0, $eg8oT.hexZeroPad)(fields[2], 32);
    try {
        const digest = (0, $dd686f272f8051f8$export$f8151fce47ad1c35)(serialize(tx));
        tx.from = $1b59a48ea3c080da$export$23cc18f96d8510e2(digest, {
            r: tx.r,
            s: tx.s,
            recoveryParam: tx.v
        });
    } catch (error) {}
}
function $1b59a48ea3c080da$var$_parseEip1559(payload) {
    const transaction = $4G7Hv.decode(payload.slice(1));
    if (transaction.length !== 9 && transaction.length !== 12) $1b59a48ea3c080da$var$logger.throwArgumentError("invalid component count for transaction type: 2", "payload", (0, $eg8oT.hexlify)(payload));
    const maxPriorityFeePerGas = $1b59a48ea3c080da$var$handleNumber(transaction[2]);
    const maxFeePerGas = $1b59a48ea3c080da$var$handleNumber(transaction[3]);
    const tx = {
        type: 2,
        chainId: $1b59a48ea3c080da$var$handleNumber(transaction[0]).toNumber(),
        nonce: $1b59a48ea3c080da$var$handleNumber(transaction[1]).toNumber(),
        maxPriorityFeePerGas: maxPriorityFeePerGas,
        maxFeePerGas: maxFeePerGas,
        gasPrice: null,
        gasLimit: $1b59a48ea3c080da$var$handleNumber(transaction[4]),
        to: $1b59a48ea3c080da$var$handleAddress(transaction[5]),
        value: $1b59a48ea3c080da$var$handleNumber(transaction[6]),
        data: transaction[7],
        accessList: $1b59a48ea3c080da$export$6c8662b1600dce2(transaction[8])
    };
    // Unsigned EIP-1559 Transaction
    if (transaction.length === 9) return tx;
    tx.hash = (0, $dd686f272f8051f8$export$f8151fce47ad1c35)(payload);
    $1b59a48ea3c080da$var$_parseEipSignature(tx, transaction.slice(9), $1b59a48ea3c080da$var$_serializeEip1559);
    return tx;
}
function $1b59a48ea3c080da$var$_parseEip2930(payload) {
    const transaction = $4G7Hv.decode(payload.slice(1));
    if (transaction.length !== 8 && transaction.length !== 11) $1b59a48ea3c080da$var$logger.throwArgumentError("invalid component count for transaction type: 1", "payload", (0, $eg8oT.hexlify)(payload));
    const tx = {
        type: 1,
        chainId: $1b59a48ea3c080da$var$handleNumber(transaction[0]).toNumber(),
        nonce: $1b59a48ea3c080da$var$handleNumber(transaction[1]).toNumber(),
        gasPrice: $1b59a48ea3c080da$var$handleNumber(transaction[2]),
        gasLimit: $1b59a48ea3c080da$var$handleNumber(transaction[3]),
        to: $1b59a48ea3c080da$var$handleAddress(transaction[4]),
        value: $1b59a48ea3c080da$var$handleNumber(transaction[5]),
        data: transaction[6],
        accessList: $1b59a48ea3c080da$export$6c8662b1600dce2(transaction[7])
    };
    // Unsigned EIP-2930 Transaction
    if (transaction.length === 8) return tx;
    tx.hash = (0, $dd686f272f8051f8$export$f8151fce47ad1c35)(payload);
    $1b59a48ea3c080da$var$_parseEipSignature(tx, transaction.slice(8), $1b59a48ea3c080da$var$_serializeEip2930);
    return tx;
}
// Legacy Transactions and EIP-155
function $1b59a48ea3c080da$var$_parse(rawTransaction) {
    const transaction = $4G7Hv.decode(rawTransaction);
    if (transaction.length !== 9 && transaction.length !== 6) $1b59a48ea3c080da$var$logger.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
    const tx = {
        nonce: $1b59a48ea3c080da$var$handleNumber(transaction[0]).toNumber(),
        gasPrice: $1b59a48ea3c080da$var$handleNumber(transaction[1]),
        gasLimit: $1b59a48ea3c080da$var$handleNumber(transaction[2]),
        to: $1b59a48ea3c080da$var$handleAddress(transaction[3]),
        value: $1b59a48ea3c080da$var$handleNumber(transaction[4]),
        data: transaction[5],
        chainId: 0
    };
    // Legacy unsigned transaction
    if (transaction.length === 6) return tx;
    try {
        tx.v = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(transaction[6]).toNumber();
    } catch (error) {
        // @TODO: What makes snese to do? The v is too big
        return tx;
    }
    tx.r = (0, $eg8oT.hexZeroPad)(transaction[7], 32);
    tx.s = (0, $eg8oT.hexZeroPad)(transaction[8], 32);
    if ((0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(tx.r).isZero() && (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(tx.s).isZero()) {
        // EIP-155 unsigned transaction
        tx.chainId = tx.v;
        tx.v = 0;
    } else {
        // Signed Transaction
        tx.chainId = Math.floor((tx.v - 35) / 2);
        if (tx.chainId < 0) tx.chainId = 0;
        let recoveryParam = tx.v - 27;
        const raw = transaction.slice(0, 6);
        if (tx.chainId !== 0) {
            raw.push((0, $eg8oT.hexlify)(tx.chainId));
            raw.push("0x");
            raw.push("0x");
            recoveryParam -= tx.chainId * 2 + 8;
        }
        const digest = (0, $dd686f272f8051f8$export$f8151fce47ad1c35)($4G7Hv.encode(raw));
        try {
            tx.from = $1b59a48ea3c080da$export$23cc18f96d8510e2(digest, {
                r: (0, $eg8oT.hexlify)(tx.r),
                s: (0, $eg8oT.hexlify)(tx.s),
                recoveryParam: recoveryParam
            });
        } catch (error) {}
        tx.hash = (0, $dd686f272f8051f8$export$f8151fce47ad1c35)(rawTransaction);
    }
    tx.type = null;
    return tx;
}
function $1b59a48ea3c080da$export$98e6a39c04603d36(rawTransaction) {
    const payload = (0, $eg8oT.arrayify)(rawTransaction);
    // Legacy and EIP-155 Transactions
    if (payload[0] > 0x7f) return $1b59a48ea3c080da$var$_parse(payload);
    // Typed Transaction (EIP-2718)
    switch(payload[0]){
        case 1:
            return $1b59a48ea3c080da$var$_parseEip2930(payload);
        case 2:
            return $1b59a48ea3c080da$var$_parseEip1559(payload);
        default:
            break;
    }
    return $1b59a48ea3c080da$var$logger.throwError(`unsupported transaction type: ${payload[0]}`, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
        operation: "parseTransaction",
        transactionType: payload[0]
    });
}



var $cbv61 = parcelRequire("cbv61");

"use strict";
const $a833276422c6da56$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
class $a833276422c6da56$export$a06636add2a09fd8 {
    constructor(){
        this.formats = this.getDefaultFormats();
    }
    getDefaultFormats() {
        const formats = {};
        const address = this.address.bind(this);
        const bigNumber = this.bigNumber.bind(this);
        const blockTag = this.blockTag.bind(this);
        const data = this.data.bind(this);
        const hash = this.hash.bind(this);
        const hex = this.hex.bind(this);
        const number = this.number.bind(this);
        const type = this.type.bind(this);
        const strictData = (v)=>{
            return this.data(v, true);
        };
        formats.transaction = {
            hash: hash,
            type: type,
            accessList: $a833276422c6da56$export$a06636add2a09fd8.allowNull(this.accessList.bind(this), null),
            blockHash: $a833276422c6da56$export$a06636add2a09fd8.allowNull(hash, null),
            blockNumber: $a833276422c6da56$export$a06636add2a09fd8.allowNull(number, null),
            transactionIndex: $a833276422c6da56$export$a06636add2a09fd8.allowNull(number, null),
            confirmations: $a833276422c6da56$export$a06636add2a09fd8.allowNull(number, null),
            from: address,
            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)
            // must be set
            gasPrice: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber),
            maxPriorityFeePerGas: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber),
            maxFeePerGas: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber),
            gasLimit: bigNumber,
            to: $a833276422c6da56$export$a06636add2a09fd8.allowNull(address, null),
            value: bigNumber,
            nonce: number,
            data: data,
            r: $a833276422c6da56$export$a06636add2a09fd8.allowNull(this.uint256),
            s: $a833276422c6da56$export$a06636add2a09fd8.allowNull(this.uint256),
            v: $a833276422c6da56$export$a06636add2a09fd8.allowNull(number),
            creates: $a833276422c6da56$export$a06636add2a09fd8.allowNull(address, null),
            raw: $a833276422c6da56$export$a06636add2a09fd8.allowNull(data)
        };
        formats.transactionRequest = {
            from: $a833276422c6da56$export$a06636add2a09fd8.allowNull(address),
            nonce: $a833276422c6da56$export$a06636add2a09fd8.allowNull(number),
            gasLimit: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber),
            gasPrice: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber),
            maxPriorityFeePerGas: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber),
            maxFeePerGas: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber),
            to: $a833276422c6da56$export$a06636add2a09fd8.allowNull(address),
            value: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber),
            data: $a833276422c6da56$export$a06636add2a09fd8.allowNull(strictData),
            type: $a833276422c6da56$export$a06636add2a09fd8.allowNull(number),
            accessList: $a833276422c6da56$export$a06636add2a09fd8.allowNull(this.accessList.bind(this), null)
        };
        formats.receiptLog = {
            transactionIndex: number,
            blockNumber: number,
            transactionHash: hash,
            address: address,
            topics: $a833276422c6da56$export$a06636add2a09fd8.arrayOf(hash),
            data: data,
            logIndex: number,
            blockHash: hash
        };
        formats.receipt = {
            to: $a833276422c6da56$export$a06636add2a09fd8.allowNull(this.address, null),
            from: $a833276422c6da56$export$a06636add2a09fd8.allowNull(this.address, null),
            contractAddress: $a833276422c6da56$export$a06636add2a09fd8.allowNull(address, null),
            transactionIndex: number,
            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt
            root: $a833276422c6da56$export$a06636add2a09fd8.allowNull(hex),
            gasUsed: bigNumber,
            logsBloom: $a833276422c6da56$export$a06636add2a09fd8.allowNull(data),
            blockHash: hash,
            transactionHash: hash,
            logs: $a833276422c6da56$export$a06636add2a09fd8.arrayOf(this.receiptLog.bind(this)),
            blockNumber: number,
            confirmations: $a833276422c6da56$export$a06636add2a09fd8.allowNull(number, null),
            cumulativeGasUsed: bigNumber,
            effectiveGasPrice: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber),
            status: $a833276422c6da56$export$a06636add2a09fd8.allowNull(number),
            type: type
        };
        formats.block = {
            hash: $a833276422c6da56$export$a06636add2a09fd8.allowNull(hash),
            parentHash: hash,
            number: number,
            timestamp: number,
            nonce: $a833276422c6da56$export$a06636add2a09fd8.allowNull(hex),
            difficulty: this.difficulty.bind(this),
            gasLimit: bigNumber,
            gasUsed: bigNumber,
            miner: $a833276422c6da56$export$a06636add2a09fd8.allowNull(address),
            extraData: data,
            transactions: $a833276422c6da56$export$a06636add2a09fd8.allowNull($a833276422c6da56$export$a06636add2a09fd8.arrayOf(hash)),
            baseFeePerGas: $a833276422c6da56$export$a06636add2a09fd8.allowNull(bigNumber)
        };
        formats.blockWithTransactions = (0, $b19fb92a27e5f35f$exports.shallowCopy)(formats.block);
        formats.blockWithTransactions.transactions = $a833276422c6da56$export$a06636add2a09fd8.allowNull($a833276422c6da56$export$a06636add2a09fd8.arrayOf(this.transactionResponse.bind(this)));
        formats.filter = {
            fromBlock: $a833276422c6da56$export$a06636add2a09fd8.allowNull(blockTag, undefined),
            toBlock: $a833276422c6da56$export$a06636add2a09fd8.allowNull(blockTag, undefined),
            blockHash: $a833276422c6da56$export$a06636add2a09fd8.allowNull(hash, undefined),
            address: $a833276422c6da56$export$a06636add2a09fd8.allowNull(address, undefined),
            topics: $a833276422c6da56$export$a06636add2a09fd8.allowNull(this.topics.bind(this), undefined)
        };
        formats.filterLog = {
            blockNumber: $a833276422c6da56$export$a06636add2a09fd8.allowNull(number),
            blockHash: $a833276422c6da56$export$a06636add2a09fd8.allowNull(hash),
            transactionIndex: number,
            removed: $a833276422c6da56$export$a06636add2a09fd8.allowNull(this.boolean.bind(this)),
            address: address,
            data: $a833276422c6da56$export$a06636add2a09fd8.allowFalsish(data, "0x"),
            topics: $a833276422c6da56$export$a06636add2a09fd8.arrayOf(hash),
            transactionHash: hash,
            logIndex: number
        };
        return formats;
    }
    accessList(accessList) {
        return (0, $1b59a48ea3c080da$export$6c8662b1600dce2)(accessList || []);
    }
    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number
    // Strict! Used on input.
    number(number) {
        if (number === "0x") return 0;
        return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(number).toNumber();
    }
    type(number) {
        if (number === "0x" || number == null) return 0;
        return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(number).toNumber();
    }
    // Strict! Used on input.
    bigNumber(value) {
        return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value);
    }
    // Requires a boolean, "true" or  "false"; returns a boolean
    boolean(value) {
        if (typeof value === "boolean") return value;
        if (typeof value === "string") {
            value = value.toLowerCase();
            if (value === "true") return true;
            if (value === "false") return false;
        }
        throw new Error("invalid boolean - " + value);
    }
    hex(value, strict) {
        if (typeof value === "string") {
            if (!strict && value.substring(0, 2) !== "0x") value = "0x" + value;
            if ((0, $eg8oT.isHexString)(value)) return value.toLowerCase();
        }
        return $a833276422c6da56$var$logger.throwArgumentError("invalid hash", "value", value);
    }
    data(value, strict) {
        const result = this.hex(value, strict);
        if (result.length % 2 !== 0) throw new Error("invalid data; odd-length - " + value);
        return result;
    }
    // Requires an address
    // Strict! Used on input.
    address(value) {
        return (0, $8b38701037b2e5d8$export$88411125f012957a)(value);
    }
    callAddress(value) {
        if (!(0, $eg8oT.isHexString)(value, 32)) return null;
        const address = (0, $8b38701037b2e5d8$export$88411125f012957a)((0, $eg8oT.hexDataSlice)(value, 12));
        return address === (0, $e7e9bdb72e0755b8$export$badd13187c087617) ? null : address;
    }
    contractAddress(value) {
        return (0, $8b38701037b2e5d8$export$b7fbffef12272e40)(value);
    }
    // Strict! Used on input.
    blockTag(blockTag) {
        if (blockTag == null) return "latest";
        if (blockTag === "earliest") return "0x0";
        switch(blockTag){
            case "earliest":
                return "0x0";
            case "latest":
            case "pending":
            case "safe":
            case "finalized":
                return blockTag;
        }
        if (typeof blockTag === "number" || (0, $eg8oT.isHexString)(blockTag)) return (0, $eg8oT.hexValue)(blockTag);
        throw new Error("invalid blockTag");
    }
    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.
    hash(value, strict) {
        const result = this.hex(value, strict);
        if ((0, $eg8oT.hexDataLength)(result) !== 32) return $a833276422c6da56$var$logger.throwArgumentError("invalid hash", "value", value);
        return result;
    }
    // Returns the difficulty as a number, or if too large (i.e. PoA network) null
    difficulty(value) {
        if (value == null) return null;
        const v = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value);
        try {
            return v.toNumber();
        } catch (error) {}
        return null;
    }
    uint256(value) {
        if (!(0, $eg8oT.isHexString)(value)) throw new Error("invalid uint256");
        return (0, $eg8oT.hexZeroPad)(value, 32);
    }
    _block(value, format) {
        if (value.author != null && value.miner == null) value.miner = value.author;
        // The difficulty may need to come from _difficulty in recursed blocks
        const difficulty = value._difficulty != null ? value._difficulty : value.difficulty;
        const result = $a833276422c6da56$export$a06636add2a09fd8.check(format, value);
        result._difficulty = difficulty == null ? null : (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(difficulty);
        return result;
    }
    block(value) {
        return this._block(value, this.formats.block);
    }
    blockWithTransactions(value) {
        return this._block(value, this.formats.blockWithTransactions);
    }
    // Strict! Used on input.
    transactionRequest(value) {
        return $a833276422c6da56$export$a06636add2a09fd8.check(this.formats.transactionRequest, value);
    }
    transactionResponse(transaction) {
        // Rename gas to gasLimit
        if (transaction.gas != null && transaction.gasLimit == null) transaction.gasLimit = transaction.gas;
        // Some clients (TestRPC) do strange things like return 0x0 for the
        // 0 address; correct this to be a real address
        if (transaction.to && (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(transaction.to).isZero()) transaction.to = "0x0000000000000000000000000000000000000000";
        // Rename input to data
        if (transaction.input != null && transaction.data == null) transaction.data = transaction.input;
        // If to and creates are empty, populate the creates from the transaction
        if (transaction.to == null && transaction.creates == null) transaction.creates = this.contractAddress(transaction);
        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) transaction.accessList = [];
        const result = $a833276422c6da56$export$a06636add2a09fd8.check(this.formats.transaction, transaction);
        if (transaction.chainId != null) {
            let chainId = transaction.chainId;
            if ((0, $eg8oT.isHexString)(chainId)) chainId = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(chainId).toNumber();
            result.chainId = chainId;
        } else {
            let chainId = transaction.networkId;
            // geth-etc returns chainId
            if (chainId == null && result.v == null) chainId = transaction.chainId;
            if ((0, $eg8oT.isHexString)(chainId)) chainId = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(chainId).toNumber();
            if (typeof chainId !== "number" && result.v != null) {
                chainId = (result.v - 35) / 2;
                if (chainId < 0) chainId = 0;
                chainId = parseInt(chainId);
            }
            if (typeof chainId !== "number") chainId = 0;
            result.chainId = chainId;
        }
        // 0x0000... should actually be null
        if (result.blockHash && result.blockHash.replace(/0/g, "") === "x") result.blockHash = null;
        return result;
    }
    transaction(value) {
        return (0, $1b59a48ea3c080da$export$98e6a39c04603d36)(value);
    }
    receiptLog(value) {
        return $a833276422c6da56$export$a06636add2a09fd8.check(this.formats.receiptLog, value);
    }
    receipt(value) {
        const result = $a833276422c6da56$export$a06636add2a09fd8.check(this.formats.receipt, value);
        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it
        if (result.root != null) {
            if (result.root.length <= 4) {
                // Could be 0x00, 0x0, 0x01 or 0x1
                const value = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(result.root).toNumber();
                if (value === 0 || value === 1) {
                    // Make sure if both are specified, they match
                    if (result.status != null && result.status !== value) $a833276422c6da56$var$logger.throwArgumentError("alt-root-status/status mismatch", "value", {
                        root: result.root,
                        status: result.status
                    });
                    result.status = value;
                    delete result.root;
                } else $a833276422c6da56$var$logger.throwArgumentError("invalid alt-root-status", "value.root", result.root);
            } else if (result.root.length !== 66) // Must be a valid bytes32
            $a833276422c6da56$var$logger.throwArgumentError("invalid root hash", "value.root", result.root);
        }
        if (result.status != null) result.byzantium = true;
        return result;
    }
    topics(value) {
        if (Array.isArray(value)) return value.map((v)=>this.topics(v));
        else if (value != null) return this.hash(value, true);
        return null;
    }
    filter(value) {
        return $a833276422c6da56$export$a06636add2a09fd8.check(this.formats.filter, value);
    }
    filterLog(value) {
        return $a833276422c6da56$export$a06636add2a09fd8.check(this.formats.filterLog, value);
    }
    static check(format, object) {
        const result = {};
        for(const key in format)try {
            const value = format[key](object[key]);
            if (value !== undefined) result[key] = value;
        } catch (error) {
            error.checkKey = key;
            error.checkValue = object[key];
            throw error;
        }
        return result;
    }
    // if value is null-ish, nullValue is returned
    static allowNull(format, nullValue) {
        return function(value) {
            if (value == null) return nullValue;
            return format(value);
        };
    }
    // If value is false-ish, replaceValue is returned
    static allowFalsish(format, replaceValue) {
        return function(value) {
            if (!value) return replaceValue;
            return format(value);
        };
    }
    // Requires an Array satisfying check
    static arrayOf(format) {
        return function(array) {
            if (!Array.isArray(array)) throw new Error("not an array");
            const result = [];
            array.forEach(function(value) {
                result.push(format(value));
            });
            return result;
        };
    }
}
function $a833276422c6da56$export$3091239f5b20b896(value) {
    return value && typeof value.isCommunityResource === "function";
}
function $a833276422c6da56$export$d93d5f61c2498b6(value) {
    return $a833276422c6da56$export$3091239f5b20b896(value) && value.isCommunityResource();
}
// Show the throttle message only once
let $a833276422c6da56$var$throttleMessage = false;
function $a833276422c6da56$export$4c41bd49e82e82ab() {
    if ($a833276422c6da56$var$throttleMessage) return;
    $a833276422c6da56$var$throttleMessage = true;
    console.log("========= NOTICE =========");
    console.log("Request-Rate Exceeded  (this message will not be repeated)");
    console.log("");
    console.log("The default API keys for each service are provided as a highly-throttled,");
    console.log("community resource for low-traffic projects and early prototyping.");
    console.log("");
    console.log("While your application will continue to function, we highly recommended");
    console.log("signing up for your own API keys to improve performance, increase your");
    console.log("request rate/limit and enable other perks, such as metrics and advanced APIs.");
    console.log("");
    console.log("For more details: https://docs.ethers.io/api-keys/");
    console.log("==========================");
}


"use strict";
var $bc831430ade2c52d$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $bc831430ade2c52d$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
const $bc831430ade2c52d$var$MAX_CCIP_REDIRECTS = 10;
//////////////////////////////
// Event Serializeing
function $bc831430ade2c52d$var$checkTopic(topic) {
    if (topic == null) return "null";
    if ((0, $eg8oT.hexDataLength)(topic) !== 32) $bc831430ade2c52d$var$logger.throwArgumentError("invalid topic", "topic", topic);
    return topic.toLowerCase();
}
function $bc831430ade2c52d$var$serializeTopics(topics) {
    // Remove trailing null AND-topics; they are redundant
    topics = topics.slice();
    while(topics.length > 0 && topics[topics.length - 1] == null)topics.pop();
    return topics.map((topic)=>{
        if (Array.isArray(topic)) {
            // Only track unique OR-topics
            const unique = {};
            topic.forEach((topic)=>{
                unique[$bc831430ade2c52d$var$checkTopic(topic)] = true;
            });
            // The order of OR-topics does not matter
            const sorted = Object.keys(unique);
            sorted.sort();
            return sorted.join("|");
        } else return $bc831430ade2c52d$var$checkTopic(topic);
    }).join("&");
}
function $bc831430ade2c52d$var$deserializeTopics(data) {
    if (data === "") return [];
    return data.split(/&/g).map((topic)=>{
        if (topic === "") return [];
        const comps = topic.split("|").map((topic)=>{
            return topic === "null" ? null : topic;
        });
        return comps.length === 1 ? comps[0] : comps;
    });
}
function $bc831430ade2c52d$var$getEventTag(eventName) {
    if (typeof eventName === "string") {
        eventName = eventName.toLowerCase();
        if ((0, $eg8oT.hexDataLength)(eventName) === 32) return "tx:" + eventName;
        if (eventName.indexOf(":") === -1) return eventName;
    } else if (Array.isArray(eventName)) return "filter:*:" + $bc831430ade2c52d$var$serializeTopics(eventName);
    else if ((0, $443be65109ed3525$exports.ForkEvent).isForkEvent(eventName)) {
        $bc831430ade2c52d$var$logger.warn("not implemented");
        throw new Error("not implemented");
    } else if (eventName && typeof eventName === "object") return "filter:" + (eventName.address || "*") + ":" + $bc831430ade2c52d$var$serializeTopics(eventName.topics || []);
    throw new Error("invalid event - " + eventName);
}
//////////////////////////////
// Helper Object
function $bc831430ade2c52d$var$getTime() {
    return new Date().getTime();
}
function $bc831430ade2c52d$var$stall(duration) {
    return new Promise((resolve)=>{
        setTimeout(resolve, duration);
    });
}
//////////////////////////////
// Provider Object
/**
 *  EventType
 *   - "block"
 *   - "poll"
 *   - "didPoll"
 *   - "pending"
 *   - "error"
 *   - "network"
 *   - filter
 *   - topics array
 *   - transaction hash
 */ const $bc831430ade2c52d$var$PollableEvents = [
    "block",
    "network",
    "pending",
    "poll"
];
class $bc831430ade2c52d$export$d61e24a684f9e51 {
    constructor(tag, listener, once){
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "tag", tag);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "listener", listener);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "once", once);
        this._lastBlockNumber = -2;
        this._inflight = false;
    }
    get event() {
        switch(this.type){
            case "tx":
                return this.hash;
            case "filter":
                return this.filter;
        }
        return this.tag;
    }
    get type() {
        return this.tag.split(":")[0];
    }
    get hash() {
        const comps = this.tag.split(":");
        if (comps[0] !== "tx") return null;
        return comps[1];
    }
    get filter() {
        const comps = this.tag.split(":");
        if (comps[0] !== "filter") return null;
        const address = comps[1];
        const topics = $bc831430ade2c52d$var$deserializeTopics(comps[2]);
        const filter = {};
        if (topics.length > 0) filter.topics = topics;
        if (address && address !== "*") filter.address = address;
        return filter;
    }
    pollable() {
        return this.tag.indexOf(":") >= 0 || $bc831430ade2c52d$var$PollableEvents.indexOf(this.tag) >= 0;
    }
}
// https://github.com/satoshilabs/slips/blob/master/slip-0044.md
const $bc831430ade2c52d$var$coinInfos = {
    "0": {
        symbol: "btc",
        p2pkh: 0x00,
        p2sh: 0x05,
        prefix: "bc"
    },
    "2": {
        symbol: "ltc",
        p2pkh: 0x30,
        p2sh: 0x32,
        prefix: "ltc"
    },
    "3": {
        symbol: "doge",
        p2pkh: 0x1e,
        p2sh: 0x16
    },
    "60": {
        symbol: "eth",
        ilk: "eth"
    },
    "61": {
        symbol: "etc",
        ilk: "eth"
    },
    "700": {
        symbol: "xdai",
        ilk: "eth"
    }
};
function $bc831430ade2c52d$var$bytes32ify(value) {
    return (0, $eg8oT.hexZeroPad)((0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value).toHexString(), 32);
}
// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)
function $bc831430ade2c52d$var$base58Encode(data) {
    return (0, $34e4ad7d2aa99cc1$export$45a587635c9954b2).encode((0, $eg8oT.concat)([
        data,
        (0, $eg8oT.hexDataSlice)((0, $cdc53f4b1672f85d$export$bced8d2aada2d1c9)((0, $cdc53f4b1672f85d$export$bced8d2aada2d1c9)(data)), 0, 4)
    ]));
}
const $bc831430ade2c52d$var$matcherIpfs = new RegExp("^(ipfs)://(.*)$", "i");
const $bc831430ade2c52d$var$matchers = [
    new RegExp("^(https)://(.*)$", "i"),
    new RegExp("^(data):(.*)$", "i"),
    $bc831430ade2c52d$var$matcherIpfs,
    new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")
];
function $bc831430ade2c52d$var$_parseString(result, start) {
    try {
        return (0, $cde319f07c8777da$export$7643a1dc2c38d5eb)($bc831430ade2c52d$var$_parseBytes(result, start));
    } catch (error) {}
    return null;
}
function $bc831430ade2c52d$var$_parseBytes(result, start) {
    if (result === "0x") return null;
    const offset = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from((0, $eg8oT.hexDataSlice)(result, start, start + 32)).toNumber();
    const length = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from((0, $eg8oT.hexDataSlice)(result, offset, offset + 32)).toNumber();
    return (0, $eg8oT.hexDataSlice)(result, offset + 32, offset + 32 + length);
}
// Trim off the ipfs:// prefix and return the default gateway URL
function $bc831430ade2c52d$var$getIpfsLink(link) {
    if (link.match(/^ipfs:\/\/ipfs\//i)) link = link.substring(12);
    else if (link.match(/^ipfs:\/\//i)) link = link.substring(7);
    else $bc831430ade2c52d$var$logger.throwArgumentError("unsupported IPFS format", "link", link);
    return `https:/\/gateway.ipfs.io/ipfs/${link}`;
}
function $bc831430ade2c52d$var$numPad(value) {
    const result = (0, $eg8oT.arrayify)(value);
    if (result.length > 32) throw new Error("internal; should not happen");
    const padded = new Uint8Array(32);
    padded.set(result, 32 - result.length);
    return padded;
}
function $bc831430ade2c52d$var$bytesPad(value) {
    if (value.length % 32 === 0) return value;
    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);
    result.set(value);
    return result;
}
// ABI Encodes a series of (bytes, bytes, ...)
function $bc831430ade2c52d$var$encodeBytes(datas) {
    const result = [];
    let byteCount = 0;
    // Add place-holders for pointers as we add items
    for(let i = 0; i < datas.length; i++){
        result.push(null);
        byteCount += 32;
    }
    for(let i = 0; i < datas.length; i++){
        const data = (0, $eg8oT.arrayify)(datas[i]);
        // Update the bytes offset
        result[i] = $bc831430ade2c52d$var$numPad(byteCount);
        // The length and padded value of data
        result.push($bc831430ade2c52d$var$numPad(data.length));
        result.push($bc831430ade2c52d$var$bytesPad(data));
        byteCount += 32 + Math.ceil(data.length / 32) * 32;
    }
    return (0, $eg8oT.hexConcat)(result);
}
class $bc831430ade2c52d$export$8b4c839865b08288 {
    // The resolvedAddress is only for creating a ReverseLookup resolver
    constructor(provider, address, name, resolvedAddress){
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "provider", provider);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "name", name);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "address", provider.formatter.address(address));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_resolvedAddress", resolvedAddress);
    }
    supportsWildcard() {
        if (!this._supportsEip2544) // supportsInterface(bytes4 = selector("resolve(bytes,bytes)"))
        this._supportsEip2544 = this.provider.call({
            to: this.address,
            data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
        }).then((result)=>{
            return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(result).eq(1);
        }).catch((error)=>{
            if (error.code === (0, $cbv61.Logger).errors.CALL_EXCEPTION) return false;
            // Rethrow the error: link is down, etc. Let future attempts retry.
            this._supportsEip2544 = null;
            throw error;
        });
        return this._supportsEip2544;
    }
    _fetch(selector, parameters) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            // e.g. keccak256("addr(bytes32,uint256)")
            const tx = {
                to: this.address,
                ccipReadEnabled: true,
                data: (0, $eg8oT.hexConcat)([
                    selector,
                    (0, $ce31ee151995bdb4$export$91d651ee363e1209)(this.name),
                    parameters || "0x"
                ])
            };
            // Wildcard support; use EIP-2544 to resolve the request
            let parseBytes = false;
            if (yield this.supportsWildcard()) {
                parseBytes = true;
                // selector("resolve(bytes,bytes)")
                tx.data = (0, $eg8oT.hexConcat)([
                    "0x9061b923",
                    $bc831430ade2c52d$var$encodeBytes([
                        (0, $ce31ee151995bdb4$export$6c0a8cdae51cb512)(this.name),
                        tx.data
                    ])
                ]);
            }
            try {
                let result = yield this.provider.call(tx);
                if ((0, $eg8oT.arrayify)(result).length % 32 === 4) $bc831430ade2c52d$var$logger.throwError("resolver threw error", (0, $cbv61.Logger).errors.CALL_EXCEPTION, {
                    transaction: tx,
                    data: result
                });
                if (parseBytes) result = $bc831430ade2c52d$var$_parseBytes(result, 0);
                return result;
            } catch (error) {
                if (error.code === (0, $cbv61.Logger).errors.CALL_EXCEPTION) return null;
                throw error;
            }
        });
    }
    _fetchBytes(selector, parameters) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            const result = yield this._fetch(selector, parameters);
            if (result != null) return $bc831430ade2c52d$var$_parseBytes(result, 0);
            return null;
        });
    }
    _getAddress(coinType, hexBytes) {
        const coinInfo = $bc831430ade2c52d$var$coinInfos[String(coinType)];
        if (coinInfo == null) $bc831430ade2c52d$var$logger.throwError(`unsupported coin type: ${coinType}`, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: `getAddress(${coinType})`
        });
        if (coinInfo.ilk === "eth") return this.provider.formatter.address(hexBytes);
        const bytes = (0, $eg8oT.arrayify)(hexBytes);
        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG
        if (coinInfo.p2pkh != null) {
            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
            if (p2pkh) {
                const length = parseInt(p2pkh[1], 16);
                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) return $bc831430ade2c52d$var$base58Encode((0, $eg8oT.concat)([
                    [
                        coinInfo.p2pkh
                    ],
                    "0x" + p2pkh[2]
                ]));
            }
        }
        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL
        if (coinInfo.p2sh != null) {
            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
            if (p2sh) {
                const length = parseInt(p2sh[1], 16);
                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) return $bc831430ade2c52d$var$base58Encode((0, $eg8oT.concat)([
                    [
                        coinInfo.p2sh
                    ],
                    "0x" + p2sh[2]
                ]));
            }
        }
        // Bech32
        if (coinInfo.prefix != null) {
            const length = bytes[1];
            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program
            let version = bytes[0];
            if (version === 0x00) {
                if (length !== 20 && length !== 32) version = -1;
            } else version = -1;
            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {
                const words = (0, (/*@__PURE__*/$parcel$interopDefault($696f60cb4808b190$exports))).toWords(bytes.slice(2));
                words.unshift(version);
                return (0, (/*@__PURE__*/$parcel$interopDefault($696f60cb4808b190$exports))).encode(coinInfo.prefix, words);
            }
        }
        return null;
    }
    getAddress(coinType) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            if (coinType == null) coinType = 60;
            // If Ethereum, use the standard `addr(bytes32)`
            if (coinType === 60) try {
                // keccak256("addr(bytes32)")
                const result = yield this._fetch("0x3b3b57de");
                // No address
                if (result === "0x" || result === (0, $479bed3ace97c359$export$71c2e4e213dcb7f2)) return null;
                return this.provider.formatter.callAddress(result);
            } catch (error) {
                if (error.code === (0, $cbv61.Logger).errors.CALL_EXCEPTION) return null;
                throw error;
            }
            // keccak256("addr(bytes32,uint256")
            const hexBytes = yield this._fetchBytes("0xf1cb7e06", $bc831430ade2c52d$var$bytes32ify(coinType));
            // No address
            if (hexBytes == null || hexBytes === "0x") return null;
            // Compute the address
            const address = this._getAddress(coinType, hexBytes);
            if (address == null) $bc831430ade2c52d$var$logger.throwError(`invalid or unsupported coin data`, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: `getAddress(${coinType})`,
                coinType: coinType,
                data: hexBytes
            });
            return address;
        });
    }
    getAvatar() {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            const linkage = [
                {
                    type: "name",
                    content: this.name
                }
            ];
            try {
                // test data for ricmoo.eth
                //const avatar = "eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233";
                const avatar = yield this.getText("avatar");
                if (avatar == null) return null;
                for(let i = 0; i < $bc831430ade2c52d$var$matchers.length; i++){
                    const match = avatar.match($bc831430ade2c52d$var$matchers[i]);
                    if (match == null) continue;
                    const scheme = match[1].toLowerCase();
                    switch(scheme){
                        case "https":
                            linkage.push({
                                type: "url",
                                content: avatar
                            });
                            return {
                                linkage: linkage,
                                url: avatar
                            };
                        case "data":
                            linkage.push({
                                type: "data",
                                content: avatar
                            });
                            return {
                                linkage: linkage,
                                url: avatar
                            };
                        case "ipfs":
                            linkage.push({
                                type: "ipfs",
                                content: avatar
                            });
                            return {
                                linkage: linkage,
                                url: $bc831430ade2c52d$var$getIpfsLink(avatar)
                            };
                        case "erc721":
                        case "erc1155":
                            {
                                // Depending on the ERC type, use tokenURI(uint256) or url(uint256)
                                const selector = scheme === "erc721" ? "0xc87b56dd" : "0x0e89341c";
                                linkage.push({
                                    type: scheme,
                                    content: avatar
                                });
                                // The owner of this name
                                const owner = this._resolvedAddress || (yield this.getAddress());
                                const comps = (match[2] || "").split("/");
                                if (comps.length !== 2) return null;
                                const addr = yield this.provider.formatter.address(comps[0]);
                                const tokenId = (0, $eg8oT.hexZeroPad)((0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(comps[1]).toHexString(), 32);
                                // Check that this account owns the token
                                if (scheme === "erc721") {
                                    // ownerOf(uint256 tokenId)
                                    const tokenOwner = this.provider.formatter.callAddress((yield this.provider.call({
                                        to: addr,
                                        data: (0, $eg8oT.hexConcat)([
                                            "0x6352211e",
                                            tokenId
                                        ])
                                    })));
                                    if (owner !== tokenOwner) return null;
                                    linkage.push({
                                        type: "owner",
                                        content: tokenOwner
                                    });
                                } else if (scheme === "erc1155") {
                                    // balanceOf(address owner, uint256 tokenId)
                                    const balance = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from((yield this.provider.call({
                                        to: addr,
                                        data: (0, $eg8oT.hexConcat)([
                                            "0x00fdd58e",
                                            (0, $eg8oT.hexZeroPad)(owner, 32),
                                            tokenId
                                        ])
                                    })));
                                    if (balance.isZero()) return null;
                                    linkage.push({
                                        type: "balance",
                                        content: balance.toString()
                                    });
                                }
                                // Call the token contract for the metadata URL
                                const tx = {
                                    to: this.provider.formatter.address(comps[0]),
                                    data: (0, $eg8oT.hexConcat)([
                                        selector,
                                        tokenId
                                    ])
                                };
                                let metadataUrl = $bc831430ade2c52d$var$_parseString((yield this.provider.call(tx)), 0);
                                if (metadataUrl == null) return null;
                                linkage.push({
                                    type: "metadata-url-base",
                                    content: metadataUrl
                                });
                                // ERC-1155 allows a generic {id} in the URL
                                if (scheme === "erc1155") {
                                    metadataUrl = metadataUrl.replace("{id}", tokenId.substring(2));
                                    linkage.push({
                                        type: "metadata-url-expanded",
                                        content: metadataUrl
                                    });
                                }
                                // Transform IPFS metadata links
                                if (metadataUrl.match(/^ipfs:/i)) metadataUrl = $bc831430ade2c52d$var$getIpfsLink(metadataUrl);
                                linkage.push({
                                    type: "metadata-url",
                                    content: metadataUrl
                                });
                                // Get the token metadata
                                const metadata = yield (0, $68f1849f3b633900$exports.fetchJson)(metadataUrl);
                                if (!metadata) return null;
                                linkage.push({
                                    type: "metadata",
                                    content: JSON.stringify(metadata)
                                });
                                // Pull the image URL out
                                let imageUrl = metadata.image;
                                if (typeof imageUrl !== "string") return null;
                                if (imageUrl.match(/^(https:\/\/|data:)/i)) ;
                                else {
                                    // Transform IPFS link to gateway
                                    const ipfs = imageUrl.match($bc831430ade2c52d$var$matcherIpfs);
                                    if (ipfs == null) return null;
                                    linkage.push({
                                        type: "url-ipfs",
                                        content: imageUrl
                                    });
                                    imageUrl = $bc831430ade2c52d$var$getIpfsLink(imageUrl);
                                }
                                linkage.push({
                                    type: "url",
                                    content: imageUrl
                                });
                                return {
                                    linkage: linkage,
                                    url: imageUrl
                                };
                            }
                    }
                }
            } catch (error) {}
            return null;
        });
    }
    getContentHash() {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            // keccak256("contenthash()")
            const hexBytes = yield this._fetchBytes("0xbc1c58d1");
            // No contenthash
            if (hexBytes == null || hexBytes === "0x") return null;
            // IPFS (CID: 1, Type: DAG-PB)
            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
            if (ipfs) {
                const length = parseInt(ipfs[3], 16);
                if (ipfs[4].length === length * 2) return "ipfs://" + (0, $34e4ad7d2aa99cc1$export$45a587635c9954b2).encode("0x" + ipfs[1]);
            }
            // IPNS (CID: 1, Type: libp2p-key)
            const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
            if (ipns) {
                const length = parseInt(ipns[3], 16);
                if (ipns[4].length === length * 2) return "ipns://" + (0, $34e4ad7d2aa99cc1$export$45a587635c9954b2).encode("0x" + ipns[1]);
            }
            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)
            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);
            if (swarm) {
                if (swarm[1].length === 64) return "bzz://" + swarm[1];
            }
            const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);
            if (skynet) {
                if (skynet[1].length === 68) {
                    // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5
                    const urlSafe = {
                        "=": "",
                        "+": "-",
                        "/": "_"
                    };
                    const hash = (0, $6s22a.encode)("0x" + skynet[1]).replace(/[=+\/]/g, (a)=>urlSafe[a]);
                    return "sia://" + hash;
                }
            }
            return $bc831430ade2c52d$var$logger.throwError(`invalid or unsupported content hash data`, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: "getContentHash()",
                data: hexBytes
            });
        });
    }
    getText(key) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            // The key encoded as parameter to fetchBytes
            let keyBytes = (0, $cde319f07c8777da$export$8feeb310b4b4752f)(key);
            // The nodehash consumes the first slot, so the string pointer targets
            // offset 64, with the length at offset 64 and data starting at offset 96
            keyBytes = (0, $eg8oT.concat)([
                $bc831430ade2c52d$var$bytes32ify(64),
                $bc831430ade2c52d$var$bytes32ify(keyBytes.length),
                keyBytes
            ]);
            // Pad to word-size (32 bytes)
            if (keyBytes.length % 32 !== 0) keyBytes = (0, $eg8oT.concat)([
                keyBytes,
                (0, $eg8oT.hexZeroPad)("0x", 32 - key.length % 32)
            ]);
            const hexBytes = yield this._fetchBytes("0x59d1d43c", (0, $eg8oT.hexlify)(keyBytes));
            if (hexBytes == null || hexBytes === "0x") return null;
            return (0, $cde319f07c8777da$export$7643a1dc2c38d5eb)(hexBytes);
        });
    }
}
let $bc831430ade2c52d$var$defaultFormatter = null;
let $bc831430ade2c52d$var$nextPollId = 1;
class $bc831430ade2c52d$export$ff3f6dd83125ac45 extends (0, $443be65109ed3525$exports.Provider) {
    /**
     *  ready
     *
     *  A Promise<Network> that resolves only once the provider is ready.
     *
     *  Sub-classes that call the super with a network without a chainId
     *  MUST set this. Standard named networks have a known chainId.
     *
     */ constructor(network){
        super();
        // Events being listened to
        this._events = [];
        this._emitted = {
            block: -2
        };
        this.disableCcipRead = false;
        this.formatter = new.target.getFormatter();
        // If network is any, this Provider allows the underlying
        // network to change dynamically, and we auto-detect the
        // current network
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "anyNetwork", network === "any");
        if (this.anyNetwork) network = this.detectNetwork();
        if (network instanceof Promise) {
            this._networkPromise = network;
            // Squash any "unhandled promise" errors; that do not need to be handled
            network.catch((error)=>{});
            // Trigger initial network setting (async)
            this._ready().catch((error)=>{});
        } else {
            const knownNetwork = (0, $b19fb92a27e5f35f$exports.getStatic)(new.target, "getNetwork")(network);
            if (knownNetwork) {
                (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_network", knownNetwork);
                this.emit("network", knownNetwork, null);
            } else $bc831430ade2c52d$var$logger.throwArgumentError("invalid network", "network", network);
        }
        this._maxInternalBlockNumber = -1024;
        this._lastBlockNumber = -2;
        this._maxFilterBlockRange = 10;
        this._pollingInterval = 4000;
        this._fastQueryDate = 0;
    }
    _ready() {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            if (this._network == null) {
                let network = null;
                if (this._networkPromise) try {
                    network = yield this._networkPromise;
                } catch (error) {}
                // Try the Provider's network detection (this MUST throw if it cannot)
                if (network == null) network = yield this.detectNetwork();
                // This should never happen; every Provider sub-class should have
                // suggested a network by here (or have thrown).
                if (!network) $bc831430ade2c52d$var$logger.throwError("no network detected", (0, $cbv61.Logger).errors.UNKNOWN_ERROR, {});
                // Possible this call stacked so do not call defineReadOnly again
                if (this._network == null) {
                    if (this.anyNetwork) this._network = network;
                    else (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_network", network);
                    this.emit("network", network, null);
                }
            }
            return this._network;
        });
    }
    // This will always return the most recently established network.
    // For "any", this can change (a "network" event is emitted before
    // any change is reflected); otherwise this cannot change
    get ready() {
        return (0, $68f1849f3b633900$exports.poll)(()=>{
            return this._ready().then((network)=>{
                return network;
            }, (error)=>{
                // If the network isn't running yet, we will wait
                if (error.code === (0, $cbv61.Logger).errors.NETWORK_ERROR && error.event === "noNetwork") return undefined;
                throw error;
            });
        });
    }
    // @TODO: Remove this and just create a singleton formatter
    static getFormatter() {
        if ($bc831430ade2c52d$var$defaultFormatter == null) $bc831430ade2c52d$var$defaultFormatter = new (0, $a833276422c6da56$export$a06636add2a09fd8)();
        return $bc831430ade2c52d$var$defaultFormatter;
    }
    // @TODO: Remove this and just use getNetwork
    static getNetwork(network) {
        return (0, $1c19460a5712cfcc$export$7de4970ebfd8206d)(network == null ? "homestead" : network);
    }
    ccipReadFetch(tx, calldata, urls) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            if (this.disableCcipRead || urls.length === 0) return null;
            const sender = tx.to.toLowerCase();
            const data = calldata.toLowerCase();
            const errorMessages = [];
            for(let i = 0; i < urls.length; i++){
                const url = urls[i];
                // URL expansion
                const href = url.replace("{sender}", sender).replace("{data}", data);
                // If no {data} is present, use POST; otherwise GET
                const json = url.indexOf("{data}") >= 0 ? null : JSON.stringify({
                    data: data,
                    sender: sender
                });
                const result = yield (0, $68f1849f3b633900$exports.fetchJson)({
                    url: href,
                    errorPassThrough: true
                }, json, (value, response)=>{
                    value.status = response.statusCode;
                    return value;
                });
                if (result.data) return result.data;
                const errorMessage = result.message || "unknown error";
                // 4xx indicates the result is not present; stop
                if (result.status >= 400 && result.status < 500) return $bc831430ade2c52d$var$logger.throwError(`response not found during CCIP fetch: ${errorMessage}`, (0, $cbv61.Logger).errors.SERVER_ERROR, {
                    url: url,
                    errorMessage: errorMessage
                });
                // 5xx indicates server issue; try the next url
                errorMessages.push(errorMessage);
            }
            return $bc831430ade2c52d$var$logger.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m)=>JSON.stringify(m)).join(", ")}`, (0, $cbv61.Logger).errors.SERVER_ERROR, {
                urls: urls,
                errorMessages: errorMessages
            });
        });
    }
    // Fetches the blockNumber, but will reuse any result that is less
    // than maxAge old or has been requested since the last request
    _getInternalBlockNumber(maxAge) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this._ready();
            // Allowing stale data up to maxAge old
            if (maxAge > 0) // While there are pending internal block requests...
            while(this._internalBlockNumber){
                // ..."remember" which fetch we started with
                const internalBlockNumber = this._internalBlockNumber;
                try {
                    // Check the result is not too stale
                    const result = yield internalBlockNumber;
                    if ($bc831430ade2c52d$var$getTime() - result.respTime <= maxAge) return result.blockNumber;
                    break;
                } catch (error) {
                    // The fetch rejected; if we are the first to get the
                    // rejection, drop through so we replace it with a new
                    // fetch; all others blocked will then get that fetch
                    // which won't match the one they "remembered" and loop
                    if (this._internalBlockNumber === internalBlockNumber) break;
                }
            }
            const reqTime = $bc831430ade2c52d$var$getTime();
            const checkInternalBlockNumber = (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                blockNumber: this.perform("getBlockNumber", {}),
                networkError: this.getNetwork().then((network)=>null, (error)=>error)
            }).then(({ blockNumber: blockNumber , networkError: networkError  })=>{
                if (networkError) {
                    // Unremember this bad internal block number
                    if (this._internalBlockNumber === checkInternalBlockNumber) this._internalBlockNumber = null;
                    throw networkError;
                }
                const respTime = $bc831430ade2c52d$var$getTime();
                blockNumber = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(blockNumber).toNumber();
                if (blockNumber < this._maxInternalBlockNumber) blockNumber = this._maxInternalBlockNumber;
                this._maxInternalBlockNumber = blockNumber;
                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?
                return {
                    blockNumber: blockNumber,
                    reqTime: reqTime,
                    respTime: respTime
                };
            });
            this._internalBlockNumber = checkInternalBlockNumber;
            // Swallow unhandled exceptions; if needed they are handled else where
            checkInternalBlockNumber.catch((error)=>{
                // Don't null the dead (rejected) fetch, if it has already been updated
                if (this._internalBlockNumber === checkInternalBlockNumber) this._internalBlockNumber = null;
            });
            return (yield checkInternalBlockNumber).blockNumber;
        });
    }
    poll() {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            const pollId = $bc831430ade2c52d$var$nextPollId++;
            // Track all running promises, so we can trigger a post-poll once they are complete
            const runners = [];
            let blockNumber = null;
            try {
                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
            } catch (error) {
                this.emit("error", error);
                return;
            }
            this._setFastBlockNumber(blockNumber);
            // Emit a poll event after we have the latest (fast) block number
            this.emit("poll", pollId, blockNumber);
            // If the block has not changed, meh.
            if (blockNumber === this._lastBlockNumber) {
                this.emit("didPoll", pollId);
                return;
            }
            // First polling cycle, trigger a "block" events
            if (this._emitted.block === -2) this._emitted.block = blockNumber - 1;
            if (Math.abs(this._emitted.block - blockNumber) > 1000) {
                $bc831430ade2c52d$var$logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);
                this.emit("error", $bc831430ade2c52d$var$logger.makeError("network block skew detected", (0, $cbv61.Logger).errors.NETWORK_ERROR, {
                    blockNumber: blockNumber,
                    event: "blockSkew",
                    previousBlockNumber: this._emitted.block
                }));
                this.emit("block", blockNumber);
            } else // Notify all listener for each block that has passed
            for(let i = this._emitted.block + 1; i <= blockNumber; i++)this.emit("block", i);
            // The emitted block was updated, check for obsolete events
            if (this._emitted.block !== blockNumber) {
                this._emitted.block = blockNumber;
                Object.keys(this._emitted).forEach((key)=>{
                    // The block event does not expire
                    if (key === "block") return;
                    // The block we were at when we emitted this event
                    const eventBlockNumber = this._emitted[key];
                    // We cannot garbage collect pending transactions or blocks here
                    // They should be garbage collected by the Provider when setting
                    // "pending" events
                    if (eventBlockNumber === "pending") return;
                    // Evict any transaction hashes or block hashes over 12 blocks
                    // old, since they should not return null anyways
                    if (blockNumber - eventBlockNumber > 12) delete this._emitted[key];
                });
            }
            // First polling cycle
            if (this._lastBlockNumber === -2) this._lastBlockNumber = blockNumber - 1;
            // Find all transaction hashes we are waiting on
            this._events.forEach((event)=>{
                switch(event.type){
                    case "tx":
                        {
                            const hash = event.hash;
                            let runner = this.getTransactionReceipt(hash).then((receipt)=>{
                                if (!receipt || receipt.blockNumber == null) return null;
                                this._emitted["t:" + hash] = receipt.blockNumber;
                                this.emit(hash, receipt);
                                return null;
                            }).catch((error)=>{
                                this.emit("error", error);
                            });
                            runners.push(runner);
                            break;
                        }
                    case "filter":
                        // We only allow a single getLogs to be in-flight at a time
                        if (!event._inflight) {
                            event._inflight = true;
                            // This is the first filter for this event, so we want to
                            // restrict events to events that happened no earlier than now
                            if (event._lastBlockNumber === -2) event._lastBlockNumber = blockNumber - 1;
                            // Filter from the last *known* event; due to load-balancing
                            // and some nodes returning updated block numbers before
                            // indexing events, a logs result with 0 entries cannot be
                            // trusted and we must retry a range which includes it again
                            const filter = event.filter;
                            filter.fromBlock = event._lastBlockNumber + 1;
                            filter.toBlock = blockNumber;
                            // Prevent fitler ranges from growing too wild, since it is quite
                            // likely there just haven't been any events to move the lastBlockNumber.
                            const minFromBlock = filter.toBlock - this._maxFilterBlockRange;
                            if (minFromBlock > filter.fromBlock) filter.fromBlock = minFromBlock;
                            if (filter.fromBlock < 0) filter.fromBlock = 0;
                            const runner = this.getLogs(filter).then((logs)=>{
                                // Allow the next getLogs
                                event._inflight = false;
                                if (logs.length === 0) return;
                                logs.forEach((log)=>{
                                    // Only when we get an event for a given block number
                                    // can we trust the events are indexed
                                    if (log.blockNumber > event._lastBlockNumber) event._lastBlockNumber = log.blockNumber;
                                    // Make sure we stall requests to fetch blocks and txs
                                    this._emitted["b:" + log.blockHash] = log.blockNumber;
                                    this._emitted["t:" + log.transactionHash] = log.blockNumber;
                                    this.emit(filter, log);
                                });
                            }).catch((error)=>{
                                this.emit("error", error);
                                // Allow another getLogs (the range was not updated)
                                event._inflight = false;
                            });
                            runners.push(runner);
                        }
                        break;
                }
            });
            this._lastBlockNumber = blockNumber;
            // Once all events for this loop have been processed, emit "didPoll"
            Promise.all(runners).then(()=>{
                this.emit("didPoll", pollId);
            }).catch((error)=>{
                this.emit("error", error);
            });
            return;
        });
    }
    // Deprecated; do not use this
    resetEventsBlock(blockNumber) {
        this._lastBlockNumber = blockNumber - 1;
        if (this.polling) this.poll();
    }
    get network() {
        return this._network;
    }
    // This method should query the network if the underlying network
    // can change, such as when connected to a JSON-RPC backend
    detectNetwork() {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            return $bc831430ade2c52d$var$logger.throwError("provider does not support network detection", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: "provider.detectNetwork"
            });
        });
    }
    getNetwork() {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            const network = yield this._ready();
            // Make sure we are still connected to the same network; this is
            // only an external call for backends which can have the underlying
            // network change spontaneously
            const currentNetwork = yield this.detectNetwork();
            if (network.chainId !== currentNetwork.chainId) {
                // We are allowing network changes, things can get complex fast;
                // make sure you know what you are doing if you use "any"
                if (this.anyNetwork) {
                    this._network = currentNetwork;
                    // Reset all internal block number guards and caches
                    this._lastBlockNumber = -2;
                    this._fastBlockNumber = null;
                    this._fastBlockNumberPromise = null;
                    this._fastQueryDate = 0;
                    this._emitted.block = -2;
                    this._maxInternalBlockNumber = -1024;
                    this._internalBlockNumber = null;
                    // The "network" event MUST happen before this method resolves
                    // so any events have a chance to unregister, so we stall an
                    // additional event loop before returning from /this/ call
                    this.emit("network", currentNetwork, network);
                    yield $bc831430ade2c52d$var$stall(0);
                    return this._network;
                }
                const error = $bc831430ade2c52d$var$logger.makeError("underlying network changed", (0, $cbv61.Logger).errors.NETWORK_ERROR, {
                    event: "changed",
                    network: network,
                    detectedNetwork: currentNetwork
                });
                this.emit("error", error);
                throw error;
            }
            return network;
        });
    }
    get blockNumber() {
        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber)=>{
            this._setFastBlockNumber(blockNumber);
        }, (error)=>{});
        return this._fastBlockNumber != null ? this._fastBlockNumber : -1;
    }
    get polling() {
        return this._poller != null;
    }
    set polling(value) {
        if (value && !this._poller) {
            this._poller = setInterval(()=>{
                this.poll();
            }, this.pollingInterval);
            if (!this._bootstrapPoll) this._bootstrapPoll = setTimeout(()=>{
                this.poll();
                // We block additional polls until the polling interval
                // is done, to prevent overwhelming the poll function
                this._bootstrapPoll = setTimeout(()=>{
                    // If polling was disabled, something may require a poke
                    // since starting the bootstrap poll and it was disabled
                    if (!this._poller) this.poll();
                    // Clear out the bootstrap so we can do another
                    this._bootstrapPoll = null;
                }, this.pollingInterval);
            }, 0);
        } else if (!value && this._poller) {
            clearInterval(this._poller);
            this._poller = null;
        }
    }
    get pollingInterval() {
        return this._pollingInterval;
    }
    set pollingInterval(value) {
        if (typeof value !== "number" || value <= 0 || parseInt(String(value)) != value) throw new Error("invalid polling interval");
        this._pollingInterval = value;
        if (this._poller) {
            clearInterval(this._poller);
            this._poller = setInterval(()=>{
                this.poll();
            }, this._pollingInterval);
        }
    }
    _getFastBlockNumber() {
        const now = $bc831430ade2c52d$var$getTime();
        // Stale block number, request a newer value
        if (now - this._fastQueryDate > 2 * this._pollingInterval) {
            this._fastQueryDate = now;
            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber)=>{
                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) this._fastBlockNumber = blockNumber;
                return this._fastBlockNumber;
            });
        }
        return this._fastBlockNumberPromise;
    }
    _setFastBlockNumber(blockNumber) {
        // Older block, maybe a stale request
        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) return;
        // Update the time we updated the blocknumber
        this._fastQueryDate = $bc831430ade2c52d$var$getTime();
        // Newer block number, use  it
        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
            this._fastBlockNumber = blockNumber;
            this._fastBlockNumberPromise = Promise.resolve(blockNumber);
        }
    }
    waitForTransaction(transactionHash, confirmations, timeout) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            return this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null);
        });
    }
    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            const receipt = yield this.getTransactionReceipt(transactionHash);
            // Receipt is already good
            if ((receipt ? receipt.confirmations : 0) >= confirmations) return receipt;
            // Poll until the receipt is good...
            return new Promise((resolve, reject)=>{
                const cancelFuncs = [];
                let done = false;
                const alreadyDone = function() {
                    if (done) return true;
                    done = true;
                    cancelFuncs.forEach((func)=>{
                        func();
                    });
                    return false;
                };
                const minedHandler = (receipt)=>{
                    if (receipt.confirmations < confirmations) return;
                    if (alreadyDone()) return;
                    resolve(receipt);
                };
                this.on(transactionHash, minedHandler);
                cancelFuncs.push(()=>{
                    this.removeListener(transactionHash, minedHandler);
                });
                if (replaceable) {
                    let lastBlockNumber = replaceable.startBlock;
                    let scannedBlock = null;
                    const replaceHandler = (blockNumber)=>$bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
                            if (done) return;
                            // Wait 1 second; this is only used in the case of a fault, so
                            // we will trade off a little bit of latency for more consistent
                            // results and fewer JSON-RPC calls
                            yield $bc831430ade2c52d$var$stall(1000);
                            this.getTransactionCount(replaceable.from).then((nonce)=>$bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
                                    if (done) return;
                                    if (nonce <= replaceable.nonce) lastBlockNumber = blockNumber;
                                    else {
                                        // First check if the transaction was mined
                                        {
                                            const mined = yield this.getTransaction(transactionHash);
                                            if (mined && mined.blockNumber != null) return;
                                        }
                                        // First time scanning. We start a little earlier for some
                                        // wiggle room here to handle the eventually consistent nature
                                        // of blockchain (e.g. the getTransactionCount was for a
                                        // different block)
                                        if (scannedBlock == null) {
                                            scannedBlock = lastBlockNumber - 3;
                                            if (scannedBlock < replaceable.startBlock) scannedBlock = replaceable.startBlock;
                                        }
                                        while(scannedBlock <= blockNumber){
                                            if (done) return;
                                            const block = yield this.getBlockWithTransactions(scannedBlock);
                                            for(let ti = 0; ti < block.transactions.length; ti++){
                                                const tx = block.transactions[ti];
                                                // Successfully mined!
                                                if (tx.hash === transactionHash) return;
                                                // Matches our transaction from and nonce; its a replacement
                                                if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {
                                                    if (done) return;
                                                    // Get the receipt of the replacement
                                                    const receipt = yield this.waitForTransaction(tx.hash, confirmations);
                                                    // Already resolved or rejected (prolly a timeout)
                                                    if (alreadyDone()) return;
                                                    // The reason we were replaced
                                                    let reason = "replaced";
                                                    if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) reason = "repriced";
                                                    else if (tx.data === "0x" && tx.from === tx.to && tx.value.isZero()) reason = "cancelled";
                                                    // Explain why we were replaced
                                                    reject($bc831430ade2c52d$var$logger.makeError("transaction was replaced", (0, $cbv61.Logger).errors.TRANSACTION_REPLACED, {
                                                        cancelled: reason === "replaced" || reason === "cancelled",
                                                        reason: reason,
                                                        replacement: this._wrapTransaction(tx),
                                                        hash: transactionHash,
                                                        receipt: receipt
                                                    }));
                                                    return;
                                                }
                                            }
                                            scannedBlock++;
                                        }
                                    }
                                    if (done) return;
                                    this.once("block", replaceHandler);
                                }), (error)=>{
                                if (done) return;
                                this.once("block", replaceHandler);
                            });
                        });
                    if (done) return;
                    this.once("block", replaceHandler);
                    cancelFuncs.push(()=>{
                        this.removeListener("block", replaceHandler);
                    });
                }
                if (typeof timeout === "number" && timeout > 0) {
                    const timer = setTimeout(()=>{
                        if (alreadyDone()) return;
                        reject($bc831430ade2c52d$var$logger.makeError("timeout exceeded", (0, $cbv61.Logger).errors.TIMEOUT, {
                            timeout: timeout
                        }));
                    }, timeout);
                    if (timer.unref) timer.unref();
                    cancelFuncs.push(()=>{
                        clearTimeout(timer);
                    });
                }
            });
        });
    }
    getBlockNumber() {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            return this._getInternalBlockNumber(0);
        });
    }
    getGasPrice() {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const result = yield this.perform("getGasPrice", {});
            try {
                return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(result);
            } catch (error) {
                return $bc831430ade2c52d$var$logger.throwError("bad result from backend", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                    method: "getGasPrice",
                    result: result,
                    error: error
                });
            }
        });
    }
    getBalance(addressOrName, blockTag) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getBalance", params);
            try {
                return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(result);
            } catch (error) {
                return $bc831430ade2c52d$var$logger.throwError("bad result from backend", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                    method: "getBalance",
                    params: params,
                    result: result,
                    error: error
                });
            }
        });
    }
    getTransactionCount(addressOrName, blockTag) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getTransactionCount", params);
            try {
                return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(result).toNumber();
            } catch (error) {
                return $bc831430ade2c52d$var$logger.throwError("bad result from backend", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                    method: "getTransactionCount",
                    params: params,
                    result: result,
                    error: error
                });
            }
        });
    }
    getCode(addressOrName, blockTag) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getCode", params);
            try {
                return (0, $eg8oT.hexlify)(result);
            } catch (error) {
                return $bc831430ade2c52d$var$logger.throwError("bad result from backend", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                    method: "getCode",
                    params: params,
                    result: result,
                    error: error
                });
            }
        });
    }
    getStorageAt(addressOrName, position, blockTag) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag),
                position: Promise.resolve(position).then((p)=>(0, $eg8oT.hexValue)(p))
            });
            const result = yield this.perform("getStorageAt", params);
            try {
                return (0, $eg8oT.hexlify)(result);
            } catch (error) {
                return $bc831430ade2c52d$var$logger.throwError("bad result from backend", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                    method: "getStorageAt",
                    params: params,
                    result: result,
                    error: error
                });
            }
        });
    }
    // This should be called by any subclass wrapping a TransactionResponse
    _wrapTransaction(tx, hash, startBlock) {
        if (hash != null && (0, $eg8oT.hexDataLength)(hash) !== 32) throw new Error("invalid response - sendTransaction");
        const result = tx;
        // Check the hash we expect is the same as the hash the server reported
        if (hash != null && tx.hash !== hash) $bc831430ade2c52d$var$logger.throwError("Transaction hash mismatch from Provider.sendTransaction.", (0, $cbv61.Logger).errors.UNKNOWN_ERROR, {
            expectedHash: tx.hash,
            returnedHash: hash
        });
        result.wait = (confirms, timeout)=>$bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
                if (confirms == null) confirms = 1;
                if (timeout == null) timeout = 0;
                // Get the details to detect replacement
                let replacement = undefined;
                if (confirms !== 0 && startBlock != null) replacement = {
                    data: tx.data,
                    from: tx.from,
                    nonce: tx.nonce,
                    to: tx.to,
                    value: tx.value,
                    startBlock: startBlock
                };
                const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);
                if (receipt == null && confirms === 0) return null;
                // No longer pending, allow the polling loop to garbage collect this
                this._emitted["t:" + tx.hash] = receipt.blockNumber;
                if (receipt.status === 0) $bc831430ade2c52d$var$logger.throwError("transaction failed", (0, $cbv61.Logger).errors.CALL_EXCEPTION, {
                    transactionHash: tx.hash,
                    transaction: tx,
                    receipt: receipt
                });
                return receipt;
            });
        return result;
    }
    sendTransaction(signedTransaction) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const hexTx = yield Promise.resolve(signedTransaction).then((t)=>(0, $eg8oT.hexlify)(t));
            const tx = this.formatter.transaction(signedTransaction);
            if (tx.confirmations == null) tx.confirmations = 0;
            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
            try {
                const hash = yield this.perform("sendTransaction", {
                    signedTransaction: hexTx
                });
                return this._wrapTransaction(tx, hash, blockNumber);
            } catch (error) {
                error.transaction = tx;
                error.transactionHash = tx.hash;
                throw error;
            }
        });
    }
    _getTransactionRequest(transaction) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            const values = yield transaction;
            const tx = {};
            [
                "from",
                "to"
            ].forEach((key)=>{
                if (values[key] == null) return;
                tx[key] = Promise.resolve(values[key]).then((v)=>v ? this._getAddress(v) : null);
            });
            [
                "gasLimit",
                "gasPrice",
                "maxFeePerGas",
                "maxPriorityFeePerGas",
                "value"
            ].forEach((key)=>{
                if (values[key] == null) return;
                tx[key] = Promise.resolve(values[key]).then((v)=>v ? (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(v) : null);
            });
            [
                "type"
            ].forEach((key)=>{
                if (values[key] == null) return;
                tx[key] = Promise.resolve(values[key]).then((v)=>v != null ? v : null);
            });
            if (values.accessList) tx.accessList = this.formatter.accessList(values.accessList);
            [
                "data"
            ].forEach((key)=>{
                if (values[key] == null) return;
                tx[key] = Promise.resolve(values[key]).then((v)=>v ? (0, $eg8oT.hexlify)(v) : null);
            });
            return this.formatter.transactionRequest((yield (0, $b19fb92a27e5f35f$exports.resolveProperties)(tx)));
        });
    }
    _getFilter(filter) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            filter = yield filter;
            const result = {};
            if (filter.address != null) result.address = this._getAddress(filter.address);
            [
                "blockHash",
                "topics"
            ].forEach((key)=>{
                if (filter[key] == null) return;
                result[key] = filter[key];
            });
            [
                "fromBlock",
                "toBlock"
            ].forEach((key)=>{
                if (filter[key] == null) return;
                result[key] = this._getBlockTag(filter[key]);
            });
            return this.formatter.filter((yield (0, $b19fb92a27e5f35f$exports.resolveProperties)(result)));
        });
    }
    _call(transaction, blockTag, attempt) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            if (attempt >= $bc831430ade2c52d$var$MAX_CCIP_REDIRECTS) $bc831430ade2c52d$var$logger.throwError("CCIP read exceeded maximum redirections", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                redirects: attempt,
                transaction: transaction
            });
            const txSender = transaction.to;
            const result = yield this.perform("call", {
                transaction: transaction,
                blockTag: blockTag
            });
            // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)
            if (attempt >= 0 && blockTag === "latest" && txSender != null && result.substring(0, 10) === "0x556f1830" && (0, $eg8oT.hexDataLength)(result) % 32 === 4) try {
                const data = (0, $eg8oT.hexDataSlice)(result, 4);
                // Check the sender of the OffchainLookup matches the transaction
                const sender = (0, $eg8oT.hexDataSlice)(data, 0, 32);
                if (!(0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(sender).eq(txSender)) $bc831430ade2c52d$var$logger.throwError("CCIP Read sender did not match", (0, $cbv61.Logger).errors.CALL_EXCEPTION, {
                    name: "OffchainLookup",
                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                    transaction: transaction,
                    data: result
                });
                // Read the URLs from the response
                const urls = [];
                const urlsOffset = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from((0, $eg8oT.hexDataSlice)(data, 32, 64)).toNumber();
                const urlsLength = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from((0, $eg8oT.hexDataSlice)(data, urlsOffset, urlsOffset + 32)).toNumber();
                const urlsData = (0, $eg8oT.hexDataSlice)(data, urlsOffset + 32);
                for(let u = 0; u < urlsLength; u++){
                    const url = $bc831430ade2c52d$var$_parseString(urlsData, u * 32);
                    if (url == null) $bc831430ade2c52d$var$logger.throwError("CCIP Read contained corrupt URL string", (0, $cbv61.Logger).errors.CALL_EXCEPTION, {
                        name: "OffchainLookup",
                        signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                        transaction: transaction,
                        data: result
                    });
                    urls.push(url);
                }
                // Get the CCIP calldata to forward
                const calldata = $bc831430ade2c52d$var$_parseBytes(data, 64);
                // Get the callbackSelector (bytes4)
                if (!(0, $66faa3baf2af8a8b$export$d97aa349ed20696).from((0, $eg8oT.hexDataSlice)(data, 100, 128)).isZero()) $bc831430ade2c52d$var$logger.throwError("CCIP Read callback selector included junk", (0, $cbv61.Logger).errors.CALL_EXCEPTION, {
                    name: "OffchainLookup",
                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                    transaction: transaction,
                    data: result
                });
                const callbackSelector = (0, $eg8oT.hexDataSlice)(data, 96, 100);
                // Get the extra data to send back to the contract as context
                const extraData = $bc831430ade2c52d$var$_parseBytes(data, 128);
                const ccipResult = yield this.ccipReadFetch(transaction, calldata, urls);
                if (ccipResult == null) $bc831430ade2c52d$var$logger.throwError("CCIP Read disabled or provided no URLs", (0, $cbv61.Logger).errors.CALL_EXCEPTION, {
                    name: "OffchainLookup",
                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                    transaction: transaction,
                    data: result
                });
                const tx = {
                    to: txSender,
                    data: (0, $eg8oT.hexConcat)([
                        callbackSelector,
                        $bc831430ade2c52d$var$encodeBytes([
                            ccipResult,
                            extraData
                        ])
                    ])
                };
                return this._call(tx, blockTag, attempt + 1);
            } catch (error) {
                if (error.code === (0, $cbv61.Logger).errors.SERVER_ERROR) throw error;
            }
            try {
                return (0, $eg8oT.hexlify)(result);
            } catch (error) {
                return $bc831430ade2c52d$var$logger.throwError("bad result from backend", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                    method: "call",
                    params: {
                        transaction: transaction,
                        blockTag: blockTag
                    },
                    result: result,
                    error: error
                });
            }
        });
    }
    call(transaction, blockTag) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const resolved = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                transaction: this._getTransactionRequest(transaction),
                blockTag: this._getBlockTag(blockTag),
                ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)
            });
            return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1);
        });
    }
    estimateGas(transaction) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                transaction: this._getTransactionRequest(transaction)
            });
            const result = yield this.perform("estimateGas", params);
            try {
                return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(result);
            } catch (error) {
                return $bc831430ade2c52d$var$logger.throwError("bad result from backend", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                    method: "estimateGas",
                    params: params,
                    result: result,
                    error: error
                });
            }
        });
    }
    _getAddress(addressOrName) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            addressOrName = yield addressOrName;
            if (typeof addressOrName !== "string") $bc831430ade2c52d$var$logger.throwArgumentError("invalid address or ENS name", "name", addressOrName);
            const address = yield this.resolveName(addressOrName);
            if (address == null) $bc831430ade2c52d$var$logger.throwError("ENS name not configured", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: `resolveName(${JSON.stringify(addressOrName)})`
            });
            return address;
        });
    }
    _getBlock(blockHashOrBlockTag, includeTransactions) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            blockHashOrBlockTag = yield blockHashOrBlockTag;
            // If blockTag is a number (not "latest", etc), this is the block number
            let blockNumber = -128;
            const params = {
                includeTransactions: !!includeTransactions
            };
            if ((0, $eg8oT.isHexString)(blockHashOrBlockTag, 32)) params.blockHash = blockHashOrBlockTag;
            else try {
                params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);
                if ((0, $eg8oT.isHexString)(params.blockTag)) blockNumber = parseInt(params.blockTag.substring(2), 16);
            } catch (error) {
                $bc831430ade2c52d$var$logger.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);
            }
            return (0, $68f1849f3b633900$exports.poll)(()=>$bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
                    const block = yield this.perform("getBlock", params);
                    // Block was not found
                    if (block == null) {
                        // For blockhashes, if we didn't say it existed, that blockhash may
                        // not exist. If we did see it though, perhaps from a log, we know
                        // it exists, and this node is just not caught up yet.
                        if (params.blockHash != null) {
                            if (this._emitted["b:" + params.blockHash] == null) return null;
                        }
                        // For block tags, if we are asking for a future block, we return null
                        if (params.blockTag != null) {
                            if (blockNumber > this._emitted.block) return null;
                        }
                        // Retry on the next block
                        return undefined;
                    }
                    // Add transactions
                    if (includeTransactions) {
                        let blockNumber = null;
                        for(let i = 0; i < block.transactions.length; i++){
                            const tx = block.transactions[i];
                            if (tx.blockNumber == null) tx.confirmations = 0;
                            else if (tx.confirmations == null) {
                                if (blockNumber == null) blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                // Add the confirmations using the fast block number (pessimistic)
                                let confirmations = blockNumber - tx.blockNumber + 1;
                                if (confirmations <= 0) confirmations = 1;
                                tx.confirmations = confirmations;
                            }
                        }
                        const blockWithTxs = this.formatter.blockWithTransactions(block);
                        blockWithTxs.transactions = blockWithTxs.transactions.map((tx)=>this._wrapTransaction(tx));
                        return blockWithTxs;
                    }
                    return this.formatter.block(block);
                }), {
                oncePoll: this
            });
        });
    }
    getBlock(blockHashOrBlockTag) {
        return this._getBlock(blockHashOrBlockTag, false);
    }
    getBlockWithTransactions(blockHashOrBlockTag) {
        return this._getBlock(blockHashOrBlockTag, true);
    }
    getTransaction(transactionHash) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            transactionHash = yield transactionHash;
            const params = {
                transactionHash: this.formatter.hash(transactionHash, true)
            };
            return (0, $68f1849f3b633900$exports.poll)(()=>$bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
                    const result = yield this.perform("getTransaction", params);
                    if (result == null) {
                        if (this._emitted["t:" + transactionHash] == null) return null;
                        return undefined;
                    }
                    const tx = this.formatter.transactionResponse(result);
                    if (tx.blockNumber == null) tx.confirmations = 0;
                    else if (tx.confirmations == null) {
                        const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        // Add the confirmations using the fast block number (pessimistic)
                        let confirmations = blockNumber - tx.blockNumber + 1;
                        if (confirmations <= 0) confirmations = 1;
                        tx.confirmations = confirmations;
                    }
                    return this._wrapTransaction(tx);
                }), {
                oncePoll: this
            });
        });
    }
    getTransactionReceipt(transactionHash) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            transactionHash = yield transactionHash;
            const params = {
                transactionHash: this.formatter.hash(transactionHash, true)
            };
            return (0, $68f1849f3b633900$exports.poll)(()=>$bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
                    const result = yield this.perform("getTransactionReceipt", params);
                    if (result == null) {
                        if (this._emitted["t:" + transactionHash] == null) return null;
                        return undefined;
                    }
                    // "geth-etc" returns receipts before they are ready
                    if (result.blockHash == null) return undefined;
                    const receipt = this.formatter.receipt(result);
                    if (receipt.blockNumber == null) receipt.confirmations = 0;
                    else if (receipt.confirmations == null) {
                        const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        // Add the confirmations using the fast block number (pessimistic)
                        let confirmations = blockNumber - receipt.blockNumber + 1;
                        if (confirmations <= 0) confirmations = 1;
                        receipt.confirmations = confirmations;
                    }
                    return receipt;
                }), {
                oncePoll: this
            });
        });
    }
    getLogs(filter) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                filter: this._getFilter(filter)
            });
            const logs = yield this.perform("getLogs", params);
            logs.forEach((log)=>{
                if (log.removed == null) log.removed = false;
            });
            return (0, $a833276422c6da56$export$a06636add2a09fd8).arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);
        });
    }
    getEtherPrice() {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            return this.perform("getEtherPrice", {});
        });
    }
    _getBlockTag(blockTag) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            blockTag = yield blockTag;
            if (typeof blockTag === "number" && blockTag < 0) {
                if (blockTag % 1) $bc831430ade2c52d$var$logger.throwArgumentError("invalid BlockTag", "blockTag", blockTag);
                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                blockNumber += blockTag;
                if (blockNumber < 0) blockNumber = 0;
                return this.formatter.blockTag(blockNumber);
            }
            return this.formatter.blockTag(blockTag);
        });
    }
    getResolver(name) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            let currentName = name;
            while(true){
                if (currentName === "" || currentName === ".") return null;
                // Optimization since the eth node cannot change and does
                // not have a wildcard resolver
                if (name !== "eth" && currentName === "eth") return null;
                // Check the current node for a resolver
                const addr = yield this._getResolver(currentName, "getResolver");
                // Found a resolver!
                if (addr != null) {
                    const resolver = new $bc831430ade2c52d$export$8b4c839865b08288(this, addr, name);
                    // Legacy resolver found, using EIP-2544 so it isn't safe to use
                    if (currentName !== name && !(yield resolver.supportsWildcard())) return null;
                    return resolver;
                }
                // Get the parent node
                currentName = currentName.split(".").slice(1).join(".");
            }
        });
    }
    _getResolver(name, operation) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            if (operation == null) operation = "ENS";
            const network = yield this.getNetwork();
            // No ENS...
            if (!network.ensAddress) $bc831430ade2c52d$var$logger.throwError("network does not support ENS", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: operation,
                network: network.name
            });
            try {
                // keccak256("resolver(bytes32)")
                const addrData = yield this.call({
                    to: network.ensAddress,
                    data: "0x0178b8bf" + (0, $ce31ee151995bdb4$export$91d651ee363e1209)(name).substring(2)
                });
                return this.formatter.callAddress(addrData);
            } catch (error) {
            // ENS registry cannot throw errors on resolver(bytes32)
            }
            return null;
        });
    }
    resolveName(name) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            name = yield name;
            // If it is already an address, nothing to resolve
            try {
                return Promise.resolve(this.formatter.address(name));
            } catch (error) {
                // If is is a hexstring, the address is bad (See #694)
                if ((0, $eg8oT.isHexString)(name)) throw error;
            }
            if (typeof name !== "string") $bc831430ade2c52d$var$logger.throwArgumentError("invalid ENS name", "name", name);
            // Get the addr from the resolver
            const resolver = yield this.getResolver(name);
            if (!resolver) return null;
            return yield resolver.getAddress();
        });
    }
    lookupAddress(address) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            address = yield address;
            address = this.formatter.address(address);
            const node = address.substring(2).toLowerCase() + ".addr.reverse";
            const resolverAddr = yield this._getResolver(node, "lookupAddress");
            if (resolverAddr == null) return null;
            // keccak("name(bytes32)")
            const name = $bc831430ade2c52d$var$_parseString((yield this.call({
                to: resolverAddr,
                data: "0x691f3431" + (0, $ce31ee151995bdb4$export$91d651ee363e1209)(node).substring(2)
            })), 0);
            const addr = yield this.resolveName(name);
            if (addr != address) return null;
            return name;
        });
    }
    getAvatar(nameOrAddress) {
        return $bc831430ade2c52d$var$__awaiter(this, void 0, void 0, function*() {
            let resolver = null;
            if ((0, $eg8oT.isHexString)(nameOrAddress)) {
                // Address; reverse lookup
                const address = this.formatter.address(nameOrAddress);
                const node = address.substring(2).toLowerCase() + ".addr.reverse";
                const resolverAddress = yield this._getResolver(node, "getAvatar");
                if (!resolverAddress) return null;
                // Try resolving the avatar against the addr.reverse resolver
                resolver = new $bc831430ade2c52d$export$8b4c839865b08288(this, resolverAddress, node);
                try {
                    const avatar = yield resolver.getAvatar();
                    if (avatar) return avatar.url;
                } catch (error) {
                    if (error.code !== (0, $cbv61.Logger).errors.CALL_EXCEPTION) throw error;
                }
                // Try getting the name and performing forward lookup; allowing wildcards
                try {
                    // keccak("name(bytes32)")
                    const name = $bc831430ade2c52d$var$_parseString((yield this.call({
                        to: resolverAddress,
                        data: "0x691f3431" + (0, $ce31ee151995bdb4$export$91d651ee363e1209)(node).substring(2)
                    })), 0);
                    resolver = yield this.getResolver(name);
                } catch (error) {
                    if (error.code !== (0, $cbv61.Logger).errors.CALL_EXCEPTION) throw error;
                    return null;
                }
            } else {
                // ENS name; forward lookup with wildcard
                resolver = yield this.getResolver(nameOrAddress);
                if (!resolver) return null;
            }
            const avatar = yield resolver.getAvatar();
            if (avatar == null) return null;
            return avatar.url;
        });
    }
    perform(method, params) {
        return $bc831430ade2c52d$var$logger.throwError(method + " not implemented", (0, $cbv61.Logger).errors.NOT_IMPLEMENTED, {
            operation: method
        });
    }
    _startEvent(event) {
        this.polling = this._events.filter((e)=>e.pollable()).length > 0;
    }
    _stopEvent(event) {
        this.polling = this._events.filter((e)=>e.pollable()).length > 0;
    }
    _addEventListener(eventName, listener, once) {
        const event = new $bc831430ade2c52d$export$d61e24a684f9e51($bc831430ade2c52d$var$getEventTag(eventName), listener, once);
        this._events.push(event);
        this._startEvent(event);
        return this;
    }
    on(eventName, listener) {
        return this._addEventListener(eventName, listener, false);
    }
    once(eventName, listener) {
        return this._addEventListener(eventName, listener, true);
    }
    emit(eventName, ...args) {
        let result = false;
        let stopped = [];
        let eventTag = $bc831430ade2c52d$var$getEventTag(eventName);
        this._events = this._events.filter((event)=>{
            if (event.tag !== eventTag) return true;
            setTimeout(()=>{
                event.listener.apply(this, args);
            }, 0);
            result = true;
            if (event.once) {
                stopped.push(event);
                return false;
            }
            return true;
        });
        stopped.forEach((event)=>{
            this._stopEvent(event);
        });
        return result;
    }
    listenerCount(eventName) {
        if (!eventName) return this._events.length;
        let eventTag = $bc831430ade2c52d$var$getEventTag(eventName);
        return this._events.filter((event)=>{
            return event.tag === eventTag;
        }).length;
    }
    listeners(eventName) {
        if (eventName == null) return this._events.map((event)=>event.listener);
        let eventTag = $bc831430ade2c52d$var$getEventTag(eventName);
        return this._events.filter((event)=>event.tag === eventTag).map((event)=>event.listener);
    }
    off(eventName, listener) {
        if (listener == null) return this.removeAllListeners(eventName);
        const stopped = [];
        let found = false;
        let eventTag = $bc831430ade2c52d$var$getEventTag(eventName);
        this._events = this._events.filter((event)=>{
            if (event.tag !== eventTag || event.listener != listener) return true;
            if (found) return true;
            found = true;
            stopped.push(event);
            return false;
        });
        stopped.forEach((event)=>{
            this._stopEvent(event);
        });
        return this;
    }
    removeAllListeners(eventName) {
        let stopped = [];
        if (eventName == null) {
            stopped = this._events;
            this._events = [];
        } else {
            const eventTag = $bc831430ade2c52d$var$getEventTag(eventName);
            this._events = this._events.filter((event)=>{
                if (event.tag !== eventTag) return true;
                stopped.push(event);
                return false;
            });
        }
        stopped.forEach((event)=>{
            this._stopEvent(event);
        });
        return this;
    }
}




var $852e4865dd1a0824$exports = {};

$parcel$export($852e4865dd1a0824$exports, "WebSocketProvider", () => $852e4865dd1a0824$export$bfafe629242f30bd, (v) => $852e4865dd1a0824$export$bfafe629242f30bd = v);


var $7f2d24163dd74616$exports = {};

$parcel$export($7f2d24163dd74616$exports, "JsonRpcSigner", () => $7f2d24163dd74616$export$5f7b5fca3508545a, (v) => $7f2d24163dd74616$export$5f7b5fca3508545a = v);
$parcel$export($7f2d24163dd74616$exports, "JsonRpcProvider", () => $7f2d24163dd74616$export$da28308012bf6748, (v) => $7f2d24163dd74616$export$da28308012bf6748 = v);
var $cb7b024827fb2a6c$exports = {};

$parcel$export($cb7b024827fb2a6c$exports, "Signer", () => $cb7b024827fb2a6c$export$fdf54fdde81cc9f0, (v) => $cb7b024827fb2a6c$export$fdf54fdde81cc9f0 = v);
$parcel$export($cb7b024827fb2a6c$exports, "VoidSigner", () => $cb7b024827fb2a6c$export$7dbc56d9b9612bad, (v) => $cb7b024827fb2a6c$export$7dbc56d9b9612bad = v);


var $cbv61 = parcelRequire("cbv61");
const $b9f4219d73a32bad$export$83d89fbfd8236492 = "abstract-signer/5.7.0";


"use strict";
var $cb7b024827fb2a6c$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $cb7b024827fb2a6c$var$logger = new (0, $cbv61.Logger)((0, $b9f4219d73a32bad$export$83d89fbfd8236492));
const $cb7b024827fb2a6c$var$allowedTransactionKeys = [
    "accessList",
    "ccipReadEnabled",
    "chainId",
    "customData",
    "data",
    "from",
    "gasLimit",
    "gasPrice",
    "maxFeePerGas",
    "maxPriorityFeePerGas",
    "nonce",
    "to",
    "type",
    "value"
];
const $cb7b024827fb2a6c$var$forwardErrors = [
    (0, $cbv61.Logger).errors.INSUFFICIENT_FUNDS,
    (0, $cbv61.Logger).errors.NONCE_EXPIRED,
    (0, $cbv61.Logger).errors.REPLACEMENT_UNDERPRICED
];
class $cb7b024827fb2a6c$export$fdf54fdde81cc9f0 {
    ///////////////////
    // Sub-classes MUST call super
    constructor(){
        $cb7b024827fb2a6c$var$logger.checkAbstract(new.target, $cb7b024827fb2a6c$export$fdf54fdde81cc9f0);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_isSigner", true);
    }
    ///////////////////
    // Sub-classes MAY override these
    getBalance(blockTag) {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getBalance");
            return yield this.provider.getBalance(this.getAddress(), blockTag);
        });
    }
    getTransactionCount(blockTag) {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getTransactionCount");
            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);
        });
    }
    // Populates "from" if unspecified, and estimates the gas for the transaction
    estimateGas(transaction) {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            this._checkProvider("estimateGas");
            const tx = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)(this.checkTransaction(transaction));
            return yield this.provider.estimateGas(tx);
        });
    }
    // Populates "from" if unspecified, and calls with the transaction
    call(transaction, blockTag) {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            this._checkProvider("call");
            const tx = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)(this.checkTransaction(transaction));
            return yield this.provider.call(tx, blockTag);
        });
    }
    // Populates all fields in a transaction, signs it and sends it to the network
    sendTransaction(transaction) {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            this._checkProvider("sendTransaction");
            const tx = yield this.populateTransaction(transaction);
            const signedTx = yield this.signTransaction(tx);
            return yield this.provider.sendTransaction(signedTx);
        });
    }
    getChainId() {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getChainId");
            const network = yield this.provider.getNetwork();
            return network.chainId;
        });
    }
    getGasPrice() {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getGasPrice");
            return yield this.provider.getGasPrice();
        });
    }
    getFeeData() {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            this._checkProvider("getFeeData");
            return yield this.provider.getFeeData();
        });
    }
    resolveName(name) {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            this._checkProvider("resolveName");
            return yield this.provider.resolveName(name);
        });
    }
    // Checks a transaction does not contain invalid keys and if
    // no "from" is provided, populates it.
    // - does NOT require a provider
    // - adds "from" is not present
    // - returns a COPY (safe to mutate the result)
    // By default called from: (overriding these prevents it)
    //   - call
    //   - estimateGas
    //   - populateTransaction (and therefor sendTransaction)
    checkTransaction(transaction) {
        for(const key in transaction)if ($cb7b024827fb2a6c$var$allowedTransactionKeys.indexOf(key) === -1) $cb7b024827fb2a6c$var$logger.throwArgumentError("invalid transaction key: " + key, "transaction", transaction);
        const tx = (0, $b19fb92a27e5f35f$exports.shallowCopy)(transaction);
        if (tx.from == null) tx.from = this.getAddress();
        else // Make sure any provided address matches this signer
        tx.from = Promise.all([
            Promise.resolve(tx.from),
            this.getAddress()
        ]).then((result)=>{
            if (result[0].toLowerCase() !== result[1].toLowerCase()) $cb7b024827fb2a6c$var$logger.throwArgumentError("from address mismatch", "transaction", transaction);
            return result[0];
        });
        return tx;
    }
    // Populates ALL keys for a transaction and checks that "from" matches
    // this Signer. Should be used by sendTransaction but NOT by signTransaction.
    // By default called from: (overriding these prevents it)
    //   - sendTransaction
    //
    // Notes:
    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas
    populateTransaction(transaction) {
        return $cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
            const tx = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)(this.checkTransaction(transaction));
            if (tx.to != null) {
                tx.to = Promise.resolve(tx.to).then((to)=>$cb7b024827fb2a6c$var$__awaiter(this, void 0, void 0, function*() {
                        if (to == null) return null;
                        const address = yield this.resolveName(to);
                        if (address == null) $cb7b024827fb2a6c$var$logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                        return address;
                    }));
                // Prevent this error from causing an UnhandledPromiseException
                tx.to.catch((error)=>{});
            }
            // Do not allow mixing pre-eip-1559 and eip-1559 properties
            const hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;
            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) $cb7b024827fb2a6c$var$logger.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) $cb7b024827fb2a6c$var$logger.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
            if ((tx.type === 2 || tx.type == null) && tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null) // Fully-formed EIP-1559 transaction (skip getFeeData)
            tx.type = 2;
            else if (tx.type === 0 || tx.type === 1) // Explicit Legacy or EIP-2930 transaction
            // Populate missing gasPrice
            {
                if (tx.gasPrice == null) tx.gasPrice = this.getGasPrice();
            } else {
                // We need to get fee data to determine things
                const feeData = yield this.getFeeData();
                if (tx.type == null) {
                    // We need to auto-detect the intended type of this transaction...
                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
                        // The network supports EIP-1559!
                        // Upgrade transaction from null to eip-1559
                        tx.type = 2;
                        if (tx.gasPrice != null) {
                            // Using legacy gasPrice property on an eip-1559 network,
                            // so use gasPrice as both fee properties
                            const gasPrice = tx.gasPrice;
                            delete tx.gasPrice;
                            tx.maxFeePerGas = gasPrice;
                            tx.maxPriorityFeePerGas = gasPrice;
                        } else {
                            // Populate missing fee data
                            if (tx.maxFeePerGas == null) tx.maxFeePerGas = feeData.maxFeePerGas;
                            if (tx.maxPriorityFeePerGas == null) tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                        }
                    } else if (feeData.gasPrice != null) {
                        // Network doesn't support EIP-1559...
                        // ...but they are trying to use EIP-1559 properties
                        if (hasEip1559) $cb7b024827fb2a6c$var$logger.throwError("network does not support EIP-1559", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                            operation: "populateTransaction"
                        });
                        // Populate missing fee data
                        if (tx.gasPrice == null) tx.gasPrice = feeData.gasPrice;
                        // Explicitly set untyped transaction to legacy
                        tx.type = 0;
                    } else // getFeeData has failed us.
                    $cb7b024827fb2a6c$var$logger.throwError("failed to get consistent fee data", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                        operation: "signer.getFeeData"
                    });
                } else if (tx.type === 2) {
                    // Explicitly using EIP-1559
                    // Populate missing fee data
                    if (tx.maxFeePerGas == null) tx.maxFeePerGas = feeData.maxFeePerGas;
                    if (tx.maxPriorityFeePerGas == null) tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                }
            }
            if (tx.nonce == null) tx.nonce = this.getTransactionCount("pending");
            if (tx.gasLimit == null) tx.gasLimit = this.estimateGas(tx).catch((error)=>{
                if ($cb7b024827fb2a6c$var$forwardErrors.indexOf(error.code) >= 0) throw error;
                return $cb7b024827fb2a6c$var$logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", (0, $cbv61.Logger).errors.UNPREDICTABLE_GAS_LIMIT, {
                    error: error,
                    tx: tx
                });
            });
            if (tx.chainId == null) tx.chainId = this.getChainId();
            else tx.chainId = Promise.all([
                Promise.resolve(tx.chainId),
                this.getChainId()
            ]).then((results)=>{
                if (results[1] !== 0 && results[0] !== results[1]) $cb7b024827fb2a6c$var$logger.throwArgumentError("chainId address mismatch", "transaction", transaction);
                return results[0];
            });
            return yield (0, $b19fb92a27e5f35f$exports.resolveProperties)(tx);
        });
    }
    ///////////////////
    // Sub-classes SHOULD leave these alone
    _checkProvider(operation) {
        if (!this.provider) $cb7b024827fb2a6c$var$logger.throwError("missing provider", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: operation || "_checkProvider"
        });
    }
    static isSigner(value) {
        return !!(value && value._isSigner);
    }
}
class $cb7b024827fb2a6c$export$7dbc56d9b9612bad extends $cb7b024827fb2a6c$export$fdf54fdde81cc9f0 {
    constructor(address, provider){
        super();
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "address", address);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "provider", provider || null);
    }
    getAddress() {
        return Promise.resolve(this.address);
    }
    _fail(message, operation) {
        return Promise.resolve().then(()=>{
            $cb7b024827fb2a6c$var$logger.throwError(message, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: operation
            });
        });
    }
    signMessage(message) {
        return this._fail("VoidSigner cannot sign messages", "signMessage");
    }
    signTransaction(transaction) {
        return this._fail("VoidSigner cannot sign transactions", "signTransaction");
    }
    _signTypedData(domain, types, value) {
        return this._fail("VoidSigner cannot sign typed data", "signTypedData");
    }
    connect(provider) {
        return new $cb7b024827fb2a6c$export$7dbc56d9b9612bad(this.address, provider);
    }
}




var $eg8oT = parcelRequire("eg8oT");
var $8a68414fdead829d$exports = {};

$parcel$export($8a68414fdead829d$exports, "TypedDataEncoder", () => $8a68414fdead829d$export$458ab927ae635c3, (v) => $8a68414fdead829d$export$458ab927ae635c3 = v);



var $eg8oT = parcelRequire("eg8oT");



var $cbv61 = parcelRequire("cbv61");



function $22d0893bc40cd818$export$d560c7e4a29451c2(text) {
    return (0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $cde319f07c8777da$export$8feeb310b4b4752f)(text));
}


var $8a68414fdead829d$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $8a68414fdead829d$var$logger = new (0, $cbv61.Logger)((0, $6c7d8a122a074e25$export$83d89fbfd8236492));
const $8a68414fdead829d$var$padding = new Uint8Array(32);
$8a68414fdead829d$var$padding.fill(0);
const $8a68414fdead829d$var$NegativeOne = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(-1);
const $8a68414fdead829d$var$Zero = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(0);
const $8a68414fdead829d$var$One = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(1);
const $8a68414fdead829d$var$MaxUint256 = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function $8a68414fdead829d$var$hexPadRight(value) {
    const bytes = (0, $eg8oT.arrayify)(value);
    const padOffset = bytes.length % 32;
    if (padOffset) return (0, $eg8oT.hexConcat)([
        bytes,
        $8a68414fdead829d$var$padding.slice(padOffset)
    ]);
    return (0, $eg8oT.hexlify)(bytes);
}
const $8a68414fdead829d$var$hexTrue = (0, $eg8oT.hexZeroPad)($8a68414fdead829d$var$One.toHexString(), 32);
const $8a68414fdead829d$var$hexFalse = (0, $eg8oT.hexZeroPad)($8a68414fdead829d$var$Zero.toHexString(), 32);
const $8a68414fdead829d$var$domainFieldTypes = {
    name: "string",
    version: "string",
    chainId: "uint256",
    verifyingContract: "address",
    salt: "bytes32"
};
const $8a68414fdead829d$var$domainFieldNames = [
    "name",
    "version",
    "chainId",
    "verifyingContract",
    "salt"
];
function $8a68414fdead829d$var$checkString(key) {
    return function(value) {
        if (typeof value !== "string") $8a68414fdead829d$var$logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);
        return value;
    };
}
const $8a68414fdead829d$var$domainChecks = {
    name: $8a68414fdead829d$var$checkString("name"),
    version: $8a68414fdead829d$var$checkString("version"),
    chainId: function(value) {
        try {
            return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value).toString();
        } catch (error) {}
        return $8a68414fdead829d$var$logger.throwArgumentError(`invalid domain value for "chainId"`, "domain.chainId", value);
    },
    verifyingContract: function(value) {
        try {
            return (0, $8b38701037b2e5d8$export$88411125f012957a)(value).toLowerCase();
        } catch (error) {}
        return $8a68414fdead829d$var$logger.throwArgumentError(`invalid domain value "verifyingContract"`, "domain.verifyingContract", value);
    },
    salt: function(value) {
        try {
            const bytes = (0, $eg8oT.arrayify)(value);
            if (bytes.length !== 32) throw new Error("bad length");
            return (0, $eg8oT.hexlify)(bytes);
        } catch (error) {}
        return $8a68414fdead829d$var$logger.throwArgumentError(`invalid domain value "salt"`, "domain.salt", value);
    }
};
function $8a68414fdead829d$var$getBaseEncoder(type) {
    // intXX and uintXX
    {
        const match = type.match(/^(u?)int(\d*)$/);
        if (match) {
            const signed = match[1] === "";
            const width = parseInt(match[2] || "256");
            if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) $8a68414fdead829d$var$logger.throwArgumentError("invalid numeric width", "type", type);
            const boundsUpper = $8a68414fdead829d$var$MaxUint256.mask(signed ? width - 1 : width);
            const boundsLower = signed ? boundsUpper.add($8a68414fdead829d$var$One).mul($8a68414fdead829d$var$NegativeOne) : $8a68414fdead829d$var$Zero;
            return function(value) {
                const v = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value);
                if (v.lt(boundsLower) || v.gt(boundsUpper)) $8a68414fdead829d$var$logger.throwArgumentError(`value out-of-bounds for ${type}`, "value", value);
                return (0, $eg8oT.hexZeroPad)(v.toTwos(256).toHexString(), 32);
            };
        }
    }
    // bytesXX
    {
        const match = type.match(/^bytes(\d+)$/);
        if (match) {
            const width = parseInt(match[1]);
            if (width === 0 || width > 32 || match[1] !== String(width)) $8a68414fdead829d$var$logger.throwArgumentError("invalid bytes width", "type", type);
            return function(value) {
                const bytes = (0, $eg8oT.arrayify)(value);
                if (bytes.length !== width) $8a68414fdead829d$var$logger.throwArgumentError(`invalid length for ${type}`, "value", value);
                return $8a68414fdead829d$var$hexPadRight(value);
            };
        }
    }
    switch(type){
        case "address":
            return function(value) {
                return (0, $eg8oT.hexZeroPad)((0, $8b38701037b2e5d8$export$88411125f012957a)(value), 32);
            };
        case "bool":
            return function(value) {
                return !value ? $8a68414fdead829d$var$hexFalse : $8a68414fdead829d$var$hexTrue;
            };
        case "bytes":
            return function(value) {
                return (0, $dd686f272f8051f8$export$f8151fce47ad1c35)(value);
            };
        case "string":
            return function(value) {
                return (0, $22d0893bc40cd818$export$d560c7e4a29451c2)(value);
            };
    }
    return null;
}
function $8a68414fdead829d$var$encodeType(name, fields) {
    return `${name}(${fields.map(({ name: name , type: type  })=>type + " " + name).join(",")})`;
}
class $8a68414fdead829d$export$458ab927ae635c3 {
    constructor(types){
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "types", Object.freeze((0, $b19fb92a27e5f35f$exports.deepCopy)(types)));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_encoderCache", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_types", {});
        // Link struct types to their direct child structs
        const links = {};
        // Link structs to structs which contain them as a child
        const parents = {};
        // Link all subtypes within a given struct
        const subtypes = {};
        Object.keys(types).forEach((type)=>{
            links[type] = {};
            parents[type] = [];
            subtypes[type] = {};
        });
        for(const name in types){
            const uniqueNames = {};
            types[name].forEach((field)=>{
                // Check each field has a unique name
                if (uniqueNames[field.name]) $8a68414fdead829d$var$logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, "types", types);
                uniqueNames[field.name] = true;
                // Get the base type (drop any array specifiers)
                const baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                if (baseType === name) $8a68414fdead829d$var$logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
                // Is this a base encoding type?
                const encoder = $8a68414fdead829d$var$getBaseEncoder(baseType);
                if (encoder) return;
                if (!parents[baseType]) $8a68414fdead829d$var$logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types);
                // Add linkage
                parents[baseType].push(name);
                links[name][baseType] = true;
            });
        }
        // Deduce the primary type
        const primaryTypes = Object.keys(parents).filter((n)=>parents[n].length === 0);
        if (primaryTypes.length === 0) $8a68414fdead829d$var$logger.throwArgumentError("missing primary type", "types", types);
        else if (primaryTypes.length > 1) $8a68414fdead829d$var$logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t)=>JSON.stringify(t)).join(", ")}`, "types", types);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "primaryType", primaryTypes[0]);
        // Check for circular type references
        function checkCircular(type, found) {
            if (found[type]) $8a68414fdead829d$var$logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types);
            found[type] = true;
            Object.keys(links[type]).forEach((child)=>{
                if (!parents[child]) return;
                // Recursively check children
                checkCircular(child, found);
                // Mark all ancestors as having this decendant
                Object.keys(found).forEach((subtype)=>{
                    subtypes[subtype][child] = true;
                });
            });
            delete found[type];
        }
        checkCircular(this.primaryType, {});
        // Compute each fully describe type
        for(const name in subtypes){
            const st = Object.keys(subtypes[name]);
            st.sort();
            this._types[name] = $8a68414fdead829d$var$encodeType(name, types[name]) + st.map((t)=>$8a68414fdead829d$var$encodeType(t, types[t])).join("");
        }
    }
    getEncoder(type) {
        let encoder = this._encoderCache[type];
        if (!encoder) encoder = this._encoderCache[type] = this._getEncoder(type);
        return encoder;
    }
    _getEncoder(type) {
        // Basic encoder type (address, bool, uint256, etc)
        {
            const encoder = $8a68414fdead829d$var$getBaseEncoder(type);
            if (encoder) return encoder;
        }
        // Array
        const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
        if (match) {
            const subtype = match[1];
            const subEncoder = this.getEncoder(subtype);
            const length = parseInt(match[3]);
            return (value)=>{
                if (length >= 0 && value.length !== length) $8a68414fdead829d$var$logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
                let result = value.map(subEncoder);
                if (this._types[subtype]) result = result.map((0, $dd686f272f8051f8$export$f8151fce47ad1c35));
                return (0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $eg8oT.hexConcat)(result));
            };
        }
        // Struct
        const fields = this.types[type];
        if (fields) {
            const encodedType = (0, $22d0893bc40cd818$export$d560c7e4a29451c2)(this._types[type]);
            return (value)=>{
                const values = fields.map(({ name: name , type: type  })=>{
                    const result = this.getEncoder(type)(value[name]);
                    if (this._types[type]) return (0, $dd686f272f8051f8$export$f8151fce47ad1c35)(result);
                    return result;
                });
                values.unshift(encodedType);
                return (0, $eg8oT.hexConcat)(values);
            };
        }
        return $8a68414fdead829d$var$logger.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    encodeType(name) {
        const result = this._types[name];
        if (!result) $8a68414fdead829d$var$logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, "name", name);
        return result;
    }
    encodeData(type, value) {
        return this.getEncoder(type)(value);
    }
    hashStruct(name, value) {
        return (0, $dd686f272f8051f8$export$f8151fce47ad1c35)(this.encodeData(name, value));
    }
    encode(value) {
        return this.encodeData(this.primaryType, value);
    }
    hash(value) {
        return this.hashStruct(this.primaryType, value);
    }
    _visit(type, value, callback) {
        // Basic encoder type (address, bool, uint256, etc)
        {
            const encoder = $8a68414fdead829d$var$getBaseEncoder(type);
            if (encoder) return callback(type, value);
        }
        // Array
        const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
        if (match) {
            const subtype = match[1];
            const length = parseInt(match[3]);
            if (length >= 0 && value.length !== length) $8a68414fdead829d$var$logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
            return value.map((v)=>this._visit(subtype, v, callback));
        }
        // Struct
        const fields = this.types[type];
        if (fields) return fields.reduce((accum, { name: name , type: type  })=>{
            accum[name] = this._visit(type, value[name], callback);
            return accum;
        }, {});
        return $8a68414fdead829d$var$logger.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    visit(value, callback) {
        return this._visit(this.primaryType, value, callback);
    }
    static from(types) {
        return new $8a68414fdead829d$export$458ab927ae635c3(types);
    }
    static getPrimaryType(types) {
        return $8a68414fdead829d$export$458ab927ae635c3.from(types).primaryType;
    }
    static hashStruct(name, types, value) {
        return $8a68414fdead829d$export$458ab927ae635c3.from(types).hashStruct(name, value);
    }
    static hashDomain(domain) {
        const domainFields = [];
        for(const name in domain){
            const type = $8a68414fdead829d$var$domainFieldTypes[name];
            if (!type) $8a68414fdead829d$var$logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, "domain", domain);
            domainFields.push({
                name: name,
                type: type
            });
        }
        domainFields.sort((a, b)=>{
            return $8a68414fdead829d$var$domainFieldNames.indexOf(a.name) - $8a68414fdead829d$var$domainFieldNames.indexOf(b.name);
        });
        return $8a68414fdead829d$export$458ab927ae635c3.hashStruct("EIP712Domain", {
            EIP712Domain: domainFields
        }, domain);
    }
    static encode(domain, types, value) {
        return (0, $eg8oT.hexConcat)([
            "0x1901",
            $8a68414fdead829d$export$458ab927ae635c3.hashDomain(domain),
            $8a68414fdead829d$export$458ab927ae635c3.from(types).hash(value)
        ]);
    }
    static hash(domain, types, value) {
        return (0, $dd686f272f8051f8$export$f8151fce47ad1c35)($8a68414fdead829d$export$458ab927ae635c3.encode(domain, types, value));
    }
    // Replaces all address types with ENS names with their looked up address
    static resolveNames(domain, types, value, resolveName) {
        return $8a68414fdead829d$var$__awaiter(this, void 0, void 0, function*() {
            // Make a copy to isolate it from the object passed in
            domain = (0, $b19fb92a27e5f35f$exports.shallowCopy)(domain);
            // Look up all ENS names
            const ensCache = {};
            // Do we need to look up the domain's verifyingContract?
            if (domain.verifyingContract && !(0, $eg8oT.isHexString)(domain.verifyingContract, 20)) ensCache[domain.verifyingContract] = "0x";
            // We are going to use the encoder to visit all the base values
            const encoder = $8a68414fdead829d$export$458ab927ae635c3.from(types);
            // Get a list of all the addresses
            encoder.visit(value, (type, value)=>{
                if (type === "address" && !(0, $eg8oT.isHexString)(value, 20)) ensCache[value] = "0x";
                return value;
            });
            // Lookup each name
            for(const name in ensCache)ensCache[name] = yield resolveName(name);
            // Replace the domain verifyingContract if needed
            if (domain.verifyingContract && ensCache[domain.verifyingContract]) domain.verifyingContract = ensCache[domain.verifyingContract];
            // Replace all ENS names with their address
            value = encoder.visit(value, (type, value)=>{
                if (type === "address" && ensCache[value]) return ensCache[value];
                return value;
            });
            return {
                domain: domain,
                value: value
            };
        });
    }
    static getPayload(domain, types, value) {
        // Validate the domain fields
        $8a68414fdead829d$export$458ab927ae635c3.hashDomain(domain);
        // Derive the EIP712Domain Struct reference type
        const domainValues = {};
        const domainTypes = [];
        $8a68414fdead829d$var$domainFieldNames.forEach((name)=>{
            const value = domain[name];
            if (value == null) return;
            domainValues[name] = $8a68414fdead829d$var$domainChecks[name](value);
            domainTypes.push({
                name: name,
                type: $8a68414fdead829d$var$domainFieldTypes[name]
            });
        });
        const encoder = $8a68414fdead829d$export$458ab927ae635c3.from(types);
        const typesWithDomain = (0, $b19fb92a27e5f35f$exports.shallowCopy)(types);
        if (typesWithDomain.EIP712Domain) $8a68414fdead829d$var$logger.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
        else typesWithDomain.EIP712Domain = domainTypes;
        // Validate the data structures and types
        encoder.encode(value);
        return {
            types: typesWithDomain,
            domain: domainValues,
            primaryType: encoder.primaryType,
            message: encoder.visit(value, (type, value)=>{
                // bytes
                if (type.match(/^bytes(\d*)/)) return (0, $eg8oT.hexlify)((0, $eg8oT.arrayify)(value));
                // uint or int
                if (type.match(/^u?int/)) return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value).toString();
                switch(type){
                    case "address":
                        return value.toLowerCase();
                    case "bool":
                        return !!value;
                    case "string":
                        if (typeof value !== "string") $8a68414fdead829d$var$logger.throwArgumentError(`invalid string`, "value", value);
                        return value;
                }
                return $8a68414fdead829d$var$logger.throwArgumentError("unsupported type", "type", type);
            })
        };
    }
}







var $cbv61 = parcelRequire("cbv61");


"use strict";
var $7f2d24163dd74616$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $7f2d24163dd74616$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
const $7f2d24163dd74616$var$errorGas = [
    "call",
    "estimateGas"
];
function $7f2d24163dd74616$var$spelunk(value, requireData) {
    if (value == null) return null;
    // These *are* the droids we're looking for.
    if (typeof value.message === "string" && value.message.match("reverted")) {
        const data = (0, $eg8oT.isHexString)(value.data) ? value.data : null;
        if (!requireData || data) return {
            message: value.message,
            data: data
        };
    }
    // Spelunk further...
    if (typeof value === "object") {
        for(const key in value){
            const result = $7f2d24163dd74616$var$spelunk(value[key], requireData);
            if (result) return result;
        }
        return null;
    }
    // Might be a JSON string we can further descend...
    if (typeof value === "string") try {
        return $7f2d24163dd74616$var$spelunk(JSON.parse(value), requireData);
    } catch (error) {}
    return null;
}
function $7f2d24163dd74616$var$checkError(method, error, params) {
    const transaction = params.transaction || params.signedTransaction;
    // Undo the "convenience" some nodes are attempting to prevent backwards
    // incompatibility; maybe for v6 consider forwarding reverts as errors
    if (method === "call") {
        const result = $7f2d24163dd74616$var$spelunk(error, true);
        if (result) return result.data;
        // Nothing descriptive..
        $7f2d24163dd74616$var$logger.throwError("missing revert data in call exception; Transaction reverted without a reason string", (0, $cbv61.Logger).errors.CALL_EXCEPTION, {
            data: "0x",
            transaction: transaction,
            error: error
        });
    }
    if (method === "estimateGas") {
        // Try to find something, with a preference on SERVER_ERROR body
        let result = $7f2d24163dd74616$var$spelunk(error.body, false);
        if (result == null) result = $7f2d24163dd74616$var$spelunk(error, false);
        // Found "reverted", this is a CALL_EXCEPTION
        if (result) $7f2d24163dd74616$var$logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", (0, $cbv61.Logger).errors.UNPREDICTABLE_GAS_LIMIT, {
            reason: result.message,
            method: method,
            transaction: transaction,
            error: error
        });
    }
    // @TODO: Should we spelunk for message too?
    let message = error.message;
    if (error.code === (0, $cbv61.Logger).errors.SERVER_ERROR && error.error && typeof error.error.message === "string") message = error.error.message;
    else if (typeof error.body === "string") message = error.body;
    else if (typeof error.responseText === "string") message = error.responseText;
    message = (message || "").toLowerCase();
    // "insufficient funds for gas * price + value + cost(data)"
    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) $7f2d24163dd74616$var$logger.throwError("insufficient funds for intrinsic transaction cost", (0, $cbv61.Logger).errors.INSUFFICIENT_FUNDS, {
        error: error,
        method: method,
        transaction: transaction
    });
    // "nonce too low"
    if (message.match(/nonce (is )?too low/i)) $7f2d24163dd74616$var$logger.throwError("nonce has already been used", (0, $cbv61.Logger).errors.NONCE_EXPIRED, {
        error: error,
        method: method,
        transaction: transaction
    });
    // "replacement transaction underpriced"
    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) $7f2d24163dd74616$var$logger.throwError("replacement fee too low", (0, $cbv61.Logger).errors.REPLACEMENT_UNDERPRICED, {
        error: error,
        method: method,
        transaction: transaction
    });
    // "replacement transaction underpriced"
    if (message.match(/only replay-protected/i)) $7f2d24163dd74616$var$logger.throwError("legacy pre-eip-155 transactions not supported", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
        error: error,
        method: method,
        transaction: transaction
    });
    if ($7f2d24163dd74616$var$errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) $7f2d24163dd74616$var$logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", (0, $cbv61.Logger).errors.UNPREDICTABLE_GAS_LIMIT, {
        error: error,
        method: method,
        transaction: transaction
    });
    throw error;
}
function $7f2d24163dd74616$var$timer(timeout) {
    return new Promise(function(resolve) {
        setTimeout(resolve, timeout);
    });
}
function $7f2d24163dd74616$var$getResult(payload) {
    if (payload.error) {
        // @TODO: not any
        const error = new Error(payload.error.message);
        error.code = payload.error.code;
        error.data = payload.error.data;
        throw error;
    }
    return payload.result;
}
function $7f2d24163dd74616$var$getLowerCase(value) {
    if (value) return value.toLowerCase();
    return value;
}
const $7f2d24163dd74616$var$_constructorGuard = {};
class $7f2d24163dd74616$export$5f7b5fca3508545a extends (0, $cb7b024827fb2a6c$exports.Signer) {
    constructor(constructorGuard, provider, addressOrIndex){
        super();
        if (constructorGuard !== $7f2d24163dd74616$var$_constructorGuard) throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "provider", provider);
        if (addressOrIndex == null) addressOrIndex = 0;
        if (typeof addressOrIndex === "string") {
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_address", this.provider.formatter.address(addressOrIndex));
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_index", null);
        } else if (typeof addressOrIndex === "number") {
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_index", addressOrIndex);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_address", null);
        } else $7f2d24163dd74616$var$logger.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex);
    }
    connect(provider) {
        return $7f2d24163dd74616$var$logger.throwError("cannot alter JSON-RPC Signer connection", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "connect"
        });
    }
    connectUnchecked() {
        return new $7f2d24163dd74616$var$UncheckedJsonRpcSigner($7f2d24163dd74616$var$_constructorGuard, this.provider, this._address || this._index);
    }
    getAddress() {
        if (this._address) return Promise.resolve(this._address);
        return this.provider.send("eth_accounts", []).then((accounts)=>{
            if (accounts.length <= this._index) $7f2d24163dd74616$var$logger.throwError("unknown account #" + this._index, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: "getAddress"
            });
            return this.provider.formatter.address(accounts[this._index]);
        });
    }
    sendUncheckedTransaction(transaction) {
        transaction = (0, $b19fb92a27e5f35f$exports.shallowCopy)(transaction);
        const fromAddress = this.getAddress().then((address)=>{
            if (address) address = address.toLowerCase();
            return address;
        });
        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user
        // wishes to use this, it is easy to specify explicitly, otherwise
        // we look it up for them.
        if (transaction.gasLimit == null) {
            const estimate = (0, $b19fb92a27e5f35f$exports.shallowCopy)(transaction);
            estimate.from = fromAddress;
            transaction.gasLimit = this.provider.estimateGas(estimate);
        }
        if (transaction.to != null) transaction.to = Promise.resolve(transaction.to).then((to)=>$7f2d24163dd74616$var$__awaiter(this, void 0, void 0, function*() {
                if (to == null) return null;
                const address = yield this.provider.resolveName(to);
                if (address == null) $7f2d24163dd74616$var$logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                return address;
            }));
        return (0, $b19fb92a27e5f35f$exports.resolveProperties)({
            tx: (0, $b19fb92a27e5f35f$exports.resolveProperties)(transaction),
            sender: fromAddress
        }).then(({ tx: tx , sender: sender  })=>{
            if (tx.from != null) {
                if (tx.from.toLowerCase() !== sender) $7f2d24163dd74616$var$logger.throwArgumentError("from address mismatch", "transaction", transaction);
            } else tx.from = sender;
            const hexTx = this.provider.constructor.hexlifyTransaction(tx, {
                from: true
            });
            return this.provider.send("eth_sendTransaction", [
                hexTx
            ]).then((hash)=>{
                return hash;
            }, (error)=>{
                if (typeof error.message === "string" && error.message.match(/user denied/i)) $7f2d24163dd74616$var$logger.throwError("user rejected transaction", (0, $cbv61.Logger).errors.ACTION_REJECTED, {
                    action: "sendTransaction",
                    transaction: tx
                });
                return $7f2d24163dd74616$var$checkError("sendTransaction", error, hexTx);
            });
        });
    }
    signTransaction(transaction) {
        return $7f2d24163dd74616$var$logger.throwError("signing transactions is unsupported", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "signTransaction"
        });
    }
    sendTransaction(transaction) {
        return $7f2d24163dd74616$var$__awaiter(this, void 0, void 0, function*() {
            // This cannot be mined any earlier than any recent block
            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
            // Send the transaction
            const hash = yield this.sendUncheckedTransaction(transaction);
            try {
                // Unfortunately, JSON-RPC only provides and opaque transaction hash
                // for a response, and we need the actual transaction, so we poll
                // for it; it should show up very quickly
                return yield (0, $68f1849f3b633900$exports.poll)(()=>$7f2d24163dd74616$var$__awaiter(this, void 0, void 0, function*() {
                        const tx = yield this.provider.getTransaction(hash);
                        if (tx === null) return undefined;
                        return this.provider._wrapTransaction(tx, hash, blockNumber);
                    }), {
                    oncePoll: this.provider
                });
            } catch (error) {
                error.transactionHash = hash;
                throw error;
            }
        });
    }
    signMessage(message) {
        return $7f2d24163dd74616$var$__awaiter(this, void 0, void 0, function*() {
            const data = typeof message === "string" ? (0, $cde319f07c8777da$export$8feeb310b4b4752f)(message) : message;
            const address = yield this.getAddress();
            try {
                return yield this.provider.send("personal_sign", [
                    (0, $eg8oT.hexlify)(data),
                    address.toLowerCase()
                ]);
            } catch (error) {
                if (typeof error.message === "string" && error.message.match(/user denied/i)) $7f2d24163dd74616$var$logger.throwError("user rejected signing", (0, $cbv61.Logger).errors.ACTION_REJECTED, {
                    action: "signMessage",
                    from: address,
                    messageData: message
                });
                throw error;
            }
        });
    }
    _legacySignMessage(message) {
        return $7f2d24163dd74616$var$__awaiter(this, void 0, void 0, function*() {
            const data = typeof message === "string" ? (0, $cde319f07c8777da$export$8feeb310b4b4752f)(message) : message;
            const address = yield this.getAddress();
            try {
                // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign
                return yield this.provider.send("eth_sign", [
                    address.toLowerCase(),
                    (0, $eg8oT.hexlify)(data)
                ]);
            } catch (error) {
                if (typeof error.message === "string" && error.message.match(/user denied/i)) $7f2d24163dd74616$var$logger.throwError("user rejected signing", (0, $cbv61.Logger).errors.ACTION_REJECTED, {
                    action: "_legacySignMessage",
                    from: address,
                    messageData: message
                });
                throw error;
            }
        });
    }
    _signTypedData(domain, types, value) {
        return $7f2d24163dd74616$var$__awaiter(this, void 0, void 0, function*() {
            // Populate any ENS names (in-place)
            const populated = yield (0, $8a68414fdead829d$exports.TypedDataEncoder).resolveNames(domain, types, value, (name)=>{
                return this.provider.resolveName(name);
            });
            const address = yield this.getAddress();
            try {
                return yield this.provider.send("eth_signTypedData_v4", [
                    address.toLowerCase(),
                    JSON.stringify((0, $8a68414fdead829d$exports.TypedDataEncoder).getPayload(populated.domain, types, populated.value))
                ]);
            } catch (error) {
                if (typeof error.message === "string" && error.message.match(/user denied/i)) $7f2d24163dd74616$var$logger.throwError("user rejected signing", (0, $cbv61.Logger).errors.ACTION_REJECTED, {
                    action: "_signTypedData",
                    from: address,
                    messageData: {
                        domain: populated.domain,
                        types: types,
                        value: populated.value
                    }
                });
                throw error;
            }
        });
    }
    unlock(password) {
        return $7f2d24163dd74616$var$__awaiter(this, void 0, void 0, function*() {
            const provider = this.provider;
            const address = yield this.getAddress();
            return provider.send("personal_unlockAccount", [
                address.toLowerCase(),
                password,
                null
            ]);
        });
    }
}
class $7f2d24163dd74616$var$UncheckedJsonRpcSigner extends $7f2d24163dd74616$export$5f7b5fca3508545a {
    sendTransaction(transaction) {
        return this.sendUncheckedTransaction(transaction).then((hash)=>{
            return {
                hash: hash,
                nonce: null,
                gasLimit: null,
                gasPrice: null,
                data: null,
                value: null,
                chainId: null,
                confirmations: 0,
                from: null,
                wait: (confirmations)=>{
                    return this.provider.waitForTransaction(hash, confirmations);
                }
            };
        });
    }
}
const $7f2d24163dd74616$var$allowedTransactionKeys = {
    chainId: true,
    data: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    value: true,
    type: true,
    accessList: true,
    maxFeePerGas: true,
    maxPriorityFeePerGas: true
};
class $7f2d24163dd74616$export$da28308012bf6748 extends (0, $bc831430ade2c52d$exports.BaseProvider) {
    constructor(url, network){
        let networkOrReady = network;
        // The network is unknown, query the JSON-RPC for it
        if (networkOrReady == null) networkOrReady = new Promise((resolve, reject)=>{
            setTimeout(()=>{
                this.detectNetwork().then((network)=>{
                    resolve(network);
                }, (error)=>{
                    reject(error);
                });
            }, 0);
        });
        super(networkOrReady);
        // Default URL
        if (!url) url = (0, $b19fb92a27e5f35f$exports.getStatic)(this.constructor, "defaultUrl")();
        if (typeof url === "string") (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "connection", Object.freeze({
            url: url
        }));
        else (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "connection", Object.freeze((0, $b19fb92a27e5f35f$exports.shallowCopy)(url)));
        this._nextId = 42;
    }
    get _cache() {
        if (this._eventLoopCache == null) this._eventLoopCache = {};
        return this._eventLoopCache;
    }
    static defaultUrl() {
        return "http://localhost:8545";
    }
    detectNetwork() {
        if (!this._cache["detectNetwork"]) {
            this._cache["detectNetwork"] = this._uncachedDetectNetwork();
            // Clear this cache at the beginning of the next event loop
            setTimeout(()=>{
                this._cache["detectNetwork"] = null;
            }, 0);
        }
        return this._cache["detectNetwork"];
    }
    _uncachedDetectNetwork() {
        return $7f2d24163dd74616$var$__awaiter(this, void 0, void 0, function*() {
            yield $7f2d24163dd74616$var$timer(0);
            let chainId = null;
            try {
                chainId = yield this.send("eth_chainId", []);
            } catch (error) {
                try {
                    chainId = yield this.send("net_version", []);
                } catch (error) {}
            }
            if (chainId != null) {
                const getNetwork = (0, $b19fb92a27e5f35f$exports.getStatic)(this.constructor, "getNetwork");
                try {
                    return getNetwork((0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(chainId).toNumber());
                } catch (error) {
                    return $7f2d24163dd74616$var$logger.throwError("could not detect network", (0, $cbv61.Logger).errors.NETWORK_ERROR, {
                        chainId: chainId,
                        event: "invalidNetwork",
                        serverError: error
                    });
                }
            }
            return $7f2d24163dd74616$var$logger.throwError("could not detect network", (0, $cbv61.Logger).errors.NETWORK_ERROR, {
                event: "noNetwork"
            });
        });
    }
    getSigner(addressOrIndex) {
        return new $7f2d24163dd74616$export$5f7b5fca3508545a($7f2d24163dd74616$var$_constructorGuard, this, addressOrIndex);
    }
    getUncheckedSigner(addressOrIndex) {
        return this.getSigner(addressOrIndex).connectUnchecked();
    }
    listAccounts() {
        return this.send("eth_accounts", []).then((accounts)=>{
            return accounts.map((a)=>this.formatter.address(a));
        });
    }
    send(method, params) {
        const request = {
            method: method,
            params: params,
            id: this._nextId++,
            jsonrpc: "2.0"
        };
        this.emit("debug", {
            action: "request",
            request: (0, $b19fb92a27e5f35f$exports.deepCopy)(request),
            provider: this
        });
        // We can expand this in the future to any call, but for now these
        // are the biggest wins and do not require any serializing parameters.
        const cache = [
            "eth_chainId",
            "eth_blockNumber"
        ].indexOf(method) >= 0;
        if (cache && this._cache[method]) return this._cache[method];
        const result = (0, $68f1849f3b633900$exports.fetchJson)(this.connection, JSON.stringify(request), $7f2d24163dd74616$var$getResult).then((result)=>{
            this.emit("debug", {
                action: "response",
                request: request,
                response: result,
                provider: this
            });
            return result;
        }, (error)=>{
            this.emit("debug", {
                action: "response",
                error: error,
                request: request,
                provider: this
            });
            throw error;
        });
        // Cache the fetch, but clear it on the next event loop
        if (cache) {
            this._cache[method] = result;
            setTimeout(()=>{
                this._cache[method] = null;
            }, 0);
        }
        return result;
    }
    prepareRequest(method, params) {
        switch(method){
            case "getBlockNumber":
                return [
                    "eth_blockNumber",
                    []
                ];
            case "getGasPrice":
                return [
                    "eth_gasPrice",
                    []
                ];
            case "getBalance":
                return [
                    "eth_getBalance",
                    [
                        $7f2d24163dd74616$var$getLowerCase(params.address),
                        params.blockTag
                    ]
                ];
            case "getTransactionCount":
                return [
                    "eth_getTransactionCount",
                    [
                        $7f2d24163dd74616$var$getLowerCase(params.address),
                        params.blockTag
                    ]
                ];
            case "getCode":
                return [
                    "eth_getCode",
                    [
                        $7f2d24163dd74616$var$getLowerCase(params.address),
                        params.blockTag
                    ]
                ];
            case "getStorageAt":
                return [
                    "eth_getStorageAt",
                    [
                        $7f2d24163dd74616$var$getLowerCase(params.address),
                        (0, $eg8oT.hexZeroPad)(params.position, 32),
                        params.blockTag
                    ]
                ];
            case "sendTransaction":
                return [
                    "eth_sendRawTransaction",
                    [
                        params.signedTransaction
                    ]
                ];
            case "getBlock":
                if (params.blockTag) return [
                    "eth_getBlockByNumber",
                    [
                        params.blockTag,
                        !!params.includeTransactions
                    ]
                ];
                else if (params.blockHash) return [
                    "eth_getBlockByHash",
                    [
                        params.blockHash,
                        !!params.includeTransactions
                    ]
                ];
                return null;
            case "getTransaction":
                return [
                    "eth_getTransactionByHash",
                    [
                        params.transactionHash
                    ]
                ];
            case "getTransactionReceipt":
                return [
                    "eth_getTransactionReceipt",
                    [
                        params.transactionHash
                    ]
                ];
            case "call":
                {
                    const hexlifyTransaction = (0, $b19fb92a27e5f35f$exports.getStatic)(this.constructor, "hexlifyTransaction");
                    return [
                        "eth_call",
                        [
                            hexlifyTransaction(params.transaction, {
                                from: true
                            }),
                            params.blockTag
                        ]
                    ];
                }
            case "estimateGas":
                {
                    const hexlifyTransaction = (0, $b19fb92a27e5f35f$exports.getStatic)(this.constructor, "hexlifyTransaction");
                    return [
                        "eth_estimateGas",
                        [
                            hexlifyTransaction(params.transaction, {
                                from: true
                            })
                        ]
                    ];
                }
            case "getLogs":
                if (params.filter && params.filter.address != null) params.filter.address = $7f2d24163dd74616$var$getLowerCase(params.filter.address);
                return [
                    "eth_getLogs",
                    [
                        params.filter
                    ]
                ];
            default:
                break;
        }
        return null;
    }
    perform(method, params) {
        return $7f2d24163dd74616$var$__awaiter(this, void 0, void 0, function*() {
            // Legacy networks do not like the type field being passed along (which
            // is fair), so we delete type if it is 0 and a non-EIP-1559 network
            if (method === "call" || method === "estimateGas") {
                const tx = params.transaction;
                if (tx && tx.type != null && (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(tx.type).isZero()) // If there are no EIP-1559 properties, it might be non-EIP-1559
                {
                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {
                        const feeData = yield this.getFeeData();
                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {
                            // Network doesn't know about EIP-1559 (and hence type)
                            params = (0, $b19fb92a27e5f35f$exports.shallowCopy)(params);
                            params.transaction = (0, $b19fb92a27e5f35f$exports.shallowCopy)(tx);
                            delete params.transaction.type;
                        }
                    }
                }
            }
            const args = this.prepareRequest(method, params);
            if (args == null) $7f2d24163dd74616$var$logger.throwError(method + " not implemented", (0, $cbv61.Logger).errors.NOT_IMPLEMENTED, {
                operation: method
            });
            try {
                return yield this.send(args[0], args[1]);
            } catch (error) {
                return $7f2d24163dd74616$var$checkError(method, error, params);
            }
        });
    }
    _startEvent(event) {
        if (event.tag === "pending") this._startPending();
        super._startEvent(event);
    }
    _startPending() {
        if (this._pendingFilter != null) return;
        const self = this;
        const pendingFilter = this.send("eth_newPendingTransactionFilter", []);
        this._pendingFilter = pendingFilter;
        pendingFilter.then(function(filterId) {
            function poll() {
                self.send("eth_getFilterChanges", [
                    filterId
                ]).then(function(hashes) {
                    if (self._pendingFilter != pendingFilter) return null;
                    let seq = Promise.resolve();
                    hashes.forEach(function(hash) {
                        // @TODO: This should be garbage collected at some point... How? When?
                        self._emitted["t:" + hash.toLowerCase()] = "pending";
                        seq = seq.then(function() {
                            return self.getTransaction(hash).then(function(tx) {
                                self.emit("pending", tx);
                                return null;
                            });
                        });
                    });
                    return seq.then(function() {
                        return $7f2d24163dd74616$var$timer(1000);
                    });
                }).then(function() {
                    if (self._pendingFilter != pendingFilter) {
                        self.send("eth_uninstallFilter", [
                            filterId
                        ]);
                        return;
                    }
                    setTimeout(function() {
                        poll();
                    }, 0);
                    return null;
                }).catch((error)=>{});
            }
            poll();
            return filterId;
        }).catch((error)=>{});
    }
    _stopEvent(event) {
        if (event.tag === "pending" && this.listenerCount("pending") === 0) this._pendingFilter = null;
        super._stopEvent(event);
    }
    // Convert an ethers.js transaction into a JSON-RPC transaction
    //  - gasLimit => gas
    //  - All values hexlified
    //  - All numeric values zero-striped
    //  - All addresses are lowercased
    // NOTE: This allows a TransactionRequest, but all values should be resolved
    //       before this is called
    // @TODO: This will likely be removed in future versions and prepareRequest
    //        will be the preferred method for this.
    static hexlifyTransaction(transaction, allowExtra) {
        // Check only allowed properties are given
        const allowed = (0, $b19fb92a27e5f35f$exports.shallowCopy)($7f2d24163dd74616$var$allowedTransactionKeys);
        if (allowExtra) {
            for(const key in allowExtra)if (allowExtra[key]) allowed[key] = true;
        }
        (0, $b19fb92a27e5f35f$exports.checkProperties)(transaction, allowed);
        const result = {};
        // JSON-RPC now requires numeric values to be "quantity" values
        [
            "chainId",
            "gasLimit",
            "gasPrice",
            "type",
            "maxFeePerGas",
            "maxPriorityFeePerGas",
            "nonce",
            "value"
        ].forEach(function(key) {
            if (transaction[key] == null) return;
            const value = (0, $eg8oT.hexValue)((0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(transaction[key]));
            if (key === "gasLimit") key = "gas";
            result[key] = value;
        });
        [
            "from",
            "to",
            "data"
        ].forEach(function(key) {
            if (transaction[key] == null) return;
            result[key] = (0, $eg8oT.hexlify)(transaction[key]);
        });
        if (transaction.accessList) result["accessList"] = (0, $1b59a48ea3c080da$export$6c8662b1600dce2)(transaction.accessList);
        return result;
    }
}



var $cbv61 = parcelRequire("cbv61");

"use strict";
let $2315f82608a417b0$export$3909fb301d3dc8c9 = null;
try {
    $2315f82608a417b0$export$3909fb301d3dc8c9 = WebSocket;
    if ($2315f82608a417b0$export$3909fb301d3dc8c9 == null) throw new Error("inject please");
} catch (error) {
    const logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
    $2315f82608a417b0$export$3909fb301d3dc8c9 = function() {
        logger.throwError("WebSockets not supported in this environment", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "new WebSocket()"
        });
    };
}



var $cbv61 = parcelRequire("cbv61");

"use strict";
var $852e4865dd1a0824$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $852e4865dd1a0824$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
/**
 *  Notes:
 *
 *  This provider differs a bit from the polling providers. One main
 *  difference is how it handles consistency. The polling providers
 *  will stall responses to ensure a consistent state, while this
 *  WebSocket provider assumes the connected backend will manage this.
 *
 *  For example, if a polling provider emits an event which indicates
 *  the event occurred in blockhash XXX, a call to fetch that block by
 *  its hash XXX, if not present will retry until it is present. This
 *  can occur when querying a pool of nodes that are mildly out of sync
 *  with each other.
 */ let $852e4865dd1a0824$var$NextId = 1;
class $852e4865dd1a0824$export$bfafe629242f30bd extends (0, $7f2d24163dd74616$exports.JsonRpcProvider) {
    constructor(url, network){
        // This will be added in the future; please open an issue to expedite
        if (network === "any") $852e4865dd1a0824$var$logger.throwError("WebSocketProvider does not support 'any' network yet", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "network:any"
        });
        if (typeof url === "string") super(url, network);
        else super("_websocket", network);
        this._pollingInterval = -1;
        this._wsReady = false;
        if (typeof url === "string") (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_websocket", new (0, $2315f82608a417b0$export$3909fb301d3dc8c9)(this.connection.url));
        else (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_websocket", url);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_requests", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_subs", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_subIds", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_detectNetwork", super.detectNetwork());
        // Stall sending requests until the socket is open...
        this.websocket.onopen = ()=>{
            this._wsReady = true;
            Object.keys(this._requests).forEach((id)=>{
                this.websocket.send(this._requests[id].payload);
            });
        };
        this.websocket.onmessage = (messageEvent)=>{
            const data = messageEvent.data;
            const result = JSON.parse(data);
            if (result.id != null) {
                const id = String(result.id);
                const request = this._requests[id];
                delete this._requests[id];
                if (result.result !== undefined) {
                    request.callback(null, result.result);
                    this.emit("debug", {
                        action: "response",
                        request: JSON.parse(request.payload),
                        response: result.result,
                        provider: this
                    });
                } else {
                    let error = null;
                    if (result.error) {
                        error = new Error(result.error.message || "unknown error");
                        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(error, "code", result.error.code || null);
                        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(error, "response", data);
                    } else error = new Error("unknown error");
                    request.callback(error, undefined);
                    this.emit("debug", {
                        action: "response",
                        error: error,
                        request: JSON.parse(request.payload),
                        provider: this
                    });
                }
            } else if (result.method === "eth_subscription") {
                // Subscription...
                const sub = this._subs[result.params.subscription];
                if (sub) //this.emit.apply(this,                  );
                sub.processFunc(result.params.result);
            } else console.warn("this should not happen");
        };
        // This Provider does not actually poll, but we want to trigger
        // poll events for things that depend on them (like stalling for
        // block and transaction lookups)
        const fauxPoll = setInterval(()=>{
            this.emit("poll");
        }, 1000);
        if (fauxPoll.unref) fauxPoll.unref();
    }
    // Cannot narrow the type of _websocket, as that is not backwards compatible
    // so we add a getter and let the WebSocket be a public API.
    get websocket() {
        return this._websocket;
    }
    detectNetwork() {
        return this._detectNetwork;
    }
    get pollingInterval() {
        return 0;
    }
    resetEventsBlock(blockNumber) {
        $852e4865dd1a0824$var$logger.throwError("cannot reset events block on WebSocketProvider", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "resetEventBlock"
        });
    }
    set pollingInterval(value) {
        $852e4865dd1a0824$var$logger.throwError("cannot set polling interval on WebSocketProvider", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "setPollingInterval"
        });
    }
    poll() {
        return $852e4865dd1a0824$var$__awaiter(this, void 0, void 0, function*() {
            return null;
        });
    }
    set polling(value) {
        if (!value) return;
        $852e4865dd1a0824$var$logger.throwError("cannot set polling on WebSocketProvider", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "setPolling"
        });
    }
    send(method, params) {
        const rid = $852e4865dd1a0824$var$NextId++;
        return new Promise((resolve, reject)=>{
            function callback(error, result) {
                if (error) return reject(error);
                return resolve(result);
            }
            const payload = JSON.stringify({
                method: method,
                params: params,
                id: rid,
                jsonrpc: "2.0"
            });
            this.emit("debug", {
                action: "request",
                request: JSON.parse(payload),
                provider: this
            });
            this._requests[String(rid)] = {
                callback: callback,
                payload: payload
            };
            if (this._wsReady) this.websocket.send(payload);
        });
    }
    static defaultUrl() {
        return "ws://localhost:8546";
    }
    _subscribe(tag, param, processFunc) {
        return $852e4865dd1a0824$var$__awaiter(this, void 0, void 0, function*() {
            let subIdPromise = this._subIds[tag];
            if (subIdPromise == null) {
                subIdPromise = Promise.all(param).then((param)=>{
                    return this.send("eth_subscribe", param);
                });
                this._subIds[tag] = subIdPromise;
            }
            const subId = yield subIdPromise;
            this._subs[subId] = {
                tag: tag,
                processFunc: processFunc
            };
        });
    }
    _startEvent(event) {
        switch(event.type){
            case "block":
                this._subscribe("block", [
                    "newHeads"
                ], (result)=>{
                    const blockNumber = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(result.number).toNumber();
                    this._emitted.block = blockNumber;
                    this.emit("block", blockNumber);
                });
                break;
            case "pending":
                this._subscribe("pending", [
                    "newPendingTransactions"
                ], (result)=>{
                    this.emit("pending", result);
                });
                break;
            case "filter":
                this._subscribe(event.tag, [
                    "logs",
                    this._getFilter(event.filter)
                ], (result)=>{
                    if (result.removed == null) result.removed = false;
                    this.emit(event.filter, this.formatter.filterLog(result));
                });
                break;
            case "tx":
                {
                    const emitReceipt = (event)=>{
                        const hash = event.hash;
                        this.getTransactionReceipt(hash).then((receipt)=>{
                            if (!receipt) return;
                            this.emit(hash, receipt);
                        });
                    };
                    // In case it is already mined
                    emitReceipt(event);
                    // To keep things simple, we start up a single newHeads subscription
                    // to keep an eye out for transactions we are watching for.
                    // Starting a subscription for an event (i.e. "tx") that is already
                    // running is (basically) a nop.
                    this._subscribe("tx", [
                        "newHeads"
                    ], (result)=>{
                        this._events.filter((e)=>e.type === "tx").forEach(emitReceipt);
                    });
                    break;
                }
            // Nothing is needed
            case "debug":
            case "poll":
            case "willPoll":
            case "didPoll":
            case "error":
                break;
            default:
                console.log("unhandled:", event);
                break;
        }
    }
    _stopEvent(event) {
        let tag = event.tag;
        if (event.type === "tx") {
            // There are remaining transaction event listeners
            if (this._events.filter((e)=>e.type === "tx").length) return;
            tag = "tx";
        } else if (this.listenerCount(event.event)) // There are remaining event listeners
        return;
        const subId = this._subIds[tag];
        if (!subId) return;
        delete this._subIds[tag];
        subId.then((subId)=>{
            if (!this._subs[subId]) return;
            delete this._subs[subId];
            this.send("eth_unsubscribe", [
                subId
            ]);
        });
    }
    destroy() {
        return $852e4865dd1a0824$var$__awaiter(this, void 0, void 0, function*() {
            // Wait until we have connected before trying to disconnect
            if (this.websocket.readyState === (0, $2315f82608a417b0$export$3909fb301d3dc8c9).CONNECTING) yield new Promise((resolve)=>{
                this.websocket.onopen = function() {
                    resolve(true);
                };
                this.websocket.onerror = function() {
                    resolve(false);
                };
            });
            // Hangup
            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes
            this.websocket.close(1000);
        });
    }
}



var $cbv61 = parcelRequire("cbv61");

var $66618fedffa44f16$exports = {};

$parcel$export($66618fedffa44f16$exports, "StaticJsonRpcProvider", () => $66618fedffa44f16$export$b3d647c1c29df44d, (v) => $66618fedffa44f16$export$b3d647c1c29df44d = v);
$parcel$export($66618fedffa44f16$exports, "UrlJsonRpcProvider", () => $66618fedffa44f16$export$664128d6239ccf96, (v) => $66618fedffa44f16$export$664128d6239ccf96 = v);


var $cbv61 = parcelRequire("cbv61");


"use strict";
var $66618fedffa44f16$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $66618fedffa44f16$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
class $66618fedffa44f16$export$b3d647c1c29df44d extends (0, $7f2d24163dd74616$exports.JsonRpcProvider) {
    detectNetwork() {
        const _super = Object.create(null, {
            detectNetwork: {
                get: ()=>super.detectNetwork
            }
        });
        return $66618fedffa44f16$var$__awaiter(this, void 0, void 0, function*() {
            let network = this.network;
            if (network == null) {
                network = yield _super.detectNetwork.call(this);
                if (!network) $66618fedffa44f16$var$logger.throwError("no network detected", (0, $cbv61.Logger).errors.UNKNOWN_ERROR, {});
                // If still not set, set it
                if (this._network == null) {
                    // A static network does not support "any"
                    (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_network", network);
                    this.emit("network", network, null);
                }
            }
            return network;
        });
    }
}
class $66618fedffa44f16$export$664128d6239ccf96 extends $66618fedffa44f16$export$b3d647c1c29df44d {
    constructor(network, apiKey){
        $66618fedffa44f16$var$logger.checkAbstract(new.target, $66618fedffa44f16$export$664128d6239ccf96);
        // Normalize the Network and API Key
        network = (0, $b19fb92a27e5f35f$exports.getStatic)(new.target, "getNetwork")(network);
        apiKey = (0, $b19fb92a27e5f35f$exports.getStatic)(new.target, "getApiKey")(apiKey);
        const connection = (0, $b19fb92a27e5f35f$exports.getStatic)(new.target, "getUrl")(network, apiKey);
        super(connection, network);
        if (typeof apiKey === "string") (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "apiKey", apiKey);
        else if (apiKey != null) Object.keys(apiKey).forEach((key)=>{
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, key, apiKey[key]);
        });
    }
    _startPending() {
        $66618fedffa44f16$var$logger.warn("WARNING: API provider does not support pending filters");
    }
    isCommunityResource() {
        return false;
    }
    getSigner(address) {
        return $66618fedffa44f16$var$logger.throwError("API provider does not support signing", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "getSigner"
        });
    }
    listAccounts() {
        return Promise.resolve([]);
    }
    // Return a defaultApiKey if null, otherwise validate the API key
    static getApiKey(apiKey) {
        return apiKey;
    }
    // Returns the url or connection for the given network and API key. The
    // API key will have been sanitized by the getApiKey first, so any validation
    // or transformations can be done there.
    static getUrl(network, apiKey) {
        return $66618fedffa44f16$var$logger.throwError("not implemented; sub-classes must override getUrl", (0, $cbv61.Logger).errors.NOT_IMPLEMENTED, {
            operation: "getUrl"
        });
    }
}


"use strict";
const $f2984339429a6468$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
// This key was provided to ethers.js by Alchemy to be used by the
// default provider, but it is recommended that for your own
// production environments, that you acquire your own API key at:
//   https://dashboard.alchemyapi.io
const $f2984339429a6468$var$defaultApiKey = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";
class $f2984339429a6468$export$f6c13301c7b76371 extends (0, $852e4865dd1a0824$exports.WebSocketProvider) {
    constructor(network, apiKey){
        const provider = new $f2984339429a6468$export$999cc40da3fbc6f(network, apiKey);
        const url = provider.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi.");
        super(url, provider.network);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "apiKey", provider.apiKey);
    }
    isCommunityResource() {
        return this.apiKey === $f2984339429a6468$var$defaultApiKey;
    }
}
class $f2984339429a6468$export$999cc40da3fbc6f extends (0, $66618fedffa44f16$exports.UrlJsonRpcProvider) {
    static getWebSocketProvider(network, apiKey) {
        return new $f2984339429a6468$export$f6c13301c7b76371(network, apiKey);
    }
    static getApiKey(apiKey) {
        if (apiKey == null) return $f2984339429a6468$var$defaultApiKey;
        if (apiKey && typeof apiKey !== "string") $f2984339429a6468$var$logger.throwArgumentError("invalid apiKey", "apiKey", apiKey);
        return apiKey;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch(network.name){
            case "homestead":
                host = "eth-mainnet.alchemyapi.io/v2/";
                break;
            case "goerli":
                host = "eth-goerli.g.alchemy.com/v2/";
                break;
            case "matic":
                host = "polygon-mainnet.g.alchemy.com/v2/";
                break;
            case "maticmum":
                host = "polygon-mumbai.g.alchemy.com/v2/";
                break;
            case "arbitrum":
                host = "arb-mainnet.g.alchemy.com/v2/";
                break;
            case "arbitrum-goerli":
                host = "arb-goerli.g.alchemy.com/v2/";
                break;
            case "optimism":
                host = "opt-mainnet.g.alchemy.com/v2/";
                break;
            case "optimism-goerli":
                host = "opt-goerli.g.alchemy.com/v2/";
                break;
            default:
                $f2984339429a6468$var$logger.throwArgumentError("unsupported network", "network", arguments[0]);
        }
        return {
            allowGzip: true,
            url: "https://" + host + apiKey,
            throttleCallback: (attempt, url)=>{
                if (apiKey === $f2984339429a6468$var$defaultApiKey) (0, $a833276422c6da56$export$4c41bd49e82e82ab)();
                return Promise.resolve(true);
            }
        };
    }
    isCommunityResource() {
        return this.apiKey === $f2984339429a6468$var$defaultApiKey;
    }
}





var $cbv61 = parcelRequire("cbv61");

const $85fc28b257416515$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
const $85fc28b257416515$var$defaultApiKey = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";
function $85fc28b257416515$var$getHost(name) {
    switch(name){
        case "homestead":
            return "rpc.ankr.com/eth/";
        case "ropsten":
            return "rpc.ankr.com/eth_ropsten/";
        case "rinkeby":
            return "rpc.ankr.com/eth_rinkeby/";
        case "goerli":
            return "rpc.ankr.com/eth_goerli/";
        case "matic":
            return "rpc.ankr.com/polygon/";
        case "arbitrum":
            return "rpc.ankr.com/arbitrum/";
    }
    return $85fc28b257416515$var$logger.throwArgumentError("unsupported network", "name", name);
}
class $85fc28b257416515$export$72783b2aefa72a45 extends (0, $66618fedffa44f16$exports.UrlJsonRpcProvider) {
    isCommunityResource() {
        return this.apiKey === $85fc28b257416515$var$defaultApiKey;
    }
    static getApiKey(apiKey) {
        if (apiKey == null) return $85fc28b257416515$var$defaultApiKey;
        return apiKey;
    }
    static getUrl(network, apiKey) {
        if (apiKey == null) apiKey = $85fc28b257416515$var$defaultApiKey;
        const connection = {
            allowGzip: true,
            url: "https://" + $85fc28b257416515$var$getHost(network.name) + apiKey,
            throttleCallback: (attempt, url)=>{
                if (apiKey.apiKey === $85fc28b257416515$var$defaultApiKey) (0, $a833276422c6da56$export$4c41bd49e82e82ab)();
                return Promise.resolve(true);
            }
        };
        if (apiKey.projectSecret != null) {
            connection.user = "";
            connection.password = apiKey.projectSecret;
        }
        return connection;
    }
}


var $09e6347f3c9c6931$exports = {};

$parcel$export($09e6347f3c9c6931$exports, "CloudflareProvider", () => $09e6347f3c9c6931$export$7113381f8f264fc0, (v) => $09e6347f3c9c6931$export$7113381f8f264fc0 = v);


var $cbv61 = parcelRequire("cbv61");

"use strict";
var $09e6347f3c9c6931$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $09e6347f3c9c6931$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
class $09e6347f3c9c6931$export$7113381f8f264fc0 extends (0, $66618fedffa44f16$exports.UrlJsonRpcProvider) {
    static getApiKey(apiKey) {
        if (apiKey != null) $09e6347f3c9c6931$var$logger.throwArgumentError("apiKey not supported for cloudflare", "apiKey", apiKey);
        return null;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch(network.name){
            case "homestead":
                host = "https://cloudflare-eth.com/";
                break;
            default:
                $09e6347f3c9c6931$var$logger.throwArgumentError("unsupported network", "network", arguments[0]);
        }
        return host;
    }
    perform(method, params) {
        const _super = Object.create(null, {
            perform: {
                get: ()=>super.perform
            }
        });
        return $09e6347f3c9c6931$var$__awaiter(this, void 0, void 0, function*() {
            // The Cloudflare provider does not support eth_blockNumber,
            // so we get the latest block and pull it from that
            if (method === "getBlockNumber") {
                const block = yield _super.perform.call(this, "getBlock", {
                    blockTag: "latest"
                });
                return block.number;
            }
            return _super.perform.call(this, method, params);
        });
    }
}


var $f5918f77586c5069$exports = {};

$parcel$export($f5918f77586c5069$exports, "EtherscanProvider", () => $f5918f77586c5069$export$dd1d942a536c7912, (v) => $f5918f77586c5069$export$dd1d942a536c7912 = v);

var $eg8oT = parcelRequire("eg8oT");





var $cbv61 = parcelRequire("cbv61");


"use strict";
var $f5918f77586c5069$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $f5918f77586c5069$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
// The transaction has already been sanitized by the calls in Provider
function $f5918f77586c5069$var$getTransactionPostData(transaction) {
    const result = {};
    for(let key in transaction){
        if (transaction[key] == null) continue;
        let value = transaction[key];
        if (key === "type" && value === 0) continue;
        // Quantity-types require no leading zero, unless 0
        if (({
            type: true,
            gasLimit: true,
            gasPrice: true,
            maxFeePerGs: true,
            maxPriorityFeePerGas: true,
            nonce: true,
            value: true
        })[key]) value = (0, $eg8oT.hexValue)((0, $eg8oT.hexlify)(value));
        else if (key === "accessList") value = "[" + (0, $1b59a48ea3c080da$export$6c8662b1600dce2)(value).map((set)=>{
            return `{address:"${set.address}",storageKeys:["${set.storageKeys.join('","')}"]}`;
        }).join(",") + "]";
        else value = (0, $eg8oT.hexlify)(value);
        result[key] = value;
    }
    return result;
}
function $f5918f77586c5069$var$getResult(result) {
    // getLogs, getHistory have weird success responses
    if (result.status == 0 && (result.message === "No records found" || result.message === "No transactions found")) return result.result;
    if (result.status != 1 || typeof result.message !== "string" || !result.message.match(/^OK/)) {
        const error = new Error("invalid response");
        error.result = JSON.stringify(result);
        if ((result.result || "").toLowerCase().indexOf("rate limit") >= 0) error.throttleRetry = true;
        throw error;
    }
    return result.result;
}
function $f5918f77586c5069$var$getJsonResult(result) {
    // This response indicates we are being throttled
    if (result && result.status == 0 && result.message == "NOTOK" && (result.result || "").toLowerCase().indexOf("rate limit") >= 0) {
        const error = new Error("throttled response");
        error.result = JSON.stringify(result);
        error.throttleRetry = true;
        throw error;
    }
    if (result.jsonrpc != "2.0") {
        // @TODO: not any
        const error = new Error("invalid response");
        error.result = JSON.stringify(result);
        throw error;
    }
    if (result.error) {
        // @TODO: not any
        const error = new Error(result.error.message || "unknown error");
        if (result.error.code) error.code = result.error.code;
        if (result.error.data) error.data = result.error.data;
        throw error;
    }
    return result.result;
}
// The blockTag was normalized as a string by the Provider pre-perform operations
function $f5918f77586c5069$var$checkLogTag(blockTag) {
    if (blockTag === "pending") throw new Error("pending not supported");
    if (blockTag === "latest") return blockTag;
    return parseInt(blockTag.substring(2), 16);
}
function $f5918f77586c5069$var$checkError(method, error, transaction) {
    // Undo the "convenience" some nodes are attempting to prevent backwards
    // incompatibility; maybe for v6 consider forwarding reverts as errors
    if (method === "call" && error.code === (0, $cbv61.Logger).errors.SERVER_ERROR) {
        const e = error.error;
        // Etherscan keeps changing their string
        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {
            // Etherscan prefixes the data like "Reverted 0x1234"
            let data = e.data;
            if (data) data = "0x" + data.replace(/^.*0x/i, "");
            if ((0, $eg8oT.isHexString)(data)) return data;
            $f5918f77586c5069$var$logger.throwError("missing revert data in call exception", (0, $cbv61.Logger).errors.CALL_EXCEPTION, {
                error: error,
                data: "0x"
            });
        }
    }
    // Get the message from any nested error structure
    let message = error.message;
    if (error.code === (0, $cbv61.Logger).errors.SERVER_ERROR) {
        if (error.error && typeof error.error.message === "string") message = error.error.message;
        else if (typeof error.body === "string") message = error.body;
        else if (typeof error.responseText === "string") message = error.responseText;
    }
    message = (message || "").toLowerCase();
    // "Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0"
    if (message.match(/insufficient funds/)) $f5918f77586c5069$var$logger.throwError("insufficient funds for intrinsic transaction cost", (0, $cbv61.Logger).errors.INSUFFICIENT_FUNDS, {
        error: error,
        method: method,
        transaction: transaction
    });
    // "Transaction with the same hash was already imported."
    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) $f5918f77586c5069$var$logger.throwError("nonce has already been used", (0, $cbv61.Logger).errors.NONCE_EXPIRED, {
        error: error,
        method: method,
        transaction: transaction
    });
    // "Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce."
    if (message.match(/another transaction with same nonce/)) $f5918f77586c5069$var$logger.throwError("replacement fee too low", (0, $cbv61.Logger).errors.REPLACEMENT_UNDERPRICED, {
        error: error,
        method: method,
        transaction: transaction
    });
    if (message.match(/execution failed due to an exception|execution reverted/)) $f5918f77586c5069$var$logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", (0, $cbv61.Logger).errors.UNPREDICTABLE_GAS_LIMIT, {
        error: error,
        method: method,
        transaction: transaction
    });
    throw error;
}
class $f5918f77586c5069$export$dd1d942a536c7912 extends (0, $bc831430ade2c52d$exports.BaseProvider) {
    constructor(network, apiKey){
        super(network);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "baseUrl", this.getBaseUrl());
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "apiKey", apiKey || null);
    }
    getBaseUrl() {
        switch(this.network ? this.network.name : "invalid"){
            case "homestead":
                return "https://api.etherscan.io";
            case "goerli":
                return "https://api-goerli.etherscan.io";
            case "sepolia":
                return "https://api-sepolia.etherscan.io";
            case "matic":
                return "https://api.polygonscan.com";
            case "maticmum":
                return "https://api-testnet.polygonscan.com";
            case "arbitrum":
                return "https://api.arbiscan.io";
            case "arbitrum-goerli":
                return "https://api-goerli.arbiscan.io";
            case "optimism":
                return "https://api-optimistic.etherscan.io";
            case "optimism-goerli":
                return "https://api-goerli-optimistic.etherscan.io";
            default:
        }
        return $f5918f77586c5069$var$logger.throwArgumentError("unsupported network", "network", this.network.name);
    }
    getUrl(module, params) {
        const query = Object.keys(params).reduce((accum, key)=>{
            const value = params[key];
            if (value != null) accum += `&${key}=${value}`;
            return accum;
        }, "");
        const apiKey = this.apiKey ? `&apikey=${this.apiKey}` : "";
        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;
    }
    getPostUrl() {
        return `${this.baseUrl}/api`;
    }
    getPostData(module, params) {
        params.module = module;
        params.apikey = this.apiKey;
        return params;
    }
    fetch(module, params, post) {
        return $f5918f77586c5069$var$__awaiter(this, void 0, void 0, function*() {
            const url = post ? this.getPostUrl() : this.getUrl(module, params);
            const payload = post ? this.getPostData(module, params) : null;
            const procFunc = module === "proxy" ? $f5918f77586c5069$var$getJsonResult : $f5918f77586c5069$var$getResult;
            this.emit("debug", {
                action: "request",
                request: url,
                provider: this
            });
            const connection = {
                url: url,
                throttleSlotInterval: 1000,
                throttleCallback: (attempt, url)=>{
                    if (this.isCommunityResource()) (0, $a833276422c6da56$export$4c41bd49e82e82ab)();
                    return Promise.resolve(true);
                }
            };
            let payloadStr = null;
            if (payload) {
                connection.headers = {
                    "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
                };
                payloadStr = Object.keys(payload).map((key)=>{
                    return `${key}=${payload[key]}`;
                }).join("&");
            }
            const result = yield (0, $68f1849f3b633900$exports.fetchJson)(connection, payloadStr, procFunc || $f5918f77586c5069$var$getJsonResult);
            this.emit("debug", {
                action: "response",
                request: url,
                response: (0, $b19fb92a27e5f35f$exports.deepCopy)(result),
                provider: this
            });
            return result;
        });
    }
    detectNetwork() {
        return $f5918f77586c5069$var$__awaiter(this, void 0, void 0, function*() {
            return this.network;
        });
    }
    perform(method, params) {
        const _super = Object.create(null, {
            perform: {
                get: ()=>super.perform
            }
        });
        return $f5918f77586c5069$var$__awaiter(this, void 0, void 0, function*() {
            switch(method){
                case "getBlockNumber":
                    return this.fetch("proxy", {
                        action: "eth_blockNumber"
                    });
                case "getGasPrice":
                    return this.fetch("proxy", {
                        action: "eth_gasPrice"
                    });
                case "getBalance":
                    // Returns base-10 result
                    return this.fetch("account", {
                        action: "balance",
                        address: params.address,
                        tag: params.blockTag
                    });
                case "getTransactionCount":
                    return this.fetch("proxy", {
                        action: "eth_getTransactionCount",
                        address: params.address,
                        tag: params.blockTag
                    });
                case "getCode":
                    return this.fetch("proxy", {
                        action: "eth_getCode",
                        address: params.address,
                        tag: params.blockTag
                    });
                case "getStorageAt":
                    return this.fetch("proxy", {
                        action: "eth_getStorageAt",
                        address: params.address,
                        position: params.position,
                        tag: params.blockTag
                    });
                case "sendTransaction":
                    return this.fetch("proxy", {
                        action: "eth_sendRawTransaction",
                        hex: params.signedTransaction
                    }, true).catch((error)=>{
                        return $f5918f77586c5069$var$checkError("sendTransaction", error, params.signedTransaction);
                    });
                case "getBlock":
                    if (params.blockTag) return this.fetch("proxy", {
                        action: "eth_getBlockByNumber",
                        tag: params.blockTag,
                        boolean: params.includeTransactions ? "true" : "false"
                    });
                    throw new Error("getBlock by blockHash not implemented");
                case "getTransaction":
                    return this.fetch("proxy", {
                        action: "eth_getTransactionByHash",
                        txhash: params.transactionHash
                    });
                case "getTransactionReceipt":
                    return this.fetch("proxy", {
                        action: "eth_getTransactionReceipt",
                        txhash: params.transactionHash
                    });
                case "call":
                    {
                        if (params.blockTag !== "latest") throw new Error("EtherscanProvider does not support blockTag for call");
                        const postData = $f5918f77586c5069$var$getTransactionPostData(params.transaction);
                        postData.module = "proxy";
                        postData.action = "eth_call";
                        try {
                            return yield this.fetch("proxy", postData, true);
                        } catch (error) {
                            return $f5918f77586c5069$var$checkError("call", error, params.transaction);
                        }
                    }
                case "estimateGas":
                    {
                        const postData = $f5918f77586c5069$var$getTransactionPostData(params.transaction);
                        postData.module = "proxy";
                        postData.action = "eth_estimateGas";
                        try {
                            return yield this.fetch("proxy", postData, true);
                        } catch (error) {
                            return $f5918f77586c5069$var$checkError("estimateGas", error, params.transaction);
                        }
                    }
                case "getLogs":
                    {
                        const args = {
                            action: "getLogs"
                        };
                        if (params.filter.fromBlock) args.fromBlock = $f5918f77586c5069$var$checkLogTag(params.filter.fromBlock);
                        if (params.filter.toBlock) args.toBlock = $f5918f77586c5069$var$checkLogTag(params.filter.toBlock);
                        if (params.filter.address) args.address = params.filter.address;
                        // @TODO: We can handle slightly more complicated logs using the logs API
                        if (params.filter.topics && params.filter.topics.length > 0) {
                            if (params.filter.topics.length > 1) $f5918f77586c5069$var$logger.throwError("unsupported topic count", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                                topics: params.filter.topics
                            });
                            if (params.filter.topics.length === 1) {
                                const topic0 = params.filter.topics[0];
                                if (typeof topic0 !== "string" || topic0.length !== 66) $f5918f77586c5069$var$logger.throwError("unsupported topic format", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                                    topic0: topic0
                                });
                                args.topic0 = topic0;
                            }
                        }
                        const logs = yield this.fetch("logs", args);
                        // Cache txHash => blockHash
                        let blocks = {};
                        // Add any missing blockHash to the logs
                        for(let i = 0; i < logs.length; i++){
                            const log = logs[i];
                            if (log.blockHash != null) continue;
                            if (blocks[log.blockNumber] == null) {
                                const block = yield this.getBlock(log.blockNumber);
                                if (block) blocks[log.blockNumber] = block.hash;
                            }
                            log.blockHash = blocks[log.blockNumber];
                        }
                        return logs;
                    }
                case "getEtherPrice":
                    if (this.network.name !== "homestead") return 0.0;
                    return parseFloat((yield this.fetch("stats", {
                        action: "ethprice"
                    })).ethusd);
                default:
                    break;
            }
            return _super.perform.call(this, method, params);
        });
    }
    // Note: The `page` page parameter only allows pagination within the
    //       10,000 window available without a page and offset parameter
    //       Error: Result window is too large, PageNo x Offset size must
    //              be less than or equal to 10000
    getHistory(addressOrName, startBlock, endBlock) {
        return $f5918f77586c5069$var$__awaiter(this, void 0, void 0, function*() {
            const params = {
                action: "txlist",
                address: yield this.resolveName(addressOrName),
                startblock: startBlock == null ? 0 : startBlock,
                endblock: endBlock == null ? 99999999 : endBlock,
                sort: "asc"
            };
            const result = yield this.fetch("account", params);
            return result.map((tx)=>{
                [
                    "contractAddress",
                    "to"
                ].forEach(function(key) {
                    if (tx[key] == "") delete tx[key];
                });
                if (tx.creates == null && tx.contractAddress != null) tx.creates = tx.contractAddress;
                const item = this.formatter.transactionResponse(tx);
                if (tx.timeStamp) item.timestamp = parseInt(tx.timeStamp);
                return item;
            });
        });
    }
    isCommunityResource() {
        return this.apiKey == null;
    }
}


var $da3a7bd74daa9b73$exports = {};

$parcel$export($da3a7bd74daa9b73$exports, "FallbackProvider", () => $da3a7bd74daa9b73$export$cb1d0beacb55feb7, (v) => $da3a7bd74daa9b73$export$cb1d0beacb55feb7 = v);



var $eg8oT = parcelRequire("eg8oT");

"use strict";
function $da22b4fd609de650$export$e6c7296801b9b341(array) {
    array = array.slice();
    for(let i = array.length - 1; i > 0; i--){
        const j = Math.floor(Math.random() * (i + 1));
        const tmp = array[i];
        array[i] = array[j];
        array[j] = tmp;
    }
    return array;
}






var $cbv61 = parcelRequire("cbv61");

"use strict";
var $da3a7bd74daa9b73$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $da3a7bd74daa9b73$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
function $da3a7bd74daa9b73$var$now() {
    return new Date().getTime();
}
// Returns to network as long as all agree, or null if any is null.
// Throws an error if any two networks do not match.
function $da3a7bd74daa9b73$var$checkNetworks(networks) {
    let result = null;
    for(let i = 0; i < networks.length; i++){
        const network = networks[i];
        // Null! We do not know our network; bail.
        if (network == null) return null;
        if (result) // Make sure the network matches the previous networks
        {
            if (!(result.name === network.name && result.chainId === network.chainId && (result.ensAddress === network.ensAddress || result.ensAddress == null && network.ensAddress == null))) $da3a7bd74daa9b73$var$logger.throwArgumentError("provider mismatch", "networks", networks);
        } else result = network;
    }
    return result;
}
function $da3a7bd74daa9b73$var$median(values, maxDelta) {
    values = values.slice().sort();
    const middle = Math.floor(values.length / 2);
    // Odd length; take the middle
    if (values.length % 2) return values[middle];
    // Even length; take the average of the two middle
    const a = values[middle - 1], b = values[middle];
    if (maxDelta != null && Math.abs(a - b) > maxDelta) return null;
    return (a + b) / 2;
}
function $da3a7bd74daa9b73$var$serialize(value) {
    if (value === null) return "null";
    else if (typeof value === "number" || typeof value === "boolean") return JSON.stringify(value);
    else if (typeof value === "string") return value;
    else if ((0, $66faa3baf2af8a8b$export$d97aa349ed20696).isBigNumber(value)) return value.toString();
    else if (Array.isArray(value)) return JSON.stringify(value.map((i)=>$da3a7bd74daa9b73$var$serialize(i)));
    else if (typeof value === "object") {
        const keys = Object.keys(value);
        keys.sort();
        return "{" + keys.map((key)=>{
            let v = value[key];
            if (typeof v === "function") v = "[function]";
            else v = $da3a7bd74daa9b73$var$serialize(v);
            return JSON.stringify(key) + ":" + v;
        }).join(",") + "}";
    }
    throw new Error("unknown value type: " + typeof value);
}
// Next request ID to use for emitting debug info
let $da3a7bd74daa9b73$var$nextRid = 1;
function $da3a7bd74daa9b73$var$stall(duration) {
    let cancel = null;
    let timer = null;
    let promise = new Promise((resolve)=>{
        cancel = function() {
            if (timer) {
                clearTimeout(timer);
                timer = null;
            }
            resolve();
        };
        timer = setTimeout(cancel, duration);
    });
    const wait = (func)=>{
        promise = promise.then(func);
        return promise;
    };
    function getPromise() {
        return promise;
    }
    return {
        cancel: cancel,
        getPromise: getPromise,
        wait: wait
    };
}
const $da3a7bd74daa9b73$var$ForwardErrors = [
    (0, $cbv61.Logger).errors.CALL_EXCEPTION,
    (0, $cbv61.Logger).errors.INSUFFICIENT_FUNDS,
    (0, $cbv61.Logger).errors.NONCE_EXPIRED,
    (0, $cbv61.Logger).errors.REPLACEMENT_UNDERPRICED,
    (0, $cbv61.Logger).errors.UNPREDICTABLE_GAS_LIMIT
];
const $da3a7bd74daa9b73$var$ForwardProperties = [
    "address",
    "args",
    "errorArgs",
    "errorSignature",
    "method",
    "transaction"
];
function $da3a7bd74daa9b73$var$exposeDebugConfig(config, now) {
    const result = {
        weight: config.weight
    };
    Object.defineProperty(result, "provider", {
        get: ()=>config.provider
    });
    if (config.start) result.start = config.start;
    if (now) result.duration = now - config.start;
    if (config.done) {
        if (config.error) result.error = config.error;
        else result.result = config.result || null;
    }
    return result;
}
function $da3a7bd74daa9b73$var$normalizedTally(normalize, quorum) {
    return function(configs) {
        // Count the votes for each result
        const tally = {};
        configs.forEach((c)=>{
            const value = normalize(c.result);
            if (!tally[value]) tally[value] = {
                count: 0,
                result: c.result
            };
            tally[value].count++;
        });
        // Check for a quorum on any given result
        const keys = Object.keys(tally);
        for(let i = 0; i < keys.length; i++){
            const check = tally[keys[i]];
            if (check.count >= quorum) return check.result;
        }
        // No quroum
        return undefined;
    };
}
function $da3a7bd74daa9b73$var$getProcessFunc(provider, method, params) {
    let normalize = $da3a7bd74daa9b73$var$serialize;
    switch(method){
        case "getBlockNumber":
            // Return the median value, unless there is (median + 1) is also
            // present, in which case that is probably true and the median
            // is going to be stale soon. In the event of a malicious node,
            // the lie will be true soon enough.
            return function(configs) {
                const values = configs.map((c)=>c.result);
                // Get the median block number
                let blockNumber = $da3a7bd74daa9b73$var$median(configs.map((c)=>c.result), 2);
                if (blockNumber == null) return undefined;
                blockNumber = Math.ceil(blockNumber);
                // If the next block height is present, its prolly safe to use
                if (values.indexOf(blockNumber + 1) >= 0) blockNumber++;
                // Don't ever roll back the blockNumber
                if (blockNumber >= provider._highestBlockNumber) provider._highestBlockNumber = blockNumber;
                return provider._highestBlockNumber;
            };
        case "getGasPrice":
            // Return the middle (round index up) value, similar to median
            // but do not average even entries and choose the higher.
            // Malicious actors must compromise 50% of the nodes to lie.
            return function(configs) {
                const values = configs.map((c)=>c.result);
                values.sort();
                return values[Math.floor(values.length / 2)];
            };
        case "getEtherPrice":
            // Returns the median price. Malicious actors must compromise at
            // least 50% of the nodes to lie (in a meaningful way).
            return function(configs) {
                return $da3a7bd74daa9b73$var$median(configs.map((c)=>c.result));
            };
        // No additional normalizing required; serialize is enough
        case "getBalance":
        case "getTransactionCount":
        case "getCode":
        case "getStorageAt":
        case "call":
        case "estimateGas":
        case "getLogs":
            break;
        // We drop the confirmations from transactions as it is approximate
        case "getTransaction":
        case "getTransactionReceipt":
            normalize = function(tx) {
                if (tx == null) return null;
                tx = (0, $b19fb92a27e5f35f$exports.shallowCopy)(tx);
                tx.confirmations = -1;
                return $da3a7bd74daa9b73$var$serialize(tx);
            };
            break;
        // We drop the confirmations from transactions as it is approximate
        case "getBlock":
            // We drop the confirmations from transactions as it is approximate
            if (params.includeTransactions) normalize = function(block) {
                if (block == null) return null;
                block = (0, $b19fb92a27e5f35f$exports.shallowCopy)(block);
                block.transactions = block.transactions.map((tx)=>{
                    tx = (0, $b19fb92a27e5f35f$exports.shallowCopy)(tx);
                    tx.confirmations = -1;
                    return tx;
                });
                return $da3a7bd74daa9b73$var$serialize(block);
            };
            else normalize = function(block) {
                if (block == null) return null;
                return $da3a7bd74daa9b73$var$serialize(block);
            };
            break;
        default:
            throw new Error("unknown method: " + method);
    }
    // Return the result if and only if the expected quorum is
    // satisfied and agreed upon for the final result.
    return $da3a7bd74daa9b73$var$normalizedTally(normalize, provider.quorum);
}
// If we are doing a blockTag query, we need to make sure the backend is
// caught up to the FallbackProvider, before sending a request to it.
function $da3a7bd74daa9b73$var$waitForSync(config, blockNumber) {
    return $da3a7bd74daa9b73$var$__awaiter(this, void 0, void 0, function*() {
        const provider = config.provider;
        if (provider.blockNumber != null && provider.blockNumber >= blockNumber || blockNumber === -1) return provider;
        return (0, $68f1849f3b633900$exports.poll)(()=>{
            return new Promise((resolve, reject)=>{
                setTimeout(function() {
                    // We are synced
                    if (provider.blockNumber >= blockNumber) return resolve(provider);
                    // We're done; just quit
                    if (config.cancelled) return resolve(null);
                    // Try again, next block
                    return resolve(undefined);
                }, 0);
            });
        }, {
            oncePoll: provider
        });
    });
}
function $da3a7bd74daa9b73$var$getRunner(config, currentBlockNumber, method, params) {
    return $da3a7bd74daa9b73$var$__awaiter(this, void 0, void 0, function*() {
        let provider = config.provider;
        switch(method){
            case "getBlockNumber":
            case "getGasPrice":
                return provider[method]();
            case "getEtherPrice":
                if (provider.getEtherPrice) return provider.getEtherPrice();
                break;
            case "getBalance":
            case "getTransactionCount":
            case "getCode":
                if (params.blockTag && (0, $eg8oT.isHexString)(params.blockTag)) provider = yield $da3a7bd74daa9b73$var$waitForSync(config, currentBlockNumber);
                return provider[method](params.address, params.blockTag || "latest");
            case "getStorageAt":
                if (params.blockTag && (0, $eg8oT.isHexString)(params.blockTag)) provider = yield $da3a7bd74daa9b73$var$waitForSync(config, currentBlockNumber);
                return provider.getStorageAt(params.address, params.position, params.blockTag || "latest");
            case "getBlock":
                if (params.blockTag && (0, $eg8oT.isHexString)(params.blockTag)) provider = yield $da3a7bd74daa9b73$var$waitForSync(config, currentBlockNumber);
                return provider[params.includeTransactions ? "getBlockWithTransactions" : "getBlock"](params.blockTag || params.blockHash);
            case "call":
            case "estimateGas":
                if (params.blockTag && (0, $eg8oT.isHexString)(params.blockTag)) provider = yield $da3a7bd74daa9b73$var$waitForSync(config, currentBlockNumber);
                if (method === "call" && params.blockTag) return provider[method](params.transaction, params.blockTag);
                return provider[method](params.transaction);
            case "getTransaction":
            case "getTransactionReceipt":
                return provider[method](params.transactionHash);
            case "getLogs":
                {
                    let filter = params.filter;
                    if (filter.fromBlock && (0, $eg8oT.isHexString)(filter.fromBlock) || filter.toBlock && (0, $eg8oT.isHexString)(filter.toBlock)) provider = yield $da3a7bd74daa9b73$var$waitForSync(config, currentBlockNumber);
                    return provider.getLogs(filter);
                }
        }
        return $da3a7bd74daa9b73$var$logger.throwError("unknown method error", (0, $cbv61.Logger).errors.UNKNOWN_ERROR, {
            method: method,
            params: params
        });
    });
}
class $da3a7bd74daa9b73$export$cb1d0beacb55feb7 extends (0, $bc831430ade2c52d$exports.BaseProvider) {
    constructor(providers, quorum){
        if (providers.length === 0) $da3a7bd74daa9b73$var$logger.throwArgumentError("missing providers", "providers", providers);
        const providerConfigs = providers.map((configOrProvider, index)=>{
            if ((0, $443be65109ed3525$exports.Provider).isProvider(configOrProvider)) {
                const stallTimeout = (0, $a833276422c6da56$export$d93d5f61c2498b6)(configOrProvider) ? 2000 : 750;
                const priority = 1;
                return Object.freeze({
                    provider: configOrProvider,
                    weight: 1,
                    stallTimeout: stallTimeout,
                    priority: priority
                });
            }
            const config = (0, $b19fb92a27e5f35f$exports.shallowCopy)(configOrProvider);
            if (config.priority == null) config.priority = 1;
            if (config.stallTimeout == null) config.stallTimeout = (0, $a833276422c6da56$export$d93d5f61c2498b6)(configOrProvider) ? 2000 : 750;
            if (config.weight == null) config.weight = 1;
            const weight = config.weight;
            if (weight % 1 || weight > 512 || weight < 1) $da3a7bd74daa9b73$var$logger.throwArgumentError("invalid weight; must be integer in [1, 512]", `providers[${index}].weight`, weight);
            return Object.freeze(config);
        });
        const total = providerConfigs.reduce((accum, c)=>accum + c.weight, 0);
        if (quorum == null) quorum = total / 2;
        else if (quorum > total) $da3a7bd74daa9b73$var$logger.throwArgumentError("quorum will always fail; larger than total weight", "quorum", quorum);
        // Are all providers' networks are known
        let networkOrReady = $da3a7bd74daa9b73$var$checkNetworks(providerConfigs.map((c)=>c.provider.network));
        // Not all networks are known; we must stall
        if (networkOrReady == null) networkOrReady = new Promise((resolve, reject)=>{
            setTimeout(()=>{
                this.detectNetwork().then(resolve, reject);
            }, 0);
        });
        super(networkOrReady);
        // Preserve a copy, so we do not get mutated
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "providerConfigs", Object.freeze(providerConfigs));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "quorum", quorum);
        this._highestBlockNumber = -1;
    }
    detectNetwork() {
        return $da3a7bd74daa9b73$var$__awaiter(this, void 0, void 0, function*() {
            const networks = yield Promise.all(this.providerConfigs.map((c)=>c.provider.getNetwork()));
            return $da3a7bd74daa9b73$var$checkNetworks(networks);
        });
    }
    perform(method, params) {
        return $da3a7bd74daa9b73$var$__awaiter(this, void 0, void 0, function*() {
            // Sending transactions is special; always broadcast it to all backends
            if (method === "sendTransaction") {
                const results = yield Promise.all(this.providerConfigs.map((c)=>{
                    return c.provider.sendTransaction(params.signedTransaction).then((result)=>{
                        return result.hash;
                    }, (error)=>{
                        return error;
                    });
                }));
                // Any success is good enough (other errors are likely "already seen" errors
                for(let i = 0; i < results.length; i++){
                    const result = results[i];
                    if (typeof result === "string") return result;
                }
                // They were all an error; pick the first error
                throw results[0];
            }
            // We need to make sure we are in sync with our backends, so we need
            // to know this before we can make a lot of calls
            if (this._highestBlockNumber === -1 && method !== "getBlockNumber") yield this.getBlockNumber();
            const processFunc = $da3a7bd74daa9b73$var$getProcessFunc(this, method, params);
            // Shuffle the providers and then sort them by their priority; we
            // shallowCopy them since we will store the result in them too
            const configs = (0, $da22b4fd609de650$export$e6c7296801b9b341)(this.providerConfigs.map((0, $b19fb92a27e5f35f$exports.shallowCopy)));
            configs.sort((a, b)=>a.priority - b.priority);
            const currentBlockNumber = this._highestBlockNumber;
            let i = 0;
            let first = true;
            while(true){
                const t0 = $da3a7bd74daa9b73$var$now();
                // Compute the inflight weight (exclude anything past)
                let inflightWeight = configs.filter((c)=>c.runner && t0 - c.start < c.stallTimeout).reduce((accum, c)=>accum + c.weight, 0);
                // Start running enough to meet quorum
                while(inflightWeight < this.quorum && i < configs.length){
                    const config = configs[i++];
                    const rid = $da3a7bd74daa9b73$var$nextRid++;
                    config.start = $da3a7bd74daa9b73$var$now();
                    config.staller = $da3a7bd74daa9b73$var$stall(config.stallTimeout);
                    config.staller.wait(()=>{
                        config.staller = null;
                    });
                    config.runner = $da3a7bd74daa9b73$var$getRunner(config, currentBlockNumber, method, params).then((result)=>{
                        config.done = true;
                        config.result = result;
                        if (this.listenerCount("debug")) this.emit("debug", {
                            action: "request",
                            rid: rid,
                            backend: $da3a7bd74daa9b73$var$exposeDebugConfig(config, $da3a7bd74daa9b73$var$now()),
                            request: {
                                method: method,
                                params: (0, $b19fb92a27e5f35f$exports.deepCopy)(params)
                            },
                            provider: this
                        });
                    }, (error)=>{
                        config.done = true;
                        config.error = error;
                        if (this.listenerCount("debug")) this.emit("debug", {
                            action: "request",
                            rid: rid,
                            backend: $da3a7bd74daa9b73$var$exposeDebugConfig(config, $da3a7bd74daa9b73$var$now()),
                            request: {
                                method: method,
                                params: (0, $b19fb92a27e5f35f$exports.deepCopy)(params)
                            },
                            provider: this
                        });
                    });
                    if (this.listenerCount("debug")) this.emit("debug", {
                        action: "request",
                        rid: rid,
                        backend: $da3a7bd74daa9b73$var$exposeDebugConfig(config, null),
                        request: {
                            method: method,
                            params: (0, $b19fb92a27e5f35f$exports.deepCopy)(params)
                        },
                        provider: this
                    });
                    inflightWeight += config.weight;
                }
                // Wait for anything meaningful to finish or stall out
                const waiting = [];
                configs.forEach((c)=>{
                    if (c.done || !c.runner) return;
                    waiting.push(c.runner);
                    if (c.staller) waiting.push(c.staller.getPromise());
                });
                if (waiting.length) yield Promise.race(waiting);
                // Check the quorum and process the results; the process function
                // may additionally decide the quorum is not met
                const results = configs.filter((c)=>c.done && c.error == null);
                if (results.length >= this.quorum) {
                    const result = processFunc(results);
                    if (result !== undefined) {
                        // Shut down any stallers
                        configs.forEach((c)=>{
                            if (c.staller) c.staller.cancel();
                            c.cancelled = true;
                        });
                        return result;
                    }
                    if (!first) yield $da3a7bd74daa9b73$var$stall(100).getPromise();
                    first = false;
                }
                // No result, check for errors that should be forwarded
                const errors = configs.reduce((accum, c)=>{
                    if (!c.done || c.error == null) return accum;
                    const code = c.error.code;
                    if ($da3a7bd74daa9b73$var$ForwardErrors.indexOf(code) >= 0) {
                        if (!accum[code]) accum[code] = {
                            error: c.error,
                            weight: 0
                        };
                        accum[code].weight += c.weight;
                    }
                    return accum;
                }, {});
                Object.keys(errors).forEach((errorCode)=>{
                    const tally = errors[errorCode];
                    if (tally.weight < this.quorum) return;
                    // Shut down any stallers
                    configs.forEach((c)=>{
                        if (c.staller) c.staller.cancel();
                        c.cancelled = true;
                    });
                    const e = tally.error;
                    const props = {};
                    $da3a7bd74daa9b73$var$ForwardProperties.forEach((name)=>{
                        if (e[name] == null) return;
                        props[name] = e[name];
                    });
                    $da3a7bd74daa9b73$var$logger.throwError(e.reason || e.message, errorCode, props);
                });
                // All configs have run to completion; we will never get more data
                if (configs.filter((c)=>!c.done).length === 0) break;
            }
            // Shut down any stallers; shouldn't be any
            configs.forEach((c)=>{
                if (c.staller) c.staller.cancel();
                c.cancelled = true;
            });
            return $da3a7bd74daa9b73$var$logger.throwError("failed to meet quorum", (0, $cbv61.Logger).errors.SERVER_ERROR, {
                method: method,
                params: params,
                //results: configs.map((c) => c.result),
                //errors: configs.map((c) => c.error),
                results: configs.map((c)=>$da3a7bd74daa9b73$var$exposeDebugConfig(c)),
                provider: this
            });
        });
    }
}


"use strict";
const $a4adb2fbafa1b445$export$fbe151f90a1ece01 = null;






var $cbv61 = parcelRequire("cbv61");


"use strict";
const $f827a0cbfed8474e$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
const $f827a0cbfed8474e$var$defaultProjectId = "84842078b09946638c03157f83405213";
class $f827a0cbfed8474e$export$dd168a807d60da4f extends (0, $852e4865dd1a0824$exports.WebSocketProvider) {
    constructor(network, apiKey){
        const provider = new $f827a0cbfed8474e$export$60ff1a559b5c6ebd(network, apiKey);
        const connection = provider.connection;
        if (connection.password) $f827a0cbfed8474e$var$logger.throwError("INFURA WebSocket project secrets unsupported", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "InfuraProvider.getWebSocketProvider()"
        });
        const url = connection.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
        super(url, network);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "apiKey", provider.projectId);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "projectId", provider.projectId);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "projectSecret", provider.projectSecret);
    }
    isCommunityResource() {
        return this.projectId === $f827a0cbfed8474e$var$defaultProjectId;
    }
}
class $f827a0cbfed8474e$export$60ff1a559b5c6ebd extends (0, $66618fedffa44f16$exports.UrlJsonRpcProvider) {
    static getWebSocketProvider(network, apiKey) {
        return new $f827a0cbfed8474e$export$dd168a807d60da4f(network, apiKey);
    }
    static getApiKey(apiKey) {
        const apiKeyObj = {
            apiKey: $f827a0cbfed8474e$var$defaultProjectId,
            projectId: $f827a0cbfed8474e$var$defaultProjectId,
            projectSecret: null
        };
        if (apiKey == null) return apiKeyObj;
        if (typeof apiKey === "string") apiKeyObj.projectId = apiKey;
        else if (apiKey.projectSecret != null) {
            $f827a0cbfed8474e$var$logger.assertArgument(typeof apiKey.projectId === "string", "projectSecret requires a projectId", "projectId", apiKey.projectId);
            $f827a0cbfed8474e$var$logger.assertArgument(typeof apiKey.projectSecret === "string", "invalid projectSecret", "projectSecret", "[REDACTED]");
            apiKeyObj.projectId = apiKey.projectId;
            apiKeyObj.projectSecret = apiKey.projectSecret;
        } else if (apiKey.projectId) apiKeyObj.projectId = apiKey.projectId;
        apiKeyObj.apiKey = apiKeyObj.projectId;
        return apiKeyObj;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch(network ? network.name : "unknown"){
            case "homestead":
                host = "mainnet.infura.io";
                break;
            case "goerli":
                host = "goerli.infura.io";
                break;
            case "sepolia":
                host = "sepolia.infura.io";
                break;
            case "matic":
                host = "polygon-mainnet.infura.io";
                break;
            case "maticmum":
                host = "polygon-mumbai.infura.io";
                break;
            case "optimism":
                host = "optimism-mainnet.infura.io";
                break;
            case "optimism-goerli":
                host = "optimism-goerli.infura.io";
                break;
            case "arbitrum":
                host = "arbitrum-mainnet.infura.io";
                break;
            case "arbitrum-goerli":
                host = "arbitrum-goerli.infura.io";
                break;
            default:
                $f827a0cbfed8474e$var$logger.throwError("unsupported network", (0, $cbv61.Logger).errors.INVALID_ARGUMENT, {
                    argument: "network",
                    value: network
                });
        }
        const connection = {
            allowGzip: true,
            url: "https://" + host + "/v3/" + apiKey.projectId,
            throttleCallback: (attempt, url)=>{
                if (apiKey.projectId === $f827a0cbfed8474e$var$defaultProjectId) (0, $a833276422c6da56$export$4c41bd49e82e82ab)();
                return Promise.resolve(true);
            }
        };
        if (apiKey.projectSecret != null) {
            connection.user = "";
            connection.password = apiKey.projectSecret;
        }
        return connection;
    }
    isCommunityResource() {
        return this.projectId === $f827a0cbfed8474e$var$defaultProjectId;
    }
}






class $3b78c8d022d58bfd$export$5a16092bf20edf97 extends (0, $7f2d24163dd74616$exports.JsonRpcProvider) {
    send(method, params) {
        const request = {
            method: method,
            params: params,
            id: this._nextId++,
            jsonrpc: "2.0"
        };
        if (this._pendingBatch == null) this._pendingBatch = [];
        const inflightRequest = {
            request: request,
            resolve: null,
            reject: null
        };
        const promise = new Promise((resolve, reject)=>{
            inflightRequest.resolve = resolve;
            inflightRequest.reject = reject;
        });
        this._pendingBatch.push(inflightRequest);
        if (!this._pendingBatchAggregator) // Schedule batch for next event loop + short duration
        this._pendingBatchAggregator = setTimeout(()=>{
            // Get teh current batch and clear it, so new requests
            // go into the next batch
            const batch = this._pendingBatch;
            this._pendingBatch = null;
            this._pendingBatchAggregator = null;
            // Get the request as an array of requests
            const request = batch.map((inflight)=>inflight.request);
            this.emit("debug", {
                action: "requestBatch",
                request: (0, $b19fb92a27e5f35f$exports.deepCopy)(request),
                provider: this
            });
            return (0, $68f1849f3b633900$exports.fetchJson)(this.connection, JSON.stringify(request)).then((result)=>{
                this.emit("debug", {
                    action: "response",
                    request: request,
                    response: result,
                    provider: this
                });
                // For each result, feed it to the correct Promise, depending
                // on whether it was a success or error
                batch.forEach((inflightRequest, index)=>{
                    const payload = result[index];
                    if (payload.error) {
                        const error = new Error(payload.error.message);
                        error.code = payload.error.code;
                        error.data = payload.error.data;
                        inflightRequest.reject(error);
                    } else inflightRequest.resolve(payload.result);
                });
            }, (error)=>{
                this.emit("debug", {
                    action: "response",
                    error: error,
                    request: request,
                    provider: this
                });
                batch.forEach((inflightRequest)=>{
                    inflightRequest.reject(error);
                });
            });
        }, 10);
        return promise;
    }
}


/* istanbul ignore file */ 

var $cbv61 = parcelRequire("cbv61");

"use strict";
const $3b3efbf62d6a89cd$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
// Special API key provided by Nodesmith for ethers.js
const $3b3efbf62d6a89cd$var$defaultApiKey = "ETHERS_JS_SHARED";
class $3b3efbf62d6a89cd$export$8235cbce3ce273bd extends (0, $66618fedffa44f16$exports.UrlJsonRpcProvider) {
    static getApiKey(apiKey) {
        if (apiKey && typeof apiKey !== "string") $3b3efbf62d6a89cd$var$logger.throwArgumentError("invalid apiKey", "apiKey", apiKey);
        return apiKey || $3b3efbf62d6a89cd$var$defaultApiKey;
    }
    static getUrl(network, apiKey) {
        $3b3efbf62d6a89cd$var$logger.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
        let host = null;
        switch(network.name){
            case "homestead":
                host = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
                break;
            case "ropsten":
                host = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
                break;
            case "rinkeby":
                host = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
                break;
            case "goerli":
                host = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
                break;
            case "kovan":
                host = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
                break;
            default:
                $3b3efbf62d6a89cd$var$logger.throwArgumentError("unsupported network", "network", arguments[0]);
        }
        return host + "?apiKey=" + apiKey;
    }
}



var $cbv61 = parcelRequire("cbv61");


"use strict";
const $91da800566d01550$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
const $91da800566d01550$var$defaultApplicationId = "62e1ad51b37b8e00394bda3b";
class $91da800566d01550$export$58bb47e42f6b092e extends (0, $66618fedffa44f16$exports.UrlJsonRpcProvider) {
    static getApiKey(apiKey) {
        const apiKeyObj = {
            applicationId: null,
            loadBalancer: true,
            applicationSecretKey: null
        };
        // Parse applicationId and applicationSecretKey
        if (apiKey == null) apiKeyObj.applicationId = $91da800566d01550$var$defaultApplicationId;
        else if (typeof apiKey === "string") apiKeyObj.applicationId = apiKey;
        else if (apiKey.applicationSecretKey != null) {
            apiKeyObj.applicationId = apiKey.applicationId;
            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;
        } else if (apiKey.applicationId) apiKeyObj.applicationId = apiKey.applicationId;
        else $91da800566d01550$var$logger.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", apiKey);
        return apiKeyObj;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch(network ? network.name : "unknown"){
            case "goerli":
                host = "eth-goerli.gateway.pokt.network";
                break;
            case "homestead":
                host = "eth-mainnet.gateway.pokt.network";
                break;
            case "kovan":
                host = "poa-kovan.gateway.pokt.network";
                break;
            case "matic":
                host = "poly-mainnet.gateway.pokt.network";
                break;
            case "maticmum":
                host = "polygon-mumbai-rpc.gateway.pokt.network";
                break;
            case "rinkeby":
                host = "eth-rinkeby.gateway.pokt.network";
                break;
            case "ropsten":
                host = "eth-ropsten.gateway.pokt.network";
                break;
            default:
                $91da800566d01550$var$logger.throwError("unsupported network", (0, $cbv61.Logger).errors.INVALID_ARGUMENT, {
                    argument: "network",
                    value: network
                });
        }
        const url = `https:/\/${host}/v1/lb/${apiKey.applicationId}`;
        const connection = {
            headers: {},
            url: url
        };
        if (apiKey.applicationSecretKey != null) {
            connection.user = "";
            connection.password = apiKey.applicationSecretKey;
        }
        return connection;
    }
    isCommunityResource() {
        return this.applicationId === $91da800566d01550$var$defaultApplicationId;
    }
}





var $cbv61 = parcelRequire("cbv61");


"use strict";
const $89c96b5cc4961dd5$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
let $89c96b5cc4961dd5$var$_nextId = 1;
function $89c96b5cc4961dd5$var$buildWeb3LegacyFetcher(provider, sendFunc) {
    const fetcher = "Web3LegacyFetcher";
    return function(method, params) {
        const request = {
            method: method,
            params: params,
            id: $89c96b5cc4961dd5$var$_nextId++,
            jsonrpc: "2.0"
        };
        return new Promise((resolve, reject)=>{
            this.emit("debug", {
                action: "request",
                fetcher: fetcher,
                request: (0, $b19fb92a27e5f35f$exports.deepCopy)(request),
                provider: this
            });
            sendFunc(request, (error, response)=>{
                if (error) {
                    this.emit("debug", {
                        action: "response",
                        fetcher: fetcher,
                        error: error,
                        request: request,
                        provider: this
                    });
                    return reject(error);
                }
                this.emit("debug", {
                    action: "response",
                    fetcher: fetcher,
                    request: request,
                    response: response,
                    provider: this
                });
                if (response.error) {
                    const error = new Error(response.error.message);
                    error.code = response.error.code;
                    error.data = response.error.data;
                    return reject(error);
                }
                resolve(response.result);
            });
        });
    };
}
function $89c96b5cc4961dd5$var$buildEip1193Fetcher(provider) {
    return function(method, params) {
        if (params == null) params = [];
        const request = {
            method: method,
            params: params
        };
        this.emit("debug", {
            action: "request",
            fetcher: "Eip1193Fetcher",
            request: (0, $b19fb92a27e5f35f$exports.deepCopy)(request),
            provider: this
        });
        return provider.request(request).then((response)=>{
            this.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request: request,
                response: response,
                provider: this
            });
            return response;
        }, (error)=>{
            this.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request: request,
                error: error,
                provider: this
            });
            throw error;
        });
    };
}
class $89c96b5cc4961dd5$export$d05096c9fd9d936d extends (0, $7f2d24163dd74616$exports.JsonRpcProvider) {
    constructor(provider, network){
        if (provider == null) $89c96b5cc4961dd5$var$logger.throwArgumentError("missing provider", "provider", provider);
        let path = null;
        let jsonRpcFetchFunc = null;
        let subprovider = null;
        if (typeof provider === "function") {
            path = "unknown:";
            jsonRpcFetchFunc = provider;
        } else {
            path = provider.host || provider.path || "";
            if (!path && provider.isMetaMask) path = "metamask";
            subprovider = provider;
            if (provider.request) {
                if (path === "") path = "eip-1193:";
                jsonRpcFetchFunc = $89c96b5cc4961dd5$var$buildEip1193Fetcher(provider);
            } else if (provider.sendAsync) jsonRpcFetchFunc = $89c96b5cc4961dd5$var$buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));
            else if (provider.send) jsonRpcFetchFunc = $89c96b5cc4961dd5$var$buildWeb3LegacyFetcher(provider, provider.send.bind(provider));
            else $89c96b5cc4961dd5$var$logger.throwArgumentError("unsupported provider", "provider", provider);
            if (!path) path = "unknown:";
        }
        super(path, network);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "jsonRpcFetchFunc", jsonRpcFetchFunc);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "provider", subprovider);
    }
    send(method, params) {
        return this.jsonRpcFetchFunc(method, params);
    }
}





var $cbv61 = parcelRequire("cbv61");

"use strict";
const $7fc15fb0220a0397$var$logger = new (0, $cbv61.Logger)((0, $7d273a805b01cc1c$export$83d89fbfd8236492));
////////////////////////
// Helper Functions
function $7fc15fb0220a0397$export$4f77a1d3c1ac6642(network, options) {
    if (network == null) network = "homestead";
    // If passed a URL, figure out the right type of provider based on the scheme
    if (typeof network === "string") {
        // @TODO: Add support for IpcProvider; maybe if it ends in ".ipc"?
        // Handle http and ws (and their secure variants)
        const match = network.match(/^(ws|http)s?:/i);
        if (match) switch(match[1].toLowerCase()){
            case "http":
            case "https":
                return new (0, $7f2d24163dd74616$exports.JsonRpcProvider)(network);
            case "ws":
            case "wss":
                return new (0, $852e4865dd1a0824$exports.WebSocketProvider)(network);
            default:
                $7fc15fb0220a0397$var$logger.throwArgumentError("unsupported URL scheme", "network", network);
        }
    }
    const n = (0, $1c19460a5712cfcc$export$7de4970ebfd8206d)(network);
    if (!n || !n._defaultProvider) $7fc15fb0220a0397$var$logger.throwError("unsupported getDefaultProvider network", (0, $cbv61.Logger).errors.NETWORK_ERROR, {
        operation: "getDefaultProvider",
        network: network
    });
    return n._defaultProvider({
        FallbackProvider: $da3a7bd74daa9b73$exports.FallbackProvider,
        AlchemyProvider: $f2984339429a6468$export$999cc40da3fbc6f,
        AnkrProvider: $85fc28b257416515$export$72783b2aefa72a45,
        CloudflareProvider: $09e6347f3c9c6931$exports.CloudflareProvider,
        EtherscanProvider: $f5918f77586c5069$exports.EtherscanProvider,
        InfuraProvider: $f827a0cbfed8474e$export$60ff1a559b5c6ebd,
        JsonRpcProvider: $7f2d24163dd74616$exports.JsonRpcProvider,
        NodesmithProvider: $3b3efbf62d6a89cd$export$8235cbce3ce273bd,
        PocketProvider: $91da800566d01550$export$58bb47e42f6b092e,
        Web3Provider: $89c96b5cc4961dd5$export$d05096c9fd9d936d,
        IpcProvider: $a4adb2fbafa1b445$export$fbe151f90a1ece01
    }, options);
}


var $924b12823ef5c5c6$exports = {};
"use strict";
var $924b12823ef5c5c6$var$__createBinding = $924b12823ef5c5c6$exports && $924b12823ef5c5c6$exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var $924b12823ef5c5c6$var$__setModuleDefault = $924b12823ef5c5c6$exports && $924b12823ef5c5c6$exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var $924b12823ef5c5c6$var$__importStar = $924b12823ef5c5c6$exports && $924b12823ef5c5c6$exports.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) $924b12823ef5c5c6$var$__createBinding(result, mod, k);
    }
    $924b12823ef5c5c6$var$__setModuleDefault(result, mod);
    return result;
};
Object.defineProperty($924b12823ef5c5c6$exports, "__esModule", {
    value: true
});
$924b12823ef5c5c6$exports.formatBytes32String = $924b12823ef5c5c6$exports.Utf8ErrorFuncs = $924b12823ef5c5c6$exports.toUtf8String = $924b12823ef5c5c6$exports.toUtf8CodePoints = $924b12823ef5c5c6$exports.toUtf8Bytes = $924b12823ef5c5c6$exports._toEscapedUtf8String = $924b12823ef5c5c6$exports.nameprep = $924b12823ef5c5c6$exports.hexDataSlice = $924b12823ef5c5c6$exports.hexDataLength = $924b12823ef5c5c6$exports.hexZeroPad = $924b12823ef5c5c6$exports.hexValue = $924b12823ef5c5c6$exports.hexStripZeros = $924b12823ef5c5c6$exports.hexConcat = $924b12823ef5c5c6$exports.isHexString = $924b12823ef5c5c6$exports.hexlify = $924b12823ef5c5c6$exports.base64 = $924b12823ef5c5c6$exports.base58 = $924b12823ef5c5c6$exports.TransactionDescription = $924b12823ef5c5c6$exports.LogDescription = $924b12823ef5c5c6$exports.Interface = $924b12823ef5c5c6$exports.SigningKey = $924b12823ef5c5c6$exports.HDNode = $924b12823ef5c5c6$exports.defaultPath = $924b12823ef5c5c6$exports.isBytesLike = $924b12823ef5c5c6$exports.isBytes = $924b12823ef5c5c6$exports.zeroPad = $924b12823ef5c5c6$exports.stripZeros = $924b12823ef5c5c6$exports.concat = $924b12823ef5c5c6$exports.arrayify = $924b12823ef5c5c6$exports.shallowCopy = $924b12823ef5c5c6$exports.resolveProperties = $924b12823ef5c5c6$exports.getStatic = $924b12823ef5c5c6$exports.defineReadOnly = $924b12823ef5c5c6$exports.deepCopy = $924b12823ef5c5c6$exports.checkProperties = $924b12823ef5c5c6$exports.poll = $924b12823ef5c5c6$exports.fetchJson = $924b12823ef5c5c6$exports._fetchData = $924b12823ef5c5c6$exports.RLP = $924b12823ef5c5c6$exports.Logger = $924b12823ef5c5c6$exports.checkResultErrors = $924b12823ef5c5c6$exports.FormatTypes = $924b12823ef5c5c6$exports.ParamType = $924b12823ef5c5c6$exports.FunctionFragment = $924b12823ef5c5c6$exports.EventFragment = $924b12823ef5c5c6$exports.ErrorFragment = $924b12823ef5c5c6$exports.ConstructorFragment = $924b12823ef5c5c6$exports.Fragment = $924b12823ef5c5c6$exports.defaultAbiCoder = $924b12823ef5c5c6$exports.AbiCoder = void 0;
$924b12823ef5c5c6$exports.Indexed = $924b12823ef5c5c6$exports.Utf8ErrorReason = $924b12823ef5c5c6$exports.UnicodeNormalizationForm = $924b12823ef5c5c6$exports.SupportedAlgorithm = $924b12823ef5c5c6$exports.mnemonicToSeed = $924b12823ef5c5c6$exports.isValidMnemonic = $924b12823ef5c5c6$exports.entropyToMnemonic = $924b12823ef5c5c6$exports.mnemonicToEntropy = $924b12823ef5c5c6$exports.getAccountPath = $924b12823ef5c5c6$exports.verifyTypedData = $924b12823ef5c5c6$exports.verifyMessage = $924b12823ef5c5c6$exports.recoverPublicKey = $924b12823ef5c5c6$exports.computePublicKey = $924b12823ef5c5c6$exports.recoverAddress = $924b12823ef5c5c6$exports.computeAddress = $924b12823ef5c5c6$exports.getJsonWalletAddress = $924b12823ef5c5c6$exports.TransactionTypes = $924b12823ef5c5c6$exports.serializeTransaction = $924b12823ef5c5c6$exports.parseTransaction = $924b12823ef5c5c6$exports.accessListify = $924b12823ef5c5c6$exports.joinSignature = $924b12823ef5c5c6$exports.splitSignature = $924b12823ef5c5c6$exports.soliditySha256 = $924b12823ef5c5c6$exports.solidityKeccak256 = $924b12823ef5c5c6$exports.solidityPack = $924b12823ef5c5c6$exports.shuffled = $924b12823ef5c5c6$exports.randomBytes = $924b12823ef5c5c6$exports.sha512 = $924b12823ef5c5c6$exports.sha256 = $924b12823ef5c5c6$exports.ripemd160 = $924b12823ef5c5c6$exports.keccak256 = $924b12823ef5c5c6$exports.computeHmac = $924b12823ef5c5c6$exports.commify = $924b12823ef5c5c6$exports.parseUnits = $924b12823ef5c5c6$exports.formatUnits = $924b12823ef5c5c6$exports.parseEther = $924b12823ef5c5c6$exports.formatEther = $924b12823ef5c5c6$exports.isAddress = $924b12823ef5c5c6$exports.getCreate2Address = $924b12823ef5c5c6$exports.getContractAddress = $924b12823ef5c5c6$exports.getIcapAddress = $924b12823ef5c5c6$exports.getAddress = $924b12823ef5c5c6$exports._TypedDataEncoder = $924b12823ef5c5c6$exports.id = $924b12823ef5c5c6$exports.isValidName = $924b12823ef5c5c6$exports.namehash = $924b12823ef5c5c6$exports.hashMessage = $924b12823ef5c5c6$exports.dnsEncode = $924b12823ef5c5c6$exports.parseBytes32String = void 0;

var $eg8oT = parcelRequire("eg8oT");


var $cbv61 = parcelRequire("cbv61");
const $eb3800c4c51fb760$export$83d89fbfd8236492 = "abi/5.7.0";



var $eg8oT = parcelRequire("eg8oT");



var $cbv61 = parcelRequire("cbv61");

"use strict";
const $2454a6802fffcbc0$var$logger = new (0, $cbv61.Logger)((0, $eb3800c4c51fb760$export$83d89fbfd8236492));
function $2454a6802fffcbc0$export$5546b9ec21157cc2(result) {
    // Find the first error (if any)
    const errors = [];
    const checkErrors = function(path, object) {
        if (!Array.isArray(object)) return;
        for(let key in object){
            const childPath = path.slice();
            childPath.push(key);
            try {
                checkErrors(childPath, object[key]);
            } catch (error) {
                errors.push({
                    path: childPath,
                    error: error
                });
            }
        }
    };
    checkErrors([], result);
    return errors;
}
class $2454a6802fffcbc0$export$2c0c39526f8bad46 {
    constructor(name, type, localName, dynamic){
        // @TODO: defineReadOnly these
        this.name = name;
        this.type = type;
        this.localName = localName;
        this.dynamic = dynamic;
    }
    _throwError(message, value) {
        $2454a6802fffcbc0$var$logger.throwArgumentError(message, this.localName, value);
    }
}
class $2454a6802fffcbc0$export$d7a960146e1a269e {
    constructor(wordSize){
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "wordSize", wordSize || 32);
        this._data = [];
        this._dataLength = 0;
        this._padding = new Uint8Array(wordSize);
    }
    get data() {
        return (0, $eg8oT.hexConcat)(this._data);
    }
    get length() {
        return this._dataLength;
    }
    _writeData(data) {
        this._data.push(data);
        this._dataLength += data.length;
        return data.length;
    }
    appendWriter(writer) {
        return this._writeData((0, $eg8oT.concat)(writer._data));
    }
    // Arrayish items; padded on the right to wordSize
    writeBytes(value) {
        let bytes = (0, $eg8oT.arrayify)(value);
        const paddingOffset = bytes.length % this.wordSize;
        if (paddingOffset) bytes = (0, $eg8oT.concat)([
            bytes,
            this._padding.slice(paddingOffset)
        ]);
        return this._writeData(bytes);
    }
    _getValue(value) {
        let bytes = (0, $eg8oT.arrayify)((0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value));
        if (bytes.length > this.wordSize) $2454a6802fffcbc0$var$logger.throwError("value out-of-bounds", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {
            length: this.wordSize,
            offset: bytes.length
        });
        if (bytes.length % this.wordSize) bytes = (0, $eg8oT.concat)([
            this._padding.slice(bytes.length % this.wordSize),
            bytes
        ]);
        return bytes;
    }
    // BigNumberish items; padded on the left to wordSize
    writeValue(value) {
        return this._writeData(this._getValue(value));
    }
    writeUpdatableValue() {
        const offset = this._data.length;
        this._data.push(this._padding);
        this._dataLength += this.wordSize;
        return (value)=>{
            this._data[offset] = this._getValue(value);
        };
    }
}
class $2454a6802fffcbc0$export$2f7a2f0e90c07dc4 {
    constructor(data, wordSize, coerceFunc, allowLoose){
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_data", (0, $eg8oT.arrayify)(data));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "wordSize", wordSize || 32);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_coerceFunc", coerceFunc);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "allowLoose", allowLoose);
        this._offset = 0;
    }
    get data() {
        return (0, $eg8oT.hexlify)(this._data);
    }
    get consumed() {
        return this._offset;
    }
    // The default Coerce function
    static coerce(name, value) {
        let match = name.match("^u?int([0-9]+)$");
        if (match && parseInt(match[1]) <= 48) value = value.toNumber();
        return value;
    }
    coerce(name, value) {
        if (this._coerceFunc) return this._coerceFunc(name, value);
        return $2454a6802fffcbc0$export$2f7a2f0e90c07dc4.coerce(name, value);
    }
    _peekBytes(offset, length, loose) {
        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;
        if (this._offset + alignedLength > this._data.length) {
            if (this.allowLoose && loose && this._offset + length <= this._data.length) alignedLength = length;
            else $2454a6802fffcbc0$var$logger.throwError("data out-of-bounds", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {
                length: this._data.length,
                offset: this._offset + alignedLength
            });
        }
        return this._data.slice(this._offset, this._offset + alignedLength);
    }
    subReader(offset) {
        return new $2454a6802fffcbc0$export$2f7a2f0e90c07dc4(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);
    }
    readBytes(length, loose) {
        let bytes = this._peekBytes(0, length, !!loose);
        this._offset += bytes.length;
        // @TODO: Make sure the length..end bytes are all 0?
        return bytes.slice(0, length);
    }
    readValue() {
        return (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(this.readBytes(this.wordSize));
    }
}




var $eg8oT = parcelRequire("eg8oT");

"use strict";
class $68078d96cbfbd808$export$59dbbded7775bfe7 extends (0, $2454a6802fffcbc0$export$2c0c39526f8bad46) {
    constructor(localName){
        super("address", "address", localName, false);
    }
    defaultValue() {
        return "0x0000000000000000000000000000000000000000";
    }
    encode(writer, value) {
        try {
            value = (0, $8b38701037b2e5d8$export$88411125f012957a)(value);
        } catch (error) {
            this._throwError(error.message, value);
        }
        return writer.writeValue(value);
    }
    decode(reader) {
        return (0, $8b38701037b2e5d8$export$88411125f012957a)((0, $eg8oT.hexZeroPad)(reader.readValue().toHexString(), 20));
    }
}



var $cbv61 = parcelRequire("cbv61");



"use strict";
class $9be3829fbaa1e20b$export$87c41d1139a03fa2 extends (0, $2454a6802fffcbc0$export$2c0c39526f8bad46) {
    constructor(coder){
        super(coder.name, coder.type, undefined, coder.dynamic);
        this.coder = coder;
    }
    defaultValue() {
        return this.coder.defaultValue();
    }
    encode(writer, value) {
        return this.coder.encode(writer, value);
    }
    decode(reader) {
        return this.coder.decode(reader);
    }
}


"use strict";
const $cb0aaca9d38e413d$var$logger = new (0, $cbv61.Logger)((0, $eb3800c4c51fb760$export$83d89fbfd8236492));
function $cb0aaca9d38e413d$export$2a703dbb0cb35339(writer, coders, values) {
    let arrayValues = null;
    if (Array.isArray(values)) arrayValues = values;
    else if (values && typeof values === "object") {
        let unique = {};
        arrayValues = coders.map((coder)=>{
            const name = coder.localName;
            if (!name) $cb0aaca9d38e413d$var$logger.throwError("cannot encode object for signature with missing names", (0, $cbv61.Logger).errors.INVALID_ARGUMENT, {
                argument: "values",
                coder: coder,
                value: values
            });
            if (unique[name]) $cb0aaca9d38e413d$var$logger.throwError("cannot encode object for signature with duplicate names", (0, $cbv61.Logger).errors.INVALID_ARGUMENT, {
                argument: "values",
                coder: coder,
                value: values
            });
            unique[name] = true;
            return values[name];
        });
    } else $cb0aaca9d38e413d$var$logger.throwArgumentError("invalid tuple value", "tuple", values);
    if (coders.length !== arrayValues.length) $cb0aaca9d38e413d$var$logger.throwArgumentError("types/value length mismatch", "tuple", values);
    let staticWriter = new (0, $2454a6802fffcbc0$export$d7a960146e1a269e)(writer.wordSize);
    let dynamicWriter = new (0, $2454a6802fffcbc0$export$d7a960146e1a269e)(writer.wordSize);
    let updateFuncs = [];
    coders.forEach((coder, index)=>{
        let value = arrayValues[index];
        if (coder.dynamic) {
            // Get current dynamic offset (for the future pointer)
            let dynamicOffset = dynamicWriter.length;
            // Encode the dynamic value into the dynamicWriter
            coder.encode(dynamicWriter, value);
            // Prepare to populate the correct offset once we are done
            let updateFunc = staticWriter.writeUpdatableValue();
            updateFuncs.push((baseOffset)=>{
                updateFunc(baseOffset + dynamicOffset);
            });
        } else coder.encode(staticWriter, value);
    });
    // Backfill all the dynamic offsets, now that we know the static length
    updateFuncs.forEach((func)=>{
        func(staticWriter.length);
    });
    let length = writer.appendWriter(staticWriter);
    length += writer.appendWriter(dynamicWriter);
    return length;
}
function $cb0aaca9d38e413d$export$417857010dc9287f(reader, coders) {
    let values = [];
    // A reader anchored to this base
    let baseReader = reader.subReader(0);
    coders.forEach((coder)=>{
        let value = null;
        if (coder.dynamic) {
            let offset = reader.readValue();
            let offsetReader = baseReader.subReader(offset.toNumber());
            try {
                value = coder.decode(offsetReader);
            } catch (error) {
                // Cannot recover from this
                if (error.code === (0, $cbv61.Logger).errors.BUFFER_OVERRUN) throw error;
                value = error;
                value.baseType = coder.name;
                value.name = coder.localName;
                value.type = coder.type;
            }
        } else try {
            value = coder.decode(reader);
        } catch (error) {
            // Cannot recover from this
            if (error.code === (0, $cbv61.Logger).errors.BUFFER_OVERRUN) throw error;
            value = error;
            value.baseType = coder.name;
            value.name = coder.localName;
            value.type = coder.type;
        }
        if (value != undefined) values.push(value);
    });
    // We only output named properties for uniquely named coders
    const uniqueNames = coders.reduce((accum, coder)=>{
        const name = coder.localName;
        if (name) {
            if (!accum[name]) accum[name] = 0;
            accum[name]++;
        }
        return accum;
    }, {});
    // Add any named parameters (i.e. tuples)
    coders.forEach((coder, index)=>{
        let name = coder.localName;
        if (!name || uniqueNames[name] !== 1) return;
        if (name === "length") name = "_length";
        if (values[name] != null) return;
        const value = values[index];
        if (value instanceof Error) Object.defineProperty(values, name, {
            enumerable: true,
            get: ()=>{
                throw value;
            }
        });
        else values[name] = value;
    });
    for(let i = 0; i < values.length; i++){
        const value = values[i];
        if (value instanceof Error) Object.defineProperty(values, i, {
            enumerable: true,
            get: ()=>{
                throw value;
            }
        });
    }
    return Object.freeze(values);
}
class $cb0aaca9d38e413d$export$88bc419d2df11f54 extends (0, $2454a6802fffcbc0$export$2c0c39526f8bad46) {
    constructor(coder, length, localName){
        const type = coder.type + "[" + (length >= 0 ? length : "") + "]";
        const dynamic = length === -1 || coder.dynamic;
        super("array", type, localName, dynamic);
        this.coder = coder;
        this.length = length;
    }
    defaultValue() {
        // Verifies the child coder is valid (even if the array is dynamic or 0-length)
        const defaultChild = this.coder.defaultValue();
        const result = [];
        for(let i = 0; i < this.length; i++)result.push(defaultChild);
        return result;
    }
    encode(writer, value) {
        if (!Array.isArray(value)) this._throwError("expected array value", value);
        let count = this.length;
        if (count === -1) {
            count = value.length;
            writer.writeValue(value.length);
        }
        $cb0aaca9d38e413d$var$logger.checkArgumentCount(value.length, count, "coder array" + (this.localName ? " " + this.localName : ""));
        let coders = [];
        for(let i = 0; i < value.length; i++)coders.push(this.coder);
        return $cb0aaca9d38e413d$export$2a703dbb0cb35339(writer, coders, value);
    }
    decode(reader) {
        let count = this.length;
        if (count === -1) {
            count = reader.readValue().toNumber();
            // Check that there is *roughly* enough data to ensure
            // stray random data is not being read as a length. Each
            // slot requires at least 32 bytes for their value (or 32
            // bytes as a link to the data). This could use a much
            // tighter bound, but we are erroring on the side of safety.
            if (count * 32 > reader._data.length) $cb0aaca9d38e413d$var$logger.throwError("insufficient data length", (0, $cbv61.Logger).errors.BUFFER_OVERRUN, {
                length: reader._data.length,
                count: count
            });
        }
        let coders = [];
        for(let i = 0; i < count; i++)coders.push(new (0, $9be3829fbaa1e20b$export$87c41d1139a03fa2)(this.coder));
        return reader.coerce(this.name, $cb0aaca9d38e413d$export$417857010dc9287f(reader, coders));
    }
}



"use strict";
class $a8d7e82c0ddc4c58$export$fe9118d6c093150c extends (0, $2454a6802fffcbc0$export$2c0c39526f8bad46) {
    constructor(localName){
        super("bool", "bool", localName, false);
    }
    defaultValue() {
        return false;
    }
    encode(writer, value) {
        return writer.writeValue(value ? 1 : 0);
    }
    decode(reader) {
        return reader.coerce(this.type, !reader.readValue().isZero());
    }
}



var $eg8oT = parcelRequire("eg8oT");

"use strict";
class $3f21ccdb0eeabf9c$export$db9eadd8df12ad2e extends (0, $2454a6802fffcbc0$export$2c0c39526f8bad46) {
    constructor(type, localName){
        super(type, type, localName, true);
    }
    defaultValue() {
        return "0x";
    }
    encode(writer, value) {
        value = (0, $eg8oT.arrayify)(value);
        let length = writer.writeValue(value.length);
        length += writer.writeBytes(value);
        return length;
    }
    decode(reader) {
        return reader.readBytes(reader.readValue().toNumber(), true);
    }
}
class $3f21ccdb0eeabf9c$export$e5823e9574df18d2 extends $3f21ccdb0eeabf9c$export$db9eadd8df12ad2e {
    constructor(localName){
        super("bytes", localName);
    }
    decode(reader) {
        return reader.coerce(this.name, (0, $eg8oT.hexlify)(super.decode(reader)));
    }
}



var $eg8oT = parcelRequire("eg8oT");

"use strict";
class $87f468684cd10d0e$export$7dec9db68e6bcf5a extends (0, $2454a6802fffcbc0$export$2c0c39526f8bad46) {
    constructor(size, localName){
        let name = "bytes" + String(size);
        super(name, name, localName, false);
        this.size = size;
    }
    defaultValue() {
        return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + this.size * 2);
    }
    encode(writer, value) {
        let data = (0, $eg8oT.arrayify)(value);
        if (data.length !== this.size) this._throwError("incorrect data length", value);
        return writer.writeBytes(data);
    }
    decode(reader) {
        return reader.coerce(this.name, (0, $eg8oT.hexlify)(reader.readBytes(this.size)));
    }
}



"use strict";
class $994dc899eb91739f$export$70982cadf2d6b4ec extends (0, $2454a6802fffcbc0$export$2c0c39526f8bad46) {
    constructor(localName){
        super("null", "", localName, false);
    }
    defaultValue() {
        return null;
    }
    encode(writer, value) {
        if (value != null) this._throwError("not null", value);
        return writer.writeBytes([]);
    }
    decode(reader) {
        reader.readBytes(0);
        return reader.coerce(this.name, null);
    }
}





"use strict";
class $e08e3857493562d4$export$b934dc8cfe13938c extends (0, $2454a6802fffcbc0$export$2c0c39526f8bad46) {
    constructor(size, signed, localName){
        const name = (signed ? "int" : "uint") + size * 8;
        super(name, name, localName, false);
        this.size = size;
        this.signed = signed;
    }
    defaultValue() {
        return 0;
    }
    encode(writer, value) {
        let v = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value);
        // Check bounds are safe for encoding
        let maxUintValue = (0, $5fc7f78f7b47b638$export$1b53890de5aabdd0).mask(writer.wordSize * 8);
        if (this.signed) {
            let bounds = maxUintValue.mask(this.size * 8 - 1);
            if (v.gt(bounds) || v.lt(bounds.add((0, $5fc7f78f7b47b638$export$9aa05a5866350bcf)).mul((0, $5fc7f78f7b47b638$export$c83ef0909a6ddeec)))) this._throwError("value out-of-bounds", value);
        } else if (v.lt((0, $5fc7f78f7b47b638$export$aaef8a3eae948f03)) || v.gt(maxUintValue.mask(this.size * 8))) this._throwError("value out-of-bounds", value);
        v = v.toTwos(this.size * 8).mask(this.size * 8);
        if (this.signed) v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);
        return writer.writeValue(v);
    }
    decode(reader) {
        let value = reader.readValue().mask(this.size * 8);
        if (this.signed) value = value.fromTwos(this.size * 8);
        return reader.coerce(this.name, value);
    }
}




"use strict";
class $3106a1f9775d2fda$export$2d1b854518731426 extends (0, $3f21ccdb0eeabf9c$export$db9eadd8df12ad2e) {
    constructor(localName){
        super("string", localName);
    }
    defaultValue() {
        return "";
    }
    encode(writer, value) {
        return super.encode(writer, (0, $cde319f07c8777da$export$8feeb310b4b4752f)(value));
    }
    decode(reader) {
        return (0, $cde319f07c8777da$export$7643a1dc2c38d5eb)(super.decode(reader));
    }
}




"use strict";
class $de5a0fc1ab30d584$export$e9fceba8f110fea6 extends (0, $2454a6802fffcbc0$export$2c0c39526f8bad46) {
    constructor(coders, localName){
        let dynamic = false;
        const types = [];
        coders.forEach((coder)=>{
            if (coder.dynamic) dynamic = true;
            types.push(coder.type);
        });
        const type = "tuple(" + types.join(",") + ")";
        super("tuple", type, localName, dynamic);
        this.coders = coders;
    }
    defaultValue() {
        const values = [];
        this.coders.forEach((coder)=>{
            values.push(coder.defaultValue());
        });
        // We only output named properties for uniquely named coders
        const uniqueNames = this.coders.reduce((accum, coder)=>{
            const name = coder.localName;
            if (name) {
                if (!accum[name]) accum[name] = 0;
                accum[name]++;
            }
            return accum;
        }, {});
        // Add named values
        this.coders.forEach((coder, index)=>{
            let name = coder.localName;
            if (!name || uniqueNames[name] !== 1) return;
            if (name === "length") name = "_length";
            if (values[name] != null) return;
            values[name] = values[index];
        });
        return Object.freeze(values);
    }
    encode(writer, value) {
        return (0, $cb0aaca9d38e413d$export$2a703dbb0cb35339)(writer, this.coders, value);
    }
    decode(reader) {
        return reader.coerce(this.name, (0, $cb0aaca9d38e413d$export$417857010dc9287f)(reader, this.coders));
    }
}





var $cbv61 = parcelRequire("cbv61");

"use strict";
const $9af6cffdb407df48$var$logger = new (0, $cbv61.Logger)((0, $eb3800c4c51fb760$export$83d89fbfd8236492));
const $9af6cffdb407df48$var$_constructorGuard = {};
let $9af6cffdb407df48$var$ModifiersBytes = {
    calldata: true,
    memory: true,
    storage: true
};
let $9af6cffdb407df48$var$ModifiersNest = {
    calldata: true,
    memory: true
};
function $9af6cffdb407df48$var$checkModifier(type, name) {
    if (type === "bytes" || type === "string") {
        if ($9af6cffdb407df48$var$ModifiersBytes[name]) return true;
    } else if (type === "address") {
        if (name === "payable") return true;
    } else if (type.indexOf("[") >= 0 || type === "tuple") {
        if ($9af6cffdb407df48$var$ModifiersNest[name]) return true;
    }
    if ($9af6cffdb407df48$var$ModifiersBytes[name] || name === "payable") $9af6cffdb407df48$var$logger.throwArgumentError("invalid modifier", "name", name);
    return false;
}
// @TODO: Make sure that children of an indexed tuple are marked with a null indexed
function $9af6cffdb407df48$var$parseParamType(param, allowIndexed) {
    let originalParam = param;
    function throwError(i) {
        $9af6cffdb407df48$var$logger.throwArgumentError(`unexpected character at position ${i}`, "param", param);
    }
    param = param.replace(/\s/g, " ");
    function newNode(parent) {
        let node = {
            type: "",
            name: "",
            parent: parent,
            state: {
                allowType: true
            }
        };
        if (allowIndexed) node.indexed = false;
        return node;
    }
    let parent = {
        type: "",
        name: "",
        state: {
            allowType: true
        }
    };
    let node = parent;
    for(let i = 0; i < param.length; i++){
        let c = param[i];
        switch(c){
            case "(":
                if (node.state.allowType && node.type === "") node.type = "tuple";
                else if (!node.state.allowParams) throwError(i);
                node.state.allowType = false;
                node.type = $9af6cffdb407df48$var$verifyType(node.type);
                node.components = [
                    newNode(node)
                ];
                node = node.components[0];
                break;
            case ")":
                delete node.state;
                if (node.name === "indexed") {
                    if (!allowIndexed) throwError(i);
                    node.indexed = true;
                    node.name = "";
                }
                if ($9af6cffdb407df48$var$checkModifier(node.type, node.name)) node.name = "";
                node.type = $9af6cffdb407df48$var$verifyType(node.type);
                let child = node;
                node = node.parent;
                if (!node) throwError(i);
                delete child.parent;
                node.state.allowParams = false;
                node.state.allowName = true;
                node.state.allowArray = true;
                break;
            case ",":
                delete node.state;
                if (node.name === "indexed") {
                    if (!allowIndexed) throwError(i);
                    node.indexed = true;
                    node.name = "";
                }
                if ($9af6cffdb407df48$var$checkModifier(node.type, node.name)) node.name = "";
                node.type = $9af6cffdb407df48$var$verifyType(node.type);
                let sibling = newNode(node.parent);
                //{ type: "", name: "", parent: node.parent, state: { allowType: true } };
                node.parent.components.push(sibling);
                delete node.parent;
                node = sibling;
                break;
            // Hit a space...
            case " ":
                // If reading type, the type is done and may read a param or name
                if (node.state.allowType) {
                    if (node.type !== "") {
                        node.type = $9af6cffdb407df48$var$verifyType(node.type);
                        delete node.state.allowType;
                        node.state.allowName = true;
                        node.state.allowParams = true;
                    }
                }
                // If reading name, the name is done
                if (node.state.allowName) {
                    if (node.name !== "") {
                        if (node.name === "indexed") {
                            if (!allowIndexed) throwError(i);
                            if (node.indexed) throwError(i);
                            node.indexed = true;
                            node.name = "";
                        } else if ($9af6cffdb407df48$var$checkModifier(node.type, node.name)) node.name = "";
                        else node.state.allowName = false;
                    }
                }
                break;
            case "[":
                if (!node.state.allowArray) throwError(i);
                node.type += c;
                node.state.allowArray = false;
                node.state.allowName = false;
                node.state.readArray = true;
                break;
            case "]":
                if (!node.state.readArray) throwError(i);
                node.type += c;
                node.state.readArray = false;
                node.state.allowArray = true;
                node.state.allowName = true;
                break;
            default:
                if (node.state.allowType) {
                    node.type += c;
                    node.state.allowParams = true;
                    node.state.allowArray = true;
                } else if (node.state.allowName) {
                    node.name += c;
                    delete node.state.allowArray;
                } else if (node.state.readArray) node.type += c;
                else throwError(i);
        }
    }
    if (node.parent) $9af6cffdb407df48$var$logger.throwArgumentError("unexpected eof", "param", param);
    delete parent.state;
    if (node.name === "indexed") {
        if (!allowIndexed) throwError(originalParam.length - 7);
        if (node.indexed) throwError(originalParam.length - 7);
        node.indexed = true;
        node.name = "";
    } else if ($9af6cffdb407df48$var$checkModifier(node.type, node.name)) node.name = "";
    parent.type = $9af6cffdb407df48$var$verifyType(parent.type);
    return parent;
}
function $9af6cffdb407df48$var$populate(object, params) {
    for(let key in params)(0, $b19fb92a27e5f35f$exports.defineReadOnly)(object, key, params[key]);
}
const $9af6cffdb407df48$export$f010f239efc4d445 = Object.freeze({
    // Bare formatting, as is needed for computing a sighash of an event or function
    sighash: "sighash",
    // Human-Readable with Minimal spacing and without names (compact human-readable)
    minimal: "minimal",
    // Human-Readable with nice spacing, including all names
    full: "full",
    // JSON-format a la Solidity
    json: "json"
});
const $9af6cffdb407df48$var$paramTypeArray = new RegExp(/^(.*)\[([0-9]*)\]$/);
class $9af6cffdb407df48$export$426dc07f493a4c47 {
    constructor(constructorGuard, params){
        if (constructorGuard !== $9af6cffdb407df48$var$_constructorGuard) $9af6cffdb407df48$var$logger.throwError("use fromString", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "new ParamType()"
        });
        $9af6cffdb407df48$var$populate(this, params);
        let match = this.type.match($9af6cffdb407df48$var$paramTypeArray);
        if (match) $9af6cffdb407df48$var$populate(this, {
            arrayLength: parseInt(match[2] || "-1"),
            arrayChildren: $9af6cffdb407df48$export$426dc07f493a4c47.fromObject({
                type: match[1],
                components: this.components
            }),
            baseType: "array"
        });
        else $9af6cffdb407df48$var$populate(this, {
            arrayLength: null,
            arrayChildren: null,
            baseType: this.components != null ? "tuple" : this.type
        });
        this._isParamType = true;
        Object.freeze(this);
    }
    // Format the parameter fragment
    //   - sighash: "(uint256,address)"
    //   - minimal: "tuple(uint256,address) indexed"
    //   - full:    "tuple(uint256 foo, address bar) indexed baz"
    format(format) {
        if (!format) format = $9af6cffdb407df48$export$f010f239efc4d445.sighash;
        if (!$9af6cffdb407df48$export$f010f239efc4d445[format]) $9af6cffdb407df48$var$logger.throwArgumentError("invalid format type", "format", format);
        if (format === $9af6cffdb407df48$export$f010f239efc4d445.json) {
            let result = {
                type: this.baseType === "tuple" ? "tuple" : this.type,
                name: this.name || undefined
            };
            if (typeof this.indexed === "boolean") result.indexed = this.indexed;
            if (this.components) result.components = this.components.map((comp)=>JSON.parse(comp.format(format)));
            return JSON.stringify(result);
        }
        let result = "";
        // Array
        if (this.baseType === "array") {
            result += this.arrayChildren.format(format);
            result += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]";
        } else if (this.baseType === "tuple") {
            if (format !== $9af6cffdb407df48$export$f010f239efc4d445.sighash) result += this.type;
            result += "(" + this.components.map((comp)=>comp.format(format)).join(format === $9af6cffdb407df48$export$f010f239efc4d445.full ? ", " : ",") + ")";
        } else result += this.type;
        if (format !== $9af6cffdb407df48$export$f010f239efc4d445.sighash) {
            if (this.indexed === true) result += " indexed";
            if (format === $9af6cffdb407df48$export$f010f239efc4d445.full && this.name) result += " " + this.name;
        }
        return result;
    }
    static from(value, allowIndexed) {
        if (typeof value === "string") return $9af6cffdb407df48$export$426dc07f493a4c47.fromString(value, allowIndexed);
        return $9af6cffdb407df48$export$426dc07f493a4c47.fromObject(value);
    }
    static fromObject(value) {
        if ($9af6cffdb407df48$export$426dc07f493a4c47.isParamType(value)) return value;
        return new $9af6cffdb407df48$export$426dc07f493a4c47($9af6cffdb407df48$var$_constructorGuard, {
            name: value.name || null,
            type: $9af6cffdb407df48$var$verifyType(value.type),
            indexed: value.indexed == null ? null : !!value.indexed,
            components: value.components ? value.components.map($9af6cffdb407df48$export$426dc07f493a4c47.fromObject) : null
        });
    }
    static fromString(value, allowIndexed) {
        function ParamTypify(node) {
            return $9af6cffdb407df48$export$426dc07f493a4c47.fromObject({
                name: node.name,
                type: node.type,
                indexed: node.indexed,
                components: node.components
            });
        }
        return ParamTypify($9af6cffdb407df48$var$parseParamType(value, !!allowIndexed));
    }
    static isParamType(value) {
        return !!(value != null && value._isParamType);
    }
}
function $9af6cffdb407df48$var$parseParams(value, allowIndex) {
    return $9af6cffdb407df48$var$splitNesting(value).map((param)=>$9af6cffdb407df48$export$426dc07f493a4c47.fromString(param, allowIndex));
}
class $9af6cffdb407df48$export$ffb0004e005737fa {
    constructor(constructorGuard, params){
        if (constructorGuard !== $9af6cffdb407df48$var$_constructorGuard) $9af6cffdb407df48$var$logger.throwError("use a static from method", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "new Fragment()"
        });
        $9af6cffdb407df48$var$populate(this, params);
        this._isFragment = true;
        Object.freeze(this);
    }
    static from(value) {
        if ($9af6cffdb407df48$export$ffb0004e005737fa.isFragment(value)) return value;
        if (typeof value === "string") return $9af6cffdb407df48$export$ffb0004e005737fa.fromString(value);
        return $9af6cffdb407df48$export$ffb0004e005737fa.fromObject(value);
    }
    static fromObject(value) {
        if ($9af6cffdb407df48$export$ffb0004e005737fa.isFragment(value)) return value;
        switch(value.type){
            case "function":
                return $9af6cffdb407df48$export$8d576c928b93668f.fromObject(value);
            case "event":
                return $9af6cffdb407df48$export$958548f08bac2833.fromObject(value);
            case "constructor":
                return $9af6cffdb407df48$export$3ac5c9504f801ea4.fromObject(value);
            case "error":
                return $9af6cffdb407df48$export$2c42c6d543aa9b59.fromObject(value);
            case "fallback":
            case "receive":
                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?
                return null;
        }
        return $9af6cffdb407df48$var$logger.throwArgumentError("invalid fragment object", "value", value);
    }
    static fromString(value) {
        // Make sure the "returns" is surrounded by a space and all whitespace is exactly one space
        value = value.replace(/\s/g, " ");
        value = value.replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ");
        value = value.trim();
        if (value.split(" ")[0] === "event") return $9af6cffdb407df48$export$958548f08bac2833.fromString(value.substring(5).trim());
        else if (value.split(" ")[0] === "function") return $9af6cffdb407df48$export$8d576c928b93668f.fromString(value.substring(8).trim());
        else if (value.split("(")[0].trim() === "constructor") return $9af6cffdb407df48$export$3ac5c9504f801ea4.fromString(value.trim());
        else if (value.split(" ")[0] === "error") return $9af6cffdb407df48$export$2c42c6d543aa9b59.fromString(value.substring(5).trim());
        return $9af6cffdb407df48$var$logger.throwArgumentError("unsupported fragment", "value", value);
    }
    static isFragment(value) {
        return !!(value && value._isFragment);
    }
}
class $9af6cffdb407df48$export$958548f08bac2833 extends $9af6cffdb407df48$export$ffb0004e005737fa {
    format(format) {
        if (!format) format = $9af6cffdb407df48$export$f010f239efc4d445.sighash;
        if (!$9af6cffdb407df48$export$f010f239efc4d445[format]) $9af6cffdb407df48$var$logger.throwArgumentError("invalid format type", "format", format);
        if (format === $9af6cffdb407df48$export$f010f239efc4d445.json) return JSON.stringify({
            type: "event",
            anonymous: this.anonymous,
            name: this.name,
            inputs: this.inputs.map((input)=>JSON.parse(input.format(format)))
        });
        let result = "";
        if (format !== $9af6cffdb407df48$export$f010f239efc4d445.sighash) result += "event ";
        result += this.name + "(" + this.inputs.map((input)=>input.format(format)).join(format === $9af6cffdb407df48$export$f010f239efc4d445.full ? ", " : ",") + ") ";
        if (format !== $9af6cffdb407df48$export$f010f239efc4d445.sighash) {
            if (this.anonymous) result += "anonymous ";
        }
        return result.trim();
    }
    static from(value) {
        if (typeof value === "string") return $9af6cffdb407df48$export$958548f08bac2833.fromString(value);
        return $9af6cffdb407df48$export$958548f08bac2833.fromObject(value);
    }
    static fromObject(value) {
        if ($9af6cffdb407df48$export$958548f08bac2833.isEventFragment(value)) return value;
        if (value.type !== "event") $9af6cffdb407df48$var$logger.throwArgumentError("invalid event object", "value", value);
        const params = {
            name: $9af6cffdb407df48$var$verifyIdentifier(value.name),
            anonymous: value.anonymous,
            inputs: value.inputs ? value.inputs.map($9af6cffdb407df48$export$426dc07f493a4c47.fromObject) : [],
            type: "event"
        };
        return new $9af6cffdb407df48$export$958548f08bac2833($9af6cffdb407df48$var$_constructorGuard, params);
    }
    static fromString(value) {
        let match = value.match($9af6cffdb407df48$var$regexParen);
        if (!match) $9af6cffdb407df48$var$logger.throwArgumentError("invalid event string", "value", value);
        let anonymous = false;
        match[3].split(" ").forEach((modifier)=>{
            switch(modifier.trim()){
                case "anonymous":
                    anonymous = true;
                    break;
                case "":
                    break;
                default:
                    $9af6cffdb407df48$var$logger.warn("unknown modifier: " + modifier);
            }
        });
        return $9af6cffdb407df48$export$958548f08bac2833.fromObject({
            name: match[1].trim(),
            anonymous: anonymous,
            inputs: $9af6cffdb407df48$var$parseParams(match[2], true),
            type: "event"
        });
    }
    static isEventFragment(value) {
        return value && value._isFragment && value.type === "event";
    }
}
function $9af6cffdb407df48$var$parseGas(value, params) {
    params.gas = null;
    let comps = value.split("@");
    if (comps.length !== 1) {
        if (comps.length > 2) $9af6cffdb407df48$var$logger.throwArgumentError("invalid human-readable ABI signature", "value", value);
        if (!comps[1].match(/^[0-9]+$/)) $9af6cffdb407df48$var$logger.throwArgumentError("invalid human-readable ABI signature gas", "value", value);
        params.gas = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(comps[1]);
        return comps[0];
    }
    return value;
}
function $9af6cffdb407df48$var$parseModifiers(value, params) {
    params.constant = false;
    params.payable = false;
    params.stateMutability = "nonpayable";
    value.split(" ").forEach((modifier)=>{
        switch(modifier.trim()){
            case "constant":
                params.constant = true;
                break;
            case "payable":
                params.payable = true;
                params.stateMutability = "payable";
                break;
            case "nonpayable":
                params.payable = false;
                params.stateMutability = "nonpayable";
                break;
            case "pure":
                params.constant = true;
                params.stateMutability = "pure";
                break;
            case "view":
                params.constant = true;
                params.stateMutability = "view";
                break;
            case "external":
            case "public":
            case "":
                break;
            default:
                console.log("unknown modifier: " + modifier);
        }
    });
}
function $9af6cffdb407df48$var$verifyState(value) {
    let result = {
        constant: false,
        payable: true,
        stateMutability: "payable"
    };
    if (value.stateMutability != null) {
        result.stateMutability = value.stateMutability;
        // Set (and check things are consistent) the constant property
        result.constant = result.stateMutability === "view" || result.stateMutability === "pure";
        if (value.constant != null) {
            if (!!value.constant !== result.constant) $9af6cffdb407df48$var$logger.throwArgumentError("cannot have constant function with mutability " + result.stateMutability, "value", value);
        }
        // Set (and check things are consistent) the payable property
        result.payable = result.stateMutability === "payable";
        if (value.payable != null) {
            if (!!value.payable !== result.payable) $9af6cffdb407df48$var$logger.throwArgumentError("cannot have payable function with mutability " + result.stateMutability, "value", value);
        }
    } else if (value.payable != null) {
        result.payable = !!value.payable;
        // If payable we can assume non-constant; otherwise we can't assume
        if (value.constant == null && !result.payable && value.type !== "constructor") $9af6cffdb407df48$var$logger.throwArgumentError("unable to determine stateMutability", "value", value);
        result.constant = !!value.constant;
        if (result.constant) result.stateMutability = "view";
        else result.stateMutability = result.payable ? "payable" : "nonpayable";
        if (result.payable && result.constant) $9af6cffdb407df48$var$logger.throwArgumentError("cannot have constant payable function", "value", value);
    } else if (value.constant != null) {
        result.constant = !!value.constant;
        result.payable = !result.constant;
        result.stateMutability = result.constant ? "view" : "payable";
    } else if (value.type !== "constructor") $9af6cffdb407df48$var$logger.throwArgumentError("unable to determine stateMutability", "value", value);
    return result;
}
class $9af6cffdb407df48$export$3ac5c9504f801ea4 extends $9af6cffdb407df48$export$ffb0004e005737fa {
    format(format) {
        if (!format) format = $9af6cffdb407df48$export$f010f239efc4d445.sighash;
        if (!$9af6cffdb407df48$export$f010f239efc4d445[format]) $9af6cffdb407df48$var$logger.throwArgumentError("invalid format type", "format", format);
        if (format === $9af6cffdb407df48$export$f010f239efc4d445.json) return JSON.stringify({
            type: "constructor",
            stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : undefined,
            payable: this.payable,
            gas: this.gas ? this.gas.toNumber() : undefined,
            inputs: this.inputs.map((input)=>JSON.parse(input.format(format)))
        });
        if (format === $9af6cffdb407df48$export$f010f239efc4d445.sighash) $9af6cffdb407df48$var$logger.throwError("cannot format a constructor for sighash", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "format(sighash)"
        });
        let result = "constructor(" + this.inputs.map((input)=>input.format(format)).join(format === $9af6cffdb407df48$export$f010f239efc4d445.full ? ", " : ",") + ") ";
        if (this.stateMutability && this.stateMutability !== "nonpayable") result += this.stateMutability + " ";
        return result.trim();
    }
    static from(value) {
        if (typeof value === "string") return $9af6cffdb407df48$export$3ac5c9504f801ea4.fromString(value);
        return $9af6cffdb407df48$export$3ac5c9504f801ea4.fromObject(value);
    }
    static fromObject(value) {
        if ($9af6cffdb407df48$export$3ac5c9504f801ea4.isConstructorFragment(value)) return value;
        if (value.type !== "constructor") $9af6cffdb407df48$var$logger.throwArgumentError("invalid constructor object", "value", value);
        let state = $9af6cffdb407df48$var$verifyState(value);
        if (state.constant) $9af6cffdb407df48$var$logger.throwArgumentError("constructor cannot be constant", "value", value);
        const params = {
            name: null,
            type: value.type,
            inputs: value.inputs ? value.inputs.map($9af6cffdb407df48$export$426dc07f493a4c47.fromObject) : [],
            payable: state.payable,
            stateMutability: state.stateMutability,
            gas: value.gas ? (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value.gas) : null
        };
        return new $9af6cffdb407df48$export$3ac5c9504f801ea4($9af6cffdb407df48$var$_constructorGuard, params);
    }
    static fromString(value) {
        let params = {
            type: "constructor"
        };
        value = $9af6cffdb407df48$var$parseGas(value, params);
        let parens = value.match($9af6cffdb407df48$var$regexParen);
        if (!parens || parens[1].trim() !== "constructor") $9af6cffdb407df48$var$logger.throwArgumentError("invalid constructor string", "value", value);
        params.inputs = $9af6cffdb407df48$var$parseParams(parens[2].trim(), false);
        $9af6cffdb407df48$var$parseModifiers(parens[3].trim(), params);
        return $9af6cffdb407df48$export$3ac5c9504f801ea4.fromObject(params);
    }
    static isConstructorFragment(value) {
        return value && value._isFragment && value.type === "constructor";
    }
}
class $9af6cffdb407df48$export$8d576c928b93668f extends $9af6cffdb407df48$export$3ac5c9504f801ea4 {
    format(format) {
        if (!format) format = $9af6cffdb407df48$export$f010f239efc4d445.sighash;
        if (!$9af6cffdb407df48$export$f010f239efc4d445[format]) $9af6cffdb407df48$var$logger.throwArgumentError("invalid format type", "format", format);
        if (format === $9af6cffdb407df48$export$f010f239efc4d445.json) return JSON.stringify({
            type: "function",
            name: this.name,
            constant: this.constant,
            stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : undefined,
            payable: this.payable,
            gas: this.gas ? this.gas.toNumber() : undefined,
            inputs: this.inputs.map((input)=>JSON.parse(input.format(format))),
            outputs: this.outputs.map((output)=>JSON.parse(output.format(format)))
        });
        let result = "";
        if (format !== $9af6cffdb407df48$export$f010f239efc4d445.sighash) result += "function ";
        result += this.name + "(" + this.inputs.map((input)=>input.format(format)).join(format === $9af6cffdb407df48$export$f010f239efc4d445.full ? ", " : ",") + ") ";
        if (format !== $9af6cffdb407df48$export$f010f239efc4d445.sighash) {
            if (this.stateMutability) {
                if (this.stateMutability !== "nonpayable") result += this.stateMutability + " ";
            } else if (this.constant) result += "view ";
            if (this.outputs && this.outputs.length) result += "returns (" + this.outputs.map((output)=>output.format(format)).join(", ") + ") ";
            if (this.gas != null) result += "@" + this.gas.toString() + " ";
        }
        return result.trim();
    }
    static from(value) {
        if (typeof value === "string") return $9af6cffdb407df48$export$8d576c928b93668f.fromString(value);
        return $9af6cffdb407df48$export$8d576c928b93668f.fromObject(value);
    }
    static fromObject(value) {
        if ($9af6cffdb407df48$export$8d576c928b93668f.isFunctionFragment(value)) return value;
        if (value.type !== "function") $9af6cffdb407df48$var$logger.throwArgumentError("invalid function object", "value", value);
        let state = $9af6cffdb407df48$var$verifyState(value);
        const params = {
            type: value.type,
            name: $9af6cffdb407df48$var$verifyIdentifier(value.name),
            constant: state.constant,
            inputs: value.inputs ? value.inputs.map($9af6cffdb407df48$export$426dc07f493a4c47.fromObject) : [],
            outputs: value.outputs ? value.outputs.map($9af6cffdb407df48$export$426dc07f493a4c47.fromObject) : [],
            payable: state.payable,
            stateMutability: state.stateMutability,
            gas: value.gas ? (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value.gas) : null
        };
        return new $9af6cffdb407df48$export$8d576c928b93668f($9af6cffdb407df48$var$_constructorGuard, params);
    }
    static fromString(value) {
        let params = {
            type: "function"
        };
        value = $9af6cffdb407df48$var$parseGas(value, params);
        let comps = value.split(" returns ");
        if (comps.length > 2) $9af6cffdb407df48$var$logger.throwArgumentError("invalid function string", "value", value);
        let parens = comps[0].match($9af6cffdb407df48$var$regexParen);
        if (!parens) $9af6cffdb407df48$var$logger.throwArgumentError("invalid function signature", "value", value);
        params.name = parens[1].trim();
        if (params.name) $9af6cffdb407df48$var$verifyIdentifier(params.name);
        params.inputs = $9af6cffdb407df48$var$parseParams(parens[2], false);
        $9af6cffdb407df48$var$parseModifiers(parens[3].trim(), params);
        // We have outputs
        if (comps.length > 1) {
            let returns = comps[1].match($9af6cffdb407df48$var$regexParen);
            if (returns[1].trim() != "" || returns[3].trim() != "") $9af6cffdb407df48$var$logger.throwArgumentError("unexpected tokens", "value", value);
            params.outputs = $9af6cffdb407df48$var$parseParams(returns[2], false);
        } else params.outputs = [];
        return $9af6cffdb407df48$export$8d576c928b93668f.fromObject(params);
    }
    static isFunctionFragment(value) {
        return value && value._isFragment && value.type === "function";
    }
}
//export class StructFragment extends Fragment {
//}
function $9af6cffdb407df48$var$checkForbidden(fragment) {
    const sig = fragment.format();
    if (sig === "Error(string)" || sig === "Panic(uint256)") $9af6cffdb407df48$var$logger.throwArgumentError(`cannot specify user defined ${sig} error`, "fragment", fragment);
    return fragment;
}
class $9af6cffdb407df48$export$2c42c6d543aa9b59 extends $9af6cffdb407df48$export$ffb0004e005737fa {
    format(format) {
        if (!format) format = $9af6cffdb407df48$export$f010f239efc4d445.sighash;
        if (!$9af6cffdb407df48$export$f010f239efc4d445[format]) $9af6cffdb407df48$var$logger.throwArgumentError("invalid format type", "format", format);
        if (format === $9af6cffdb407df48$export$f010f239efc4d445.json) return JSON.stringify({
            type: "error",
            name: this.name,
            inputs: this.inputs.map((input)=>JSON.parse(input.format(format)))
        });
        let result = "";
        if (format !== $9af6cffdb407df48$export$f010f239efc4d445.sighash) result += "error ";
        result += this.name + "(" + this.inputs.map((input)=>input.format(format)).join(format === $9af6cffdb407df48$export$f010f239efc4d445.full ? ", " : ",") + ") ";
        return result.trim();
    }
    static from(value) {
        if (typeof value === "string") return $9af6cffdb407df48$export$2c42c6d543aa9b59.fromString(value);
        return $9af6cffdb407df48$export$2c42c6d543aa9b59.fromObject(value);
    }
    static fromObject(value) {
        if ($9af6cffdb407df48$export$2c42c6d543aa9b59.isErrorFragment(value)) return value;
        if (value.type !== "error") $9af6cffdb407df48$var$logger.throwArgumentError("invalid error object", "value", value);
        const params = {
            type: value.type,
            name: $9af6cffdb407df48$var$verifyIdentifier(value.name),
            inputs: value.inputs ? value.inputs.map($9af6cffdb407df48$export$426dc07f493a4c47.fromObject) : []
        };
        return $9af6cffdb407df48$var$checkForbidden(new $9af6cffdb407df48$export$2c42c6d543aa9b59($9af6cffdb407df48$var$_constructorGuard, params));
    }
    static fromString(value) {
        let params = {
            type: "error"
        };
        let parens = value.match($9af6cffdb407df48$var$regexParen);
        if (!parens) $9af6cffdb407df48$var$logger.throwArgumentError("invalid error signature", "value", value);
        params.name = parens[1].trim();
        if (params.name) $9af6cffdb407df48$var$verifyIdentifier(params.name);
        params.inputs = $9af6cffdb407df48$var$parseParams(parens[2], false);
        return $9af6cffdb407df48$var$checkForbidden($9af6cffdb407df48$export$2c42c6d543aa9b59.fromObject(params));
    }
    static isErrorFragment(value) {
        return value && value._isFragment && value.type === "error";
    }
}
function $9af6cffdb407df48$var$verifyType(type) {
    // These need to be transformed to their full description
    if (type.match(/^uint($|[^1-9])/)) type = "uint256" + type.substring(4);
    else if (type.match(/^int($|[^1-9])/)) type = "int256" + type.substring(3);
    // @TODO: more verification
    return type;
}
// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234
const $9af6cffdb407df48$var$regexIdentifier = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
function $9af6cffdb407df48$var$verifyIdentifier(value) {
    if (!value || !value.match($9af6cffdb407df48$var$regexIdentifier)) $9af6cffdb407df48$var$logger.throwArgumentError(`invalid identifier "${value}"`, "value", value);
    return value;
}
const $9af6cffdb407df48$var$regexParen = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
function $9af6cffdb407df48$var$splitNesting(value) {
    value = value.trim();
    let result = [];
    let accum = "";
    let depth = 0;
    for(let offset = 0; offset < value.length; offset++){
        let c = value[offset];
        if (c === "," && depth === 0) {
            result.push(accum);
            accum = "";
        } else {
            accum += c;
            if (c === "(") depth++;
            else if (c === ")") {
                depth--;
                if (depth === -1) $9af6cffdb407df48$var$logger.throwArgumentError("unbalanced parenthesis", "value", value);
            }
        }
    }
    if (accum) result.push(accum);
    return result;
}


"use strict";
const $bfe95cd8b1f8f0e8$var$logger = new (0, $cbv61.Logger)((0, $eb3800c4c51fb760$export$83d89fbfd8236492));
const $bfe95cd8b1f8f0e8$var$paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);
const $bfe95cd8b1f8f0e8$var$paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);
class $bfe95cd8b1f8f0e8$export$fe041e1a83d3efc6 {
    constructor(coerceFunc){
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "coerceFunc", coerceFunc || null);
    }
    _getCoder(param) {
        switch(param.baseType){
            case "address":
                return new (0, $68078d96cbfbd808$export$59dbbded7775bfe7)(param.name);
            case "bool":
                return new (0, $a8d7e82c0ddc4c58$export$fe9118d6c093150c)(param.name);
            case "string":
                return new (0, $3106a1f9775d2fda$export$2d1b854518731426)(param.name);
            case "bytes":
                return new (0, $3f21ccdb0eeabf9c$export$e5823e9574df18d2)(param.name);
            case "array":
                return new (0, $cb0aaca9d38e413d$export$88bc419d2df11f54)(this._getCoder(param.arrayChildren), param.arrayLength, param.name);
            case "tuple":
                return new (0, $de5a0fc1ab30d584$export$e9fceba8f110fea6)((param.components || []).map((component)=>{
                    return this._getCoder(component);
                }), param.name);
            case "":
                return new (0, $994dc899eb91739f$export$70982cadf2d6b4ec)(param.name);
        }
        // u?int[0-9]*
        let match = param.type.match($bfe95cd8b1f8f0e8$var$paramTypeNumber);
        if (match) {
            let size = parseInt(match[2] || "256");
            if (size === 0 || size > 256 || size % 8 !== 0) $bfe95cd8b1f8f0e8$var$logger.throwArgumentError("invalid " + match[1] + " bit length", "param", param);
            return new (0, $e08e3857493562d4$export$b934dc8cfe13938c)(size / 8, match[1] === "int", param.name);
        }
        // bytes[0-9]+
        match = param.type.match($bfe95cd8b1f8f0e8$var$paramTypeBytes);
        if (match) {
            let size = parseInt(match[1]);
            if (size === 0 || size > 32) $bfe95cd8b1f8f0e8$var$logger.throwArgumentError("invalid bytes length", "param", param);
            return new (0, $87f468684cd10d0e$export$7dec9db68e6bcf5a)(size, param.name);
        }
        return $bfe95cd8b1f8f0e8$var$logger.throwArgumentError("invalid type", "type", param.type);
    }
    _getWordSize() {
        return 32;
    }
    _getReader(data, allowLoose) {
        return new (0, $2454a6802fffcbc0$export$2f7a2f0e90c07dc4)(data, this._getWordSize(), this.coerceFunc, allowLoose);
    }
    _getWriter() {
        return new (0, $2454a6802fffcbc0$export$d7a960146e1a269e)(this._getWordSize());
    }
    getDefaultValue(types) {
        const coders = types.map((type)=>this._getCoder((0, $9af6cffdb407df48$export$426dc07f493a4c47).from(type)));
        const coder = new (0, $de5a0fc1ab30d584$export$e9fceba8f110fea6)(coders, "_");
        return coder.defaultValue();
    }
    encode(types, values) {
        if (types.length !== values.length) $bfe95cd8b1f8f0e8$var$logger.throwError("types/values length mismatch", (0, $cbv61.Logger).errors.INVALID_ARGUMENT, {
            count: {
                types: types.length,
                values: values.length
            },
            value: {
                types: types,
                values: values
            }
        });
        const coders = types.map((type)=>this._getCoder((0, $9af6cffdb407df48$export$426dc07f493a4c47).from(type)));
        const coder = new (0, $de5a0fc1ab30d584$export$e9fceba8f110fea6)(coders, "_");
        const writer = this._getWriter();
        coder.encode(writer, values);
        return writer.data;
    }
    decode(types, data, loose) {
        const coders = types.map((type)=>this._getCoder((0, $9af6cffdb407df48$export$426dc07f493a4c47).from(type)));
        const coder = new (0, $de5a0fc1ab30d584$export$e9fceba8f110fea6)(coders, "_");
        return coder.decode(this._getReader((0, $eg8oT.arrayify)(data), loose));
    }
}
const $bfe95cd8b1f8f0e8$export$51d1cfcdb913adff = new $bfe95cd8b1f8f0e8$export$fe041e1a83d3efc6();




var $eg8oT = parcelRequire("eg8oT");







var $cbv61 = parcelRequire("cbv61");

"use strict";
const $796c8e250bcd8714$var$logger = new (0, $cbv61.Logger)((0, $eb3800c4c51fb760$export$83d89fbfd8236492));
class $796c8e250bcd8714$export$c2ab6499be98b3c5 extends (0, $b19fb92a27e5f35f$exports.Description) {
}
class $796c8e250bcd8714$export$7a3223b0fadb690b extends (0, $b19fb92a27e5f35f$exports.Description) {
}
class $796c8e250bcd8714$export$cfba08fc0e40e2ab extends (0, $b19fb92a27e5f35f$exports.Description) {
}
class $796c8e250bcd8714$export$8ef99100a3c56f8c extends (0, $b19fb92a27e5f35f$exports.Description) {
    static isIndexed(value) {
        return !!(value && value._isIndexed);
    }
}
const $796c8e250bcd8714$var$BuiltinErrors = {
    "0x08c379a0": {
        signature: "Error(string)",
        name: "Error",
        inputs: [
            "string"
        ],
        reason: true
    },
    "0x4e487b71": {
        signature: "Panic(uint256)",
        name: "Panic",
        inputs: [
            "uint256"
        ]
    }
};
function $796c8e250bcd8714$var$wrapAccessError(property, error) {
    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);
    wrap.error = error;
    return wrap;
}
class $796c8e250bcd8714$export$48cefb51a4e315b2 {
    constructor(fragments){
        let abi = [];
        if (typeof fragments === "string") abi = JSON.parse(fragments);
        else abi = fragments;
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "fragments", abi.map((fragment)=>{
            return (0, $9af6cffdb407df48$export$ffb0004e005737fa).from(fragment);
        }).filter((fragment)=>fragment != null));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_abiCoder", (0, $b19fb92a27e5f35f$exports.getStatic)(new.target, "getAbiCoder")());
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "functions", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "errors", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "events", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "structs", {});
        // Add all fragments by their signature
        this.fragments.forEach((fragment)=>{
            let bucket = null;
            switch(fragment.type){
                case "constructor":
                    if (this.deploy) {
                        $796c8e250bcd8714$var$logger.warn("duplicate definition - constructor");
                        return;
                    }
                    //checkNames(fragment, "input", fragment.inputs);
                    (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "deploy", fragment);
                    return;
                case "function":
                    //checkNames(fragment, "input", fragment.inputs);
                    //checkNames(fragment, "output", (<FunctionFragment>fragment).outputs);
                    bucket = this.functions;
                    break;
                case "event":
                    //checkNames(fragment, "input", fragment.inputs);
                    bucket = this.events;
                    break;
                case "error":
                    bucket = this.errors;
                    break;
                default:
                    return;
            }
            let signature = fragment.format();
            if (bucket[signature]) {
                $796c8e250bcd8714$var$logger.warn("duplicate definition - " + signature);
                return;
            }
            bucket[signature] = fragment;
        });
        // If we do not have a constructor add a default
        if (!this.deploy) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "deploy", (0, $9af6cffdb407df48$export$3ac5c9504f801ea4).from({
            payable: false,
            type: "constructor"
        }));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_isInterface", true);
    }
    format(format) {
        if (!format) format = (0, $9af6cffdb407df48$export$f010f239efc4d445).full;
        if (format === (0, $9af6cffdb407df48$export$f010f239efc4d445).sighash) $796c8e250bcd8714$var$logger.throwArgumentError("interface does not support formatting sighash", "format", format);
        const abi = this.fragments.map((fragment)=>fragment.format(format));
        // We need to re-bundle the JSON fragments a bit
        if (format === (0, $9af6cffdb407df48$export$f010f239efc4d445).json) return JSON.stringify(abi.map((j)=>JSON.parse(j)));
        return abi;
    }
    // Sub-classes can override these to handle other blockchains
    static getAbiCoder() {
        return 0, $bfe95cd8b1f8f0e8$export$51d1cfcdb913adff;
    }
    static getAddress(address) {
        return (0, $8b38701037b2e5d8$export$88411125f012957a)(address);
    }
    static getSighash(fragment) {
        return (0, $eg8oT.hexDataSlice)((0, $22d0893bc40cd818$export$d560c7e4a29451c2)(fragment.format()), 0, 4);
    }
    static getEventTopic(eventFragment) {
        return (0, $22d0893bc40cd818$export$d560c7e4a29451c2)(eventFragment.format());
    }
    // Find a function definition by any means necessary (unless it is ambiguous)
    getFunction(nameOrSignatureOrSighash) {
        if ((0, $eg8oT.isHexString)(nameOrSignatureOrSighash)) {
            for(const name in this.functions){
                if (nameOrSignatureOrSighash === this.getSighash(name)) return this.functions[name];
            }
            $796c8e250bcd8714$var$logger.throwArgumentError("no matching function", "sighash", nameOrSignatureOrSighash);
        }
        // It is a bare name, look up the function (will return null if ambiguous)
        if (nameOrSignatureOrSighash.indexOf("(") === -1) {
            const name = nameOrSignatureOrSighash.trim();
            const matching = Object.keys(this.functions).filter((f)=>f.split("(" /* fix:) */ )[0] === name);
            if (matching.length === 0) $796c8e250bcd8714$var$logger.throwArgumentError("no matching function", "name", name);
            else if (matching.length > 1) $796c8e250bcd8714$var$logger.throwArgumentError("multiple matching functions", "name", name);
            return this.functions[matching[0]];
        }
        // Normalize the signature and lookup the function
        const result = this.functions[(0, $9af6cffdb407df48$export$8d576c928b93668f).fromString(nameOrSignatureOrSighash).format()];
        if (!result) $796c8e250bcd8714$var$logger.throwArgumentError("no matching function", "signature", nameOrSignatureOrSighash);
        return result;
    }
    // Find an event definition by any means necessary (unless it is ambiguous)
    getEvent(nameOrSignatureOrTopic) {
        if ((0, $eg8oT.isHexString)(nameOrSignatureOrTopic)) {
            const topichash = nameOrSignatureOrTopic.toLowerCase();
            for(const name in this.events){
                if (topichash === this.getEventTopic(name)) return this.events[name];
            }
            $796c8e250bcd8714$var$logger.throwArgumentError("no matching event", "topichash", topichash);
        }
        // It is a bare name, look up the function (will return null if ambiguous)
        if (nameOrSignatureOrTopic.indexOf("(") === -1) {
            const name = nameOrSignatureOrTopic.trim();
            const matching = Object.keys(this.events).filter((f)=>f.split("(" /* fix:) */ )[0] === name);
            if (matching.length === 0) $796c8e250bcd8714$var$logger.throwArgumentError("no matching event", "name", name);
            else if (matching.length > 1) $796c8e250bcd8714$var$logger.throwArgumentError("multiple matching events", "name", name);
            return this.events[matching[0]];
        }
        // Normalize the signature and lookup the function
        const result = this.events[(0, $9af6cffdb407df48$export$958548f08bac2833).fromString(nameOrSignatureOrTopic).format()];
        if (!result) $796c8e250bcd8714$var$logger.throwArgumentError("no matching event", "signature", nameOrSignatureOrTopic);
        return result;
    }
    // Find a function definition by any means necessary (unless it is ambiguous)
    getError(nameOrSignatureOrSighash) {
        if ((0, $eg8oT.isHexString)(nameOrSignatureOrSighash)) {
            const getSighash = (0, $b19fb92a27e5f35f$exports.getStatic)(this.constructor, "getSighash");
            for(const name in this.errors){
                const error = this.errors[name];
                if (nameOrSignatureOrSighash === getSighash(error)) return this.errors[name];
            }
            $796c8e250bcd8714$var$logger.throwArgumentError("no matching error", "sighash", nameOrSignatureOrSighash);
        }
        // It is a bare name, look up the function (will return null if ambiguous)
        if (nameOrSignatureOrSighash.indexOf("(") === -1) {
            const name = nameOrSignatureOrSighash.trim();
            const matching = Object.keys(this.errors).filter((f)=>f.split("(" /* fix:) */ )[0] === name);
            if (matching.length === 0) $796c8e250bcd8714$var$logger.throwArgumentError("no matching error", "name", name);
            else if (matching.length > 1) $796c8e250bcd8714$var$logger.throwArgumentError("multiple matching errors", "name", name);
            return this.errors[matching[0]];
        }
        // Normalize the signature and lookup the function
        const result = this.errors[(0, $9af6cffdb407df48$export$8d576c928b93668f).fromString(nameOrSignatureOrSighash).format()];
        if (!result) $796c8e250bcd8714$var$logger.throwArgumentError("no matching error", "signature", nameOrSignatureOrSighash);
        return result;
    }
    // Get the sighash (the bytes4 selector) used by Solidity to identify a function
    getSighash(fragment) {
        if (typeof fragment === "string") try {
            fragment = this.getFunction(fragment);
        } catch (error) {
            try {
                fragment = this.getError(fragment);
            } catch (_) {
                throw error;
            }
        }
        return (0, $b19fb92a27e5f35f$exports.getStatic)(this.constructor, "getSighash")(fragment);
    }
    // Get the topic (the bytes32 hash) used by Solidity to identify an event
    getEventTopic(eventFragment) {
        if (typeof eventFragment === "string") eventFragment = this.getEvent(eventFragment);
        return (0, $b19fb92a27e5f35f$exports.getStatic)(this.constructor, "getEventTopic")(eventFragment);
    }
    _decodeParams(params, data) {
        return this._abiCoder.decode(params, data);
    }
    _encodeParams(params, values) {
        return this._abiCoder.encode(params, values);
    }
    encodeDeploy(values) {
        return this._encodeParams(this.deploy.inputs, values || []);
    }
    decodeErrorResult(fragment, data) {
        if (typeof fragment === "string") fragment = this.getError(fragment);
        const bytes = (0, $eg8oT.arrayify)(data);
        if ((0, $eg8oT.hexlify)(bytes.slice(0, 4)) !== this.getSighash(fragment)) $796c8e250bcd8714$var$logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, "data", (0, $eg8oT.hexlify)(bytes));
        return this._decodeParams(fragment.inputs, bytes.slice(4));
    }
    encodeErrorResult(fragment, values) {
        if (typeof fragment === "string") fragment = this.getError(fragment);
        return (0, $eg8oT.hexlify)((0, $eg8oT.concat)([
            this.getSighash(fragment),
            this._encodeParams(fragment.inputs, values || [])
        ]));
    }
    // Decode the data for a function call (e.g. tx.data)
    decodeFunctionData(functionFragment, data) {
        if (typeof functionFragment === "string") functionFragment = this.getFunction(functionFragment);
        const bytes = (0, $eg8oT.arrayify)(data);
        if ((0, $eg8oT.hexlify)(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) $796c8e250bcd8714$var$logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, "data", (0, $eg8oT.hexlify)(bytes));
        return this._decodeParams(functionFragment.inputs, bytes.slice(4));
    }
    // Encode the data for a function call (e.g. tx.data)
    encodeFunctionData(functionFragment, values) {
        if (typeof functionFragment === "string") functionFragment = this.getFunction(functionFragment);
        return (0, $eg8oT.hexlify)((0, $eg8oT.concat)([
            this.getSighash(functionFragment),
            this._encodeParams(functionFragment.inputs, values || [])
        ]));
    }
    // Decode the result from a function call (e.g. from eth_call)
    decodeFunctionResult(functionFragment, data) {
        if (typeof functionFragment === "string") functionFragment = this.getFunction(functionFragment);
        let bytes = (0, $eg8oT.arrayify)(data);
        let reason = null;
        let message = "";
        let errorArgs = null;
        let errorName = null;
        let errorSignature = null;
        switch(bytes.length % this._abiCoder._getWordSize()){
            case 0:
                try {
                    return this._abiCoder.decode(functionFragment.outputs, bytes);
                } catch (error) {}
                break;
            case 4:
                {
                    const selector = (0, $eg8oT.hexlify)(bytes.slice(0, 4));
                    const builtin = $796c8e250bcd8714$var$BuiltinErrors[selector];
                    if (builtin) {
                        errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));
                        errorName = builtin.name;
                        errorSignature = builtin.signature;
                        if (builtin.reason) reason = errorArgs[0];
                        if (errorName === "Error") message = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(errorArgs[0])}`;
                        else if (errorName === "Panic") message = `; VM Exception while processing transaction: reverted with panic code ${errorArgs[0]}`;
                    } else try {
                        const error = this.getError(selector);
                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));
                        errorName = error.name;
                        errorSignature = error.format();
                    } catch (error) {}
                    break;
                }
        }
        return $796c8e250bcd8714$var$logger.throwError("call revert exception" + message, (0, $cbv61.Logger).errors.CALL_EXCEPTION, {
            method: functionFragment.format(),
            data: (0, $eg8oT.hexlify)(data),
            errorArgs: errorArgs,
            errorName: errorName,
            errorSignature: errorSignature,
            reason: reason
        });
    }
    // Encode the result for a function call (e.g. for eth_call)
    encodeFunctionResult(functionFragment, values) {
        if (typeof functionFragment === "string") functionFragment = this.getFunction(functionFragment);
        return (0, $eg8oT.hexlify)(this._abiCoder.encode(functionFragment.outputs, values || []));
    }
    // Create the filter for the event with search criteria (e.g. for eth_filterLog)
    encodeFilterTopics(eventFragment, values) {
        if (typeof eventFragment === "string") eventFragment = this.getEvent(eventFragment);
        if (values.length > eventFragment.inputs.length) $796c8e250bcd8714$var$logger.throwError("too many arguments for " + eventFragment.format(), (0, $cbv61.Logger).errors.UNEXPECTED_ARGUMENT, {
            argument: "values",
            value: values
        });
        let topics = [];
        if (!eventFragment.anonymous) topics.push(this.getEventTopic(eventFragment));
        const encodeTopic = (param, value)=>{
            if (param.type === "string") return (0, $22d0893bc40cd818$export$d560c7e4a29451c2)(value);
            else if (param.type === "bytes") return (0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $eg8oT.hexlify)(value));
            if (param.type === "bool" && typeof value === "boolean") value = value ? "0x01" : "0x00";
            if (param.type.match(/^u?int/)) value = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value).toHexString();
            // Check addresses are valid
            if (param.type === "address") this._abiCoder.encode([
                "address"
            ], [
                value
            ]);
            return (0, $eg8oT.hexZeroPad)((0, $eg8oT.hexlify)(value), 32);
        };
        values.forEach((value, index)=>{
            let param = eventFragment.inputs[index];
            if (!param.indexed) {
                if (value != null) $796c8e250bcd8714$var$logger.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + param.name, value);
                return;
            }
            if (value == null) topics.push(null);
            else if (param.baseType === "array" || param.baseType === "tuple") $796c8e250bcd8714$var$logger.throwArgumentError("filtering with tuples or arrays not supported", "contract." + param.name, value);
            else if (Array.isArray(value)) topics.push(value.map((value)=>encodeTopic(param, value)));
            else topics.push(encodeTopic(param, value));
        });
        // Trim off trailing nulls
        while(topics.length && topics[topics.length - 1] === null)topics.pop();
        return topics;
    }
    encodeEventLog(eventFragment, values) {
        if (typeof eventFragment === "string") eventFragment = this.getEvent(eventFragment);
        const topics = [];
        const dataTypes = [];
        const dataValues = [];
        if (!eventFragment.anonymous) topics.push(this.getEventTopic(eventFragment));
        if (values.length !== eventFragment.inputs.length) $796c8e250bcd8714$var$logger.throwArgumentError("event arguments/values mismatch", "values", values);
        eventFragment.inputs.forEach((param, index)=>{
            const value = values[index];
            if (param.indexed) {
                if (param.type === "string") topics.push((0, $22d0893bc40cd818$export$d560c7e4a29451c2)(value));
                else if (param.type === "bytes") topics.push((0, $dd686f272f8051f8$export$f8151fce47ad1c35)(value));
                else if (param.baseType === "tuple" || param.baseType === "array") // @TODO
                throw new Error("not implemented");
                else topics.push(this._abiCoder.encode([
                    param.type
                ], [
                    value
                ]));
            } else {
                dataTypes.push(param);
                dataValues.push(value);
            }
        });
        return {
            data: this._abiCoder.encode(dataTypes, dataValues),
            topics: topics
        };
    }
    // Decode a filter for the event and the search criteria
    decodeEventLog(eventFragment, data, topics) {
        if (typeof eventFragment === "string") eventFragment = this.getEvent(eventFragment);
        if (topics != null && !eventFragment.anonymous) {
            let topicHash = this.getEventTopic(eventFragment);
            if (!(0, $eg8oT.isHexString)(topics[0], 32) || topics[0].toLowerCase() !== topicHash) $796c8e250bcd8714$var$logger.throwError("fragment/topic mismatch", (0, $cbv61.Logger).errors.INVALID_ARGUMENT, {
                argument: "topics[0]",
                expected: topicHash,
                value: topics[0]
            });
            topics = topics.slice(1);
        }
        let indexed = [];
        let nonIndexed = [];
        let dynamic = [];
        eventFragment.inputs.forEach((param, index)=>{
            if (param.indexed) {
                if (param.type === "string" || param.type === "bytes" || param.baseType === "tuple" || param.baseType === "array") {
                    indexed.push((0, $9af6cffdb407df48$export$426dc07f493a4c47).fromObject({
                        type: "bytes32",
                        name: param.name
                    }));
                    dynamic.push(true);
                } else {
                    indexed.push(param);
                    dynamic.push(false);
                }
            } else {
                nonIndexed.push(param);
                dynamic.push(false);
            }
        });
        let resultIndexed = topics != null ? this._abiCoder.decode(indexed, (0, $eg8oT.concat)(topics)) : null;
        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);
        let result = [];
        let nonIndexedIndex = 0, indexedIndex = 0;
        eventFragment.inputs.forEach((param, index)=>{
            if (param.indexed) {
                if (resultIndexed == null) result[index] = new $796c8e250bcd8714$export$8ef99100a3c56f8c({
                    _isIndexed: true,
                    hash: null
                });
                else if (dynamic[index]) result[index] = new $796c8e250bcd8714$export$8ef99100a3c56f8c({
                    _isIndexed: true,
                    hash: resultIndexed[indexedIndex++]
                });
                else try {
                    result[index] = resultIndexed[indexedIndex++];
                } catch (error) {
                    result[index] = error;
                }
            } else try {
                result[index] = resultNonIndexed[nonIndexedIndex++];
            } catch (error) {
                result[index] = error;
            }
            // Add the keyword argument if named and safe
            if (param.name && result[param.name] == null) {
                const value = result[index];
                // Make error named values throw on access
                if (value instanceof Error) Object.defineProperty(result, param.name, {
                    enumerable: true,
                    get: ()=>{
                        throw $796c8e250bcd8714$var$wrapAccessError(`property ${JSON.stringify(param.name)}`, value);
                    }
                });
                else result[param.name] = value;
            }
        });
        // Make all error indexed values throw on access
        for(let i = 0; i < result.length; i++){
            const value = result[i];
            if (value instanceof Error) Object.defineProperty(result, i, {
                enumerable: true,
                get: ()=>{
                    throw $796c8e250bcd8714$var$wrapAccessError(`index ${i}`, value);
                }
            });
        }
        return Object.freeze(result);
    }
    // Given a transaction, find the matching function fragment (if any) and
    // determine all its properties and call parameters
    parseTransaction(tx) {
        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());
        if (!fragment) return null;
        return new $796c8e250bcd8714$export$7a3223b0fadb690b({
            args: this._abiCoder.decode(fragment.inputs, "0x" + tx.data.substring(10)),
            functionFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            sighash: this.getSighash(fragment),
            value: (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(tx.value || "0")
        });
    }
    // @TODO
    //parseCallResult(data: BytesLike): ??
    // Given an event log, find the matching event fragment (if any) and
    // determine all its properties and values
    parseLog(log) {
        let fragment = this.getEvent(log.topics[0]);
        if (!fragment || fragment.anonymous) return null;
        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?
        //        Probably not, because just because it is the only event in the ABI does
        //        not mean we have the full ABI; maybe just a fragment?
        return new $796c8e250bcd8714$export$c2ab6499be98b3c5({
            eventFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            topic: this.getEventTopic(fragment),
            args: this.decodeEventLog(fragment, log.data, log.topics)
        });
    }
    parseError(data) {
        const hexData = (0, $eg8oT.hexlify)(data);
        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());
        if (!fragment) return null;
        return new $796c8e250bcd8714$export$cfba08fc0e40e2ab({
            args: this._abiCoder.decode(fragment.inputs, "0x" + hexData.substring(10)),
            errorFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            sighash: this.getSighash(fragment)
        });
    }
    /*
    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {
        if (Interface.isInterface(value)) {
            return value;
        }
        if (typeof(value) === "string") {
            return new Interface(JSON.parse(value));
        }
        return new Interface(value);
    }
    */ static isInterface(value) {
        return !!(value && value._isInterface);
    }
}


Object.defineProperty($924b12823ef5c5c6$exports, "AbiCoder", {
    enumerable: true,
    get: function() {
        return $bfe95cd8b1f8f0e8$export$fe041e1a83d3efc6;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "checkResultErrors", {
    enumerable: true,
    get: function() {
        return $2454a6802fffcbc0$export$5546b9ec21157cc2;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "ConstructorFragment", {
    enumerable: true,
    get: function() {
        return $9af6cffdb407df48$export$3ac5c9504f801ea4;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "defaultAbiCoder", {
    enumerable: true,
    get: function() {
        return $bfe95cd8b1f8f0e8$export$51d1cfcdb913adff;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "ErrorFragment", {
    enumerable: true,
    get: function() {
        return $9af6cffdb407df48$export$2c42c6d543aa9b59;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "EventFragment", {
    enumerable: true,
    get: function() {
        return $9af6cffdb407df48$export$958548f08bac2833;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "FormatTypes", {
    enumerable: true,
    get: function() {
        return $9af6cffdb407df48$export$f010f239efc4d445;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "Fragment", {
    enumerable: true,
    get: function() {
        return $9af6cffdb407df48$export$ffb0004e005737fa;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "FunctionFragment", {
    enumerable: true,
    get: function() {
        return $9af6cffdb407df48$export$8d576c928b93668f;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "Indexed", {
    enumerable: true,
    get: function() {
        return $796c8e250bcd8714$export$8ef99100a3c56f8c;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "Interface", {
    enumerable: true,
    get: function() {
        return $796c8e250bcd8714$export$48cefb51a4e315b2;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "LogDescription", {
    enumerable: true,
    get: function() {
        return $796c8e250bcd8714$export$c2ab6499be98b3c5;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "ParamType", {
    enumerable: true,
    get: function() {
        return $9af6cffdb407df48$export$426dc07f493a4c47;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "TransactionDescription", {
    enumerable: true,
    get: function() {
        return $796c8e250bcd8714$export$7a3223b0fadb690b;
    }
});

Object.defineProperty($924b12823ef5c5c6$exports, "getAddress", {
    enumerable: true,
    get: function() {
        return $8b38701037b2e5d8$export$88411125f012957a;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "getCreate2Address", {
    enumerable: true,
    get: function() {
        return $8b38701037b2e5d8$export$e0b22d96621f73a2;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "getContractAddress", {
    enumerable: true,
    get: function() {
        return $8b38701037b2e5d8$export$b7fbffef12272e40;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "getIcapAddress", {
    enumerable: true,
    get: function() {
        return $8b38701037b2e5d8$export$962c4ddada9f668f;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "isAddress", {
    enumerable: true,
    get: function() {
        return $8b38701037b2e5d8$export$977e255126d763d6;
    }
});

var $924b12823ef5c5c6$var$base64 = $924b12823ef5c5c6$var$__importStar((parcelRequire("j7DFn")));
$924b12823ef5c5c6$exports.base64 = $924b12823ef5c5c6$var$base64;

Object.defineProperty($924b12823ef5c5c6$exports, "base58", {
    enumerable: true,
    get: function() {
        return $34e4ad7d2aa99cc1$export$45a587635c9954b2;
    }
});

var $eg8oT = parcelRequire("eg8oT");
Object.defineProperty($924b12823ef5c5c6$exports, "arrayify", {
    enumerable: true,
    get: function() {
        return $eg8oT.arrayify;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "concat", {
    enumerable: true,
    get: function() {
        return $eg8oT.concat;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "hexConcat", {
    enumerable: true,
    get: function() {
        return $eg8oT.hexConcat;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "hexDataSlice", {
    enumerable: true,
    get: function() {
        return $eg8oT.hexDataSlice;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "hexDataLength", {
    enumerable: true,
    get: function() {
        return $eg8oT.hexDataLength;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "hexlify", {
    enumerable: true,
    get: function() {
        return $eg8oT.hexlify;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "hexStripZeros", {
    enumerable: true,
    get: function() {
        return $eg8oT.hexStripZeros;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "hexValue", {
    enumerable: true,
    get: function() {
        return $eg8oT.hexValue;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "hexZeroPad", {
    enumerable: true,
    get: function() {
        return $eg8oT.hexZeroPad;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "isBytes", {
    enumerable: true,
    get: function() {
        return $eg8oT.isBytes;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "isBytesLike", {
    enumerable: true,
    get: function() {
        return $eg8oT.isBytesLike;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "isHexString", {
    enumerable: true,
    get: function() {
        return $eg8oT.isHexString;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "joinSignature", {
    enumerable: true,
    get: function() {
        return $eg8oT.joinSignature;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "zeroPad", {
    enumerable: true,
    get: function() {
        return $eg8oT.zeroPad;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "splitSignature", {
    enumerable: true,
    get: function() {
        return $eg8oT.splitSignature;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "stripZeros", {
    enumerable: true,
    get: function() {
        return $eg8oT.stripZeros;
    }
});

var $eg8oT = parcelRequire("eg8oT");


const $70b11e4027161461$export$1ff3fdc4802a2ba6 = "\x19Ethereum Signed Message:\n";
function $70b11e4027161461$export$d4c241cec96564c1(message) {
    if (typeof message === "string") message = (0, $cde319f07c8777da$export$8feeb310b4b4752f)(message);
    return (0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $eg8oT.concat)([
        (0, $cde319f07c8777da$export$8feeb310b4b4752f)($70b11e4027161461$export$1ff3fdc4802a2ba6),
        (0, $cde319f07c8777da$export$8feeb310b4b4752f)(String(message.length)),
        message
    ]));
}


Object.defineProperty($924b12823ef5c5c6$exports, "_TypedDataEncoder", {
    enumerable: true,
    get: function() {
        return $8a68414fdead829d$exports.TypedDataEncoder;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "dnsEncode", {
    enumerable: true,
    get: function() {
        return $ce31ee151995bdb4$export$6c0a8cdae51cb512;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "hashMessage", {
    enumerable: true,
    get: function() {
        return $70b11e4027161461$export$d4c241cec96564c1;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "id", {
    enumerable: true,
    get: function() {
        return $22d0893bc40cd818$export$d560c7e4a29451c2;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "isValidName", {
    enumerable: true,
    get: function() {
        return $ce31ee151995bdb4$export$cce2300886e7ace6;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "namehash", {
    enumerable: true,
    get: function() {
        return $ce31ee151995bdb4$export$91d651ee363e1209;
    }
});


var $eg8oT = parcelRequire("eg8oT");



var $eg8oT = parcelRequire("eg8oT");

"use strict";
function $b1254480b6ba1484$export$448fa22aedc9dbca(password, salt, iterations, keylen, hashAlgorithm) {
    password = (0, $eg8oT.arrayify)(password);
    salt = (0, $eg8oT.arrayify)(salt);
    let hLen;
    let l = 1;
    const DK = new Uint8Array(keylen);
    const block1 = new Uint8Array(salt.length + 4);
    block1.set(salt);
    //salt.copy(block1, 0, 0, salt.length)
    let r;
    let T;
    for(let i = 1; i <= l; i++){
        //block1.writeUInt32BE(i, salt.length)
        block1[salt.length] = i >> 24 & 0xff;
        block1[salt.length + 1] = i >> 16 & 0xff;
        block1[salt.length + 2] = i >> 8 & 0xff;
        block1[salt.length + 3] = i & 0xff;
        //let U = createHmac(password).update(block1).digest();
        let U = (0, $eg8oT.arrayify)((0, $cdc53f4b1672f85d$export$967075d2f3b8e7ff)(hashAlgorithm, password, block1));
        if (!hLen) {
            hLen = U.length;
            T = new Uint8Array(hLen);
            l = Math.ceil(keylen / hLen);
            r = keylen - (l - 1) * hLen;
        }
        //U.copy(T, 0, 0, hLen)
        T.set(U);
        for(let j = 1; j < iterations; j++){
            //U = createHmac(password).update(U).digest();
            U = (0, $eg8oT.arrayify)((0, $cdc53f4b1672f85d$export$967075d2f3b8e7ff)(hashAlgorithm, password, U));
            for(let k = 0; k < hLen; k++)T[k] ^= U[k];
        }
        const destPos = (i - 1) * hLen;
        const len = i === l ? r : hLen;
        //T.copy(DK, destPos, 0, len)
        DK.set((0, $eg8oT.arrayify)(T).slice(0, len), destPos);
    }
    return (0, $eg8oT.hexlify)(DK);
}









var $cbv61 = parcelRequire("cbv61");
const $571b66897aae2c68$export$83d89fbfd8236492 = "wordlists/5.7.0";


"use strict";
// This gets overridden by rollup
const $f6236dd37eef6ab0$var$exportWordlist = false;
const $f6236dd37eef6ab0$export$af88d00dbe7f521 = new (0, $cbv61.Logger)((0, $571b66897aae2c68$export$83d89fbfd8236492));
class $f6236dd37eef6ab0$export$4d9531a8ddb0ebca {
    constructor(locale){
        $f6236dd37eef6ab0$export$af88d00dbe7f521.checkAbstract(new.target, $f6236dd37eef6ab0$export$4d9531a8ddb0ebca);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "locale", locale);
    }
    // Subclasses may override this
    split(mnemonic) {
        return mnemonic.toLowerCase().split(/ +/g);
    }
    // Subclasses may override this
    join(words) {
        return words.join(" ");
    }
    static check(wordlist) {
        const words = [];
        for(let i = 0; i < 2048; i++){
            const word = wordlist.getWord(i);
            /* istanbul ignore if */ if (i !== wordlist.getWordIndex(word)) return "0x";
            words.push(word);
        }
        return (0, $22d0893bc40cd818$export$d560c7e4a29451c2)(words.join("\n") + "\n");
    }
    static register(lang, name) {
        if (!name) name = lang.locale;
        /* istanbul ignore if */ if ($f6236dd37eef6ab0$var$exportWordlist) try {
            const anyGlobal = window;
            if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {
                if (!anyGlobal._ethers.wordlists[name]) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(anyGlobal._ethers.wordlists, name, lang);
            }
        } catch (error) {}
    }
}


"use strict";
const $185d35e9905648a7$var$words = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
let $185d35e9905648a7$var$wordlist = null;
function $185d35e9905648a7$var$loadWords(lang) {
    if ($185d35e9905648a7$var$wordlist != null) return;
    $185d35e9905648a7$var$wordlist = $185d35e9905648a7$var$words.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ");
    // Verify the computed list matches the official list
    /* istanbul ignore if */ if ((0, $f6236dd37eef6ab0$export$4d9531a8ddb0ebca).check(lang) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60") {
        $185d35e9905648a7$var$wordlist = null;
        throw new Error("BIP39 Wordlist for en (English) FAILED");
    }
}
class $185d35e9905648a7$var$LangEn extends (0, $f6236dd37eef6ab0$export$4d9531a8ddb0ebca) {
    constructor(){
        super("en");
    }
    getWord(index) {
        $185d35e9905648a7$var$loadWords(this);
        return $185d35e9905648a7$var$wordlist[index];
    }
    getWordIndex(word) {
        $185d35e9905648a7$var$loadWords(this);
        return $185d35e9905648a7$var$wordlist.indexOf(word);
    }
}
const $185d35e9905648a7$export$a2c9518710cf1f49 = new $185d35e9905648a7$var$LangEn();
(0, $f6236dd37eef6ab0$export$4d9531a8ddb0ebca).register($185d35e9905648a7$export$a2c9518710cf1f49);


"use strict";
const $2051a60e88b89650$export$e8e1b4711c2d1939 = {
    en: (0, $185d35e9905648a7$export$a2c9518710cf1f49)
};



var $cbv61 = parcelRequire("cbv61");
const $73463566d44e3a07$export$83d89fbfd8236492 = "hdnode/5.7.0";


"use strict";
const $457c3ef73dac1a8e$var$logger = new (0, $cbv61.Logger)((0, $73463566d44e3a07$export$83d89fbfd8236492));
const $457c3ef73dac1a8e$var$N = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
// "Bitcoin seed"
const $457c3ef73dac1a8e$var$MasterSecret = (0, $cde319f07c8777da$export$8feeb310b4b4752f)("Bitcoin seed");
const $457c3ef73dac1a8e$var$HardenedBit = 0x80000000;
// Returns a byte with the MSB bits set
function $457c3ef73dac1a8e$var$getUpperMask(bits) {
    return (1 << bits) - 1 << 8 - bits;
}
// Returns a byte with the LSB bits set
function $457c3ef73dac1a8e$var$getLowerMask(bits) {
    return (1 << bits) - 1;
}
function $457c3ef73dac1a8e$var$bytes32(value) {
    return (0, $eg8oT.hexZeroPad)((0, $eg8oT.hexlify)(value), 32);
}
function $457c3ef73dac1a8e$var$base58check(data) {
    return (0, $34e4ad7d2aa99cc1$export$45a587635c9954b2).encode((0, $eg8oT.concat)([
        data,
        (0, $eg8oT.hexDataSlice)((0, $cdc53f4b1672f85d$export$bced8d2aada2d1c9)((0, $cdc53f4b1672f85d$export$bced8d2aada2d1c9)(data)), 0, 4)
    ]));
}
function $457c3ef73dac1a8e$var$getWordlist(wordlist) {
    if (wordlist == null) return (0, $2051a60e88b89650$export$e8e1b4711c2d1939)["en"];
    if (typeof wordlist === "string") {
        const words = (0, $2051a60e88b89650$export$e8e1b4711c2d1939)[wordlist];
        if (words == null) $457c3ef73dac1a8e$var$logger.throwArgumentError("unknown locale", "wordlist", wordlist);
        return words;
    }
    return wordlist;
}
const $457c3ef73dac1a8e$var$_constructorGuard = {};
const $457c3ef73dac1a8e$export$d48ad89f7e11a603 = "m/44'/60'/0'/0/0";
class $457c3ef73dac1a8e$export$b68640c53e22b952 {
    /**
     *  This constructor should not be called directly.
     *
     *  Please use:
     *   - fromMnemonic
     *   - fromSeed
     */ constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath){
        /* istanbul ignore if */ if (constructorGuard !== $457c3ef73dac1a8e$var$_constructorGuard) throw new Error("HDNode constructor cannot be called directly");
        if (privateKey) {
            const signingKey = new (0, $bccb365df25a232d$export$21643ca94aed3e83)(privateKey);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "privateKey", signingKey.privateKey);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "publicKey", signingKey.compressedPublicKey);
        } else {
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "privateKey", null);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "publicKey", (0, $eg8oT.hexlify)(publicKey));
        }
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "parentFingerprint", parentFingerprint);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "fingerprint", (0, $eg8oT.hexDataSlice)((0, $cdc53f4b1672f85d$export$d1cea0ee4e3f0d3e)((0, $cdc53f4b1672f85d$export$bced8d2aada2d1c9)(this.publicKey)), 0, 4));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "address", (0, $1b59a48ea3c080da$export$e67e2732ba9803f9)(this.publicKey));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "chainCode", chainCode);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "index", index);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "depth", depth);
        if (mnemonicOrPath == null) {
            // From a source that does not preserve the path (e.g. extended keys)
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "mnemonic", null);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "path", null);
        } else if (typeof mnemonicOrPath === "string") {
            // From a source that does not preserve the mnemonic (e.g. neutered)
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "mnemonic", null);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "path", mnemonicOrPath);
        } else {
            // From a fully qualified source
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "mnemonic", mnemonicOrPath);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "path", mnemonicOrPath.path);
        }
    }
    get extendedKey() {
        // We only support the mainnet values for now, but if anyone needs
        // testnet values, let me know. I believe current sentiment is that
        // we should always use mainnet, and use BIP-44 to derive the network
        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4
        //   - Testnet: public=0x043587CF, private=0x04358394
        if (this.depth >= 256) throw new Error("Depth too large!");
        return $457c3ef73dac1a8e$var$base58check((0, $eg8oT.concat)([
            this.privateKey != null ? "0x0488ADE4" : "0x0488B21E",
            (0, $eg8oT.hexlify)(this.depth),
            this.parentFingerprint,
            (0, $eg8oT.hexZeroPad)((0, $eg8oT.hexlify)(this.index), 4),
            this.chainCode,
            this.privateKey != null ? (0, $eg8oT.concat)([
                "0x00",
                this.privateKey
            ]) : this.publicKey
        ]));
    }
    neuter() {
        return new $457c3ef73dac1a8e$export$b68640c53e22b952($457c3ef73dac1a8e$var$_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
    }
    _derive(index) {
        if (index > 0xffffffff) throw new Error("invalid index - " + String(index));
        // Base path
        let path = this.path;
        if (path) path += "/" + (index & ~$457c3ef73dac1a8e$var$HardenedBit);
        const data = new Uint8Array(37);
        if (index & $457c3ef73dac1a8e$var$HardenedBit) {
            if (!this.privateKey) throw new Error("cannot derive child of neutered node");
            // Data = 0x00 || ser_256(k_par)
            data.set((0, $eg8oT.arrayify)(this.privateKey), 1);
            // Hardened path
            if (path) path += "'";
        } else // Data = ser_p(point(k_par))
        data.set((0, $eg8oT.arrayify)(this.publicKey));
        // Data += ser_32(i)
        for(let i = 24; i >= 0; i -= 8)data[33 + (i >> 3)] = index >> 24 - i & 0xff;
        const I = (0, $eg8oT.arrayify)((0, $cdc53f4b1672f85d$export$967075d2f3b8e7ff)((0, $acdfd7c13cce7a9a$export$d2a8849cfb277c).sha512, this.chainCode, data));
        const IL = I.slice(0, 32);
        const IR = I.slice(32);
        // The private key
        let ki = null;
        // The public key
        let Ki = null;
        if (this.privateKey) ki = $457c3ef73dac1a8e$var$bytes32((0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(IL).add(this.privateKey).mod($457c3ef73dac1a8e$var$N));
        else {
            const ek = new (0, $bccb365df25a232d$export$21643ca94aed3e83)((0, $eg8oT.hexlify)(IL));
            Ki = ek._addPoint(this.publicKey);
        }
        let mnemonicOrPath = path;
        const srcMnemonic = this.mnemonic;
        if (srcMnemonic) mnemonicOrPath = Object.freeze({
            phrase: srcMnemonic.phrase,
            path: path,
            locale: srcMnemonic.locale || "en"
        });
        return new $457c3ef73dac1a8e$export$b68640c53e22b952($457c3ef73dac1a8e$var$_constructorGuard, ki, Ki, this.fingerprint, $457c3ef73dac1a8e$var$bytes32(IR), index, this.depth + 1, mnemonicOrPath);
    }
    derivePath(path) {
        const components = path.split("/");
        if (components.length === 0 || components[0] === "m" && this.depth !== 0) throw new Error("invalid path - " + path);
        if (components[0] === "m") components.shift();
        let result = this;
        for(let i = 0; i < components.length; i++){
            const component = components[i];
            if (component.match(/^[0-9]+'$/)) {
                const index = parseInt(component.substring(0, component.length - 1));
                if (index >= $457c3ef73dac1a8e$var$HardenedBit) throw new Error("invalid path index - " + component);
                result = result._derive($457c3ef73dac1a8e$var$HardenedBit + index);
            } else if (component.match(/^[0-9]+$/)) {
                const index = parseInt(component);
                if (index >= $457c3ef73dac1a8e$var$HardenedBit) throw new Error("invalid path index - " + component);
                result = result._derive(index);
            } else throw new Error("invalid path component - " + component);
        }
        return result;
    }
    static _fromSeed(seed, mnemonic) {
        const seedArray = (0, $eg8oT.arrayify)(seed);
        if (seedArray.length < 16 || seedArray.length > 64) throw new Error("invalid seed");
        const I = (0, $eg8oT.arrayify)((0, $cdc53f4b1672f85d$export$967075d2f3b8e7ff)((0, $acdfd7c13cce7a9a$export$d2a8849cfb277c).sha512, $457c3ef73dac1a8e$var$MasterSecret, seedArray));
        return new $457c3ef73dac1a8e$export$b68640c53e22b952($457c3ef73dac1a8e$var$_constructorGuard, $457c3ef73dac1a8e$var$bytes32(I.slice(0, 32)), null, "0x00000000", $457c3ef73dac1a8e$var$bytes32(I.slice(32)), 0, 0, mnemonic);
    }
    static fromMnemonic(mnemonic, password, wordlist) {
        // If a locale name was passed in, find the associated wordlist
        wordlist = $457c3ef73dac1a8e$var$getWordlist(wordlist);
        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)
        mnemonic = $457c3ef73dac1a8e$export$4becd65eb23312e6($457c3ef73dac1a8e$export$135e090d58b310ca(mnemonic, wordlist), wordlist);
        return $457c3ef73dac1a8e$export$b68640c53e22b952._fromSeed($457c3ef73dac1a8e$export$3dee74f1204ab09f(mnemonic, password), {
            phrase: mnemonic,
            path: "m",
            locale: wordlist.locale
        });
    }
    static fromSeed(seed) {
        return $457c3ef73dac1a8e$export$b68640c53e22b952._fromSeed(seed, null);
    }
    static fromExtendedKey(extendedKey) {
        const bytes = (0, $34e4ad7d2aa99cc1$export$45a587635c9954b2).decode(extendedKey);
        if (bytes.length !== 82 || $457c3ef73dac1a8e$var$base58check(bytes.slice(0, 78)) !== extendedKey) $457c3ef73dac1a8e$var$logger.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
        const depth = bytes[4];
        const parentFingerprint = (0, $eg8oT.hexlify)(bytes.slice(5, 9));
        const index = parseInt((0, $eg8oT.hexlify)(bytes.slice(9, 13)).substring(2), 16);
        const chainCode = (0, $eg8oT.hexlify)(bytes.slice(13, 45));
        const key = bytes.slice(45, 78);
        switch((0, $eg8oT.hexlify)(bytes.slice(0, 4))){
            // Public Key
            case "0x0488b21e":
            case "0x043587cf":
                return new $457c3ef73dac1a8e$export$b68640c53e22b952($457c3ef73dac1a8e$var$_constructorGuard, null, (0, $eg8oT.hexlify)(key), parentFingerprint, chainCode, index, depth, null);
            // Private Key
            case "0x0488ade4":
            case "0x04358394 ":
                if (key[0] !== 0) break;
                return new $457c3ef73dac1a8e$export$b68640c53e22b952($457c3ef73dac1a8e$var$_constructorGuard, (0, $eg8oT.hexlify)(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);
        }
        return $457c3ef73dac1a8e$var$logger.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
    }
}
function $457c3ef73dac1a8e$export$3dee74f1204ab09f(mnemonic, password) {
    if (!password) password = "";
    const salt = (0, $cde319f07c8777da$export$8feeb310b4b4752f)("mnemonic" + password, (0, $cde319f07c8777da$export$c6986442964129f5).NFKD);
    return (0, $b1254480b6ba1484$export$448fa22aedc9dbca)((0, $cde319f07c8777da$export$8feeb310b4b4752f)(mnemonic, (0, $cde319f07c8777da$export$c6986442964129f5).NFKD), salt, 2048, 64, "sha512");
}
function $457c3ef73dac1a8e$export$135e090d58b310ca(mnemonic, wordlist) {
    wordlist = $457c3ef73dac1a8e$var$getWordlist(wordlist);
    $457c3ef73dac1a8e$var$logger.checkNormalize();
    const words = wordlist.split(mnemonic);
    if (words.length % 3 !== 0) throw new Error("invalid mnemonic");
    const entropy = (0, $eg8oT.arrayify)(new Uint8Array(Math.ceil(11 * words.length / 8)));
    let offset = 0;
    for(let i = 0; i < words.length; i++){
        let index = wordlist.getWordIndex(words[i].normalize("NFKD"));
        if (index === -1) throw new Error("invalid mnemonic");
        for(let bit = 0; bit < 11; bit++){
            if (index & 1 << 10 - bit) entropy[offset >> 3] |= 1 << 7 - offset % 8;
            offset++;
        }
    }
    const entropyBits = 32 * words.length / 3;
    const checksumBits = words.length / 3;
    const checksumMask = $457c3ef73dac1a8e$var$getUpperMask(checksumBits);
    const checksum = (0, $eg8oT.arrayify)((0, $cdc53f4b1672f85d$export$bced8d2aada2d1c9)(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;
    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) throw new Error("invalid checksum");
    return (0, $eg8oT.hexlify)(entropy.slice(0, entropyBits / 8));
}
function $457c3ef73dac1a8e$export$4becd65eb23312e6(entropy, wordlist) {
    wordlist = $457c3ef73dac1a8e$var$getWordlist(wordlist);
    entropy = (0, $eg8oT.arrayify)(entropy);
    if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) throw new Error("invalid entropy");
    const indices = [
        0
    ];
    let remainingBits = 11;
    for(let i = 0; i < entropy.length; i++)// Consume the whole byte (with still more to go)
    if (remainingBits > 8) {
        indices[indices.length - 1] <<= 8;
        indices[indices.length - 1] |= entropy[i];
        remainingBits -= 8;
    // This byte will complete an 11-bit index
    } else {
        indices[indices.length - 1] <<= remainingBits;
        indices[indices.length - 1] |= entropy[i] >> 8 - remainingBits;
        // Start the next word
        indices.push(entropy[i] & $457c3ef73dac1a8e$var$getLowerMask(8 - remainingBits));
        remainingBits += 3;
    }
    // Compute the checksum bits
    const checksumBits = entropy.length / 4;
    const checksum = (0, $eg8oT.arrayify)((0, $cdc53f4b1672f85d$export$bced8d2aada2d1c9)(entropy))[0] & $457c3ef73dac1a8e$var$getUpperMask(checksumBits);
    // Shift the checksum into the word indices
    indices[indices.length - 1] <<= checksumBits;
    indices[indices.length - 1] |= checksum >> 8 - checksumBits;
    return wordlist.join(indices.map((index)=>wordlist.getWord(index)));
}
function $457c3ef73dac1a8e$export$5eea3393c6119c80(mnemonic, wordlist) {
    try {
        $457c3ef73dac1a8e$export$135e090d58b310ca(mnemonic, wordlist);
        return true;
    } catch (error) {}
    return false;
}
function $457c3ef73dac1a8e$export$22b80e4f9eff636d(index) {
    if (typeof index !== "number" || index < 0 || index >= $457c3ef73dac1a8e$var$HardenedBit || index % 1) $457c3ef73dac1a8e$var$logger.throwArgumentError("invalid account index", "index", index);
    return `m/44'/60'/${index}'/0/0`;
}


Object.defineProperty($924b12823ef5c5c6$exports, "defaultPath", {
    enumerable: true,
    get: function() {
        return $457c3ef73dac1a8e$export$d48ad89f7e11a603;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "entropyToMnemonic", {
    enumerable: true,
    get: function() {
        return $457c3ef73dac1a8e$export$4becd65eb23312e6;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "getAccountPath", {
    enumerable: true,
    get: function() {
        return $457c3ef73dac1a8e$export$22b80e4f9eff636d;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "HDNode", {
    enumerable: true,
    get: function() {
        return $457c3ef73dac1a8e$export$b68640c53e22b952;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "isValidMnemonic", {
    enumerable: true,
    get: function() {
        return $457c3ef73dac1a8e$export$5eea3393c6119c80;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "mnemonicToEntropy", {
    enumerable: true,
    get: function() {
        return $457c3ef73dac1a8e$export$135e090d58b310ca;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "mnemonicToSeed", {
    enumerable: true,
    get: function() {
        return $457c3ef73dac1a8e$export$3dee74f1204ab09f;
    }
});

"use strict";
function $9cffbe90cbe739c0$export$724d6cf6b9fd8578(json) {
    let data = null;
    try {
        data = JSON.parse(json);
    } catch (error) {
        return false;
    }
    return data.encseed && data.ethaddr;
}
function $9cffbe90cbe739c0$export$67dc926b8e68b2d8(json) {
    let data = null;
    try {
        data = JSON.parse(json);
    } catch (error) {
        return false;
    }
    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) return false;
    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff
    return true;
}
function $9cffbe90cbe739c0$export$9a68ee9f8f3afd38(json) {
    if ($9cffbe90cbe739c0$export$724d6cf6b9fd8578(json)) try {
        return (0, $8b38701037b2e5d8$export$88411125f012957a)(JSON.parse(json).ethaddr);
    } catch (error) {
        return null;
    }
    if ($9cffbe90cbe739c0$export$67dc926b8e68b2d8(json)) try {
        return (0, $8b38701037b2e5d8$export$88411125f012957a)(JSON.parse(json).address);
    } catch (error) {
        return null;
    }
    return null;
}


Object.defineProperty($924b12823ef5c5c6$exports, "getJsonWalletAddress", {
    enumerable: true,
    get: function() {
        return $9cffbe90cbe739c0$export$9a68ee9f8f3afd38;
    }
});

Object.defineProperty($924b12823ef5c5c6$exports, "keccak256", {
    enumerable: true,
    get: function() {
        return $dd686f272f8051f8$export$f8151fce47ad1c35;
    }
});

var $cbv61 = parcelRequire("cbv61");
Object.defineProperty($924b12823ef5c5c6$exports, "Logger", {
    enumerable: true,
    get: function() {
        return $cbv61.Logger;
    }
});

Object.defineProperty($924b12823ef5c5c6$exports, "computeHmac", {
    enumerable: true,
    get: function() {
        return $cdc53f4b1672f85d$export$967075d2f3b8e7ff;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "ripemd160", {
    enumerable: true,
    get: function() {
        return $cdc53f4b1672f85d$export$d1cea0ee4e3f0d3e;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "sha256", {
    enumerable: true,
    get: function() {
        return $cdc53f4b1672f85d$export$bced8d2aada2d1c9;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "sha512", {
    enumerable: true,
    get: function() {
        return $cdc53f4b1672f85d$export$a888d2532e6dc7bb;
    }
});


var $eg8oT = parcelRequire("eg8oT");




var $cbv61 = parcelRequire("cbv61");
const $a64eb1bf23442202$export$83d89fbfd8236492 = "solidity/5.7.0";


"use strict";
const $112a678b453278d2$var$regexBytes = new RegExp("^bytes([0-9]+)$");
const $112a678b453278d2$var$regexNumber = new RegExp("^(u?int)([0-9]*)$");
const $112a678b453278d2$var$regexArray = new RegExp("^(.*)\\[([0-9]*)\\]$");
const $112a678b453278d2$var$Zeros = "0000000000000000000000000000000000000000000000000000000000000000";
const $112a678b453278d2$var$logger = new (0, $cbv61.Logger)((0, $a64eb1bf23442202$export$83d89fbfd8236492));
function $112a678b453278d2$var$_pack(type, value, isArray) {
    switch(type){
        case "address":
            if (isArray) return (0, $eg8oT.zeroPad)(value, 32);
            return (0, $eg8oT.arrayify)(value);
        case "string":
            return (0, $cde319f07c8777da$export$8feeb310b4b4752f)(value);
        case "bytes":
            return (0, $eg8oT.arrayify)(value);
        case "bool":
            value = value ? "0x01" : "0x00";
            if (isArray) return (0, $eg8oT.zeroPad)(value, 32);
            return (0, $eg8oT.arrayify)(value);
    }
    let match = type.match($112a678b453278d2$var$regexNumber);
    if (match) {
        //let signed = (match[1] === "int")
        let size = parseInt(match[2] || "256");
        if (match[2] && String(size) !== match[2] || size % 8 !== 0 || size === 0 || size > 256) $112a678b453278d2$var$logger.throwArgumentError("invalid number type", "type", type);
        if (isArray) size = 256;
        value = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value).toTwos(size);
        return (0, $eg8oT.zeroPad)(value, size / 8);
    }
    match = type.match($112a678b453278d2$var$regexBytes);
    if (match) {
        const size = parseInt(match[1]);
        if (String(size) !== match[1] || size === 0 || size > 32) $112a678b453278d2$var$logger.throwArgumentError("invalid bytes type", "type", type);
        if ((0, $eg8oT.arrayify)(value).byteLength !== size) $112a678b453278d2$var$logger.throwArgumentError(`invalid value for ${type}`, "value", value);
        if (isArray) return (0, $eg8oT.arrayify)((value + $112a678b453278d2$var$Zeros).substring(0, 66));
        return value;
    }
    match = type.match($112a678b453278d2$var$regexArray);
    if (match && Array.isArray(value)) {
        const baseType = match[1];
        const count = parseInt(match[2] || String(value.length));
        if (count != value.length) $112a678b453278d2$var$logger.throwArgumentError(`invalid array length for ${type}`, "value", value);
        const result = [];
        value.forEach(function(value) {
            result.push($112a678b453278d2$var$_pack(baseType, value, true));
        });
        return (0, $eg8oT.concat)(result);
    }
    return $112a678b453278d2$var$logger.throwArgumentError("invalid type", "type", type);
}
function $112a678b453278d2$export$2a703dbb0cb35339(types, values) {
    if (types.length != values.length) $112a678b453278d2$var$logger.throwArgumentError("wrong number of values; expected ${ types.length }", "values", values);
    const tight = [];
    types.forEach(function(type, index) {
        tight.push($112a678b453278d2$var$_pack(type, values[index]));
    });
    return (0, $eg8oT.hexlify)((0, $eg8oT.concat)(tight));
}
function $112a678b453278d2$export$f8151fce47ad1c35(types, values) {
    return (0, $dd686f272f8051f8$export$f8151fce47ad1c35)($112a678b453278d2$export$2a703dbb0cb35339(types, values));
}
function $112a678b453278d2$export$bced8d2aada2d1c9(types, values) {
    return (0, $cdc53f4b1672f85d$export$bced8d2aada2d1c9)($112a678b453278d2$export$2a703dbb0cb35339(types, values));
}


Object.defineProperty($924b12823ef5c5c6$exports, "solidityKeccak256", {
    enumerable: true,
    get: function() {
        return $112a678b453278d2$export$f8151fce47ad1c35;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "solidityPack", {
    enumerable: true,
    get: function() {
        return $112a678b453278d2$export$2a703dbb0cb35339;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "soliditySha256", {
    enumerable: true,
    get: function() {
        return $112a678b453278d2$export$bced8d2aada2d1c9;
    }
});

var $eg8oT = parcelRequire("eg8oT");

var $cbv61 = parcelRequire("cbv61");
const $46786807623f7c13$export$83d89fbfd8236492 = "random/5.7.0";


"use strict";
const $e4b56570577a4a9c$var$logger = new (0, $cbv61.Logger)((0, $46786807623f7c13$export$83d89fbfd8236492));
// Debugging line for testing browser lib in node
//const window = { crypto: { getRandomValues: () => { } } };
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis
function $e4b56570577a4a9c$var$getGlobal() {
    if (typeof self !== "undefined") return self;
    if (typeof window !== "undefined") return window;
    if (typeof $parcel$global !== "undefined") return $parcel$global;
    throw new Error("unable to locate global object");
}
const $e4b56570577a4a9c$var$anyGlobal = $e4b56570577a4a9c$var$getGlobal();
let $e4b56570577a4a9c$var$crypto = $e4b56570577a4a9c$var$anyGlobal.crypto || $e4b56570577a4a9c$var$anyGlobal.msCrypto;
if (!$e4b56570577a4a9c$var$crypto || !$e4b56570577a4a9c$var$crypto.getRandomValues) {
    $e4b56570577a4a9c$var$logger.warn("WARNING: Missing strong random number source");
    $e4b56570577a4a9c$var$crypto = {
        getRandomValues: function(buffer) {
            return $e4b56570577a4a9c$var$logger.throwError("no secure random source avaialble", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: "crypto.getRandomValues"
            });
        }
    };
}
function $e4b56570577a4a9c$export$5f828d93ff035aa8(length) {
    if (length <= 0 || length > 1024 || length % 1 || length != length) $e4b56570577a4a9c$var$logger.throwArgumentError("invalid length", "length", length);
    const result = new Uint8Array(length);
    $e4b56570577a4a9c$var$crypto.getRandomValues(result);
    return (0, $eg8oT.arrayify)(result);
}


Object.defineProperty($924b12823ef5c5c6$exports, "randomBytes", {
    enumerable: true,
    get: function() {
        return $e4b56570577a4a9c$export$5f828d93ff035aa8;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "shuffled", {
    enumerable: true,
    get: function() {
        return $da22b4fd609de650$export$e6c7296801b9b341;
    }
});

Object.defineProperty($924b12823ef5c5c6$exports, "checkProperties", {
    enumerable: true,
    get: function() {
        return $b19fb92a27e5f35f$exports.checkProperties;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "deepCopy", {
    enumerable: true,
    get: function() {
        return $b19fb92a27e5f35f$exports.deepCopy;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "defineReadOnly", {
    enumerable: true,
    get: function() {
        return $b19fb92a27e5f35f$exports.defineReadOnly;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "getStatic", {
    enumerable: true,
    get: function() {
        return $b19fb92a27e5f35f$exports.getStatic;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "resolveProperties", {
    enumerable: true,
    get: function() {
        return $b19fb92a27e5f35f$exports.resolveProperties;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "shallowCopy", {
    enumerable: true,
    get: function() {
        return $b19fb92a27e5f35f$exports.shallowCopy;
    }
});

var $924b12823ef5c5c6$var$RLP = $924b12823ef5c5c6$var$__importStar((parcelRequire("4G7Hv")));
$924b12823ef5c5c6$exports.RLP = $924b12823ef5c5c6$var$RLP;

Object.defineProperty($924b12823ef5c5c6$exports, "computePublicKey", {
    enumerable: true,
    get: function() {
        return $bccb365df25a232d$export$4a89473d39301224;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "recoverPublicKey", {
    enumerable: true,
    get: function() {
        return $bccb365df25a232d$export$952dd09fbe0232b7;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "SigningKey", {
    enumerable: true,
    get: function() {
        return $bccb365df25a232d$export$21643ca94aed3e83;
    }
});


var $eg8oT = parcelRequire("eg8oT");

"use strict";
function $03ff49dc5d0faca9$export$b97e949c0076e971(text) {
    // Get the bytes
    const bytes = (0, $cde319f07c8777da$export$8feeb310b4b4752f)(text);
    // Check we have room for null-termination
    if (bytes.length > 31) throw new Error("bytes32 string must be less than 32 bytes");
    // Zero-pad (implicitly null-terminates)
    return (0, $eg8oT.hexlify)((0, $eg8oT.concat)([
        bytes,
        (0, $479bed3ace97c359$export$71c2e4e213dcb7f2)
    ]).slice(0, 32));
}
function $03ff49dc5d0faca9$export$49340cb8f3954db8(bytes) {
    const data = (0, $eg8oT.arrayify)(bytes);
    // Must be 32 bytes with a null-termination
    if (data.length !== 32) throw new Error("invalid bytes32 - not 32 bytes long");
    if (data[31] !== 0) throw new Error("invalid bytes32 string - no null terminator");
    // Find the null termination
    let length = 31;
    while(data[length - 1] === 0)length--;
    // Determine the string value
    return (0, $cde319f07c8777da$export$7643a1dc2c38d5eb)(data.slice(0, length));
}


"use strict";
function $474e0b396e226340$var$bytes2(data) {
    if (data.length % 4 !== 0) throw new Error("bad data");
    let result = [];
    for(let i = 0; i < data.length; i += 4)result.push(parseInt(data.substring(i, i + 4), 16));
    return result;
}
function $474e0b396e226340$var$createTable(data, func) {
    if (!func) func = function(value) {
        return [
            parseInt(value, 16)
        ];
    };
    let lo = 0;
    let result = {};
    data.split(",").forEach((pair)=>{
        let comps = pair.split(":");
        lo += parseInt(comps[0], 16);
        result[lo] = func(comps[1]);
    });
    return result;
}
function $474e0b396e226340$var$createRangeTable(data) {
    let hi = 0;
    return data.split(",").map((v)=>{
        let comps = v.split("-");
        if (comps.length === 1) comps[1] = "0";
        else if (comps[1] === "") comps[1] = "1";
        let lo = hi + parseInt(comps[0], 16);
        hi = parseInt(comps[1], 16);
        return {
            l: lo,
            h: hi
        };
    });
}
function $474e0b396e226340$var$matchMap(value, ranges) {
    let lo = 0;
    for(let i = 0; i < ranges.length; i++){
        let range = ranges[i];
        lo += range.l;
        if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {
            if (range.e && range.e.indexOf(value - lo) !== -1) continue;
            return range;
        }
    }
    return null;
}
const $474e0b396e226340$var$Table_A_1_ranges = $474e0b396e226340$var$createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d");
// @TODO: Make this relative...
const $474e0b396e226340$var$Table_B_1_flags = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((v)=>parseInt(v, 16));
const $474e0b396e226340$var$Table_B_2_ranges = [
    {
        h: 25,
        s: 32,
        l: 65
    },
    {
        h: 30,
        s: 32,
        e: [
            23
        ],
        l: 127
    },
    {
        h: 54,
        s: 1,
        e: [
            48
        ],
        l: 64,
        d: 2
    },
    {
        h: 14,
        s: 1,
        l: 57,
        d: 2
    },
    {
        h: 44,
        s: 1,
        l: 17,
        d: 2
    },
    {
        h: 10,
        s: 1,
        e: [
            2,
            6,
            8
        ],
        l: 61,
        d: 2
    },
    {
        h: 16,
        s: 1,
        l: 68,
        d: 2
    },
    {
        h: 84,
        s: 1,
        e: [
            18,
            24,
            66
        ],
        l: 19,
        d: 2
    },
    {
        h: 26,
        s: 32,
        e: [
            17
        ],
        l: 435
    },
    {
        h: 22,
        s: 1,
        l: 71,
        d: 2
    },
    {
        h: 15,
        s: 80,
        l: 40
    },
    {
        h: 31,
        s: 32,
        l: 16
    },
    {
        h: 32,
        s: 1,
        l: 80,
        d: 2
    },
    {
        h: 52,
        s: 1,
        l: 42,
        d: 2
    },
    {
        h: 12,
        s: 1,
        l: 55,
        d: 2
    },
    {
        h: 40,
        s: 1,
        e: [
            38
        ],
        l: 15,
        d: 2
    },
    {
        h: 14,
        s: 1,
        l: 48,
        d: 2
    },
    {
        h: 37,
        s: 48,
        l: 49
    },
    {
        h: 148,
        s: 1,
        l: 6351,
        d: 2
    },
    {
        h: 88,
        s: 1,
        l: 160,
        d: 2
    },
    {
        h: 15,
        s: 16,
        l: 704
    },
    {
        h: 25,
        s: 26,
        l: 854
    },
    {
        h: 25,
        s: 32,
        l: 55915
    },
    {
        h: 37,
        s: 40,
        l: 1247
    },
    {
        h: 25,
        s: -119711,
        l: 53248
    },
    {
        h: 25,
        s: -119763,
        l: 52
    },
    {
        h: 25,
        s: -119815,
        l: 52
    },
    {
        h: 25,
        s: -119867,
        e: [
            1,
            4,
            5,
            7,
            8,
            11,
            12,
            17
        ],
        l: 52
    },
    {
        h: 25,
        s: -119919,
        l: 52
    },
    {
        h: 24,
        s: -119971,
        e: [
            2,
            7,
            8,
            17
        ],
        l: 52
    },
    {
        h: 24,
        s: -120023,
        e: [
            2,
            7,
            13,
            15,
            16,
            17
        ],
        l: 52
    },
    {
        h: 25,
        s: -120075,
        l: 52
    },
    {
        h: 25,
        s: -120127,
        l: 52
    },
    {
        h: 25,
        s: -120179,
        l: 52
    },
    {
        h: 25,
        s: -120231,
        l: 52
    },
    {
        h: 25,
        s: -120283,
        l: 52
    },
    {
        h: 25,
        s: -120335,
        l: 52
    },
    {
        h: 24,
        s: -119543,
        e: [
            17
        ],
        l: 56
    },
    {
        h: 24,
        s: -119601,
        e: [
            17
        ],
        l: 58
    },
    {
        h: 24,
        s: -119659,
        e: [
            17
        ],
        l: 58
    },
    {
        h: 24,
        s: -119717,
        e: [
            17
        ],
        l: 58
    },
    {
        h: 24,
        s: -119775,
        e: [
            17
        ],
        l: 58
    }
];
const $474e0b396e226340$var$Table_B_2_lut_abs = $474e0b396e226340$var$createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3");
const $474e0b396e226340$var$Table_B_2_lut_rel = $474e0b396e226340$var$createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7");
const $474e0b396e226340$var$Table_B_2_complex = $474e0b396e226340$var$createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", $474e0b396e226340$var$bytes2);
const $474e0b396e226340$var$Table_C_ranges = $474e0b396e226340$var$createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
function $474e0b396e226340$var$flatten(values) {
    return values.reduce((accum, value)=>{
        value.forEach((value)=>{
            accum.push(value);
        });
        return accum;
    }, []);
}
function $474e0b396e226340$export$d1ae0d802533bef0(codepoint) {
    return !!$474e0b396e226340$var$matchMap(codepoint, $474e0b396e226340$var$Table_A_1_ranges);
}
function $474e0b396e226340$export$9630a1f26a43b76c(codepoint) {
    let range = $474e0b396e226340$var$matchMap(codepoint, $474e0b396e226340$var$Table_B_2_ranges);
    if (range) return [
        codepoint + range.s
    ];
    let codes = $474e0b396e226340$var$Table_B_2_lut_abs[codepoint];
    if (codes) return codes;
    let shift = $474e0b396e226340$var$Table_B_2_lut_rel[codepoint];
    if (shift) return [
        codepoint + shift[0]
    ];
    let complex = $474e0b396e226340$var$Table_B_2_complex[codepoint];
    if (complex) return complex;
    return null;
}
function $474e0b396e226340$export$e07a548cae6d1553(codepoint) {
    return !!$474e0b396e226340$var$matchMap(codepoint, $474e0b396e226340$var$Table_C_ranges);
}
function $474e0b396e226340$export$94f0b6f93c619bc(value) {
    // This allows platforms with incomplete normalize to bypass
    // it for very basic names which the built-in toLowerCase
    // will certainly handle correctly
    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) return value.toLowerCase();
    // Get the code points (keeping the current normalization)
    let codes = (0, $cde319f07c8777da$export$ae470a36a31b28c2)(value);
    codes = $474e0b396e226340$var$flatten(codes.map((code)=>{
        // Substitute Table B.1 (Maps to Nothing)
        if ($474e0b396e226340$var$Table_B_1_flags.indexOf(code) >= 0) return [];
        if (code >= 0xfe00 && code <= 0xfe0f) return [];
        // Substitute Table B.2 (Case Folding)
        let codesTableB2 = $474e0b396e226340$export$9630a1f26a43b76c(code);
        if (codesTableB2) return codesTableB2;
        // No Substitution
        return [
            code
        ];
    }));
    // Normalize using form KC
    codes = (0, $cde319f07c8777da$export$ae470a36a31b28c2)((0, $cde319f07c8777da$export$232e1dab03132235)(codes), (0, $cde319f07c8777da$export$c6986442964129f5).NFKC);
    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9
    codes.forEach((code)=>{
        if ($474e0b396e226340$export$e07a548cae6d1553(code)) throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
    });
    // Prohibit Unassigned Code Points (Table A.1)
    codes.forEach((code)=>{
        if ($474e0b396e226340$export$d1ae0d802533bef0(code)) throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
    });
    // IDNA extras
    let name = (0, $cde319f07c8777da$export$232e1dab03132235)(codes);
    // IDNA: 4.2.3.1
    if (name.substring(0, 1) === "-" || name.substring(2, 4) === "--" || name.substring(name.length - 1) === "-") throw new Error("invalid hyphen");
    return name;
}


Object.defineProperty($924b12823ef5c5c6$exports, "formatBytes32String", {
    enumerable: true,
    get: function() {
        return $03ff49dc5d0faca9$export$b97e949c0076e971;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "nameprep", {
    enumerable: true,
    get: function() {
        return $474e0b396e226340$export$94f0b6f93c619bc;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "parseBytes32String", {
    enumerable: true,
    get: function() {
        return $03ff49dc5d0faca9$export$49340cb8f3954db8;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "_toEscapedUtf8String", {
    enumerable: true,
    get: function() {
        return $cde319f07c8777da$export$a7a0ec15960b9055;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "toUtf8Bytes", {
    enumerable: true,
    get: function() {
        return $cde319f07c8777da$export$8feeb310b4b4752f;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "toUtf8CodePoints", {
    enumerable: true,
    get: function() {
        return $cde319f07c8777da$export$ae470a36a31b28c2;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "toUtf8String", {
    enumerable: true,
    get: function() {
        return $cde319f07c8777da$export$7643a1dc2c38d5eb;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "Utf8ErrorFuncs", {
    enumerable: true,
    get: function() {
        return $cde319f07c8777da$export$c6e2180c5bb5bc05;
    }
});

Object.defineProperty($924b12823ef5c5c6$exports, "accessListify", {
    enumerable: true,
    get: function() {
        return $1b59a48ea3c080da$export$6c8662b1600dce2;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "computeAddress", {
    enumerable: true,
    get: function() {
        return $1b59a48ea3c080da$export$e67e2732ba9803f9;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "parseTransaction", {
    enumerable: true,
    get: function() {
        return $1b59a48ea3c080da$export$98e6a39c04603d36;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "recoverAddress", {
    enumerable: true,
    get: function() {
        return $1b59a48ea3c080da$export$23cc18f96d8510e2;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "serializeTransaction", {
    enumerable: true,
    get: function() {
        return $1b59a48ea3c080da$export$dfdc1655ccc5b9cb;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "TransactionTypes", {
    enumerable: true,
    get: function() {
        return $1b59a48ea3c080da$export$80349e05e0724e11;
    }
});

var $eg8oT = parcelRequire("eg8oT");

var $cbv61 = parcelRequire("cbv61");


"use strict";
const $6a43b14767ddd419$var$logger = new (0, $cbv61.Logger)((0, $156aa2266a46bfdf$export$83d89fbfd8236492));
const $6a43b14767ddd419$var$_constructorGuard = {};
const $6a43b14767ddd419$var$Zero = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(0);
const $6a43b14767ddd419$var$NegativeOne = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(-1);
function $6a43b14767ddd419$var$throwFault(message, fault, operation, value) {
    const params = {
        fault: fault,
        operation: operation
    };
    if (value !== undefined) params.value = value;
    return $6a43b14767ddd419$var$logger.throwError(message, (0, $cbv61.Logger).errors.NUMERIC_FAULT, params);
}
// Constant to pull zeros from for multipliers
let $6a43b14767ddd419$var$zeros = "0";
while($6a43b14767ddd419$var$zeros.length < 256)$6a43b14767ddd419$var$zeros += $6a43b14767ddd419$var$zeros;
// Returns a string "1" followed by decimal "0"s
function $6a43b14767ddd419$var$getMultiplier(decimals) {
    if (typeof decimals !== "number") try {
        decimals = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(decimals).toNumber();
    } catch (e) {}
    if (typeof decimals === "number" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) return "1" + $6a43b14767ddd419$var$zeros.substring(0, decimals);
    return $6a43b14767ddd419$var$logger.throwArgumentError("invalid decimal size", "decimals", decimals);
}
function $6a43b14767ddd419$export$cc011b843b5d69f2(value, decimals) {
    if (decimals == null) decimals = 0;
    const multiplier = $6a43b14767ddd419$var$getMultiplier(decimals);
    // Make sure wei is a big number (convert as necessary)
    value = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value);
    const negative = value.lt($6a43b14767ddd419$var$Zero);
    if (negative) value = value.mul($6a43b14767ddd419$var$NegativeOne);
    let fraction = value.mod(multiplier).toString();
    while(fraction.length < multiplier.length - 1)fraction = "0" + fraction;
    // Strip training 0
    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
    const whole = value.div(multiplier).toString();
    if (multiplier.length === 1) value = whole;
    else value = whole + "." + fraction;
    if (negative) value = "-" + value;
    return value;
}
function $6a43b14767ddd419$export$1b039987e86d7269(value, decimals) {
    if (decimals == null) decimals = 0;
    const multiplier = $6a43b14767ddd419$var$getMultiplier(decimals);
    if (typeof value !== "string" || !value.match(/^-?[0-9.]+$/)) $6a43b14767ddd419$var$logger.throwArgumentError("invalid decimal value", "value", value);
    // Is it negative?
    const negative = value.substring(0, 1) === "-";
    if (negative) value = value.substring(1);
    if (value === ".") $6a43b14767ddd419$var$logger.throwArgumentError("missing value", "value", value);
    // Split it into a whole and fractional part
    const comps = value.split(".");
    if (comps.length > 2) $6a43b14767ddd419$var$logger.throwArgumentError("too many decimal points", "value", value);
    let whole = comps[0], fraction = comps[1];
    if (!whole) whole = "0";
    if (!fraction) fraction = "0";
    // Trim trailing zeros
    while(fraction[fraction.length - 1] === "0")fraction = fraction.substring(0, fraction.length - 1);
    // Check the fraction doesn't exceed our decimals size
    if (fraction.length > multiplier.length - 1) $6a43b14767ddd419$var$throwFault("fractional component exceeds decimals", "underflow", "parseFixed");
    // If decimals is 0, we have an empty string for fraction
    if (fraction === "") fraction = "0";
    // Fully pad the string with zeros to get to wei
    while(fraction.length < multiplier.length - 1)fraction += "0";
    const wholeValue = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(whole);
    const fractionValue = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(fraction);
    let wei = wholeValue.mul(multiplier).add(fractionValue);
    if (negative) wei = wei.mul($6a43b14767ddd419$var$NegativeOne);
    return wei;
}
class $6a43b14767ddd419$export$1f3ec5b8f47ebd4d {
    constructor(constructorGuard, signed, width, decimals){
        if (constructorGuard !== $6a43b14767ddd419$var$_constructorGuard) $6a43b14767ddd419$var$logger.throwError("cannot use FixedFormat constructor; use FixedFormat.from", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "new FixedFormat"
        });
        this.signed = signed;
        this.width = width;
        this.decimals = decimals;
        this.name = (signed ? "" : "u") + "fixed" + String(width) + "x" + String(decimals);
        this._multiplier = $6a43b14767ddd419$var$getMultiplier(decimals);
        Object.freeze(this);
    }
    static from(value) {
        if (value instanceof $6a43b14767ddd419$export$1f3ec5b8f47ebd4d) return value;
        if (typeof value === "number") value = `fixed128x${value}`;
        let signed = true;
        let width = 128;
        let decimals = 18;
        if (typeof value === "string") {
            if (value === "fixed") ;
            else if (value === "ufixed") signed = false;
            else {
                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                if (!match) $6a43b14767ddd419$var$logger.throwArgumentError("invalid fixed format", "format", value);
                signed = match[1] !== "u";
                width = parseInt(match[2]);
                decimals = parseInt(match[3]);
            }
        } else if (value) {
            const check = (key, type, defaultValue)=>{
                if (value[key] == null) return defaultValue;
                if (typeof value[key] !== type) $6a43b14767ddd419$var$logger.throwArgumentError("invalid fixed format (" + key + " not " + type + ")", "format." + key, value[key]);
                return value[key];
            };
            signed = check("signed", "boolean", signed);
            width = check("width", "number", width);
            decimals = check("decimals", "number", decimals);
        }
        if (width % 8) $6a43b14767ddd419$var$logger.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width);
        if (decimals > 80) $6a43b14767ddd419$var$logger.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals);
        return new $6a43b14767ddd419$export$1f3ec5b8f47ebd4d($6a43b14767ddd419$var$_constructorGuard, signed, width, decimals);
    }
}
class $6a43b14767ddd419$export$d4693c66c2213e45 {
    constructor(constructorGuard, hex, value, format){
        if (constructorGuard !== $6a43b14767ddd419$var$_constructorGuard) $6a43b14767ddd419$var$logger.throwError("cannot use FixedNumber constructor; use FixedNumber.from", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "new FixedFormat"
        });
        this.format = format;
        this._hex = hex;
        this._value = value;
        this._isFixedNumber = true;
        Object.freeze(this);
    }
    _checkFormat(other) {
        if (this.format.name !== other.format.name) $6a43b14767ddd419$var$logger.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
    }
    addUnsafe(other) {
        this._checkFormat(other);
        const a = $6a43b14767ddd419$export$1b039987e86d7269(this._value, this.format.decimals);
        const b = $6a43b14767ddd419$export$1b039987e86d7269(other._value, other.format.decimals);
        return $6a43b14767ddd419$export$d4693c66c2213e45.fromValue(a.add(b), this.format.decimals, this.format);
    }
    subUnsafe(other) {
        this._checkFormat(other);
        const a = $6a43b14767ddd419$export$1b039987e86d7269(this._value, this.format.decimals);
        const b = $6a43b14767ddd419$export$1b039987e86d7269(other._value, other.format.decimals);
        return $6a43b14767ddd419$export$d4693c66c2213e45.fromValue(a.sub(b), this.format.decimals, this.format);
    }
    mulUnsafe(other) {
        this._checkFormat(other);
        const a = $6a43b14767ddd419$export$1b039987e86d7269(this._value, this.format.decimals);
        const b = $6a43b14767ddd419$export$1b039987e86d7269(other._value, other.format.decimals);
        return $6a43b14767ddd419$export$d4693c66c2213e45.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);
    }
    divUnsafe(other) {
        this._checkFormat(other);
        const a = $6a43b14767ddd419$export$1b039987e86d7269(this._value, this.format.decimals);
        const b = $6a43b14767ddd419$export$1b039987e86d7269(other._value, other.format.decimals);
        return $6a43b14767ddd419$export$d4693c66c2213e45.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);
    }
    floor() {
        const comps = this.toString().split(".");
        if (comps.length === 1) comps.push("0");
        let result = $6a43b14767ddd419$export$d4693c66c2213e45.from(comps[0], this.format);
        const hasFraction = !comps[1].match(/^(0*)$/);
        if (this.isNegative() && hasFraction) result = result.subUnsafe($6a43b14767ddd419$var$ONE.toFormat(result.format));
        return result;
    }
    ceiling() {
        const comps = this.toString().split(".");
        if (comps.length === 1) comps.push("0");
        let result = $6a43b14767ddd419$export$d4693c66c2213e45.from(comps[0], this.format);
        const hasFraction = !comps[1].match(/^(0*)$/);
        if (!this.isNegative() && hasFraction) result = result.addUnsafe($6a43b14767ddd419$var$ONE.toFormat(result.format));
        return result;
    }
    // @TODO: Support other rounding algorithms
    round(decimals) {
        if (decimals == null) decimals = 0;
        // If we are already in range, we're done
        const comps = this.toString().split(".");
        if (comps.length === 1) comps.push("0");
        if (decimals < 0 || decimals > 80 || decimals % 1) $6a43b14767ddd419$var$logger.throwArgumentError("invalid decimal count", "decimals", decimals);
        if (comps[1].length <= decimals) return this;
        const factor = $6a43b14767ddd419$export$d4693c66c2213e45.from("1" + $6a43b14767ddd419$var$zeros.substring(0, decimals), this.format);
        const bump = $6a43b14767ddd419$var$BUMP.toFormat(this.format);
        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);
    }
    isZero() {
        return this._value === "0.0" || this._value === "0";
    }
    isNegative() {
        return this._value[0] === "-";
    }
    toString() {
        return this._value;
    }
    toHexString(width) {
        if (width == null) return this._hex;
        if (width % 8) $6a43b14767ddd419$var$logger.throwArgumentError("invalid byte width", "width", width);
        const hex = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();
        return (0, $eg8oT.hexZeroPad)(hex, width / 8);
    }
    toUnsafeFloat() {
        return parseFloat(this.toString());
    }
    toFormat(format) {
        return $6a43b14767ddd419$export$d4693c66c2213e45.fromString(this._value, format);
    }
    static fromValue(value, decimals, format) {
        // If decimals looks more like a format, and there is no format, shift the parameters
        if (format == null && decimals != null && !(0, $66faa3baf2af8a8b$export$a3d0a7fa9b65683b)(decimals)) {
            format = decimals;
            decimals = null;
        }
        if (decimals == null) decimals = 0;
        if (format == null) format = "fixed";
        return $6a43b14767ddd419$export$d4693c66c2213e45.fromString($6a43b14767ddd419$export$cc011b843b5d69f2(value, decimals), $6a43b14767ddd419$export$1f3ec5b8f47ebd4d.from(format));
    }
    static fromString(value, format) {
        if (format == null) format = "fixed";
        const fixedFormat = $6a43b14767ddd419$export$1f3ec5b8f47ebd4d.from(format);
        const numeric = $6a43b14767ddd419$export$1b039987e86d7269(value, fixedFormat.decimals);
        if (!fixedFormat.signed && numeric.lt($6a43b14767ddd419$var$Zero)) $6a43b14767ddd419$var$throwFault("unsigned value cannot be negative", "overflow", "value", value);
        let hex = null;
        if (fixedFormat.signed) hex = numeric.toTwos(fixedFormat.width).toHexString();
        else {
            hex = numeric.toHexString();
            hex = (0, $eg8oT.hexZeroPad)(hex, fixedFormat.width / 8);
        }
        const decimal = $6a43b14767ddd419$export$cc011b843b5d69f2(numeric, fixedFormat.decimals);
        return new $6a43b14767ddd419$export$d4693c66c2213e45($6a43b14767ddd419$var$_constructorGuard, hex, decimal, fixedFormat);
    }
    static fromBytes(value, format) {
        if (format == null) format = "fixed";
        const fixedFormat = $6a43b14767ddd419$export$1f3ec5b8f47ebd4d.from(format);
        if ((0, $eg8oT.arrayify)(value).length > fixedFormat.width / 8) throw new Error("overflow");
        let numeric = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(value);
        if (fixedFormat.signed) numeric = numeric.fromTwos(fixedFormat.width);
        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();
        const decimal = $6a43b14767ddd419$export$cc011b843b5d69f2(numeric, fixedFormat.decimals);
        return new $6a43b14767ddd419$export$d4693c66c2213e45($6a43b14767ddd419$var$_constructorGuard, hex, decimal, fixedFormat);
    }
    static from(value, format) {
        if (typeof value === "string") return $6a43b14767ddd419$export$d4693c66c2213e45.fromString(value, format);
        if ((0, $eg8oT.isBytes)(value)) return $6a43b14767ddd419$export$d4693c66c2213e45.fromBytes(value, format);
        try {
            return $6a43b14767ddd419$export$d4693c66c2213e45.fromValue(value, 0, format);
        } catch (error) {
            // Allow NUMERIC_FAULT to bubble up
            if (error.code !== (0, $cbv61.Logger).errors.INVALID_ARGUMENT) throw error;
        }
        return $6a43b14767ddd419$var$logger.throwArgumentError("invalid FixedNumber value", "value", value);
    }
    static isFixedNumber(value) {
        return !!(value && value._isFixedNumber);
    }
}
const $6a43b14767ddd419$var$ONE = $6a43b14767ddd419$export$d4693c66c2213e45.from(1);
const $6a43b14767ddd419$var$BUMP = $6a43b14767ddd419$export$d4693c66c2213e45.from("0.5");



var $cbv61 = parcelRequire("cbv61");
const $f596148c9c3a7d31$export$83d89fbfd8236492 = "units/5.7.0";


"use strict";
const $cab4f7c18ce9061c$var$logger = new (0, $cbv61.Logger)((0, $f596148c9c3a7d31$export$83d89fbfd8236492));
const $cab4f7c18ce9061c$var$names = [
    "wei",
    "kwei",
    "mwei",
    "gwei",
    "szabo",
    "finney",
    "ether"
];
function $cab4f7c18ce9061c$export$de1294767e6ef661(value) {
    const comps = String(value).split(".");
    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || value === "." || value === "-.") $cab4f7c18ce9061c$var$logger.throwArgumentError("invalid value", "value", value);
    // Make sure we have at least one whole digit (0 if none)
    let whole = comps[0];
    let negative = "";
    if (whole.substring(0, 1) === "-") {
        negative = "-";
        whole = whole.substring(1);
    }
    // Make sure we have at least 1 whole digit with no leading zeros
    while(whole.substring(0, 1) === "0")whole = whole.substring(1);
    if (whole === "") whole = "0";
    let suffix = "";
    if (comps.length === 2) suffix = "." + (comps[1] || "0");
    while(suffix.length > 2 && suffix[suffix.length - 1] === "0")suffix = suffix.substring(0, suffix.length - 1);
    const formatted = [];
    while(whole.length)if (whole.length <= 3) {
        formatted.unshift(whole);
        break;
    } else {
        const index = whole.length - 3;
        formatted.unshift(whole.substring(index));
        whole = whole.substring(0, index);
    }
    return negative + formatted.join(",") + suffix;
}
function $cab4f7c18ce9061c$export$bd39b96f71da1885(value, unitName) {
    if (typeof unitName === "string") {
        const index = $cab4f7c18ce9061c$var$names.indexOf(unitName);
        if (index !== -1) unitName = 3 * index;
    }
    return (0, $6a43b14767ddd419$export$cc011b843b5d69f2)(value, unitName != null ? unitName : 18);
}
function $cab4f7c18ce9061c$export$203ae30b4f6490b3(value, unitName) {
    if (typeof value !== "string") $cab4f7c18ce9061c$var$logger.throwArgumentError("value must be a string", "value", value);
    if (typeof unitName === "string") {
        const index = $cab4f7c18ce9061c$var$names.indexOf(unitName);
        if (index !== -1) unitName = 3 * index;
    }
    return (0, $6a43b14767ddd419$export$1b039987e86d7269)(value, unitName != null ? unitName : 18);
}
function $cab4f7c18ce9061c$export$11bc63b4c03ea518(wei) {
    return $cab4f7c18ce9061c$export$bd39b96f71da1885(wei, 18);
}
function $cab4f7c18ce9061c$export$642c4e67bbdc0bc7(ether) {
    return $cab4f7c18ce9061c$export$203ae30b4f6490b3(ether, 18);
}


Object.defineProperty($924b12823ef5c5c6$exports, "commify", {
    enumerable: true,
    get: function() {
        return $cab4f7c18ce9061c$export$de1294767e6ef661;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "formatEther", {
    enumerable: true,
    get: function() {
        return $cab4f7c18ce9061c$export$11bc63b4c03ea518;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "parseEther", {
    enumerable: true,
    get: function() {
        return $cab4f7c18ce9061c$export$642c4e67bbdc0bc7;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "formatUnits", {
    enumerable: true,
    get: function() {
        return $cab4f7c18ce9061c$export$bd39b96f71da1885;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "parseUnits", {
    enumerable: true,
    get: function() {
        return $cab4f7c18ce9061c$export$203ae30b4f6490b3;
    }
});
var $1d035c17a0a86b6a$exports = {};

$parcel$export($1d035c17a0a86b6a$exports, "Wallet", () => $1d035c17a0a86b6a$export$bcca3ea514774656, (v) => $1d035c17a0a86b6a$export$bcca3ea514774656 = v);
$parcel$export($1d035c17a0a86b6a$exports, "verifyMessage", () => $1d035c17a0a86b6a$export$228d0e772cc158cb, (v) => $1d035c17a0a86b6a$export$228d0e772cc158cb = v);
$parcel$export($1d035c17a0a86b6a$exports, "verifyTypedData", () => $1d035c17a0a86b6a$export$3603b1c1bcd76798, (v) => $1d035c17a0a86b6a$export$3603b1c1bcd76798 = v);




var $eg8oT = parcelRequire("eg8oT");






var $c2fb1b63b91ce421$exports = {};
"use strict";
(function(root) {
    function checkInt(value) {
        return parseInt(value) === value;
    }
    function checkInts(arrayish) {
        if (!checkInt(arrayish.length)) return false;
        for(var i = 0; i < arrayish.length; i++){
            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) return false;
        }
        return true;
    }
    function coerceArray(arg, copy) {
        // ArrayBuffer view
        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === "Uint8Array") {
            if (copy) {
                if (arg.slice) arg = arg.slice();
                else arg = Array.prototype.slice.call(arg);
            }
            return arg;
        }
        // It's an array; check it is a valid representation of a byte
        if (Array.isArray(arg)) {
            if (!checkInts(arg)) throw new Error("Array contains invalid value: " + arg);
            return new Uint8Array(arg);
        }
        // Something else, but behaves like an array (maybe a Buffer? Arguments?)
        if (checkInt(arg.length) && checkInts(arg)) return new Uint8Array(arg);
        throw new Error("unsupported array-like object");
    }
    function createArray(length) {
        return new Uint8Array(length);
    }
    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
        if (sourceStart != null || sourceEnd != null) {
            if (sourceArray.slice) sourceArray = sourceArray.slice(sourceStart, sourceEnd);
            else sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);
        }
        targetArray.set(sourceArray, targetStart);
    }
    var convertUtf8 = function() {
        function toBytes(text) {
            var result = [], i = 0;
            text = encodeURI(text);
            while(i < text.length){
                var c = text.charCodeAt(i++);
                // if it is a % sign, encode the following 2 bytes as a hex value
                if (c === 37) {
                    result.push(parseInt(text.substr(i, 2), 16));
                    i += 2;
                // otherwise, just the actual byte
                } else result.push(c);
            }
            return coerceArray(result);
        }
        function fromBytes(bytes) {
            var result = [], i = 0;
            while(i < bytes.length){
                var c = bytes[i];
                if (c < 128) {
                    result.push(String.fromCharCode(c));
                    i++;
                } else if (c > 191 && c < 224) {
                    result.push(String.fromCharCode((c & 0x1f) << 6 | bytes[i + 1] & 0x3f));
                    i += 2;
                } else {
                    result.push(String.fromCharCode((c & 0x0f) << 12 | (bytes[i + 1] & 0x3f) << 6 | bytes[i + 2] & 0x3f));
                    i += 3;
                }
            }
            return result.join("");
        }
        return {
            toBytes: toBytes,
            fromBytes: fromBytes
        };
    }();
    var convertHex = function() {
        function toBytes(text) {
            var result = [];
            for(var i = 0; i < text.length; i += 2)result.push(parseInt(text.substr(i, 2), 16));
            return result;
        }
        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html
        var Hex = "0123456789abcdef";
        function fromBytes(bytes) {
            var result = [];
            for(var i = 0; i < bytes.length; i++){
                var v = bytes[i];
                result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);
            }
            return result.join("");
        }
        return {
            toBytes: toBytes,
            fromBytes: fromBytes
        };
    }();
    // Number of rounds by keysize
    var numberOfRounds = {
        16: 10,
        24: 12,
        32: 14
    };
    // Round constant words
    var rcon = [
        0x01,
        0x02,
        0x04,
        0x08,
        0x10,
        0x20,
        0x40,
        0x80,
        0x1b,
        0x36,
        0x6c,
        0xd8,
        0xab,
        0x4d,
        0x9a,
        0x2f,
        0x5e,
        0xbc,
        0x63,
        0xc6,
        0x97,
        0x35,
        0x6a,
        0xd4,
        0xb3,
        0x7d,
        0xfa,
        0xef,
        0xc5,
        0x91
    ];
    // S-box and Inverse S-box (S is for Substitution)
    var S = [
        0x63,
        0x7c,
        0x77,
        0x7b,
        0xf2,
        0x6b,
        0x6f,
        0xc5,
        0x30,
        0x01,
        0x67,
        0x2b,
        0xfe,
        0xd7,
        0xab,
        0x76,
        0xca,
        0x82,
        0xc9,
        0x7d,
        0xfa,
        0x59,
        0x47,
        0xf0,
        0xad,
        0xd4,
        0xa2,
        0xaf,
        0x9c,
        0xa4,
        0x72,
        0xc0,
        0xb7,
        0xfd,
        0x93,
        0x26,
        0x36,
        0x3f,
        0xf7,
        0xcc,
        0x34,
        0xa5,
        0xe5,
        0xf1,
        0x71,
        0xd8,
        0x31,
        0x15,
        0x04,
        0xc7,
        0x23,
        0xc3,
        0x18,
        0x96,
        0x05,
        0x9a,
        0x07,
        0x12,
        0x80,
        0xe2,
        0xeb,
        0x27,
        0xb2,
        0x75,
        0x09,
        0x83,
        0x2c,
        0x1a,
        0x1b,
        0x6e,
        0x5a,
        0xa0,
        0x52,
        0x3b,
        0xd6,
        0xb3,
        0x29,
        0xe3,
        0x2f,
        0x84,
        0x53,
        0xd1,
        0x00,
        0xed,
        0x20,
        0xfc,
        0xb1,
        0x5b,
        0x6a,
        0xcb,
        0xbe,
        0x39,
        0x4a,
        0x4c,
        0x58,
        0xcf,
        0xd0,
        0xef,
        0xaa,
        0xfb,
        0x43,
        0x4d,
        0x33,
        0x85,
        0x45,
        0xf9,
        0x02,
        0x7f,
        0x50,
        0x3c,
        0x9f,
        0xa8,
        0x51,
        0xa3,
        0x40,
        0x8f,
        0x92,
        0x9d,
        0x38,
        0xf5,
        0xbc,
        0xb6,
        0xda,
        0x21,
        0x10,
        0xff,
        0xf3,
        0xd2,
        0xcd,
        0x0c,
        0x13,
        0xec,
        0x5f,
        0x97,
        0x44,
        0x17,
        0xc4,
        0xa7,
        0x7e,
        0x3d,
        0x64,
        0x5d,
        0x19,
        0x73,
        0x60,
        0x81,
        0x4f,
        0xdc,
        0x22,
        0x2a,
        0x90,
        0x88,
        0x46,
        0xee,
        0xb8,
        0x14,
        0xde,
        0x5e,
        0x0b,
        0xdb,
        0xe0,
        0x32,
        0x3a,
        0x0a,
        0x49,
        0x06,
        0x24,
        0x5c,
        0xc2,
        0xd3,
        0xac,
        0x62,
        0x91,
        0x95,
        0xe4,
        0x79,
        0xe7,
        0xc8,
        0x37,
        0x6d,
        0x8d,
        0xd5,
        0x4e,
        0xa9,
        0x6c,
        0x56,
        0xf4,
        0xea,
        0x65,
        0x7a,
        0xae,
        0x08,
        0xba,
        0x78,
        0x25,
        0x2e,
        0x1c,
        0xa6,
        0xb4,
        0xc6,
        0xe8,
        0xdd,
        0x74,
        0x1f,
        0x4b,
        0xbd,
        0x8b,
        0x8a,
        0x70,
        0x3e,
        0xb5,
        0x66,
        0x48,
        0x03,
        0xf6,
        0x0e,
        0x61,
        0x35,
        0x57,
        0xb9,
        0x86,
        0xc1,
        0x1d,
        0x9e,
        0xe1,
        0xf8,
        0x98,
        0x11,
        0x69,
        0xd9,
        0x8e,
        0x94,
        0x9b,
        0x1e,
        0x87,
        0xe9,
        0xce,
        0x55,
        0x28,
        0xdf,
        0x8c,
        0xa1,
        0x89,
        0x0d,
        0xbf,
        0xe6,
        0x42,
        0x68,
        0x41,
        0x99,
        0x2d,
        0x0f,
        0xb0,
        0x54,
        0xbb,
        0x16
    ];
    var Si = [
        0x52,
        0x09,
        0x6a,
        0xd5,
        0x30,
        0x36,
        0xa5,
        0x38,
        0xbf,
        0x40,
        0xa3,
        0x9e,
        0x81,
        0xf3,
        0xd7,
        0xfb,
        0x7c,
        0xe3,
        0x39,
        0x82,
        0x9b,
        0x2f,
        0xff,
        0x87,
        0x34,
        0x8e,
        0x43,
        0x44,
        0xc4,
        0xde,
        0xe9,
        0xcb,
        0x54,
        0x7b,
        0x94,
        0x32,
        0xa6,
        0xc2,
        0x23,
        0x3d,
        0xee,
        0x4c,
        0x95,
        0x0b,
        0x42,
        0xfa,
        0xc3,
        0x4e,
        0x08,
        0x2e,
        0xa1,
        0x66,
        0x28,
        0xd9,
        0x24,
        0xb2,
        0x76,
        0x5b,
        0xa2,
        0x49,
        0x6d,
        0x8b,
        0xd1,
        0x25,
        0x72,
        0xf8,
        0xf6,
        0x64,
        0x86,
        0x68,
        0x98,
        0x16,
        0xd4,
        0xa4,
        0x5c,
        0xcc,
        0x5d,
        0x65,
        0xb6,
        0x92,
        0x6c,
        0x70,
        0x48,
        0x50,
        0xfd,
        0xed,
        0xb9,
        0xda,
        0x5e,
        0x15,
        0x46,
        0x57,
        0xa7,
        0x8d,
        0x9d,
        0x84,
        0x90,
        0xd8,
        0xab,
        0x00,
        0x8c,
        0xbc,
        0xd3,
        0x0a,
        0xf7,
        0xe4,
        0x58,
        0x05,
        0xb8,
        0xb3,
        0x45,
        0x06,
        0xd0,
        0x2c,
        0x1e,
        0x8f,
        0xca,
        0x3f,
        0x0f,
        0x02,
        0xc1,
        0xaf,
        0xbd,
        0x03,
        0x01,
        0x13,
        0x8a,
        0x6b,
        0x3a,
        0x91,
        0x11,
        0x41,
        0x4f,
        0x67,
        0xdc,
        0xea,
        0x97,
        0xf2,
        0xcf,
        0xce,
        0xf0,
        0xb4,
        0xe6,
        0x73,
        0x96,
        0xac,
        0x74,
        0x22,
        0xe7,
        0xad,
        0x35,
        0x85,
        0xe2,
        0xf9,
        0x37,
        0xe8,
        0x1c,
        0x75,
        0xdf,
        0x6e,
        0x47,
        0xf1,
        0x1a,
        0x71,
        0x1d,
        0x29,
        0xc5,
        0x89,
        0x6f,
        0xb7,
        0x62,
        0x0e,
        0xaa,
        0x18,
        0xbe,
        0x1b,
        0xfc,
        0x56,
        0x3e,
        0x4b,
        0xc6,
        0xd2,
        0x79,
        0x20,
        0x9a,
        0xdb,
        0xc0,
        0xfe,
        0x78,
        0xcd,
        0x5a,
        0xf4,
        0x1f,
        0xdd,
        0xa8,
        0x33,
        0x88,
        0x07,
        0xc7,
        0x31,
        0xb1,
        0x12,
        0x10,
        0x59,
        0x27,
        0x80,
        0xec,
        0x5f,
        0x60,
        0x51,
        0x7f,
        0xa9,
        0x19,
        0xb5,
        0x4a,
        0x0d,
        0x2d,
        0xe5,
        0x7a,
        0x9f,
        0x93,
        0xc9,
        0x9c,
        0xef,
        0xa0,
        0xe0,
        0x3b,
        0x4d,
        0xae,
        0x2a,
        0xf5,
        0xb0,
        0xc8,
        0xeb,
        0xbb,
        0x3c,
        0x83,
        0x53,
        0x99,
        0x61,
        0x17,
        0x2b,
        0x04,
        0x7e,
        0xba,
        0x77,
        0xd6,
        0x26,
        0xe1,
        0x69,
        0x14,
        0x63,
        0x55,
        0x21,
        0x0c,
        0x7d
    ];
    // Transformations for encryption
    var T1 = [
        0xc66363a5,
        0xf87c7c84,
        0xee777799,
        0xf67b7b8d,
        0xfff2f20d,
        0xd66b6bbd,
        0xde6f6fb1,
        0x91c5c554,
        0x60303050,
        0x02010103,
        0xce6767a9,
        0x562b2b7d,
        0xe7fefe19,
        0xb5d7d762,
        0x4dababe6,
        0xec76769a,
        0x8fcaca45,
        0x1f82829d,
        0x89c9c940,
        0xfa7d7d87,
        0xeffafa15,
        0xb25959eb,
        0x8e4747c9,
        0xfbf0f00b,
        0x41adadec,
        0xb3d4d467,
        0x5fa2a2fd,
        0x45afafea,
        0x239c9cbf,
        0x53a4a4f7,
        0xe4727296,
        0x9bc0c05b,
        0x75b7b7c2,
        0xe1fdfd1c,
        0x3d9393ae,
        0x4c26266a,
        0x6c36365a,
        0x7e3f3f41,
        0xf5f7f702,
        0x83cccc4f,
        0x6834345c,
        0x51a5a5f4,
        0xd1e5e534,
        0xf9f1f108,
        0xe2717193,
        0xabd8d873,
        0x62313153,
        0x2a15153f,
        0x0804040c,
        0x95c7c752,
        0x46232365,
        0x9dc3c35e,
        0x30181828,
        0x379696a1,
        0x0a05050f,
        0x2f9a9ab5,
        0x0e070709,
        0x24121236,
        0x1b80809b,
        0xdfe2e23d,
        0xcdebeb26,
        0x4e272769,
        0x7fb2b2cd,
        0xea75759f,
        0x1209091b,
        0x1d83839e,
        0x582c2c74,
        0x341a1a2e,
        0x361b1b2d,
        0xdc6e6eb2,
        0xb45a5aee,
        0x5ba0a0fb,
        0xa45252f6,
        0x763b3b4d,
        0xb7d6d661,
        0x7db3b3ce,
        0x5229297b,
        0xdde3e33e,
        0x5e2f2f71,
        0x13848497,
        0xa65353f5,
        0xb9d1d168,
        0x00000000,
        0xc1eded2c,
        0x40202060,
        0xe3fcfc1f,
        0x79b1b1c8,
        0xb65b5bed,
        0xd46a6abe,
        0x8dcbcb46,
        0x67bebed9,
        0x7239394b,
        0x944a4ade,
        0x984c4cd4,
        0xb05858e8,
        0x85cfcf4a,
        0xbbd0d06b,
        0xc5efef2a,
        0x4faaaae5,
        0xedfbfb16,
        0x864343c5,
        0x9a4d4dd7,
        0x66333355,
        0x11858594,
        0x8a4545cf,
        0xe9f9f910,
        0x04020206,
        0xfe7f7f81,
        0xa05050f0,
        0x783c3c44,
        0x259f9fba,
        0x4ba8a8e3,
        0xa25151f3,
        0x5da3a3fe,
        0x804040c0,
        0x058f8f8a,
        0x3f9292ad,
        0x219d9dbc,
        0x70383848,
        0xf1f5f504,
        0x63bcbcdf,
        0x77b6b6c1,
        0xafdada75,
        0x42212163,
        0x20101030,
        0xe5ffff1a,
        0xfdf3f30e,
        0xbfd2d26d,
        0x81cdcd4c,
        0x180c0c14,
        0x26131335,
        0xc3ecec2f,
        0xbe5f5fe1,
        0x359797a2,
        0x884444cc,
        0x2e171739,
        0x93c4c457,
        0x55a7a7f2,
        0xfc7e7e82,
        0x7a3d3d47,
        0xc86464ac,
        0xba5d5de7,
        0x3219192b,
        0xe6737395,
        0xc06060a0,
        0x19818198,
        0x9e4f4fd1,
        0xa3dcdc7f,
        0x44222266,
        0x542a2a7e,
        0x3b9090ab,
        0x0b888883,
        0x8c4646ca,
        0xc7eeee29,
        0x6bb8b8d3,
        0x2814143c,
        0xa7dede79,
        0xbc5e5ee2,
        0x160b0b1d,
        0xaddbdb76,
        0xdbe0e03b,
        0x64323256,
        0x743a3a4e,
        0x140a0a1e,
        0x924949db,
        0x0c06060a,
        0x4824246c,
        0xb85c5ce4,
        0x9fc2c25d,
        0xbdd3d36e,
        0x43acacef,
        0xc46262a6,
        0x399191a8,
        0x319595a4,
        0xd3e4e437,
        0xf279798b,
        0xd5e7e732,
        0x8bc8c843,
        0x6e373759,
        0xda6d6db7,
        0x018d8d8c,
        0xb1d5d564,
        0x9c4e4ed2,
        0x49a9a9e0,
        0xd86c6cb4,
        0xac5656fa,
        0xf3f4f407,
        0xcfeaea25,
        0xca6565af,
        0xf47a7a8e,
        0x47aeaee9,
        0x10080818,
        0x6fbabad5,
        0xf0787888,
        0x4a25256f,
        0x5c2e2e72,
        0x381c1c24,
        0x57a6a6f1,
        0x73b4b4c7,
        0x97c6c651,
        0xcbe8e823,
        0xa1dddd7c,
        0xe874749c,
        0x3e1f1f21,
        0x964b4bdd,
        0x61bdbddc,
        0x0d8b8b86,
        0x0f8a8a85,
        0xe0707090,
        0x7c3e3e42,
        0x71b5b5c4,
        0xcc6666aa,
        0x904848d8,
        0x06030305,
        0xf7f6f601,
        0x1c0e0e12,
        0xc26161a3,
        0x6a35355f,
        0xae5757f9,
        0x69b9b9d0,
        0x17868691,
        0x99c1c158,
        0x3a1d1d27,
        0x279e9eb9,
        0xd9e1e138,
        0xebf8f813,
        0x2b9898b3,
        0x22111133,
        0xd26969bb,
        0xa9d9d970,
        0x078e8e89,
        0x339494a7,
        0x2d9b9bb6,
        0x3c1e1e22,
        0x15878792,
        0xc9e9e920,
        0x87cece49,
        0xaa5555ff,
        0x50282878,
        0xa5dfdf7a,
        0x038c8c8f,
        0x59a1a1f8,
        0x09898980,
        0x1a0d0d17,
        0x65bfbfda,
        0xd7e6e631,
        0x844242c6,
        0xd06868b8,
        0x824141c3,
        0x299999b0,
        0x5a2d2d77,
        0x1e0f0f11,
        0x7bb0b0cb,
        0xa85454fc,
        0x6dbbbbd6,
        0x2c16163a
    ];
    var T2 = [
        0xa5c66363,
        0x84f87c7c,
        0x99ee7777,
        0x8df67b7b,
        0x0dfff2f2,
        0xbdd66b6b,
        0xb1de6f6f,
        0x5491c5c5,
        0x50603030,
        0x03020101,
        0xa9ce6767,
        0x7d562b2b,
        0x19e7fefe,
        0x62b5d7d7,
        0xe64dabab,
        0x9aec7676,
        0x458fcaca,
        0x9d1f8282,
        0x4089c9c9,
        0x87fa7d7d,
        0x15effafa,
        0xebb25959,
        0xc98e4747,
        0x0bfbf0f0,
        0xec41adad,
        0x67b3d4d4,
        0xfd5fa2a2,
        0xea45afaf,
        0xbf239c9c,
        0xf753a4a4,
        0x96e47272,
        0x5b9bc0c0,
        0xc275b7b7,
        0x1ce1fdfd,
        0xae3d9393,
        0x6a4c2626,
        0x5a6c3636,
        0x417e3f3f,
        0x02f5f7f7,
        0x4f83cccc,
        0x5c683434,
        0xf451a5a5,
        0x34d1e5e5,
        0x08f9f1f1,
        0x93e27171,
        0x73abd8d8,
        0x53623131,
        0x3f2a1515,
        0x0c080404,
        0x5295c7c7,
        0x65462323,
        0x5e9dc3c3,
        0x28301818,
        0xa1379696,
        0x0f0a0505,
        0xb52f9a9a,
        0x090e0707,
        0x36241212,
        0x9b1b8080,
        0x3ddfe2e2,
        0x26cdebeb,
        0x694e2727,
        0xcd7fb2b2,
        0x9fea7575,
        0x1b120909,
        0x9e1d8383,
        0x74582c2c,
        0x2e341a1a,
        0x2d361b1b,
        0xb2dc6e6e,
        0xeeb45a5a,
        0xfb5ba0a0,
        0xf6a45252,
        0x4d763b3b,
        0x61b7d6d6,
        0xce7db3b3,
        0x7b522929,
        0x3edde3e3,
        0x715e2f2f,
        0x97138484,
        0xf5a65353,
        0x68b9d1d1,
        0x00000000,
        0x2cc1eded,
        0x60402020,
        0x1fe3fcfc,
        0xc879b1b1,
        0xedb65b5b,
        0xbed46a6a,
        0x468dcbcb,
        0xd967bebe,
        0x4b723939,
        0xde944a4a,
        0xd4984c4c,
        0xe8b05858,
        0x4a85cfcf,
        0x6bbbd0d0,
        0x2ac5efef,
        0xe54faaaa,
        0x16edfbfb,
        0xc5864343,
        0xd79a4d4d,
        0x55663333,
        0x94118585,
        0xcf8a4545,
        0x10e9f9f9,
        0x06040202,
        0x81fe7f7f,
        0xf0a05050,
        0x44783c3c,
        0xba259f9f,
        0xe34ba8a8,
        0xf3a25151,
        0xfe5da3a3,
        0xc0804040,
        0x8a058f8f,
        0xad3f9292,
        0xbc219d9d,
        0x48703838,
        0x04f1f5f5,
        0xdf63bcbc,
        0xc177b6b6,
        0x75afdada,
        0x63422121,
        0x30201010,
        0x1ae5ffff,
        0x0efdf3f3,
        0x6dbfd2d2,
        0x4c81cdcd,
        0x14180c0c,
        0x35261313,
        0x2fc3ecec,
        0xe1be5f5f,
        0xa2359797,
        0xcc884444,
        0x392e1717,
        0x5793c4c4,
        0xf255a7a7,
        0x82fc7e7e,
        0x477a3d3d,
        0xacc86464,
        0xe7ba5d5d,
        0x2b321919,
        0x95e67373,
        0xa0c06060,
        0x98198181,
        0xd19e4f4f,
        0x7fa3dcdc,
        0x66442222,
        0x7e542a2a,
        0xab3b9090,
        0x830b8888,
        0xca8c4646,
        0x29c7eeee,
        0xd36bb8b8,
        0x3c281414,
        0x79a7dede,
        0xe2bc5e5e,
        0x1d160b0b,
        0x76addbdb,
        0x3bdbe0e0,
        0x56643232,
        0x4e743a3a,
        0x1e140a0a,
        0xdb924949,
        0x0a0c0606,
        0x6c482424,
        0xe4b85c5c,
        0x5d9fc2c2,
        0x6ebdd3d3,
        0xef43acac,
        0xa6c46262,
        0xa8399191,
        0xa4319595,
        0x37d3e4e4,
        0x8bf27979,
        0x32d5e7e7,
        0x438bc8c8,
        0x596e3737,
        0xb7da6d6d,
        0x8c018d8d,
        0x64b1d5d5,
        0xd29c4e4e,
        0xe049a9a9,
        0xb4d86c6c,
        0xfaac5656,
        0x07f3f4f4,
        0x25cfeaea,
        0xafca6565,
        0x8ef47a7a,
        0xe947aeae,
        0x18100808,
        0xd56fbaba,
        0x88f07878,
        0x6f4a2525,
        0x725c2e2e,
        0x24381c1c,
        0xf157a6a6,
        0xc773b4b4,
        0x5197c6c6,
        0x23cbe8e8,
        0x7ca1dddd,
        0x9ce87474,
        0x213e1f1f,
        0xdd964b4b,
        0xdc61bdbd,
        0x860d8b8b,
        0x850f8a8a,
        0x90e07070,
        0x427c3e3e,
        0xc471b5b5,
        0xaacc6666,
        0xd8904848,
        0x05060303,
        0x01f7f6f6,
        0x121c0e0e,
        0xa3c26161,
        0x5f6a3535,
        0xf9ae5757,
        0xd069b9b9,
        0x91178686,
        0x5899c1c1,
        0x273a1d1d,
        0xb9279e9e,
        0x38d9e1e1,
        0x13ebf8f8,
        0xb32b9898,
        0x33221111,
        0xbbd26969,
        0x70a9d9d9,
        0x89078e8e,
        0xa7339494,
        0xb62d9b9b,
        0x223c1e1e,
        0x92158787,
        0x20c9e9e9,
        0x4987cece,
        0xffaa5555,
        0x78502828,
        0x7aa5dfdf,
        0x8f038c8c,
        0xf859a1a1,
        0x80098989,
        0x171a0d0d,
        0xda65bfbf,
        0x31d7e6e6,
        0xc6844242,
        0xb8d06868,
        0xc3824141,
        0xb0299999,
        0x775a2d2d,
        0x111e0f0f,
        0xcb7bb0b0,
        0xfca85454,
        0xd66dbbbb,
        0x3a2c1616
    ];
    var T3 = [
        0x63a5c663,
        0x7c84f87c,
        0x7799ee77,
        0x7b8df67b,
        0xf20dfff2,
        0x6bbdd66b,
        0x6fb1de6f,
        0xc55491c5,
        0x30506030,
        0x01030201,
        0x67a9ce67,
        0x2b7d562b,
        0xfe19e7fe,
        0xd762b5d7,
        0xabe64dab,
        0x769aec76,
        0xca458fca,
        0x829d1f82,
        0xc94089c9,
        0x7d87fa7d,
        0xfa15effa,
        0x59ebb259,
        0x47c98e47,
        0xf00bfbf0,
        0xadec41ad,
        0xd467b3d4,
        0xa2fd5fa2,
        0xafea45af,
        0x9cbf239c,
        0xa4f753a4,
        0x7296e472,
        0xc05b9bc0,
        0xb7c275b7,
        0xfd1ce1fd,
        0x93ae3d93,
        0x266a4c26,
        0x365a6c36,
        0x3f417e3f,
        0xf702f5f7,
        0xcc4f83cc,
        0x345c6834,
        0xa5f451a5,
        0xe534d1e5,
        0xf108f9f1,
        0x7193e271,
        0xd873abd8,
        0x31536231,
        0x153f2a15,
        0x040c0804,
        0xc75295c7,
        0x23654623,
        0xc35e9dc3,
        0x18283018,
        0x96a13796,
        0x050f0a05,
        0x9ab52f9a,
        0x07090e07,
        0x12362412,
        0x809b1b80,
        0xe23ddfe2,
        0xeb26cdeb,
        0x27694e27,
        0xb2cd7fb2,
        0x759fea75,
        0x091b1209,
        0x839e1d83,
        0x2c74582c,
        0x1a2e341a,
        0x1b2d361b,
        0x6eb2dc6e,
        0x5aeeb45a,
        0xa0fb5ba0,
        0x52f6a452,
        0x3b4d763b,
        0xd661b7d6,
        0xb3ce7db3,
        0x297b5229,
        0xe33edde3,
        0x2f715e2f,
        0x84971384,
        0x53f5a653,
        0xd168b9d1,
        0x00000000,
        0xed2cc1ed,
        0x20604020,
        0xfc1fe3fc,
        0xb1c879b1,
        0x5bedb65b,
        0x6abed46a,
        0xcb468dcb,
        0xbed967be,
        0x394b7239,
        0x4ade944a,
        0x4cd4984c,
        0x58e8b058,
        0xcf4a85cf,
        0xd06bbbd0,
        0xef2ac5ef,
        0xaae54faa,
        0xfb16edfb,
        0x43c58643,
        0x4dd79a4d,
        0x33556633,
        0x85941185,
        0x45cf8a45,
        0xf910e9f9,
        0x02060402,
        0x7f81fe7f,
        0x50f0a050,
        0x3c44783c,
        0x9fba259f,
        0xa8e34ba8,
        0x51f3a251,
        0xa3fe5da3,
        0x40c08040,
        0x8f8a058f,
        0x92ad3f92,
        0x9dbc219d,
        0x38487038,
        0xf504f1f5,
        0xbcdf63bc,
        0xb6c177b6,
        0xda75afda,
        0x21634221,
        0x10302010,
        0xff1ae5ff,
        0xf30efdf3,
        0xd26dbfd2,
        0xcd4c81cd,
        0x0c14180c,
        0x13352613,
        0xec2fc3ec,
        0x5fe1be5f,
        0x97a23597,
        0x44cc8844,
        0x17392e17,
        0xc45793c4,
        0xa7f255a7,
        0x7e82fc7e,
        0x3d477a3d,
        0x64acc864,
        0x5de7ba5d,
        0x192b3219,
        0x7395e673,
        0x60a0c060,
        0x81981981,
        0x4fd19e4f,
        0xdc7fa3dc,
        0x22664422,
        0x2a7e542a,
        0x90ab3b90,
        0x88830b88,
        0x46ca8c46,
        0xee29c7ee,
        0xb8d36bb8,
        0x143c2814,
        0xde79a7de,
        0x5ee2bc5e,
        0x0b1d160b,
        0xdb76addb,
        0xe03bdbe0,
        0x32566432,
        0x3a4e743a,
        0x0a1e140a,
        0x49db9249,
        0x060a0c06,
        0x246c4824,
        0x5ce4b85c,
        0xc25d9fc2,
        0xd36ebdd3,
        0xacef43ac,
        0x62a6c462,
        0x91a83991,
        0x95a43195,
        0xe437d3e4,
        0x798bf279,
        0xe732d5e7,
        0xc8438bc8,
        0x37596e37,
        0x6db7da6d,
        0x8d8c018d,
        0xd564b1d5,
        0x4ed29c4e,
        0xa9e049a9,
        0x6cb4d86c,
        0x56faac56,
        0xf407f3f4,
        0xea25cfea,
        0x65afca65,
        0x7a8ef47a,
        0xaee947ae,
        0x08181008,
        0xbad56fba,
        0x7888f078,
        0x256f4a25,
        0x2e725c2e,
        0x1c24381c,
        0xa6f157a6,
        0xb4c773b4,
        0xc65197c6,
        0xe823cbe8,
        0xdd7ca1dd,
        0x749ce874,
        0x1f213e1f,
        0x4bdd964b,
        0xbddc61bd,
        0x8b860d8b,
        0x8a850f8a,
        0x7090e070,
        0x3e427c3e,
        0xb5c471b5,
        0x66aacc66,
        0x48d89048,
        0x03050603,
        0xf601f7f6,
        0x0e121c0e,
        0x61a3c261,
        0x355f6a35,
        0x57f9ae57,
        0xb9d069b9,
        0x86911786,
        0xc15899c1,
        0x1d273a1d,
        0x9eb9279e,
        0xe138d9e1,
        0xf813ebf8,
        0x98b32b98,
        0x11332211,
        0x69bbd269,
        0xd970a9d9,
        0x8e89078e,
        0x94a73394,
        0x9bb62d9b,
        0x1e223c1e,
        0x87921587,
        0xe920c9e9,
        0xce4987ce,
        0x55ffaa55,
        0x28785028,
        0xdf7aa5df,
        0x8c8f038c,
        0xa1f859a1,
        0x89800989,
        0x0d171a0d,
        0xbfda65bf,
        0xe631d7e6,
        0x42c68442,
        0x68b8d068,
        0x41c38241,
        0x99b02999,
        0x2d775a2d,
        0x0f111e0f,
        0xb0cb7bb0,
        0x54fca854,
        0xbbd66dbb,
        0x163a2c16
    ];
    var T4 = [
        0x6363a5c6,
        0x7c7c84f8,
        0x777799ee,
        0x7b7b8df6,
        0xf2f20dff,
        0x6b6bbdd6,
        0x6f6fb1de,
        0xc5c55491,
        0x30305060,
        0x01010302,
        0x6767a9ce,
        0x2b2b7d56,
        0xfefe19e7,
        0xd7d762b5,
        0xababe64d,
        0x76769aec,
        0xcaca458f,
        0x82829d1f,
        0xc9c94089,
        0x7d7d87fa,
        0xfafa15ef,
        0x5959ebb2,
        0x4747c98e,
        0xf0f00bfb,
        0xadadec41,
        0xd4d467b3,
        0xa2a2fd5f,
        0xafafea45,
        0x9c9cbf23,
        0xa4a4f753,
        0x727296e4,
        0xc0c05b9b,
        0xb7b7c275,
        0xfdfd1ce1,
        0x9393ae3d,
        0x26266a4c,
        0x36365a6c,
        0x3f3f417e,
        0xf7f702f5,
        0xcccc4f83,
        0x34345c68,
        0xa5a5f451,
        0xe5e534d1,
        0xf1f108f9,
        0x717193e2,
        0xd8d873ab,
        0x31315362,
        0x15153f2a,
        0x04040c08,
        0xc7c75295,
        0x23236546,
        0xc3c35e9d,
        0x18182830,
        0x9696a137,
        0x05050f0a,
        0x9a9ab52f,
        0x0707090e,
        0x12123624,
        0x80809b1b,
        0xe2e23ddf,
        0xebeb26cd,
        0x2727694e,
        0xb2b2cd7f,
        0x75759fea,
        0x09091b12,
        0x83839e1d,
        0x2c2c7458,
        0x1a1a2e34,
        0x1b1b2d36,
        0x6e6eb2dc,
        0x5a5aeeb4,
        0xa0a0fb5b,
        0x5252f6a4,
        0x3b3b4d76,
        0xd6d661b7,
        0xb3b3ce7d,
        0x29297b52,
        0xe3e33edd,
        0x2f2f715e,
        0x84849713,
        0x5353f5a6,
        0xd1d168b9,
        0x00000000,
        0xeded2cc1,
        0x20206040,
        0xfcfc1fe3,
        0xb1b1c879,
        0x5b5bedb6,
        0x6a6abed4,
        0xcbcb468d,
        0xbebed967,
        0x39394b72,
        0x4a4ade94,
        0x4c4cd498,
        0x5858e8b0,
        0xcfcf4a85,
        0xd0d06bbb,
        0xefef2ac5,
        0xaaaae54f,
        0xfbfb16ed,
        0x4343c586,
        0x4d4dd79a,
        0x33335566,
        0x85859411,
        0x4545cf8a,
        0xf9f910e9,
        0x02020604,
        0x7f7f81fe,
        0x5050f0a0,
        0x3c3c4478,
        0x9f9fba25,
        0xa8a8e34b,
        0x5151f3a2,
        0xa3a3fe5d,
        0x4040c080,
        0x8f8f8a05,
        0x9292ad3f,
        0x9d9dbc21,
        0x38384870,
        0xf5f504f1,
        0xbcbcdf63,
        0xb6b6c177,
        0xdada75af,
        0x21216342,
        0x10103020,
        0xffff1ae5,
        0xf3f30efd,
        0xd2d26dbf,
        0xcdcd4c81,
        0x0c0c1418,
        0x13133526,
        0xecec2fc3,
        0x5f5fe1be,
        0x9797a235,
        0x4444cc88,
        0x1717392e,
        0xc4c45793,
        0xa7a7f255,
        0x7e7e82fc,
        0x3d3d477a,
        0x6464acc8,
        0x5d5de7ba,
        0x19192b32,
        0x737395e6,
        0x6060a0c0,
        0x81819819,
        0x4f4fd19e,
        0xdcdc7fa3,
        0x22226644,
        0x2a2a7e54,
        0x9090ab3b,
        0x8888830b,
        0x4646ca8c,
        0xeeee29c7,
        0xb8b8d36b,
        0x14143c28,
        0xdede79a7,
        0x5e5ee2bc,
        0x0b0b1d16,
        0xdbdb76ad,
        0xe0e03bdb,
        0x32325664,
        0x3a3a4e74,
        0x0a0a1e14,
        0x4949db92,
        0x06060a0c,
        0x24246c48,
        0x5c5ce4b8,
        0xc2c25d9f,
        0xd3d36ebd,
        0xacacef43,
        0x6262a6c4,
        0x9191a839,
        0x9595a431,
        0xe4e437d3,
        0x79798bf2,
        0xe7e732d5,
        0xc8c8438b,
        0x3737596e,
        0x6d6db7da,
        0x8d8d8c01,
        0xd5d564b1,
        0x4e4ed29c,
        0xa9a9e049,
        0x6c6cb4d8,
        0x5656faac,
        0xf4f407f3,
        0xeaea25cf,
        0x6565afca,
        0x7a7a8ef4,
        0xaeaee947,
        0x08081810,
        0xbabad56f,
        0x787888f0,
        0x25256f4a,
        0x2e2e725c,
        0x1c1c2438,
        0xa6a6f157,
        0xb4b4c773,
        0xc6c65197,
        0xe8e823cb,
        0xdddd7ca1,
        0x74749ce8,
        0x1f1f213e,
        0x4b4bdd96,
        0xbdbddc61,
        0x8b8b860d,
        0x8a8a850f,
        0x707090e0,
        0x3e3e427c,
        0xb5b5c471,
        0x6666aacc,
        0x4848d890,
        0x03030506,
        0xf6f601f7,
        0x0e0e121c,
        0x6161a3c2,
        0x35355f6a,
        0x5757f9ae,
        0xb9b9d069,
        0x86869117,
        0xc1c15899,
        0x1d1d273a,
        0x9e9eb927,
        0xe1e138d9,
        0xf8f813eb,
        0x9898b32b,
        0x11113322,
        0x6969bbd2,
        0xd9d970a9,
        0x8e8e8907,
        0x9494a733,
        0x9b9bb62d,
        0x1e1e223c,
        0x87879215,
        0xe9e920c9,
        0xcece4987,
        0x5555ffaa,
        0x28287850,
        0xdfdf7aa5,
        0x8c8c8f03,
        0xa1a1f859,
        0x89898009,
        0x0d0d171a,
        0xbfbfda65,
        0xe6e631d7,
        0x4242c684,
        0x6868b8d0,
        0x4141c382,
        0x9999b029,
        0x2d2d775a,
        0x0f0f111e,
        0xb0b0cb7b,
        0x5454fca8,
        0xbbbbd66d,
        0x16163a2c
    ];
    // Transformations for decryption
    var T5 = [
        0x51f4a750,
        0x7e416553,
        0x1a17a4c3,
        0x3a275e96,
        0x3bab6bcb,
        0x1f9d45f1,
        0xacfa58ab,
        0x4be30393,
        0x2030fa55,
        0xad766df6,
        0x88cc7691,
        0xf5024c25,
        0x4fe5d7fc,
        0xc52acbd7,
        0x26354480,
        0xb562a38f,
        0xdeb15a49,
        0x25ba1b67,
        0x45ea0e98,
        0x5dfec0e1,
        0xc32f7502,
        0x814cf012,
        0x8d4697a3,
        0x6bd3f9c6,
        0x038f5fe7,
        0x15929c95,
        0xbf6d7aeb,
        0x955259da,
        0xd4be832d,
        0x587421d3,
        0x49e06929,
        0x8ec9c844,
        0x75c2896a,
        0xf48e7978,
        0x99583e6b,
        0x27b971dd,
        0xbee14fb6,
        0xf088ad17,
        0xc920ac66,
        0x7dce3ab4,
        0x63df4a18,
        0xe51a3182,
        0x97513360,
        0x62537f45,
        0xb16477e0,
        0xbb6bae84,
        0xfe81a01c,
        0xf9082b94,
        0x70486858,
        0x8f45fd19,
        0x94de6c87,
        0x527bf8b7,
        0xab73d323,
        0x724b02e2,
        0xe31f8f57,
        0x6655ab2a,
        0xb2eb2807,
        0x2fb5c203,
        0x86c57b9a,
        0xd33708a5,
        0x302887f2,
        0x23bfa5b2,
        0x02036aba,
        0xed16825c,
        0x8acf1c2b,
        0xa779b492,
        0xf307f2f0,
        0x4e69e2a1,
        0x65daf4cd,
        0x0605bed5,
        0xd134621f,
        0xc4a6fe8a,
        0x342e539d,
        0xa2f355a0,
        0x058ae132,
        0xa4f6eb75,
        0x0b83ec39,
        0x4060efaa,
        0x5e719f06,
        0xbd6e1051,
        0x3e218af9,
        0x96dd063d,
        0xdd3e05ae,
        0x4de6bd46,
        0x91548db5,
        0x71c45d05,
        0x0406d46f,
        0x605015ff,
        0x1998fb24,
        0xd6bde997,
        0x894043cc,
        0x67d99e77,
        0xb0e842bd,
        0x07898b88,
        0xe7195b38,
        0x79c8eedb,
        0xa17c0a47,
        0x7c420fe9,
        0xf8841ec9,
        0x00000000,
        0x09808683,
        0x322bed48,
        0x1e1170ac,
        0x6c5a724e,
        0xfd0efffb,
        0x0f853856,
        0x3daed51e,
        0x362d3927,
        0x0a0fd964,
        0x685ca621,
        0x9b5b54d1,
        0x24362e3a,
        0x0c0a67b1,
        0x9357e70f,
        0xb4ee96d2,
        0x1b9b919e,
        0x80c0c54f,
        0x61dc20a2,
        0x5a774b69,
        0x1c121a16,
        0xe293ba0a,
        0xc0a02ae5,
        0x3c22e043,
        0x121b171d,
        0x0e090d0b,
        0xf28bc7ad,
        0x2db6a8b9,
        0x141ea9c8,
        0x57f11985,
        0xaf75074c,
        0xee99ddbb,
        0xa37f60fd,
        0xf701269f,
        0x5c72f5bc,
        0x44663bc5,
        0x5bfb7e34,
        0x8b432976,
        0xcb23c6dc,
        0xb6edfc68,
        0xb8e4f163,
        0xd731dcca,
        0x42638510,
        0x13972240,
        0x84c61120,
        0x854a247d,
        0xd2bb3df8,
        0xaef93211,
        0xc729a16d,
        0x1d9e2f4b,
        0xdcb230f3,
        0x0d8652ec,
        0x77c1e3d0,
        0x2bb3166c,
        0xa970b999,
        0x119448fa,
        0x47e96422,
        0xa8fc8cc4,
        0xa0f03f1a,
        0x567d2cd8,
        0x223390ef,
        0x87494ec7,
        0xd938d1c1,
        0x8ccaa2fe,
        0x98d40b36,
        0xa6f581cf,
        0xa57ade28,
        0xdab78e26,
        0x3fadbfa4,
        0x2c3a9de4,
        0x5078920d,
        0x6a5fcc9b,
        0x547e4662,
        0xf68d13c2,
        0x90d8b8e8,
        0x2e39f75e,
        0x82c3aff5,
        0x9f5d80be,
        0x69d0937c,
        0x6fd52da9,
        0xcf2512b3,
        0xc8ac993b,
        0x10187da7,
        0xe89c636e,
        0xdb3bbb7b,
        0xcd267809,
        0x6e5918f4,
        0xec9ab701,
        0x834f9aa8,
        0xe6956e65,
        0xaaffe67e,
        0x21bccf08,
        0xef15e8e6,
        0xbae79bd9,
        0x4a6f36ce,
        0xea9f09d4,
        0x29b07cd6,
        0x31a4b2af,
        0x2a3f2331,
        0xc6a59430,
        0x35a266c0,
        0x744ebc37,
        0xfc82caa6,
        0xe090d0b0,
        0x33a7d815,
        0xf104984a,
        0x41ecdaf7,
        0x7fcd500e,
        0x1791f62f,
        0x764dd68d,
        0x43efb04d,
        0xccaa4d54,
        0xe49604df,
        0x9ed1b5e3,
        0x4c6a881b,
        0xc12c1fb8,
        0x4665517f,
        0x9d5eea04,
        0x018c355d,
        0xfa877473,
        0xfb0b412e,
        0xb3671d5a,
        0x92dbd252,
        0xe9105633,
        0x6dd64713,
        0x9ad7618c,
        0x37a10c7a,
        0x59f8148e,
        0xeb133c89,
        0xcea927ee,
        0xb761c935,
        0xe11ce5ed,
        0x7a47b13c,
        0x9cd2df59,
        0x55f2733f,
        0x1814ce79,
        0x73c737bf,
        0x53f7cdea,
        0x5ffdaa5b,
        0xdf3d6f14,
        0x7844db86,
        0xcaaff381,
        0xb968c43e,
        0x3824342c,
        0xc2a3405f,
        0x161dc372,
        0xbce2250c,
        0x283c498b,
        0xff0d9541,
        0x39a80171,
        0x080cb3de,
        0xd8b4e49c,
        0x6456c190,
        0x7bcb8461,
        0xd532b670,
        0x486c5c74,
        0xd0b85742
    ];
    var T6 = [
        0x5051f4a7,
        0x537e4165,
        0xc31a17a4,
        0x963a275e,
        0xcb3bab6b,
        0xf11f9d45,
        0xabacfa58,
        0x934be303,
        0x552030fa,
        0xf6ad766d,
        0x9188cc76,
        0x25f5024c,
        0xfc4fe5d7,
        0xd7c52acb,
        0x80263544,
        0x8fb562a3,
        0x49deb15a,
        0x6725ba1b,
        0x9845ea0e,
        0xe15dfec0,
        0x02c32f75,
        0x12814cf0,
        0xa38d4697,
        0xc66bd3f9,
        0xe7038f5f,
        0x9515929c,
        0xebbf6d7a,
        0xda955259,
        0x2dd4be83,
        0xd3587421,
        0x2949e069,
        0x448ec9c8,
        0x6a75c289,
        0x78f48e79,
        0x6b99583e,
        0xdd27b971,
        0xb6bee14f,
        0x17f088ad,
        0x66c920ac,
        0xb47dce3a,
        0x1863df4a,
        0x82e51a31,
        0x60975133,
        0x4562537f,
        0xe0b16477,
        0x84bb6bae,
        0x1cfe81a0,
        0x94f9082b,
        0x58704868,
        0x198f45fd,
        0x8794de6c,
        0xb7527bf8,
        0x23ab73d3,
        0xe2724b02,
        0x57e31f8f,
        0x2a6655ab,
        0x07b2eb28,
        0x032fb5c2,
        0x9a86c57b,
        0xa5d33708,
        0xf2302887,
        0xb223bfa5,
        0xba02036a,
        0x5ced1682,
        0x2b8acf1c,
        0x92a779b4,
        0xf0f307f2,
        0xa14e69e2,
        0xcd65daf4,
        0xd50605be,
        0x1fd13462,
        0x8ac4a6fe,
        0x9d342e53,
        0xa0a2f355,
        0x32058ae1,
        0x75a4f6eb,
        0x390b83ec,
        0xaa4060ef,
        0x065e719f,
        0x51bd6e10,
        0xf93e218a,
        0x3d96dd06,
        0xaedd3e05,
        0x464de6bd,
        0xb591548d,
        0x0571c45d,
        0x6f0406d4,
        0xff605015,
        0x241998fb,
        0x97d6bde9,
        0xcc894043,
        0x7767d99e,
        0xbdb0e842,
        0x8807898b,
        0x38e7195b,
        0xdb79c8ee,
        0x47a17c0a,
        0xe97c420f,
        0xc9f8841e,
        0x00000000,
        0x83098086,
        0x48322bed,
        0xac1e1170,
        0x4e6c5a72,
        0xfbfd0eff,
        0x560f8538,
        0x1e3daed5,
        0x27362d39,
        0x640a0fd9,
        0x21685ca6,
        0xd19b5b54,
        0x3a24362e,
        0xb10c0a67,
        0x0f9357e7,
        0xd2b4ee96,
        0x9e1b9b91,
        0x4f80c0c5,
        0xa261dc20,
        0x695a774b,
        0x161c121a,
        0x0ae293ba,
        0xe5c0a02a,
        0x433c22e0,
        0x1d121b17,
        0x0b0e090d,
        0xadf28bc7,
        0xb92db6a8,
        0xc8141ea9,
        0x8557f119,
        0x4caf7507,
        0xbbee99dd,
        0xfda37f60,
        0x9ff70126,
        0xbc5c72f5,
        0xc544663b,
        0x345bfb7e,
        0x768b4329,
        0xdccb23c6,
        0x68b6edfc,
        0x63b8e4f1,
        0xcad731dc,
        0x10426385,
        0x40139722,
        0x2084c611,
        0x7d854a24,
        0xf8d2bb3d,
        0x11aef932,
        0x6dc729a1,
        0x4b1d9e2f,
        0xf3dcb230,
        0xec0d8652,
        0xd077c1e3,
        0x6c2bb316,
        0x99a970b9,
        0xfa119448,
        0x2247e964,
        0xc4a8fc8c,
        0x1aa0f03f,
        0xd8567d2c,
        0xef223390,
        0xc787494e,
        0xc1d938d1,
        0xfe8ccaa2,
        0x3698d40b,
        0xcfa6f581,
        0x28a57ade,
        0x26dab78e,
        0xa43fadbf,
        0xe42c3a9d,
        0x0d507892,
        0x9b6a5fcc,
        0x62547e46,
        0xc2f68d13,
        0xe890d8b8,
        0x5e2e39f7,
        0xf582c3af,
        0xbe9f5d80,
        0x7c69d093,
        0xa96fd52d,
        0xb3cf2512,
        0x3bc8ac99,
        0xa710187d,
        0x6ee89c63,
        0x7bdb3bbb,
        0x09cd2678,
        0xf46e5918,
        0x01ec9ab7,
        0xa8834f9a,
        0x65e6956e,
        0x7eaaffe6,
        0x0821bccf,
        0xe6ef15e8,
        0xd9bae79b,
        0xce4a6f36,
        0xd4ea9f09,
        0xd629b07c,
        0xaf31a4b2,
        0x312a3f23,
        0x30c6a594,
        0xc035a266,
        0x37744ebc,
        0xa6fc82ca,
        0xb0e090d0,
        0x1533a7d8,
        0x4af10498,
        0xf741ecda,
        0x0e7fcd50,
        0x2f1791f6,
        0x8d764dd6,
        0x4d43efb0,
        0x54ccaa4d,
        0xdfe49604,
        0xe39ed1b5,
        0x1b4c6a88,
        0xb8c12c1f,
        0x7f466551,
        0x049d5eea,
        0x5d018c35,
        0x73fa8774,
        0x2efb0b41,
        0x5ab3671d,
        0x5292dbd2,
        0x33e91056,
        0x136dd647,
        0x8c9ad761,
        0x7a37a10c,
        0x8e59f814,
        0x89eb133c,
        0xeecea927,
        0x35b761c9,
        0xede11ce5,
        0x3c7a47b1,
        0x599cd2df,
        0x3f55f273,
        0x791814ce,
        0xbf73c737,
        0xea53f7cd,
        0x5b5ffdaa,
        0x14df3d6f,
        0x867844db,
        0x81caaff3,
        0x3eb968c4,
        0x2c382434,
        0x5fc2a340,
        0x72161dc3,
        0x0cbce225,
        0x8b283c49,
        0x41ff0d95,
        0x7139a801,
        0xde080cb3,
        0x9cd8b4e4,
        0x906456c1,
        0x617bcb84,
        0x70d532b6,
        0x74486c5c,
        0x42d0b857
    ];
    var T7 = [
        0xa75051f4,
        0x65537e41,
        0xa4c31a17,
        0x5e963a27,
        0x6bcb3bab,
        0x45f11f9d,
        0x58abacfa,
        0x03934be3,
        0xfa552030,
        0x6df6ad76,
        0x769188cc,
        0x4c25f502,
        0xd7fc4fe5,
        0xcbd7c52a,
        0x44802635,
        0xa38fb562,
        0x5a49deb1,
        0x1b6725ba,
        0x0e9845ea,
        0xc0e15dfe,
        0x7502c32f,
        0xf012814c,
        0x97a38d46,
        0xf9c66bd3,
        0x5fe7038f,
        0x9c951592,
        0x7aebbf6d,
        0x59da9552,
        0x832dd4be,
        0x21d35874,
        0x692949e0,
        0xc8448ec9,
        0x896a75c2,
        0x7978f48e,
        0x3e6b9958,
        0x71dd27b9,
        0x4fb6bee1,
        0xad17f088,
        0xac66c920,
        0x3ab47dce,
        0x4a1863df,
        0x3182e51a,
        0x33609751,
        0x7f456253,
        0x77e0b164,
        0xae84bb6b,
        0xa01cfe81,
        0x2b94f908,
        0x68587048,
        0xfd198f45,
        0x6c8794de,
        0xf8b7527b,
        0xd323ab73,
        0x02e2724b,
        0x8f57e31f,
        0xab2a6655,
        0x2807b2eb,
        0xc2032fb5,
        0x7b9a86c5,
        0x08a5d337,
        0x87f23028,
        0xa5b223bf,
        0x6aba0203,
        0x825ced16,
        0x1c2b8acf,
        0xb492a779,
        0xf2f0f307,
        0xe2a14e69,
        0xf4cd65da,
        0xbed50605,
        0x621fd134,
        0xfe8ac4a6,
        0x539d342e,
        0x55a0a2f3,
        0xe132058a,
        0xeb75a4f6,
        0xec390b83,
        0xefaa4060,
        0x9f065e71,
        0x1051bd6e,
        0x8af93e21,
        0x063d96dd,
        0x05aedd3e,
        0xbd464de6,
        0x8db59154,
        0x5d0571c4,
        0xd46f0406,
        0x15ff6050,
        0xfb241998,
        0xe997d6bd,
        0x43cc8940,
        0x9e7767d9,
        0x42bdb0e8,
        0x8b880789,
        0x5b38e719,
        0xeedb79c8,
        0x0a47a17c,
        0x0fe97c42,
        0x1ec9f884,
        0x00000000,
        0x86830980,
        0xed48322b,
        0x70ac1e11,
        0x724e6c5a,
        0xfffbfd0e,
        0x38560f85,
        0xd51e3dae,
        0x3927362d,
        0xd9640a0f,
        0xa621685c,
        0x54d19b5b,
        0x2e3a2436,
        0x67b10c0a,
        0xe70f9357,
        0x96d2b4ee,
        0x919e1b9b,
        0xc54f80c0,
        0x20a261dc,
        0x4b695a77,
        0x1a161c12,
        0xba0ae293,
        0x2ae5c0a0,
        0xe0433c22,
        0x171d121b,
        0x0d0b0e09,
        0xc7adf28b,
        0xa8b92db6,
        0xa9c8141e,
        0x198557f1,
        0x074caf75,
        0xddbbee99,
        0x60fda37f,
        0x269ff701,
        0xf5bc5c72,
        0x3bc54466,
        0x7e345bfb,
        0x29768b43,
        0xc6dccb23,
        0xfc68b6ed,
        0xf163b8e4,
        0xdccad731,
        0x85104263,
        0x22401397,
        0x112084c6,
        0x247d854a,
        0x3df8d2bb,
        0x3211aef9,
        0xa16dc729,
        0x2f4b1d9e,
        0x30f3dcb2,
        0x52ec0d86,
        0xe3d077c1,
        0x166c2bb3,
        0xb999a970,
        0x48fa1194,
        0x642247e9,
        0x8cc4a8fc,
        0x3f1aa0f0,
        0x2cd8567d,
        0x90ef2233,
        0x4ec78749,
        0xd1c1d938,
        0xa2fe8cca,
        0x0b3698d4,
        0x81cfa6f5,
        0xde28a57a,
        0x8e26dab7,
        0xbfa43fad,
        0x9de42c3a,
        0x920d5078,
        0xcc9b6a5f,
        0x4662547e,
        0x13c2f68d,
        0xb8e890d8,
        0xf75e2e39,
        0xaff582c3,
        0x80be9f5d,
        0x937c69d0,
        0x2da96fd5,
        0x12b3cf25,
        0x993bc8ac,
        0x7da71018,
        0x636ee89c,
        0xbb7bdb3b,
        0x7809cd26,
        0x18f46e59,
        0xb701ec9a,
        0x9aa8834f,
        0x6e65e695,
        0xe67eaaff,
        0xcf0821bc,
        0xe8e6ef15,
        0x9bd9bae7,
        0x36ce4a6f,
        0x09d4ea9f,
        0x7cd629b0,
        0xb2af31a4,
        0x23312a3f,
        0x9430c6a5,
        0x66c035a2,
        0xbc37744e,
        0xcaa6fc82,
        0xd0b0e090,
        0xd81533a7,
        0x984af104,
        0xdaf741ec,
        0x500e7fcd,
        0xf62f1791,
        0xd68d764d,
        0xb04d43ef,
        0x4d54ccaa,
        0x04dfe496,
        0xb5e39ed1,
        0x881b4c6a,
        0x1fb8c12c,
        0x517f4665,
        0xea049d5e,
        0x355d018c,
        0x7473fa87,
        0x412efb0b,
        0x1d5ab367,
        0xd25292db,
        0x5633e910,
        0x47136dd6,
        0x618c9ad7,
        0x0c7a37a1,
        0x148e59f8,
        0x3c89eb13,
        0x27eecea9,
        0xc935b761,
        0xe5ede11c,
        0xb13c7a47,
        0xdf599cd2,
        0x733f55f2,
        0xce791814,
        0x37bf73c7,
        0xcdea53f7,
        0xaa5b5ffd,
        0x6f14df3d,
        0xdb867844,
        0xf381caaf,
        0xc43eb968,
        0x342c3824,
        0x405fc2a3,
        0xc372161d,
        0x250cbce2,
        0x498b283c,
        0x9541ff0d,
        0x017139a8,
        0xb3de080c,
        0xe49cd8b4,
        0xc1906456,
        0x84617bcb,
        0xb670d532,
        0x5c74486c,
        0x5742d0b8
    ];
    var T8 = [
        0xf4a75051,
        0x4165537e,
        0x17a4c31a,
        0x275e963a,
        0xab6bcb3b,
        0x9d45f11f,
        0xfa58abac,
        0xe303934b,
        0x30fa5520,
        0x766df6ad,
        0xcc769188,
        0x024c25f5,
        0xe5d7fc4f,
        0x2acbd7c5,
        0x35448026,
        0x62a38fb5,
        0xb15a49de,
        0xba1b6725,
        0xea0e9845,
        0xfec0e15d,
        0x2f7502c3,
        0x4cf01281,
        0x4697a38d,
        0xd3f9c66b,
        0x8f5fe703,
        0x929c9515,
        0x6d7aebbf,
        0x5259da95,
        0xbe832dd4,
        0x7421d358,
        0xe0692949,
        0xc9c8448e,
        0xc2896a75,
        0x8e7978f4,
        0x583e6b99,
        0xb971dd27,
        0xe14fb6be,
        0x88ad17f0,
        0x20ac66c9,
        0xce3ab47d,
        0xdf4a1863,
        0x1a3182e5,
        0x51336097,
        0x537f4562,
        0x6477e0b1,
        0x6bae84bb,
        0x81a01cfe,
        0x082b94f9,
        0x48685870,
        0x45fd198f,
        0xde6c8794,
        0x7bf8b752,
        0x73d323ab,
        0x4b02e272,
        0x1f8f57e3,
        0x55ab2a66,
        0xeb2807b2,
        0xb5c2032f,
        0xc57b9a86,
        0x3708a5d3,
        0x2887f230,
        0xbfa5b223,
        0x036aba02,
        0x16825ced,
        0xcf1c2b8a,
        0x79b492a7,
        0x07f2f0f3,
        0x69e2a14e,
        0xdaf4cd65,
        0x05bed506,
        0x34621fd1,
        0xa6fe8ac4,
        0x2e539d34,
        0xf355a0a2,
        0x8ae13205,
        0xf6eb75a4,
        0x83ec390b,
        0x60efaa40,
        0x719f065e,
        0x6e1051bd,
        0x218af93e,
        0xdd063d96,
        0x3e05aedd,
        0xe6bd464d,
        0x548db591,
        0xc45d0571,
        0x06d46f04,
        0x5015ff60,
        0x98fb2419,
        0xbde997d6,
        0x4043cc89,
        0xd99e7767,
        0xe842bdb0,
        0x898b8807,
        0x195b38e7,
        0xc8eedb79,
        0x7c0a47a1,
        0x420fe97c,
        0x841ec9f8,
        0x00000000,
        0x80868309,
        0x2bed4832,
        0x1170ac1e,
        0x5a724e6c,
        0x0efffbfd,
        0x8538560f,
        0xaed51e3d,
        0x2d392736,
        0x0fd9640a,
        0x5ca62168,
        0x5b54d19b,
        0x362e3a24,
        0x0a67b10c,
        0x57e70f93,
        0xee96d2b4,
        0x9b919e1b,
        0xc0c54f80,
        0xdc20a261,
        0x774b695a,
        0x121a161c,
        0x93ba0ae2,
        0xa02ae5c0,
        0x22e0433c,
        0x1b171d12,
        0x090d0b0e,
        0x8bc7adf2,
        0xb6a8b92d,
        0x1ea9c814,
        0xf1198557,
        0x75074caf,
        0x99ddbbee,
        0x7f60fda3,
        0x01269ff7,
        0x72f5bc5c,
        0x663bc544,
        0xfb7e345b,
        0x4329768b,
        0x23c6dccb,
        0xedfc68b6,
        0xe4f163b8,
        0x31dccad7,
        0x63851042,
        0x97224013,
        0xc6112084,
        0x4a247d85,
        0xbb3df8d2,
        0xf93211ae,
        0x29a16dc7,
        0x9e2f4b1d,
        0xb230f3dc,
        0x8652ec0d,
        0xc1e3d077,
        0xb3166c2b,
        0x70b999a9,
        0x9448fa11,
        0xe9642247,
        0xfc8cc4a8,
        0xf03f1aa0,
        0x7d2cd856,
        0x3390ef22,
        0x494ec787,
        0x38d1c1d9,
        0xcaa2fe8c,
        0xd40b3698,
        0xf581cfa6,
        0x7ade28a5,
        0xb78e26da,
        0xadbfa43f,
        0x3a9de42c,
        0x78920d50,
        0x5fcc9b6a,
        0x7e466254,
        0x8d13c2f6,
        0xd8b8e890,
        0x39f75e2e,
        0xc3aff582,
        0x5d80be9f,
        0xd0937c69,
        0xd52da96f,
        0x2512b3cf,
        0xac993bc8,
        0x187da710,
        0x9c636ee8,
        0x3bbb7bdb,
        0x267809cd,
        0x5918f46e,
        0x9ab701ec,
        0x4f9aa883,
        0x956e65e6,
        0xffe67eaa,
        0xbccf0821,
        0x15e8e6ef,
        0xe79bd9ba,
        0x6f36ce4a,
        0x9f09d4ea,
        0xb07cd629,
        0xa4b2af31,
        0x3f23312a,
        0xa59430c6,
        0xa266c035,
        0x4ebc3774,
        0x82caa6fc,
        0x90d0b0e0,
        0xa7d81533,
        0x04984af1,
        0xecdaf741,
        0xcd500e7f,
        0x91f62f17,
        0x4dd68d76,
        0xefb04d43,
        0xaa4d54cc,
        0x9604dfe4,
        0xd1b5e39e,
        0x6a881b4c,
        0x2c1fb8c1,
        0x65517f46,
        0x5eea049d,
        0x8c355d01,
        0x877473fa,
        0x0b412efb,
        0x671d5ab3,
        0xdbd25292,
        0x105633e9,
        0xd647136d,
        0xd7618c9a,
        0xa10c7a37,
        0xf8148e59,
        0x133c89eb,
        0xa927eece,
        0x61c935b7,
        0x1ce5ede1,
        0x47b13c7a,
        0xd2df599c,
        0xf2733f55,
        0x14ce7918,
        0xc737bf73,
        0xf7cdea53,
        0xfdaa5b5f,
        0x3d6f14df,
        0x44db8678,
        0xaff381ca,
        0x68c43eb9,
        0x24342c38,
        0xa3405fc2,
        0x1dc37216,
        0xe2250cbc,
        0x3c498b28,
        0x0d9541ff,
        0xa8017139,
        0x0cb3de08,
        0xb4e49cd8,
        0x56c19064,
        0xcb84617b,
        0x32b670d5,
        0x6c5c7448,
        0xb85742d0
    ];
    // Transformations for decryption key expansion
    var U1 = [
        0x00000000,
        0x0e090d0b,
        0x1c121a16,
        0x121b171d,
        0x3824342c,
        0x362d3927,
        0x24362e3a,
        0x2a3f2331,
        0x70486858,
        0x7e416553,
        0x6c5a724e,
        0x62537f45,
        0x486c5c74,
        0x4665517f,
        0x547e4662,
        0x5a774b69,
        0xe090d0b0,
        0xee99ddbb,
        0xfc82caa6,
        0xf28bc7ad,
        0xd8b4e49c,
        0xd6bde997,
        0xc4a6fe8a,
        0xcaaff381,
        0x90d8b8e8,
        0x9ed1b5e3,
        0x8ccaa2fe,
        0x82c3aff5,
        0xa8fc8cc4,
        0xa6f581cf,
        0xb4ee96d2,
        0xbae79bd9,
        0xdb3bbb7b,
        0xd532b670,
        0xc729a16d,
        0xc920ac66,
        0xe31f8f57,
        0xed16825c,
        0xff0d9541,
        0xf104984a,
        0xab73d323,
        0xa57ade28,
        0xb761c935,
        0xb968c43e,
        0x9357e70f,
        0x9d5eea04,
        0x8f45fd19,
        0x814cf012,
        0x3bab6bcb,
        0x35a266c0,
        0x27b971dd,
        0x29b07cd6,
        0x038f5fe7,
        0x0d8652ec,
        0x1f9d45f1,
        0x119448fa,
        0x4be30393,
        0x45ea0e98,
        0x57f11985,
        0x59f8148e,
        0x73c737bf,
        0x7dce3ab4,
        0x6fd52da9,
        0x61dc20a2,
        0xad766df6,
        0xa37f60fd,
        0xb16477e0,
        0xbf6d7aeb,
        0x955259da,
        0x9b5b54d1,
        0x894043cc,
        0x87494ec7,
        0xdd3e05ae,
        0xd33708a5,
        0xc12c1fb8,
        0xcf2512b3,
        0xe51a3182,
        0xeb133c89,
        0xf9082b94,
        0xf701269f,
        0x4de6bd46,
        0x43efb04d,
        0x51f4a750,
        0x5ffdaa5b,
        0x75c2896a,
        0x7bcb8461,
        0x69d0937c,
        0x67d99e77,
        0x3daed51e,
        0x33a7d815,
        0x21bccf08,
        0x2fb5c203,
        0x058ae132,
        0x0b83ec39,
        0x1998fb24,
        0x1791f62f,
        0x764dd68d,
        0x7844db86,
        0x6a5fcc9b,
        0x6456c190,
        0x4e69e2a1,
        0x4060efaa,
        0x527bf8b7,
        0x5c72f5bc,
        0x0605bed5,
        0x080cb3de,
        0x1a17a4c3,
        0x141ea9c8,
        0x3e218af9,
        0x302887f2,
        0x223390ef,
        0x2c3a9de4,
        0x96dd063d,
        0x98d40b36,
        0x8acf1c2b,
        0x84c61120,
        0xaef93211,
        0xa0f03f1a,
        0xb2eb2807,
        0xbce2250c,
        0xe6956e65,
        0xe89c636e,
        0xfa877473,
        0xf48e7978,
        0xdeb15a49,
        0xd0b85742,
        0xc2a3405f,
        0xccaa4d54,
        0x41ecdaf7,
        0x4fe5d7fc,
        0x5dfec0e1,
        0x53f7cdea,
        0x79c8eedb,
        0x77c1e3d0,
        0x65daf4cd,
        0x6bd3f9c6,
        0x31a4b2af,
        0x3fadbfa4,
        0x2db6a8b9,
        0x23bfa5b2,
        0x09808683,
        0x07898b88,
        0x15929c95,
        0x1b9b919e,
        0xa17c0a47,
        0xaf75074c,
        0xbd6e1051,
        0xb3671d5a,
        0x99583e6b,
        0x97513360,
        0x854a247d,
        0x8b432976,
        0xd134621f,
        0xdf3d6f14,
        0xcd267809,
        0xc32f7502,
        0xe9105633,
        0xe7195b38,
        0xf5024c25,
        0xfb0b412e,
        0x9ad7618c,
        0x94de6c87,
        0x86c57b9a,
        0x88cc7691,
        0xa2f355a0,
        0xacfa58ab,
        0xbee14fb6,
        0xb0e842bd,
        0xea9f09d4,
        0xe49604df,
        0xf68d13c2,
        0xf8841ec9,
        0xd2bb3df8,
        0xdcb230f3,
        0xcea927ee,
        0xc0a02ae5,
        0x7a47b13c,
        0x744ebc37,
        0x6655ab2a,
        0x685ca621,
        0x42638510,
        0x4c6a881b,
        0x5e719f06,
        0x5078920d,
        0x0a0fd964,
        0x0406d46f,
        0x161dc372,
        0x1814ce79,
        0x322bed48,
        0x3c22e043,
        0x2e39f75e,
        0x2030fa55,
        0xec9ab701,
        0xe293ba0a,
        0xf088ad17,
        0xfe81a01c,
        0xd4be832d,
        0xdab78e26,
        0xc8ac993b,
        0xc6a59430,
        0x9cd2df59,
        0x92dbd252,
        0x80c0c54f,
        0x8ec9c844,
        0xa4f6eb75,
        0xaaffe67e,
        0xb8e4f163,
        0xb6edfc68,
        0x0c0a67b1,
        0x02036aba,
        0x10187da7,
        0x1e1170ac,
        0x342e539d,
        0x3a275e96,
        0x283c498b,
        0x26354480,
        0x7c420fe9,
        0x724b02e2,
        0x605015ff,
        0x6e5918f4,
        0x44663bc5,
        0x4a6f36ce,
        0x587421d3,
        0x567d2cd8,
        0x37a10c7a,
        0x39a80171,
        0x2bb3166c,
        0x25ba1b67,
        0x0f853856,
        0x018c355d,
        0x13972240,
        0x1d9e2f4b,
        0x47e96422,
        0x49e06929,
        0x5bfb7e34,
        0x55f2733f,
        0x7fcd500e,
        0x71c45d05,
        0x63df4a18,
        0x6dd64713,
        0xd731dcca,
        0xd938d1c1,
        0xcb23c6dc,
        0xc52acbd7,
        0xef15e8e6,
        0xe11ce5ed,
        0xf307f2f0,
        0xfd0efffb,
        0xa779b492,
        0xa970b999,
        0xbb6bae84,
        0xb562a38f,
        0x9f5d80be,
        0x91548db5,
        0x834f9aa8,
        0x8d4697a3
    ];
    var U2 = [
        0x00000000,
        0x0b0e090d,
        0x161c121a,
        0x1d121b17,
        0x2c382434,
        0x27362d39,
        0x3a24362e,
        0x312a3f23,
        0x58704868,
        0x537e4165,
        0x4e6c5a72,
        0x4562537f,
        0x74486c5c,
        0x7f466551,
        0x62547e46,
        0x695a774b,
        0xb0e090d0,
        0xbbee99dd,
        0xa6fc82ca,
        0xadf28bc7,
        0x9cd8b4e4,
        0x97d6bde9,
        0x8ac4a6fe,
        0x81caaff3,
        0xe890d8b8,
        0xe39ed1b5,
        0xfe8ccaa2,
        0xf582c3af,
        0xc4a8fc8c,
        0xcfa6f581,
        0xd2b4ee96,
        0xd9bae79b,
        0x7bdb3bbb,
        0x70d532b6,
        0x6dc729a1,
        0x66c920ac,
        0x57e31f8f,
        0x5ced1682,
        0x41ff0d95,
        0x4af10498,
        0x23ab73d3,
        0x28a57ade,
        0x35b761c9,
        0x3eb968c4,
        0x0f9357e7,
        0x049d5eea,
        0x198f45fd,
        0x12814cf0,
        0xcb3bab6b,
        0xc035a266,
        0xdd27b971,
        0xd629b07c,
        0xe7038f5f,
        0xec0d8652,
        0xf11f9d45,
        0xfa119448,
        0x934be303,
        0x9845ea0e,
        0x8557f119,
        0x8e59f814,
        0xbf73c737,
        0xb47dce3a,
        0xa96fd52d,
        0xa261dc20,
        0xf6ad766d,
        0xfda37f60,
        0xe0b16477,
        0xebbf6d7a,
        0xda955259,
        0xd19b5b54,
        0xcc894043,
        0xc787494e,
        0xaedd3e05,
        0xa5d33708,
        0xb8c12c1f,
        0xb3cf2512,
        0x82e51a31,
        0x89eb133c,
        0x94f9082b,
        0x9ff70126,
        0x464de6bd,
        0x4d43efb0,
        0x5051f4a7,
        0x5b5ffdaa,
        0x6a75c289,
        0x617bcb84,
        0x7c69d093,
        0x7767d99e,
        0x1e3daed5,
        0x1533a7d8,
        0x0821bccf,
        0x032fb5c2,
        0x32058ae1,
        0x390b83ec,
        0x241998fb,
        0x2f1791f6,
        0x8d764dd6,
        0x867844db,
        0x9b6a5fcc,
        0x906456c1,
        0xa14e69e2,
        0xaa4060ef,
        0xb7527bf8,
        0xbc5c72f5,
        0xd50605be,
        0xde080cb3,
        0xc31a17a4,
        0xc8141ea9,
        0xf93e218a,
        0xf2302887,
        0xef223390,
        0xe42c3a9d,
        0x3d96dd06,
        0x3698d40b,
        0x2b8acf1c,
        0x2084c611,
        0x11aef932,
        0x1aa0f03f,
        0x07b2eb28,
        0x0cbce225,
        0x65e6956e,
        0x6ee89c63,
        0x73fa8774,
        0x78f48e79,
        0x49deb15a,
        0x42d0b857,
        0x5fc2a340,
        0x54ccaa4d,
        0xf741ecda,
        0xfc4fe5d7,
        0xe15dfec0,
        0xea53f7cd,
        0xdb79c8ee,
        0xd077c1e3,
        0xcd65daf4,
        0xc66bd3f9,
        0xaf31a4b2,
        0xa43fadbf,
        0xb92db6a8,
        0xb223bfa5,
        0x83098086,
        0x8807898b,
        0x9515929c,
        0x9e1b9b91,
        0x47a17c0a,
        0x4caf7507,
        0x51bd6e10,
        0x5ab3671d,
        0x6b99583e,
        0x60975133,
        0x7d854a24,
        0x768b4329,
        0x1fd13462,
        0x14df3d6f,
        0x09cd2678,
        0x02c32f75,
        0x33e91056,
        0x38e7195b,
        0x25f5024c,
        0x2efb0b41,
        0x8c9ad761,
        0x8794de6c,
        0x9a86c57b,
        0x9188cc76,
        0xa0a2f355,
        0xabacfa58,
        0xb6bee14f,
        0xbdb0e842,
        0xd4ea9f09,
        0xdfe49604,
        0xc2f68d13,
        0xc9f8841e,
        0xf8d2bb3d,
        0xf3dcb230,
        0xeecea927,
        0xe5c0a02a,
        0x3c7a47b1,
        0x37744ebc,
        0x2a6655ab,
        0x21685ca6,
        0x10426385,
        0x1b4c6a88,
        0x065e719f,
        0x0d507892,
        0x640a0fd9,
        0x6f0406d4,
        0x72161dc3,
        0x791814ce,
        0x48322bed,
        0x433c22e0,
        0x5e2e39f7,
        0x552030fa,
        0x01ec9ab7,
        0x0ae293ba,
        0x17f088ad,
        0x1cfe81a0,
        0x2dd4be83,
        0x26dab78e,
        0x3bc8ac99,
        0x30c6a594,
        0x599cd2df,
        0x5292dbd2,
        0x4f80c0c5,
        0x448ec9c8,
        0x75a4f6eb,
        0x7eaaffe6,
        0x63b8e4f1,
        0x68b6edfc,
        0xb10c0a67,
        0xba02036a,
        0xa710187d,
        0xac1e1170,
        0x9d342e53,
        0x963a275e,
        0x8b283c49,
        0x80263544,
        0xe97c420f,
        0xe2724b02,
        0xff605015,
        0xf46e5918,
        0xc544663b,
        0xce4a6f36,
        0xd3587421,
        0xd8567d2c,
        0x7a37a10c,
        0x7139a801,
        0x6c2bb316,
        0x6725ba1b,
        0x560f8538,
        0x5d018c35,
        0x40139722,
        0x4b1d9e2f,
        0x2247e964,
        0x2949e069,
        0x345bfb7e,
        0x3f55f273,
        0x0e7fcd50,
        0x0571c45d,
        0x1863df4a,
        0x136dd647,
        0xcad731dc,
        0xc1d938d1,
        0xdccb23c6,
        0xd7c52acb,
        0xe6ef15e8,
        0xede11ce5,
        0xf0f307f2,
        0xfbfd0eff,
        0x92a779b4,
        0x99a970b9,
        0x84bb6bae,
        0x8fb562a3,
        0xbe9f5d80,
        0xb591548d,
        0xa8834f9a,
        0xa38d4697
    ];
    var U3 = [
        0x00000000,
        0x0d0b0e09,
        0x1a161c12,
        0x171d121b,
        0x342c3824,
        0x3927362d,
        0x2e3a2436,
        0x23312a3f,
        0x68587048,
        0x65537e41,
        0x724e6c5a,
        0x7f456253,
        0x5c74486c,
        0x517f4665,
        0x4662547e,
        0x4b695a77,
        0xd0b0e090,
        0xddbbee99,
        0xcaa6fc82,
        0xc7adf28b,
        0xe49cd8b4,
        0xe997d6bd,
        0xfe8ac4a6,
        0xf381caaf,
        0xb8e890d8,
        0xb5e39ed1,
        0xa2fe8cca,
        0xaff582c3,
        0x8cc4a8fc,
        0x81cfa6f5,
        0x96d2b4ee,
        0x9bd9bae7,
        0xbb7bdb3b,
        0xb670d532,
        0xa16dc729,
        0xac66c920,
        0x8f57e31f,
        0x825ced16,
        0x9541ff0d,
        0x984af104,
        0xd323ab73,
        0xde28a57a,
        0xc935b761,
        0xc43eb968,
        0xe70f9357,
        0xea049d5e,
        0xfd198f45,
        0xf012814c,
        0x6bcb3bab,
        0x66c035a2,
        0x71dd27b9,
        0x7cd629b0,
        0x5fe7038f,
        0x52ec0d86,
        0x45f11f9d,
        0x48fa1194,
        0x03934be3,
        0x0e9845ea,
        0x198557f1,
        0x148e59f8,
        0x37bf73c7,
        0x3ab47dce,
        0x2da96fd5,
        0x20a261dc,
        0x6df6ad76,
        0x60fda37f,
        0x77e0b164,
        0x7aebbf6d,
        0x59da9552,
        0x54d19b5b,
        0x43cc8940,
        0x4ec78749,
        0x05aedd3e,
        0x08a5d337,
        0x1fb8c12c,
        0x12b3cf25,
        0x3182e51a,
        0x3c89eb13,
        0x2b94f908,
        0x269ff701,
        0xbd464de6,
        0xb04d43ef,
        0xa75051f4,
        0xaa5b5ffd,
        0x896a75c2,
        0x84617bcb,
        0x937c69d0,
        0x9e7767d9,
        0xd51e3dae,
        0xd81533a7,
        0xcf0821bc,
        0xc2032fb5,
        0xe132058a,
        0xec390b83,
        0xfb241998,
        0xf62f1791,
        0xd68d764d,
        0xdb867844,
        0xcc9b6a5f,
        0xc1906456,
        0xe2a14e69,
        0xefaa4060,
        0xf8b7527b,
        0xf5bc5c72,
        0xbed50605,
        0xb3de080c,
        0xa4c31a17,
        0xa9c8141e,
        0x8af93e21,
        0x87f23028,
        0x90ef2233,
        0x9de42c3a,
        0x063d96dd,
        0x0b3698d4,
        0x1c2b8acf,
        0x112084c6,
        0x3211aef9,
        0x3f1aa0f0,
        0x2807b2eb,
        0x250cbce2,
        0x6e65e695,
        0x636ee89c,
        0x7473fa87,
        0x7978f48e,
        0x5a49deb1,
        0x5742d0b8,
        0x405fc2a3,
        0x4d54ccaa,
        0xdaf741ec,
        0xd7fc4fe5,
        0xc0e15dfe,
        0xcdea53f7,
        0xeedb79c8,
        0xe3d077c1,
        0xf4cd65da,
        0xf9c66bd3,
        0xb2af31a4,
        0xbfa43fad,
        0xa8b92db6,
        0xa5b223bf,
        0x86830980,
        0x8b880789,
        0x9c951592,
        0x919e1b9b,
        0x0a47a17c,
        0x074caf75,
        0x1051bd6e,
        0x1d5ab367,
        0x3e6b9958,
        0x33609751,
        0x247d854a,
        0x29768b43,
        0x621fd134,
        0x6f14df3d,
        0x7809cd26,
        0x7502c32f,
        0x5633e910,
        0x5b38e719,
        0x4c25f502,
        0x412efb0b,
        0x618c9ad7,
        0x6c8794de,
        0x7b9a86c5,
        0x769188cc,
        0x55a0a2f3,
        0x58abacfa,
        0x4fb6bee1,
        0x42bdb0e8,
        0x09d4ea9f,
        0x04dfe496,
        0x13c2f68d,
        0x1ec9f884,
        0x3df8d2bb,
        0x30f3dcb2,
        0x27eecea9,
        0x2ae5c0a0,
        0xb13c7a47,
        0xbc37744e,
        0xab2a6655,
        0xa621685c,
        0x85104263,
        0x881b4c6a,
        0x9f065e71,
        0x920d5078,
        0xd9640a0f,
        0xd46f0406,
        0xc372161d,
        0xce791814,
        0xed48322b,
        0xe0433c22,
        0xf75e2e39,
        0xfa552030,
        0xb701ec9a,
        0xba0ae293,
        0xad17f088,
        0xa01cfe81,
        0x832dd4be,
        0x8e26dab7,
        0x993bc8ac,
        0x9430c6a5,
        0xdf599cd2,
        0xd25292db,
        0xc54f80c0,
        0xc8448ec9,
        0xeb75a4f6,
        0xe67eaaff,
        0xf163b8e4,
        0xfc68b6ed,
        0x67b10c0a,
        0x6aba0203,
        0x7da71018,
        0x70ac1e11,
        0x539d342e,
        0x5e963a27,
        0x498b283c,
        0x44802635,
        0x0fe97c42,
        0x02e2724b,
        0x15ff6050,
        0x18f46e59,
        0x3bc54466,
        0x36ce4a6f,
        0x21d35874,
        0x2cd8567d,
        0x0c7a37a1,
        0x017139a8,
        0x166c2bb3,
        0x1b6725ba,
        0x38560f85,
        0x355d018c,
        0x22401397,
        0x2f4b1d9e,
        0x642247e9,
        0x692949e0,
        0x7e345bfb,
        0x733f55f2,
        0x500e7fcd,
        0x5d0571c4,
        0x4a1863df,
        0x47136dd6,
        0xdccad731,
        0xd1c1d938,
        0xc6dccb23,
        0xcbd7c52a,
        0xe8e6ef15,
        0xe5ede11c,
        0xf2f0f307,
        0xfffbfd0e,
        0xb492a779,
        0xb999a970,
        0xae84bb6b,
        0xa38fb562,
        0x80be9f5d,
        0x8db59154,
        0x9aa8834f,
        0x97a38d46
    ];
    var U4 = [
        0x00000000,
        0x090d0b0e,
        0x121a161c,
        0x1b171d12,
        0x24342c38,
        0x2d392736,
        0x362e3a24,
        0x3f23312a,
        0x48685870,
        0x4165537e,
        0x5a724e6c,
        0x537f4562,
        0x6c5c7448,
        0x65517f46,
        0x7e466254,
        0x774b695a,
        0x90d0b0e0,
        0x99ddbbee,
        0x82caa6fc,
        0x8bc7adf2,
        0xb4e49cd8,
        0xbde997d6,
        0xa6fe8ac4,
        0xaff381ca,
        0xd8b8e890,
        0xd1b5e39e,
        0xcaa2fe8c,
        0xc3aff582,
        0xfc8cc4a8,
        0xf581cfa6,
        0xee96d2b4,
        0xe79bd9ba,
        0x3bbb7bdb,
        0x32b670d5,
        0x29a16dc7,
        0x20ac66c9,
        0x1f8f57e3,
        0x16825ced,
        0x0d9541ff,
        0x04984af1,
        0x73d323ab,
        0x7ade28a5,
        0x61c935b7,
        0x68c43eb9,
        0x57e70f93,
        0x5eea049d,
        0x45fd198f,
        0x4cf01281,
        0xab6bcb3b,
        0xa266c035,
        0xb971dd27,
        0xb07cd629,
        0x8f5fe703,
        0x8652ec0d,
        0x9d45f11f,
        0x9448fa11,
        0xe303934b,
        0xea0e9845,
        0xf1198557,
        0xf8148e59,
        0xc737bf73,
        0xce3ab47d,
        0xd52da96f,
        0xdc20a261,
        0x766df6ad,
        0x7f60fda3,
        0x6477e0b1,
        0x6d7aebbf,
        0x5259da95,
        0x5b54d19b,
        0x4043cc89,
        0x494ec787,
        0x3e05aedd,
        0x3708a5d3,
        0x2c1fb8c1,
        0x2512b3cf,
        0x1a3182e5,
        0x133c89eb,
        0x082b94f9,
        0x01269ff7,
        0xe6bd464d,
        0xefb04d43,
        0xf4a75051,
        0xfdaa5b5f,
        0xc2896a75,
        0xcb84617b,
        0xd0937c69,
        0xd99e7767,
        0xaed51e3d,
        0xa7d81533,
        0xbccf0821,
        0xb5c2032f,
        0x8ae13205,
        0x83ec390b,
        0x98fb2419,
        0x91f62f17,
        0x4dd68d76,
        0x44db8678,
        0x5fcc9b6a,
        0x56c19064,
        0x69e2a14e,
        0x60efaa40,
        0x7bf8b752,
        0x72f5bc5c,
        0x05bed506,
        0x0cb3de08,
        0x17a4c31a,
        0x1ea9c814,
        0x218af93e,
        0x2887f230,
        0x3390ef22,
        0x3a9de42c,
        0xdd063d96,
        0xd40b3698,
        0xcf1c2b8a,
        0xc6112084,
        0xf93211ae,
        0xf03f1aa0,
        0xeb2807b2,
        0xe2250cbc,
        0x956e65e6,
        0x9c636ee8,
        0x877473fa,
        0x8e7978f4,
        0xb15a49de,
        0xb85742d0,
        0xa3405fc2,
        0xaa4d54cc,
        0xecdaf741,
        0xe5d7fc4f,
        0xfec0e15d,
        0xf7cdea53,
        0xc8eedb79,
        0xc1e3d077,
        0xdaf4cd65,
        0xd3f9c66b,
        0xa4b2af31,
        0xadbfa43f,
        0xb6a8b92d,
        0xbfa5b223,
        0x80868309,
        0x898b8807,
        0x929c9515,
        0x9b919e1b,
        0x7c0a47a1,
        0x75074caf,
        0x6e1051bd,
        0x671d5ab3,
        0x583e6b99,
        0x51336097,
        0x4a247d85,
        0x4329768b,
        0x34621fd1,
        0x3d6f14df,
        0x267809cd,
        0x2f7502c3,
        0x105633e9,
        0x195b38e7,
        0x024c25f5,
        0x0b412efb,
        0xd7618c9a,
        0xde6c8794,
        0xc57b9a86,
        0xcc769188,
        0xf355a0a2,
        0xfa58abac,
        0xe14fb6be,
        0xe842bdb0,
        0x9f09d4ea,
        0x9604dfe4,
        0x8d13c2f6,
        0x841ec9f8,
        0xbb3df8d2,
        0xb230f3dc,
        0xa927eece,
        0xa02ae5c0,
        0x47b13c7a,
        0x4ebc3774,
        0x55ab2a66,
        0x5ca62168,
        0x63851042,
        0x6a881b4c,
        0x719f065e,
        0x78920d50,
        0x0fd9640a,
        0x06d46f04,
        0x1dc37216,
        0x14ce7918,
        0x2bed4832,
        0x22e0433c,
        0x39f75e2e,
        0x30fa5520,
        0x9ab701ec,
        0x93ba0ae2,
        0x88ad17f0,
        0x81a01cfe,
        0xbe832dd4,
        0xb78e26da,
        0xac993bc8,
        0xa59430c6,
        0xd2df599c,
        0xdbd25292,
        0xc0c54f80,
        0xc9c8448e,
        0xf6eb75a4,
        0xffe67eaa,
        0xe4f163b8,
        0xedfc68b6,
        0x0a67b10c,
        0x036aba02,
        0x187da710,
        0x1170ac1e,
        0x2e539d34,
        0x275e963a,
        0x3c498b28,
        0x35448026,
        0x420fe97c,
        0x4b02e272,
        0x5015ff60,
        0x5918f46e,
        0x663bc544,
        0x6f36ce4a,
        0x7421d358,
        0x7d2cd856,
        0xa10c7a37,
        0xa8017139,
        0xb3166c2b,
        0xba1b6725,
        0x8538560f,
        0x8c355d01,
        0x97224013,
        0x9e2f4b1d,
        0xe9642247,
        0xe0692949,
        0xfb7e345b,
        0xf2733f55,
        0xcd500e7f,
        0xc45d0571,
        0xdf4a1863,
        0xd647136d,
        0x31dccad7,
        0x38d1c1d9,
        0x23c6dccb,
        0x2acbd7c5,
        0x15e8e6ef,
        0x1ce5ede1,
        0x07f2f0f3,
        0x0efffbfd,
        0x79b492a7,
        0x70b999a9,
        0x6bae84bb,
        0x62a38fb5,
        0x5d80be9f,
        0x548db591,
        0x4f9aa883,
        0x4697a38d
    ];
    function convertToInt32(bytes) {
        var result = [];
        for(var i = 0; i < bytes.length; i += 4)result.push(bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]);
        return result;
    }
    var AES = function(key) {
        if (!(this instanceof AES)) throw Error("AES must be instanitated with `new`");
        Object.defineProperty(this, "key", {
            value: coerceArray(key, true)
        });
        this._prepare();
    };
    AES.prototype._prepare = function() {
        var rounds = numberOfRounds[this.key.length];
        if (rounds == null) throw new Error("invalid key size (must be 16, 24 or 32 bytes)");
        // encryption round keys
        this._Ke = [];
        // decryption round keys
        this._Kd = [];
        for(var i = 0; i <= rounds; i++){
            this._Ke.push([
                0,
                0,
                0,
                0
            ]);
            this._Kd.push([
                0,
                0,
                0,
                0
            ]);
        }
        var roundKeyCount = (rounds + 1) * 4;
        var KC = this.key.length / 4;
        // convert the key into ints
        var tk = convertToInt32(this.key);
        // copy values into round key arrays
        var index;
        for(var i = 0; i < KC; i++){
            index = i >> 2;
            this._Ke[index][i % 4] = tk[i];
            this._Kd[rounds - index][i % 4] = tk[i];
        }
        // key expansion (fips-197 section 5.2)
        var rconpointer = 0;
        var t = KC, tt;
        while(t < roundKeyCount){
            tt = tk[KC - 1];
            tk[0] ^= S[tt >> 16 & 0xFF] << 24 ^ S[tt >> 8 & 0xFF] << 16 ^ S[tt & 0xFF] << 8 ^ S[tt >> 24 & 0xFF] ^ rcon[rconpointer] << 24;
            rconpointer += 1;
            // key expansion (for non-256 bit)
            if (KC != 8) for(var i = 1; i < KC; i++)tk[i] ^= tk[i - 1];
            else {
                for(var i = 1; i < KC / 2; i++)tk[i] ^= tk[i - 1];
                tt = tk[KC / 2 - 1];
                tk[KC / 2] ^= S[tt & 0xFF] ^ S[tt >> 8 & 0xFF] << 8 ^ S[tt >> 16 & 0xFF] << 16 ^ S[tt >> 24 & 0xFF] << 24;
                for(var i = KC / 2 + 1; i < KC; i++)tk[i] ^= tk[i - 1];
            }
            // copy values into round key arrays
            var i = 0, r, c;
            while(i < KC && t < roundKeyCount){
                r = t >> 2;
                c = t % 4;
                this._Ke[r][c] = tk[i];
                this._Kd[rounds - r][c] = tk[i++];
                t++;
            }
        }
        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)
        for(var r = 1; r < rounds; r++)for(var c = 0; c < 4; c++){
            tt = this._Kd[r][c];
            this._Kd[r][c] = U1[tt >> 24 & 0xFF] ^ U2[tt >> 16 & 0xFF] ^ U3[tt >> 8 & 0xFF] ^ U4[tt & 0xFF];
        }
    };
    AES.prototype.encrypt = function(plaintext) {
        if (plaintext.length != 16) throw new Error("invalid plaintext size (must be 16 bytes)");
        var rounds = this._Ke.length - 1;
        var a = [
            0,
            0,
            0,
            0
        ];
        // convert plaintext to (ints ^ key)
        var t = convertToInt32(plaintext);
        for(var i = 0; i < 4; i++)t[i] ^= this._Ke[0][i];
        // apply round transforms
        for(var r = 1; r < rounds; r++){
            for(var i = 0; i < 4; i++)a[i] = T1[t[i] >> 24 & 0xff] ^ T2[t[(i + 1) % 4] >> 16 & 0xff] ^ T3[t[(i + 2) % 4] >> 8 & 0xff] ^ T4[t[(i + 3) % 4] & 0xff] ^ this._Ke[r][i];
            t = a.slice();
        }
        // the last round is special
        var result = createArray(16), tt;
        for(var i = 0; i < 4; i++){
            tt = this._Ke[rounds][i];
            result[4 * i] = (S[t[i] >> 24 & 0xff] ^ tt >> 24) & 0xff;
            result[4 * i + 1] = (S[t[(i + 1) % 4] >> 16 & 0xff] ^ tt >> 16) & 0xff;
            result[4 * i + 2] = (S[t[(i + 2) % 4] >> 8 & 0xff] ^ tt >> 8) & 0xff;
            result[4 * i + 3] = (S[t[(i + 3) % 4] & 0xff] ^ tt) & 0xff;
        }
        return result;
    };
    AES.prototype.decrypt = function(ciphertext) {
        if (ciphertext.length != 16) throw new Error("invalid ciphertext size (must be 16 bytes)");
        var rounds = this._Kd.length - 1;
        var a = [
            0,
            0,
            0,
            0
        ];
        // convert plaintext to (ints ^ key)
        var t = convertToInt32(ciphertext);
        for(var i = 0; i < 4; i++)t[i] ^= this._Kd[0][i];
        // apply round transforms
        for(var r = 1; r < rounds; r++){
            for(var i = 0; i < 4; i++)a[i] = T5[t[i] >> 24 & 0xff] ^ T6[t[(i + 3) % 4] >> 16 & 0xff] ^ T7[t[(i + 2) % 4] >> 8 & 0xff] ^ T8[t[(i + 1) % 4] & 0xff] ^ this._Kd[r][i];
            t = a.slice();
        }
        // the last round is special
        var result = createArray(16), tt;
        for(var i = 0; i < 4; i++){
            tt = this._Kd[rounds][i];
            result[4 * i] = (Si[t[i] >> 24 & 0xff] ^ tt >> 24) & 0xff;
            result[4 * i + 1] = (Si[t[(i + 3) % 4] >> 16 & 0xff] ^ tt >> 16) & 0xff;
            result[4 * i + 2] = (Si[t[(i + 2) % 4] >> 8 & 0xff] ^ tt >> 8) & 0xff;
            result[4 * i + 3] = (Si[t[(i + 1) % 4] & 0xff] ^ tt) & 0xff;
        }
        return result;
    };
    /**
     *  Mode Of Operation - Electonic Codebook (ECB)
     */ var ModeOfOperationECB = function(key) {
        if (!(this instanceof ModeOfOperationECB)) throw Error("AES must be instanitated with `new`");
        this.description = "Electronic Code Block";
        this.name = "ecb";
        this._aes = new AES(key);
    };
    ModeOfOperationECB.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);
        if (plaintext.length % 16 !== 0) throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);
        for(var i = 0; i < plaintext.length; i += 16){
            copyArray(plaintext, block, 0, i, i + 16);
            block = this._aes.encrypt(block);
            copyArray(block, ciphertext, i);
        }
        return ciphertext;
    };
    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);
        if (ciphertext.length % 16 !== 0) throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);
        for(var i = 0; i < ciphertext.length; i += 16){
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);
            copyArray(block, plaintext, i);
        }
        return plaintext;
    };
    /**
     *  Mode Of Operation - Cipher Block Chaining (CBC)
     */ var ModeOfOperationCBC = function(key, iv) {
        if (!(this instanceof ModeOfOperationCBC)) throw Error("AES must be instanitated with `new`");
        this.description = "Cipher Block Chaining";
        this.name = "cbc";
        if (!iv) iv = createArray(16);
        else if (iv.length != 16) throw new Error("invalid initialation vector size (must be 16 bytes)");
        this._lastCipherblock = coerceArray(iv, true);
        this._aes = new AES(key);
    };
    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);
        if (plaintext.length % 16 !== 0) throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);
        for(var i = 0; i < plaintext.length; i += 16){
            copyArray(plaintext, block, 0, i, i + 16);
            for(var j = 0; j < 16; j++)block[j] ^= this._lastCipherblock[j];
            this._lastCipherblock = this._aes.encrypt(block);
            copyArray(this._lastCipherblock, ciphertext, i);
        }
        return ciphertext;
    };
    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);
        if (ciphertext.length % 16 !== 0) throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);
        for(var i = 0; i < ciphertext.length; i += 16){
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);
            for(var j = 0; j < 16; j++)plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
        }
        return plaintext;
    };
    /**
     *  Mode Of Operation - Cipher Feedback (CFB)
     */ var ModeOfOperationCFB = function(key, iv, segmentSize) {
        if (!(this instanceof ModeOfOperationCFB)) throw Error("AES must be instanitated with `new`");
        this.description = "Cipher Feedback";
        this.name = "cfb";
        if (!iv) iv = createArray(16);
        else if (iv.length != 16) throw new Error("invalid initialation vector size (must be 16 size)");
        if (!segmentSize) segmentSize = 1;
        this.segmentSize = segmentSize;
        this._shiftRegister = coerceArray(iv, true);
        this._aes = new AES(key);
    };
    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {
        if (plaintext.length % this.segmentSize != 0) throw new Error("invalid plaintext size (must be segmentSize bytes)");
        var encrypted = coerceArray(plaintext, true);
        var xorSegment;
        for(var i = 0; i < encrypted.length; i += this.segmentSize){
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for(var j = 0; j < this.segmentSize; j++)encrypted[i + j] ^= xorSegment[j];
            // Shift the register
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }
        return encrypted;
    };
    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {
        if (ciphertext.length % this.segmentSize != 0) throw new Error("invalid ciphertext size (must be segmentSize bytes)");
        var plaintext = coerceArray(ciphertext, true);
        var xorSegment;
        for(var i = 0; i < plaintext.length; i += this.segmentSize){
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for(var j = 0; j < this.segmentSize; j++)plaintext[i + j] ^= xorSegment[j];
            // Shift the register
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }
        return plaintext;
    };
    /**
     *  Mode Of Operation - Output Feedback (OFB)
     */ var ModeOfOperationOFB = function(key, iv) {
        if (!(this instanceof ModeOfOperationOFB)) throw Error("AES must be instanitated with `new`");
        this.description = "Output Feedback";
        this.name = "ofb";
        if (!iv) iv = createArray(16);
        else if (iv.length != 16) throw new Error("invalid initialation vector size (must be 16 bytes)");
        this._lastPrecipher = coerceArray(iv, true);
        this._lastPrecipherIndex = 16;
        this._aes = new AES(key);
    };
    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);
        for(var i = 0; i < encrypted.length; i++){
            if (this._lastPrecipherIndex === 16) {
                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);
                this._lastPrecipherIndex = 0;
            }
            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
        }
        return encrypted;
    };
    // Decryption is symetric
    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;
    /**
     *  Counter object for CTR common mode of operation
     */ var Counter = function(initialValue) {
        if (!(this instanceof Counter)) throw Error("Counter must be instanitated with `new`");
        // We allow 0, but anything false-ish uses the default 1
        if (initialValue !== 0 && !initialValue) initialValue = 1;
        if (typeof initialValue === "number") {
            this._counter = createArray(16);
            this.setValue(initialValue);
        } else this.setBytes(initialValue);
    };
    Counter.prototype.setValue = function(value) {
        if (typeof value !== "number" || parseInt(value) != value) throw new Error("invalid counter value (must be an integer)");
        for(var index = 15; index >= 0; --index){
            this._counter[index] = value % 256;
            value = value >> 8;
        }
    };
    Counter.prototype.setBytes = function(bytes) {
        bytes = coerceArray(bytes, true);
        if (bytes.length != 16) throw new Error("invalid counter bytes size (must be 16 bytes)");
        this._counter = bytes;
    };
    Counter.prototype.increment = function() {
        for(var i = 15; i >= 0; i--)if (this._counter[i] === 255) this._counter[i] = 0;
        else {
            this._counter[i]++;
            break;
        }
    };
    /**
     *  Mode Of Operation - Counter (CTR)
     */ var ModeOfOperationCTR = function(key, counter) {
        if (!(this instanceof ModeOfOperationCTR)) throw Error("AES must be instanitated with `new`");
        this.description = "Counter";
        this.name = "ctr";
        if (!(counter instanceof Counter)) counter = new Counter(counter);
        this._counter = counter;
        this._remainingCounter = null;
        this._remainingCounterIndex = 16;
        this._aes = new AES(key);
    };
    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);
        for(var i = 0; i < encrypted.length; i++){
            if (this._remainingCounterIndex === 16) {
                this._remainingCounter = this._aes.encrypt(this._counter._counter);
                this._remainingCounterIndex = 0;
                this._counter.increment();
            }
            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
        }
        return encrypted;
    };
    // Decryption is symetric
    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;
    ///////////////////////
    // Padding
    // See:https://tools.ietf.org/html/rfc2315
    function pkcs7pad(data) {
        data = coerceArray(data, true);
        var padder = 16 - data.length % 16;
        var result = createArray(data.length + padder);
        copyArray(data, result);
        for(var i = data.length; i < result.length; i++)result[i] = padder;
        return result;
    }
    function pkcs7strip(data) {
        data = coerceArray(data, true);
        if (data.length < 16) throw new Error("PKCS#7 invalid length");
        var padder = data[data.length - 1];
        if (padder > 16) throw new Error("PKCS#7 padding byte out of range");
        var length = data.length - padder;
        for(var i = 0; i < padder; i++){
            if (data[length + i] !== padder) throw new Error("PKCS#7 invalid padding byte");
        }
        var result = createArray(length);
        copyArray(data, result, 0, 0, length);
        return result;
    }
    ///////////////////////
    // Exporting
    // The block cipher
    var aesjs = {
        AES: AES,
        Counter: Counter,
        ModeOfOperation: {
            ecb: ModeOfOperationECB,
            cbc: ModeOfOperationCBC,
            cfb: ModeOfOperationCFB,
            ofb: ModeOfOperationOFB,
            ctr: ModeOfOperationCTR
        },
        utils: {
            hex: convertHex,
            utf8: convertUtf8
        },
        padding: {
            pkcs7: {
                pad: pkcs7pad,
                strip: pkcs7strip
            }
        },
        _arrayTest: {
            coerceArray: coerceArray,
            createArray: createArray,
            copyArray: copyArray
        }
    };
    $c2fb1b63b91ce421$exports = aesjs;
})($c2fb1b63b91ce421$exports);




var $eg8oT = parcelRequire("eg8oT");





var $cbv61 = parcelRequire("cbv61");
const $3bf2b6c8c4587dd0$export$83d89fbfd8236492 = "json-wallets/5.7.0";



var $eg8oT = parcelRequire("eg8oT");

"use strict";
function $9504d666c3e48ebd$export$2cde08bde0cfd932(hexString) {
    if (typeof hexString === "string" && hexString.substring(0, 2) !== "0x") hexString = "0x" + hexString;
    return (0, $eg8oT.arrayify)(hexString);
}
function $9504d666c3e48ebd$export$67752b99d3bc61c6(value, length) {
    value = String(value);
    while(value.length < length)value = "0" + value;
    return value;
}
function $9504d666c3e48ebd$export$350bd33120f7413e(password) {
    if (typeof password === "string") return (0, $cde319f07c8777da$export$8feeb310b4b4752f)(password, (0, $cde319f07c8777da$export$c6986442964129f5).NFKC);
    return (0, $eg8oT.arrayify)(password);
}
function $9504d666c3e48ebd$export$5a5c1dbd910e2c32(object, path) {
    let currentChild = object;
    const comps = path.toLowerCase().split("/");
    for(let i = 0; i < comps.length; i++){
        // Search for a child object with a case-insensitive matching key
        let matchingChild = null;
        for(const key in currentChild)if (key.toLowerCase() === comps[i]) {
            matchingChild = currentChild[key];
            break;
        }
        // Didn't find one. :'(
        if (matchingChild === null) return null;
        // Now check this child...
        currentChild = matchingChild;
    }
    return currentChild;
}
function $9504d666c3e48ebd$export$ec7b18ebad55a3a9(randomBytes) {
    const bytes = (0, $eg8oT.arrayify)(randomBytes);
    // Section: 4.1.3:
    // - time_hi_and_version[12:16] = 0b0100
    bytes[6] = bytes[6] & 0x0f | 0x40;
    // Section 4.4
    // - clock_seq_hi_and_reserved[6] = 0b0
    // - clock_seq_hi_and_reserved[7] = 0b1
    bytes[8] = bytes[8] & 0x3f | 0x80;
    const value = (0, $eg8oT.hexlify)(bytes);
    return [
        value.substring(2, 10),
        value.substring(10, 14),
        value.substring(14, 18),
        value.substring(18, 22),
        value.substring(22, 34)
    ].join("-");
}


"use strict";
const $d1e8526c4792c56f$var$logger = new (0, $cbv61.Logger)((0, $3bf2b6c8c4587dd0$export$83d89fbfd8236492));
class $d1e8526c4792c56f$export$93a76d16f88f2b3 extends (0, $b19fb92a27e5f35f$exports.Description) {
    isCrowdsaleAccount(value) {
        return !!(value && value._isCrowdsaleAccount);
    }
}
function $d1e8526c4792c56f$export$e85a0c9a1067c5d3(json, password) {
    const data = JSON.parse(json);
    password = (0, $9504d666c3e48ebd$export$350bd33120f7413e)(password);
    // Ethereum Address
    const ethaddr = (0, $8b38701037b2e5d8$export$88411125f012957a)((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "ethaddr"));
    // Encrypted Seed
    const encseed = (0, $9504d666c3e48ebd$export$2cde08bde0cfd932)((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "encseed"));
    if (!encseed || encseed.length % 16 !== 0) $d1e8526c4792c56f$var$logger.throwArgumentError("invalid encseed", "json", json);
    const key = (0, $eg8oT.arrayify)((0, $b1254480b6ba1484$export$448fa22aedc9dbca)(password, password, 2000, 32, "sha256")).slice(0, 16);
    const iv = encseed.slice(0, 16);
    const encryptedSeed = encseed.slice(16);
    // Decrypt the seed
    const aesCbc = new (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).ModeOfOperation.cbc(key, iv);
    const seed = (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).padding.pkcs7.strip((0, $eg8oT.arrayify)(aesCbc.decrypt(encryptedSeed)));
    // This wallet format is weird... Convert the binary encoded hex to a string.
    let seedHex = "";
    for(let i = 0; i < seed.length; i++)seedHex += String.fromCharCode(seed[i]);
    const seedHexBytes = (0, $cde319f07c8777da$export$8feeb310b4b4752f)(seedHex);
    const privateKey = (0, $dd686f272f8051f8$export$f8151fce47ad1c35)(seedHexBytes);
    return new $d1e8526c4792c56f$export$93a76d16f88f2b3({
        _isCrowdsaleAccount: true,
        address: ethaddr,
        privateKey: privateKey
    });
}



var $4d770fb9c3e77b08$exports = {};

$parcel$export($4d770fb9c3e77b08$exports, "decryptSync", () => $4d770fb9c3e77b08$export$9bd2c37889ee5e36, (v) => $4d770fb9c3e77b08$export$9bd2c37889ee5e36 = v);
$parcel$export($4d770fb9c3e77b08$exports, "decrypt", () => $4d770fb9c3e77b08$export$e85a0c9a1067c5d3, (v) => $4d770fb9c3e77b08$export$e85a0c9a1067c5d3 = v);
$parcel$export($4d770fb9c3e77b08$exports, "encrypt", () => $4d770fb9c3e77b08$export$5b0f6292f11d1d18, (v) => $4d770fb9c3e77b08$export$5b0f6292f11d1d18 = v);

var $406a7c381459d3e5$exports = {};
"use strict";
(function(root) {
    const MAX_VALUE = 0x7fffffff;
    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:
    // See: https://github.com/dchest/scrypt-async-js
    function SHA256(m) {
        const K = new Uint32Array([
            0x428a2f98,
            0x71374491,
            0xb5c0fbcf,
            0xe9b5dba5,
            0x3956c25b,
            0x59f111f1,
            0x923f82a4,
            0xab1c5ed5,
            0xd807aa98,
            0x12835b01,
            0x243185be,
            0x550c7dc3,
            0x72be5d74,
            0x80deb1fe,
            0x9bdc06a7,
            0xc19bf174,
            0xe49b69c1,
            0xefbe4786,
            0x0fc19dc6,
            0x240ca1cc,
            0x2de92c6f,
            0x4a7484aa,
            0x5cb0a9dc,
            0x76f988da,
            0x983e5152,
            0xa831c66d,
            0xb00327c8,
            0xbf597fc7,
            0xc6e00bf3,
            0xd5a79147,
            0x06ca6351,
            0x14292967,
            0x27b70a85,
            0x2e1b2138,
            0x4d2c6dfc,
            0x53380d13,
            0x650a7354,
            0x766a0abb,
            0x81c2c92e,
            0x92722c85,
            0xa2bfe8a1,
            0xa81a664b,
            0xc24b8b70,
            0xc76c51a3,
            0xd192e819,
            0xd6990624,
            0xf40e3585,
            0x106aa070,
            0x19a4c116,
            0x1e376c08,
            0x2748774c,
            0x34b0bcb5,
            0x391c0cb3,
            0x4ed8aa4a,
            0x5b9cca4f,
            0x682e6ff3,
            0x748f82ee,
            0x78a5636f,
            0x84c87814,
            0x8cc70208,
            0x90befffa,
            0xa4506ceb,
            0xbef9a3f7,
            0xc67178f2
        ]);
        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;
        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;
        const w = new Uint32Array(64);
        function blocks(p) {
            let off = 0, len = p.length;
            while(len >= 64){
                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;
                for(i = 0; i < 16; i++){
                    j = off + i * 4;
                    w[i] = (p[j] & 0xff) << 24 | (p[j + 1] & 0xff) << 16 | (p[j + 2] & 0xff) << 8 | p[j + 3] & 0xff;
                }
                for(i = 16; i < 64; i++){
                    u = w[i - 2];
                    t1 = (u >>> 17 | u << 15) ^ (u >>> 19 | u << 13) ^ u >>> 10;
                    u = w[i - 15];
                    t2 = (u >>> 7 | u << 25) ^ (u >>> 18 | u << 14) ^ u >>> 3;
                    w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0) | 0;
                }
                for(i = 0; i < 64; i++){
                    t1 = (((e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;
                    t2 = ((a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10)) + (a & b ^ a & c ^ b & c) | 0;
                    h = g;
                    g = f;
                    f = e;
                    e = d + t1 | 0;
                    d = c;
                    c = b;
                    b = a;
                    a = t1 + t2 | 0;
                }
                h0 = h0 + a | 0;
                h1 = h1 + b | 0;
                h2 = h2 + c | 0;
                h3 = h3 + d | 0;
                h4 = h4 + e | 0;
                h5 = h5 + f | 0;
                h6 = h6 + g | 0;
                h7 = h7 + h | 0;
                off += 64;
                len -= 64;
            }
        }
        blocks(m);
        let i, bytesLeft = m.length % 64, bitLenHi = m.length / 0x20000000 | 0, bitLenLo = m.length << 3, numZeros = bytesLeft < 56 ? 56 : 120, p = m.slice(m.length - bytesLeft, m.length);
        p.push(0x80);
        for(i = bytesLeft + 1; i < numZeros; i++)p.push(0);
        p.push(bitLenHi >>> 24 & 0xff);
        p.push(bitLenHi >>> 16 & 0xff);
        p.push(bitLenHi >>> 8 & 0xff);
        p.push(bitLenHi >>> 0 & 0xff);
        p.push(bitLenLo >>> 24 & 0xff);
        p.push(bitLenLo >>> 16 & 0xff);
        p.push(bitLenLo >>> 8 & 0xff);
        p.push(bitLenLo >>> 0 & 0xff);
        blocks(p);
        return [
            h0 >>> 24 & 0xff,
            h0 >>> 16 & 0xff,
            h0 >>> 8 & 0xff,
            h0 >>> 0 & 0xff,
            h1 >>> 24 & 0xff,
            h1 >>> 16 & 0xff,
            h1 >>> 8 & 0xff,
            h1 >>> 0 & 0xff,
            h2 >>> 24 & 0xff,
            h2 >>> 16 & 0xff,
            h2 >>> 8 & 0xff,
            h2 >>> 0 & 0xff,
            h3 >>> 24 & 0xff,
            h3 >>> 16 & 0xff,
            h3 >>> 8 & 0xff,
            h3 >>> 0 & 0xff,
            h4 >>> 24 & 0xff,
            h4 >>> 16 & 0xff,
            h4 >>> 8 & 0xff,
            h4 >>> 0 & 0xff,
            h5 >>> 24 & 0xff,
            h5 >>> 16 & 0xff,
            h5 >>> 8 & 0xff,
            h5 >>> 0 & 0xff,
            h6 >>> 24 & 0xff,
            h6 >>> 16 & 0xff,
            h6 >>> 8 & 0xff,
            h6 >>> 0 & 0xff,
            h7 >>> 24 & 0xff,
            h7 >>> 16 & 0xff,
            h7 >>> 8 & 0xff,
            h7 >>> 0 & 0xff
        ];
    }
    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {
        // compress password if it's longer than hash block length
        password = password.length <= 64 ? password : SHA256(password);
        const innerLen = 64 + salt.length + 4;
        const inner = new Array(innerLen);
        const outerKey = new Array(64);
        let i;
        let dk = [];
        // inner = (password ^ ipad) || salt || counter
        for(i = 0; i < 64; i++)inner[i] = 0x36;
        for(i = 0; i < password.length; i++)inner[i] ^= password[i];
        for(i = 0; i < salt.length; i++)inner[64 + i] = salt[i];
        for(i = innerLen - 4; i < innerLen; i++)inner[i] = 0;
        // outerKey = password ^ opad
        for(i = 0; i < 64; i++)outerKey[i] = 0x5c;
        for(i = 0; i < password.length; i++)outerKey[i] ^= password[i];
        // increments counter inside inner
        function incrementCounter() {
            for(let i = innerLen - 1; i >= innerLen - 4; i--){
                inner[i]++;
                if (inner[i] <= 0xff) return;
                inner[i] = 0;
            }
        }
        // output blocks = SHA256(outerKey || SHA256(inner)) ...
        while(dkLen >= 32){
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));
            dkLen -= 32;
        }
        if (dkLen > 0) {
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));
        }
        return dk;
    }
    // The following is an adaptation of scryptsy
    // See: https://www.npmjs.com/package/scryptsy
    function blockmix_salsa8(BY, Yi, r, x, _X) {
        let i;
        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);
        for(i = 0; i < 2 * r; i++){
            blockxor(BY, i * 16, _X, 16);
            salsa20_8(_X, x);
            arraycopy(_X, 0, BY, Yi + i * 16, 16);
        }
        for(i = 0; i < r; i++)arraycopy(BY, Yi + i * 32, BY, i * 16, 16);
        for(i = 0; i < r; i++)arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);
    }
    function R(a, b) {
        return a << b | a >>> 32 - b;
    }
    function salsa20_8(B, x) {
        arraycopy(B, 0, x, 0, 16);
        for(let i = 8; i > 0; i -= 2){
            x[4] ^= R(x[0] + x[12], 7);
            x[8] ^= R(x[4] + x[0], 9);
            x[12] ^= R(x[8] + x[4], 13);
            x[0] ^= R(x[12] + x[8], 18);
            x[9] ^= R(x[5] + x[1], 7);
            x[13] ^= R(x[9] + x[5], 9);
            x[1] ^= R(x[13] + x[9], 13);
            x[5] ^= R(x[1] + x[13], 18);
            x[14] ^= R(x[10] + x[6], 7);
            x[2] ^= R(x[14] + x[10], 9);
            x[6] ^= R(x[2] + x[14], 13);
            x[10] ^= R(x[6] + x[2], 18);
            x[3] ^= R(x[15] + x[11], 7);
            x[7] ^= R(x[3] + x[15], 9);
            x[11] ^= R(x[7] + x[3], 13);
            x[15] ^= R(x[11] + x[7], 18);
            x[1] ^= R(x[0] + x[3], 7);
            x[2] ^= R(x[1] + x[0], 9);
            x[3] ^= R(x[2] + x[1], 13);
            x[0] ^= R(x[3] + x[2], 18);
            x[6] ^= R(x[5] + x[4], 7);
            x[7] ^= R(x[6] + x[5], 9);
            x[4] ^= R(x[7] + x[6], 13);
            x[5] ^= R(x[4] + x[7], 18);
            x[11] ^= R(x[10] + x[9], 7);
            x[8] ^= R(x[11] + x[10], 9);
            x[9] ^= R(x[8] + x[11], 13);
            x[10] ^= R(x[9] + x[8], 18);
            x[12] ^= R(x[15] + x[14], 7);
            x[13] ^= R(x[12] + x[15], 9);
            x[14] ^= R(x[13] + x[12], 13);
            x[15] ^= R(x[14] + x[13], 18);
        }
        for(let i = 0; i < 16; ++i)B[i] += x[i];
    }
    // naive approach... going back to loop unrolling may yield additional performance
    function blockxor(S, Si, D, len) {
        for(let i = 0; i < len; i++)D[i] ^= S[Si + i];
    }
    function arraycopy(src, srcPos, dest, destPos, length) {
        while(length--)dest[destPos++] = src[srcPos++];
    }
    function checkBufferish(o) {
        if (!o || typeof o.length !== "number") return false;
        for(let i = 0; i < o.length; i++){
            const v = o[i];
            if (typeof v !== "number" || v % 1 || v < 0 || v >= 256) return false;
        }
        return true;
    }
    function ensureInteger(value, name) {
        if (typeof value !== "number" || value % 1) throw new Error("invalid " + name);
        return value;
    }
    // N = Cpu cost, r = Memory cost, p = parallelization cost
    // callback(error, progress, key)
    function _scrypt(password, salt, N, r, p, dkLen, callback) {
        N = ensureInteger(N, "N");
        r = ensureInteger(r, "r");
        p = ensureInteger(p, "p");
        dkLen = ensureInteger(dkLen, "dkLen");
        if (N === 0 || (N & N - 1) !== 0) throw new Error("N must be power of 2");
        if (N > MAX_VALUE / 128 / r) throw new Error("N too large");
        if (r > MAX_VALUE / 128 / p) throw new Error("r too large");
        if (!checkBufferish(password)) throw new Error("password must be an array or buffer");
        password = Array.prototype.slice.call(password);
        if (!checkBufferish(salt)) throw new Error("salt must be an array or buffer");
        salt = Array.prototype.slice.call(salt);
        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);
        const B = new Uint32Array(p * 32 * r);
        for(let i = 0; i < B.length; i++){
            const j = i * 4;
            B[i] = (b[j + 3] & 0xff) << 24 | (b[j + 2] & 0xff) << 16 | (b[j + 1] & 0xff) << 8 | (b[j + 0] & 0xff) << 0;
        }
        const XY = new Uint32Array(64 * r);
        const V = new Uint32Array(32 * r * N);
        const Yi = 32 * r;
        // scratch space
        const x = new Uint32Array(16); // salsa20_8
        const _X = new Uint32Array(16); // blockmix_salsa8
        const totalOps = p * N * 2;
        let currentOp = 0;
        let lastPercent10 = null;
        // Set this to true to abandon the scrypt on the next step
        let stop = false;
        // State information
        let state = 0;
        let i0 = 0, i1;
        let Bi;
        // How many blockmix_salsa8 can we do per step?
        const limit = callback ? parseInt(1000 / r) : 0xffffffff;
        // Trick from scrypt-async; if there is a setImmediate shim in place, use it
        const nextTick = typeof setImmediate !== "undefined" ? setImmediate : setTimeout;
        // This is really all I changed; making scryptsy a state machine so we occasionally
        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo
        const incrementalSMix = function() {
            if (stop) return callback(new Error("cancelled"), currentOp / totalOps);
            let steps;
            switch(state){
                case 0:
                    // for (var i = 0; i < p; i++)...
                    Bi = i0 * 32 * r;
                    arraycopy(B, Bi, XY, 0, Yi); // ROMix - 1
                    state = 1; // Move to ROMix 2
                    i1 = 0;
                // Fall through
                case 1:
                    // Run up to 1000 steps of the first inner smix loop
                    steps = N - i1;
                    if (steps > limit) steps = limit;
                    for(let i = 0; i < steps; i++){
                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi) // ROMix - 3
                        ;
                        blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 4
                    }
                    // for (var i = 0; i < N; i++)
                    i1 += steps;
                    currentOp += steps;
                    if (callback) {
                        // Call the callback with the progress (optionally stopping us)
                        const percent10 = parseInt(1000 * currentOp / totalOps);
                        if (percent10 !== lastPercent10) {
                            stop = callback(null, currentOp / totalOps);
                            if (stop) break;
                            lastPercent10 = percent10;
                        }
                    }
                    if (i1 < N) break;
                    i1 = 0; // Move to ROMix 6
                    state = 2;
                // Fall through
                case 2:
                    // Run up to 1000 steps of the second inner smix loop
                    steps = N - i1;
                    if (steps > limit) steps = limit;
                    for(let i = 0; i < steps; i++){
                        const offset = (2 * r - 1) * 16; // ROMix - 7
                        const j = XY[offset] & N - 1;
                        blockxor(V, j * Yi, XY, Yi); // ROMix - 8 (inner)
                        blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 9 (outer)
                    }
                    // for (var i = 0; i < N; i++)...
                    i1 += steps;
                    currentOp += steps;
                    // Call the callback with the progress (optionally stopping us)
                    if (callback) {
                        const percent10 = parseInt(1000 * currentOp / totalOps);
                        if (percent10 !== lastPercent10) {
                            stop = callback(null, currentOp / totalOps);
                            if (stop) break;
                            lastPercent10 = percent10;
                        }
                    }
                    if (i1 < N) break;
                    arraycopy(XY, 0, B, Bi, Yi); // ROMix - 10
                    // for (var i = 0; i < p; i++)...
                    i0++;
                    if (i0 < p) {
                        state = 0;
                        break;
                    }
                    b = [];
                    for(let i = 0; i < B.length; i++){
                        b.push(B[i] >> 0 & 0xff);
                        b.push(B[i] >> 8 & 0xff);
                        b.push(B[i] >> 16 & 0xff);
                        b.push(B[i] >> 24 & 0xff);
                    }
                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);
                    // Send the result to the callback
                    if (callback) callback(null, 1.0, derivedKey);
                    // Done; don't break (which would reschedule)
                    return derivedKey;
            }
            // Schedule the next steps
            if (callback) nextTick(incrementalSMix);
        };
        // Run the smix state machine until completion
        if (!callback) while(true){
            const derivedKey = incrementalSMix();
            if (derivedKey != undefined) return derivedKey;
        }
        // Bootstrap the async incremental smix
        incrementalSMix();
    }
    const lib = {
        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {
            return new Promise(function(resolve, reject) {
                let lastProgress = 0;
                if (progressCallback) progressCallback(0);
                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {
                    if (error) reject(error);
                    else if (key) {
                        if (progressCallback && lastProgress !== 1) progressCallback(1);
                        resolve(new Uint8Array(key));
                    } else if (progressCallback && progress !== lastProgress) {
                        lastProgress = progress;
                        return progressCallback(progress);
                    }
                });
            });
        },
        syncScrypt: function(password, salt, N, r, p, dkLen) {
            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));
        }
    };
    // node.js
    if (typeof $406a7c381459d3e5$exports !== "undefined") $406a7c381459d3e5$exports = lib;
    else if (typeof define === "function" && define.amd) define(lib);
    else if (root) {
        // If there was an existing library "scrypt", make sure it is still available
        if (root.scrypt) root._scrypt = root.scrypt;
        root.scrypt = lib;
    }
})($406a7c381459d3e5$exports);




var $eg8oT = parcelRequire("eg8oT");








var $cbv61 = parcelRequire("cbv61");

"use strict";
var $4d770fb9c3e77b08$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $4d770fb9c3e77b08$var$logger = new (0, $cbv61.Logger)((0, $3bf2b6c8c4587dd0$export$83d89fbfd8236492));
// Exported Types
function $4d770fb9c3e77b08$var$hasMnemonic(value) {
    return value != null && value.mnemonic && value.mnemonic.phrase;
}
class $4d770fb9c3e77b08$export$cf9dc4fd6dde0315 extends (0, $b19fb92a27e5f35f$exports.Description) {
    isKeystoreAccount(value) {
        return !!(value && value._isKeystoreAccount);
    }
}
function $4d770fb9c3e77b08$var$_decrypt(data, key, ciphertext) {
    const cipher = (0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/cipher");
    if (cipher === "aes-128-ctr") {
        const iv = (0, $9504d666c3e48ebd$export$2cde08bde0cfd932)((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/cipherparams/iv"));
        const counter = new (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).Counter(iv);
        const aesCtr = new (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).ModeOfOperation.ctr(key, counter);
        return (0, $eg8oT.arrayify)(aesCtr.decrypt(ciphertext));
    }
    return null;
}
function $4d770fb9c3e77b08$var$_getAccount(data, key) {
    const ciphertext = (0, $9504d666c3e48ebd$export$2cde08bde0cfd932)((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/ciphertext"));
    const computedMAC = (0, $eg8oT.hexlify)((0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $eg8oT.concat)([
        key.slice(16, 32),
        ciphertext
    ]))).substring(2);
    if (computedMAC !== (0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/mac").toLowerCase()) throw new Error("invalid password");
    const privateKey = $4d770fb9c3e77b08$var$_decrypt(data, key.slice(0, 16), ciphertext);
    if (!privateKey) $4d770fb9c3e77b08$var$logger.throwError("unsupported cipher", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
        operation: "decrypt"
    });
    const mnemonicKey = key.slice(32, 64);
    const address = (0, $1b59a48ea3c080da$export$e67e2732ba9803f9)(privateKey);
    if (data.address) {
        let check = data.address.toLowerCase();
        if (check.substring(0, 2) !== "0x") check = "0x" + check;
        if ((0, $8b38701037b2e5d8$export$88411125f012957a)(check) !== address) throw new Error("address mismatch");
    }
    const account = {
        _isKeystoreAccount: true,
        address: address,
        privateKey: (0, $eg8oT.hexlify)(privateKey)
    };
    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase
    if ((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "x-ethers/version") === "0.1") {
        const mnemonicCiphertext = (0, $9504d666c3e48ebd$export$2cde08bde0cfd932)((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "x-ethers/mnemonicCiphertext"));
        const mnemonicIv = (0, $9504d666c3e48ebd$export$2cde08bde0cfd932)((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "x-ethers/mnemonicCounter"));
        const mnemonicCounter = new (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).Counter(mnemonicIv);
        const mnemonicAesCtr = new (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
        const path = (0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "x-ethers/path") || (0, $457c3ef73dac1a8e$export$d48ad89f7e11a603);
        const locale = (0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "x-ethers/locale") || "en";
        const entropy = (0, $eg8oT.arrayify)(mnemonicAesCtr.decrypt(mnemonicCiphertext));
        try {
            const mnemonic = (0, $457c3ef73dac1a8e$export$4becd65eb23312e6)(entropy, locale);
            const node = (0, $457c3ef73dac1a8e$export$b68640c53e22b952).fromMnemonic(mnemonic, null, locale).derivePath(path);
            if (node.privateKey != account.privateKey) throw new Error("mnemonic mismatch");
            account.mnemonic = node.mnemonic;
        } catch (error) {
            // If we don't have the locale wordlist installed to
            // read this mnemonic, just bail and don't set the
            // mnemonic
            if (error.code !== (0, $cbv61.Logger).errors.INVALID_ARGUMENT || error.argument !== "wordlist") throw error;
        }
    }
    return new $4d770fb9c3e77b08$export$cf9dc4fd6dde0315(account);
}
function $4d770fb9c3e77b08$var$pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {
    return (0, $eg8oT.arrayify)((0, $b1254480b6ba1484$export$448fa22aedc9dbca)(passwordBytes, salt, count, dkLen, prfFunc));
}
function $4d770fb9c3e77b08$var$pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {
    return Promise.resolve($4d770fb9c3e77b08$var$pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));
}
function $4d770fb9c3e77b08$var$_computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {
    const passwordBytes = (0, $9504d666c3e48ebd$export$350bd33120f7413e)(password);
    const kdf = (0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdf");
    if (kdf && typeof kdf === "string") {
        const throwError = function(name, value) {
            return $4d770fb9c3e77b08$var$logger.throwArgumentError("invalid key-derivation function parameters", name, value);
        };
        if (kdf.toLowerCase() === "scrypt") {
            const salt = (0, $9504d666c3e48ebd$export$2cde08bde0cfd932)((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdfparams/salt"));
            const N = parseInt((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdfparams/n"));
            const r = parseInt((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdfparams/r"));
            const p = parseInt((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdfparams/p"));
            // Check for all required parameters
            if (!N || !r || !p) throwError("kdf", kdf);
            // Make sure N is a power of 2
            if ((N & N - 1) !== 0) throwError("N", N);
            const dkLen = parseInt((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdfparams/dklen"));
            if (dkLen !== 32) throwError("dklen", dkLen);
            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);
        } else if (kdf.toLowerCase() === "pbkdf2") {
            const salt = (0, $9504d666c3e48ebd$export$2cde08bde0cfd932)((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdfparams/salt"));
            let prfFunc = null;
            const prf = (0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdfparams/prf");
            if (prf === "hmac-sha256") prfFunc = "sha256";
            else if (prf === "hmac-sha512") prfFunc = "sha512";
            else throwError("prf", prf);
            const count = parseInt((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdfparams/c"));
            const dkLen = parseInt((0, $9504d666c3e48ebd$export$5a5c1dbd910e2c32)(data, "crypto/kdfparams/dklen"));
            if (dkLen !== 32) throwError("dklen", dkLen);
            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);
        }
    }
    return $4d770fb9c3e77b08$var$logger.throwArgumentError("unsupported key-derivation function", "kdf", kdf);
}
function $4d770fb9c3e77b08$export$9bd2c37889ee5e36(json, password) {
    const data = JSON.parse(json);
    const key = $4d770fb9c3e77b08$var$_computeKdfKey(data, password, $4d770fb9c3e77b08$var$pbkdf2Sync, (0, (/*@__PURE__*/$parcel$interopDefault($406a7c381459d3e5$exports))).syncScrypt);
    return $4d770fb9c3e77b08$var$_getAccount(data, key);
}
function $4d770fb9c3e77b08$export$e85a0c9a1067c5d3(json, password, progressCallback) {
    return $4d770fb9c3e77b08$var$__awaiter(this, void 0, void 0, function*() {
        const data = JSON.parse(json);
        const key = yield $4d770fb9c3e77b08$var$_computeKdfKey(data, password, $4d770fb9c3e77b08$var$pbkdf2, (0, (/*@__PURE__*/$parcel$interopDefault($406a7c381459d3e5$exports))).scrypt, progressCallback);
        return $4d770fb9c3e77b08$var$_getAccount(data, key);
    });
}
function $4d770fb9c3e77b08$export$5b0f6292f11d1d18(account, password, options, progressCallback) {
    try {
        // Check the address matches the private key
        if ((0, $8b38701037b2e5d8$export$88411125f012957a)(account.address) !== (0, $1b59a48ea3c080da$export$e67e2732ba9803f9)(account.privateKey)) throw new Error("address/privateKey mismatch");
        // Check the mnemonic (if any) matches the private key
        if ($4d770fb9c3e77b08$var$hasMnemonic(account)) {
            const mnemonic = account.mnemonic;
            const node = (0, $457c3ef73dac1a8e$export$b68640c53e22b952).fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || (0, $457c3ef73dac1a8e$export$d48ad89f7e11a603));
            if (node.privateKey != account.privateKey) throw new Error("mnemonic mismatch");
        }
    } catch (e) {
        return Promise.reject(e);
    }
    // The options are optional, so adjust the call as needed
    if (typeof options === "function" && !progressCallback) {
        progressCallback = options;
        options = {};
    }
    if (!options) options = {};
    const privateKey = (0, $eg8oT.arrayify)(account.privateKey);
    const passwordBytes = (0, $9504d666c3e48ebd$export$350bd33120f7413e)(password);
    let entropy = null;
    let path = null;
    let locale = null;
    if ($4d770fb9c3e77b08$var$hasMnemonic(account)) {
        const srcMnemonic = account.mnemonic;
        entropy = (0, $eg8oT.arrayify)((0, $457c3ef73dac1a8e$export$135e090d58b310ca)(srcMnemonic.phrase, srcMnemonic.locale || "en"));
        path = srcMnemonic.path || (0, $457c3ef73dac1a8e$export$d48ad89f7e11a603);
        locale = srcMnemonic.locale || "en";
    }
    let client = options.client;
    if (!client) client = "ethers.js";
    // Check/generate the salt
    let salt = null;
    if (options.salt) salt = (0, $eg8oT.arrayify)(options.salt);
    else salt = (0, $e4b56570577a4a9c$export$5f828d93ff035aa8)(32);
    // Override initialization vector
    let iv = null;
    if (options.iv) {
        iv = (0, $eg8oT.arrayify)(options.iv);
        if (iv.length !== 16) throw new Error("invalid iv");
    } else iv = (0, $e4b56570577a4a9c$export$5f828d93ff035aa8)(16);
    // Override the uuid
    let uuidRandom = null;
    if (options.uuid) {
        uuidRandom = (0, $eg8oT.arrayify)(options.uuid);
        if (uuidRandom.length !== 16) throw new Error("invalid uuid");
    } else uuidRandom = (0, $e4b56570577a4a9c$export$5f828d93ff035aa8)(16);
    // Override the scrypt password-based key derivation function parameters
    let N = 131072, r = 8, p = 1;
    if (options.scrypt) {
        if (options.scrypt.N) N = options.scrypt.N;
        if (options.scrypt.r) r = options.scrypt.r;
        if (options.scrypt.p) p = options.scrypt.p;
    }
    // We take 64 bytes:
    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)
    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)
    return (0, (/*@__PURE__*/$parcel$interopDefault($406a7c381459d3e5$exports))).scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key)=>{
        key = (0, $eg8oT.arrayify)(key);
        // This will be used to encrypt the wallet (as per Web3 secret storage)
        const derivedKey = key.slice(0, 16);
        const macPrefix = key.slice(16, 32);
        // This will be used to encrypt the mnemonic phrase (if any)
        const mnemonicKey = key.slice(32, 64);
        // Encrypt the private key
        const counter = new (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).Counter(iv);
        const aesCtr = new (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).ModeOfOperation.ctr(derivedKey, counter);
        const ciphertext = (0, $eg8oT.arrayify)(aesCtr.encrypt(privateKey));
        // Compute the message authentication code, used to check the password
        const mac = (0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $eg8oT.concat)([
            macPrefix,
            ciphertext
        ]));
        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition
        const data = {
            address: account.address.substring(2).toLowerCase(),
            id: (0, $9504d666c3e48ebd$export$ec7b18ebad55a3a9)(uuidRandom),
            version: 3,
            crypto: {
                cipher: "aes-128-ctr",
                cipherparams: {
                    iv: (0, $eg8oT.hexlify)(iv).substring(2)
                },
                ciphertext: (0, $eg8oT.hexlify)(ciphertext).substring(2),
                kdf: "scrypt",
                kdfparams: {
                    salt: (0, $eg8oT.hexlify)(salt).substring(2),
                    n: N,
                    dklen: 32,
                    p: p,
                    r: r
                },
                mac: mac.substring(2)
            }
        };
        // If we have a mnemonic, encrypt it into the JSON wallet
        if (entropy) {
            const mnemonicIv = (0, $e4b56570577a4a9c$export$5f828d93ff035aa8)(16);
            const mnemonicCounter = new (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).Counter(mnemonicIv);
            const mnemonicAesCtr = new (0, (/*@__PURE__*/$parcel$interopDefault($c2fb1b63b91ce421$exports))).ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
            const mnemonicCiphertext = (0, $eg8oT.arrayify)(mnemonicAesCtr.encrypt(entropy));
            const now = new Date();
            const timestamp = now.getUTCFullYear() + "-" + (0, $9504d666c3e48ebd$export$67752b99d3bc61c6)(now.getUTCMonth() + 1, 2) + "-" + (0, $9504d666c3e48ebd$export$67752b99d3bc61c6)(now.getUTCDate(), 2) + "T" + (0, $9504d666c3e48ebd$export$67752b99d3bc61c6)(now.getUTCHours(), 2) + "-" + (0, $9504d666c3e48ebd$export$67752b99d3bc61c6)(now.getUTCMinutes(), 2) + "-" + (0, $9504d666c3e48ebd$export$67752b99d3bc61c6)(now.getUTCSeconds(), 2) + ".0Z";
            data["x-ethers"] = {
                client: client,
                gethFilename: "UTC--" + timestamp + "--" + data.address,
                mnemonicCounter: (0, $eg8oT.hexlify)(mnemonicIv).substring(2),
                mnemonicCiphertext: (0, $eg8oT.hexlify)(mnemonicCiphertext).substring(2),
                path: path,
                locale: locale,
                version: "0.1"
            };
        }
        return JSON.stringify(data);
    });
}


"use strict";
function $630bc42c60882eed$export$e74fcde37488267a(json, password, progressCallback) {
    if ((0, $9cffbe90cbe739c0$export$724d6cf6b9fd8578)(json)) {
        if (progressCallback) progressCallback(0);
        const account = (0, $d1e8526c4792c56f$export$e85a0c9a1067c5d3)(json, password);
        if (progressCallback) progressCallback(1);
        return Promise.resolve(account);
    }
    if ((0, $9cffbe90cbe739c0$export$67dc926b8e68b2d8)(json)) return (0, $4d770fb9c3e77b08$exports.decrypt)(json, password, progressCallback);
    return Promise.reject(new Error("invalid JSON wallet"));
}
function $630bc42c60882eed$export$7a81c437a678891a(json, password) {
    if ((0, $9cffbe90cbe739c0$export$724d6cf6b9fd8578)(json)) return (0, $d1e8526c4792c56f$export$e85a0c9a1067c5d3)(json, password);
    if ((0, $9cffbe90cbe739c0$export$67dc926b8e68b2d8)(json)) return (0, $4d770fb9c3e77b08$exports.decryptSync)(json, password);
    throw new Error("invalid JSON wallet");
}




var $cbv61 = parcelRequire("cbv61");
const $e39a888f52d6a14e$export$83d89fbfd8236492 = "wallet/5.7.0";


"use strict";
var $1d035c17a0a86b6a$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $1d035c17a0a86b6a$var$logger = new (0, $cbv61.Logger)((0, $e39a888f52d6a14e$export$83d89fbfd8236492));
function $1d035c17a0a86b6a$var$isAccount(value) {
    return value != null && (0, $eg8oT.isHexString)(value.privateKey, 32) && value.address != null;
}
function $1d035c17a0a86b6a$var$hasMnemonic(value) {
    const mnemonic = value.mnemonic;
    return mnemonic && mnemonic.phrase;
}
class $1d035c17a0a86b6a$export$bcca3ea514774656 extends (0, $cb7b024827fb2a6c$exports.Signer) {
    constructor(privateKey, provider){
        super();
        if ($1d035c17a0a86b6a$var$isAccount(privateKey)) {
            const signingKey = new (0, $bccb365df25a232d$export$21643ca94aed3e83)(privateKey.privateKey);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_signingKey", ()=>signingKey);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "address", (0, $1b59a48ea3c080da$export$e67e2732ba9803f9)(this.publicKey));
            if (this.address !== (0, $8b38701037b2e5d8$export$88411125f012957a)(privateKey.address)) $1d035c17a0a86b6a$var$logger.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]");
            if ($1d035c17a0a86b6a$var$hasMnemonic(privateKey)) {
                const srcMnemonic = privateKey.mnemonic;
                (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_mnemonic", ()=>({
                        phrase: srcMnemonic.phrase,
                        path: srcMnemonic.path || (0, $457c3ef73dac1a8e$export$d48ad89f7e11a603),
                        locale: srcMnemonic.locale || "en"
                    }));
                const mnemonic = this.mnemonic;
                const node = (0, $457c3ef73dac1a8e$export$b68640c53e22b952).fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);
                if ((0, $1b59a48ea3c080da$export$e67e2732ba9803f9)(node.privateKey) !== this.address) $1d035c17a0a86b6a$var$logger.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
            } else (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_mnemonic", ()=>null);
        } else {
            if ((0, $bccb365df25a232d$export$21643ca94aed3e83).isSigningKey(privateKey)) {
                /* istanbul ignore if */ if (privateKey.curve !== "secp256k1") $1d035c17a0a86b6a$var$logger.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]");
                (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_signingKey", ()=>privateKey);
            } else {
                // A lot of common tools do not prefix private keys with a 0x (see: #1166)
                if (typeof privateKey === "string") {
                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) privateKey = "0x" + privateKey;
                }
                const signingKey = new (0, $bccb365df25a232d$export$21643ca94aed3e83)(privateKey);
                (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_signingKey", ()=>signingKey);
            }
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_mnemonic", ()=>null);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "address", (0, $1b59a48ea3c080da$export$e67e2732ba9803f9)(this.publicKey));
        }
        /* istanbul ignore if */ if (provider && !(0, $443be65109ed3525$exports.Provider).isProvider(provider)) $1d035c17a0a86b6a$var$logger.throwArgumentError("invalid provider", "provider", provider);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "provider", provider || null);
    }
    get mnemonic() {
        return this._mnemonic();
    }
    get privateKey() {
        return this._signingKey().privateKey;
    }
    get publicKey() {
        return this._signingKey().publicKey;
    }
    getAddress() {
        return Promise.resolve(this.address);
    }
    connect(provider) {
        return new $1d035c17a0a86b6a$export$bcca3ea514774656(this, provider);
    }
    signTransaction(transaction) {
        return (0, $b19fb92a27e5f35f$exports.resolveProperties)(transaction).then((tx)=>{
            if (tx.from != null) {
                if ((0, $8b38701037b2e5d8$export$88411125f012957a)(tx.from) !== this.address) $1d035c17a0a86b6a$var$logger.throwArgumentError("transaction from address mismatch", "transaction.from", transaction.from);
                delete tx.from;
            }
            const signature = this._signingKey().signDigest((0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $1b59a48ea3c080da$export$dfdc1655ccc5b9cb)(tx)));
            return (0, $1b59a48ea3c080da$export$dfdc1655ccc5b9cb)(tx, signature);
        });
    }
    signMessage(message) {
        return $1d035c17a0a86b6a$var$__awaiter(this, void 0, void 0, function*() {
            return (0, $eg8oT.joinSignature)(this._signingKey().signDigest((0, $70b11e4027161461$export$d4c241cec96564c1)(message)));
        });
    }
    _signTypedData(domain, types, value) {
        return $1d035c17a0a86b6a$var$__awaiter(this, void 0, void 0, function*() {
            // Populate any ENS names
            const populated = yield (0, $8a68414fdead829d$exports.TypedDataEncoder).resolveNames(domain, types, value, (name)=>{
                if (this.provider == null) $1d035c17a0a86b6a$var$logger.throwError("cannot resolve ENS names without a provider", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                    operation: "resolveName",
                    value: name
                });
                return this.provider.resolveName(name);
            });
            return (0, $eg8oT.joinSignature)(this._signingKey().signDigest((0, $8a68414fdead829d$exports.TypedDataEncoder).hash(populated.domain, types, populated.value)));
        });
    }
    encrypt(password, options, progressCallback) {
        if (typeof options === "function" && !progressCallback) {
            progressCallback = options;
            options = {};
        }
        if (progressCallback && typeof progressCallback !== "function") throw new Error("invalid callback");
        if (!options) options = {};
        return (0, $4d770fb9c3e77b08$exports.encrypt)(this, password, options, progressCallback);
    }
    /**
     *  Static methods to create Wallet instances.
     */ static createRandom(options) {
        let entropy = (0, $e4b56570577a4a9c$export$5f828d93ff035aa8)(16);
        if (!options) options = {};
        if (options.extraEntropy) entropy = (0, $eg8oT.arrayify)((0, $eg8oT.hexDataSlice)((0, $dd686f272f8051f8$export$f8151fce47ad1c35)((0, $eg8oT.concat)([
            entropy,
            options.extraEntropy
        ])), 0, 16));
        const mnemonic = (0, $457c3ef73dac1a8e$export$4becd65eb23312e6)(entropy, options.locale);
        return $1d035c17a0a86b6a$export$bcca3ea514774656.fromMnemonic(mnemonic, options.path, options.locale);
    }
    static fromEncryptedJson(json, password, progressCallback) {
        return (0, $630bc42c60882eed$export$e74fcde37488267a)(json, password, progressCallback).then((account)=>{
            return new $1d035c17a0a86b6a$export$bcca3ea514774656(account);
        });
    }
    static fromEncryptedJsonSync(json, password) {
        return new $1d035c17a0a86b6a$export$bcca3ea514774656((0, $630bc42c60882eed$export$7a81c437a678891a)(json, password));
    }
    static fromMnemonic(mnemonic, path, wordlist) {
        if (!path) path = (0, $457c3ef73dac1a8e$export$d48ad89f7e11a603);
        return new $1d035c17a0a86b6a$export$bcca3ea514774656((0, $457c3ef73dac1a8e$export$b68640c53e22b952).fromMnemonic(mnemonic, null, wordlist).derivePath(path));
    }
}
function $1d035c17a0a86b6a$export$228d0e772cc158cb(message, signature) {
    return (0, $1b59a48ea3c080da$export$23cc18f96d8510e2)((0, $70b11e4027161461$export$d4c241cec96564c1)(message), signature);
}
function $1d035c17a0a86b6a$export$3603b1c1bcd76798(domain, types, value, signature) {
    return (0, $1b59a48ea3c080da$export$23cc18f96d8510e2)((0, $8a68414fdead829d$exports.TypedDataEncoder).hash(domain, types, value), signature);
}


Object.defineProperty($924b12823ef5c5c6$exports, "verifyMessage", {
    enumerable: true,
    get: function() {
        return $1d035c17a0a86b6a$exports.verifyMessage;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "verifyTypedData", {
    enumerable: true,
    get: function() {
        return $1d035c17a0a86b6a$exports.verifyTypedData;
    }
});

Object.defineProperty($924b12823ef5c5c6$exports, "_fetchData", {
    enumerable: true,
    get: function() {
        return $68f1849f3b633900$exports._fetchData;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "fetchJson", {
    enumerable: true,
    get: function() {
        return $68f1849f3b633900$exports.fetchJson;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "poll", {
    enumerable: true,
    get: function() {
        return $68f1849f3b633900$exports.poll;
    }
});

Object.defineProperty($924b12823ef5c5c6$exports, "SupportedAlgorithm", {
    enumerable: true,
    get: function() {
        return $acdfd7c13cce7a9a$export$d2a8849cfb277c;
    }
});

Object.defineProperty($924b12823ef5c5c6$exports, "UnicodeNormalizationForm", {
    enumerable: true,
    get: function() {
        return $cde319f07c8777da$export$c6986442964129f5;
    }
});
Object.defineProperty($924b12823ef5c5c6$exports, "Utf8ErrorReason", {
    enumerable: true,
    get: function() {
        return $cde319f07c8777da$export$c285fa6ac15ff6a6;
    }
});


// src/utils/getInjectedName.ts
function $f003855f652c299a$var$getInjectedName(ethereum) {
    if (!ethereum) return "Injected";
    const getName = (provider)=>{
        if (provider.isApexWallet) return "Apex Wallet";
        if (provider.isAvalanche) return "Core Wallet";
        if (provider.isBitKeep) return "BitKeep";
        if (provider.isBraveWallet) return "Brave Wallet";
        if (provider.isCoinbaseWallet) return "Coinbase Wallet";
        if (provider.isExodus) return "Exodus";
        if (provider.isFrame) return "Frame";
        if (provider.isKuCoinWallet) return "KuCoin Wallet";
        if (provider.isMathWallet) return "MathWallet";
        if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) return "1inch Wallet";
        if (provider.isOpera) return "Opera";
        if (provider.isPortal) return "Ripio Portal";
        if (provider.isRainbow) return "Rainbow";
        if (provider.isTally) return "Tally";
        if (provider.isTokenPocket) return "TokenPocket";
        if (provider.isTokenary) return "Tokenary";
        if (provider.isTrust || provider.isTrustWallet) return "Trust Wallet";
        if (provider.isMetaMask) return "MetaMask";
    };
    if (ethereum.providers?.length) {
        const nameSet = /* @__PURE__ */ new Set();
        let unknownCount = 1;
        for (const provider of ethereum.providers){
            let name = getName(provider);
            if (!name) {
                name = `Unknown Wallet #${unknownCount}`;
                unknownCount += 1;
            }
            nameSet.add(name);
        }
        const names = [
            ...nameSet
        ];
        if (names.length) return names;
        return names[0] ?? "Injected";
    }
    return getName(ethereum) ?? "Injected";
}
// src/injected.ts
var $f003855f652c299a$var$_provider, $f003855f652c299a$var$_switchingChains;
var $f003855f652c299a$export$2180bbd5f43a00b6 = class extends (0, $52c74cade626a703$export$b2278035370d6017) {
    constructor({ chains: chains , options: options_  } = {}){
        const options = {
            shimDisconnect: true,
            shimChainChangedDisconnect: true,
            getProvider: ()=>typeof window !== "undefined" ? window.ethereum : void 0,
            ...options_
        };
        super({
            chains: chains,
            options: options
        });
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "id");
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "name");
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "ready");
        (0, $52c74cade626a703$export$addf369becd23283)(this, $f003855f652c299a$var$_provider, void 0);
        (0, $52c74cade626a703$export$addf369becd23283)(this, $f003855f652c299a$var$_switchingChains, void 0);
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "shimDisconnectKey", `${this.id}.shimDisconnect`);
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "onAccountsChanged", (accounts)=>{
            if (accounts.length === 0) this.emit("disconnect");
            else this.emit("change", {
                account: (0, $924b12823ef5c5c6$exports.getAddress)(accounts[0])
            });
        });
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "onChainChanged", (chainId)=>{
            const id = (0, $077a864ec31a8b9f$export$723927690c88894d)(chainId);
            const unsupported = this.isChainUnsupported(id);
            this.emit("change", {
                chain: {
                    id: id,
                    unsupported: unsupported
                }
            });
        });
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "onDisconnect", ()=>{
            if (this.options.shimChainChangedDisconnect && (0, $52c74cade626a703$export$18a094aefa070634)(this, $f003855f652c299a$var$_switchingChains)) {
                (0, $52c74cade626a703$export$42432efe6614d3b4)(this, $f003855f652c299a$var$_switchingChains, false);
                return;
            }
            this.emit("disconnect");
            if (this.options.shimDisconnect) (0, $077a864ec31a8b9f$export$6bb76d6eba7e258c)().storage?.removeItem(this.shimDisconnectKey);
        });
        const provider = options.getProvider();
        if (typeof options.name === "string") this.name = options.name;
        else if (provider) {
            const detectedName = $f003855f652c299a$var$getInjectedName(provider);
            if (options.name) this.name = options.name(detectedName);
            else if (typeof detectedName === "string") this.name = detectedName;
            else this.name = detectedName[0];
        } else this.name = "Injected";
        this.id = "injected";
        this.ready = !!provider;
    }
    async connect({ chainId: chainId  } = {}) {
        try {
            const provider = await this.getProvider();
            if (!provider) throw new (0, $077a864ec31a8b9f$export$9f8a797207d6544e)();
            if (provider.on) {
                provider.on("accountsChanged", this.onAccountsChanged);
                provider.on("chainChanged", this.onChainChanged);
                provider.on("disconnect", this.onDisconnect);
            }
            this.emit("message", {
                type: "connecting"
            });
            const accounts = await provider.request({
                method: "eth_requestAccounts"
            });
            const account = (0, $924b12823ef5c5c6$exports.getAddress)(accounts[0]);
            let id = await this.getChainId();
            let unsupported = this.isChainUnsupported(id);
            if (chainId && id !== chainId) {
                const chain = await this.switchChain(chainId);
                id = chain.id;
                unsupported = this.isChainUnsupported(id);
            }
            if (this.options.shimDisconnect) (0, $077a864ec31a8b9f$export$6bb76d6eba7e258c)().storage?.setItem(this.shimDisconnectKey, true);
            return {
                account: account,
                chain: {
                    id: id,
                    unsupported: unsupported
                },
                provider: provider
            };
        } catch (error) {
            if (this.isUserRejectedRequestError(error)) throw new (0, $077a864ec31a8b9f$export$4af5b080d9e9e1a6)(error);
            if (error.code === -32002) throw new (0, $077a864ec31a8b9f$export$5be1d42b6489eb68)(error);
            throw error;
        }
    }
    async disconnect() {
        const provider = await this.getProvider();
        if (!provider?.removeListener) return;
        provider.removeListener("accountsChanged", this.onAccountsChanged);
        provider.removeListener("chainChanged", this.onChainChanged);
        provider.removeListener("disconnect", this.onDisconnect);
        if (this.options.shimDisconnect) (0, $077a864ec31a8b9f$export$6bb76d6eba7e258c)().storage?.removeItem(this.shimDisconnectKey);
    }
    async getAccount() {
        const provider = await this.getProvider();
        if (!provider) throw new (0, $077a864ec31a8b9f$export$9f8a797207d6544e)();
        const accounts = await provider.request({
            method: "eth_accounts"
        });
        return (0, $924b12823ef5c5c6$exports.getAddress)(accounts[0]);
    }
    async getChainId() {
        const provider = await this.getProvider();
        if (!provider) throw new (0, $077a864ec31a8b9f$export$9f8a797207d6544e)();
        return provider.request({
            method: "eth_chainId"
        }).then((0, $077a864ec31a8b9f$export$723927690c88894d));
    }
    async getProvider() {
        const provider = this.options.getProvider();
        if (provider) (0, $52c74cade626a703$export$42432efe6614d3b4)(this, $f003855f652c299a$var$_provider, provider);
        return (0, $52c74cade626a703$export$18a094aefa070634)(this, $f003855f652c299a$var$_provider);
    }
    async getSigner({ chainId: chainId  } = {}) {
        const [provider, account] = await Promise.all([
            this.getProvider(),
            this.getAccount()
        ]);
        return new (0, $7fc15fb0220a0397$exports).Web3Provider(provider, chainId).getSigner(account);
    }
    async isAuthorized() {
        try {
            if (this.options.shimDisconnect && !(0, $077a864ec31a8b9f$export$6bb76d6eba7e258c)().storage?.getItem(this.shimDisconnectKey)) return false;
            const provider = await this.getProvider();
            if (!provider) throw new (0, $077a864ec31a8b9f$export$9f8a797207d6544e)();
            const account = await this.getAccount();
            return !!account;
        } catch  {
            return false;
        }
    }
    async switchChain(chainId) {
        if (this.options.shimChainChangedDisconnect) (0, $52c74cade626a703$export$42432efe6614d3b4)(this, $f003855f652c299a$var$_switchingChains, true);
        const provider = await this.getProvider();
        if (!provider) throw new (0, $077a864ec31a8b9f$export$9f8a797207d6544e)();
        const id = (0, $924b12823ef5c5c6$exports.hexValue)(chainId);
        try {
            await Promise.all([
                provider.request({
                    method: "wallet_switchEthereumChain",
                    params: [
                        {
                            chainId: id
                        }
                    ]
                }),
                new Promise((res)=>this.on("change", ({ chain: chain  })=>{
                        if (chain?.id === chainId) res();
                    }))
            ]);
            return this.chains.find((x)=>x.id === chainId) ?? {
                id: chainId,
                name: `Chain ${id}`,
                network: `${id}`,
                nativeCurrency: {
                    name: "Ether",
                    decimals: 18,
                    symbol: "ETH"
                },
                rpcUrls: {
                    default: {
                        http: [
                            ""
                        ]
                    },
                    public: {
                        http: [
                            ""
                        ]
                    }
                }
            };
        } catch (error) {
            const chain = this.chains.find((x)=>x.id === chainId);
            if (!chain) throw new (0, $077a864ec31a8b9f$export$688e5fda4b4631ed)({
                chainId: chainId,
                connectorId: this.id
            });
            if (error.code === 4902 || error?.data?.originalError?.code === 4902) try {
                await provider.request({
                    method: "wallet_addEthereumChain",
                    params: [
                        {
                            chainId: id,
                            chainName: chain.name,
                            nativeCurrency: chain.nativeCurrency,
                            rpcUrls: [
                                chain.rpcUrls.public?.http[0] ?? ""
                            ],
                            blockExplorerUrls: this.getBlockExplorerUrls(chain)
                        }
                    ]
                });
                return chain;
            } catch (addError) {
                if (this.isUserRejectedRequestError(addError)) throw new (0, $077a864ec31a8b9f$export$4af5b080d9e9e1a6)(error);
                throw new (0, $077a864ec31a8b9f$export$365d6177d9f9eb22)();
            }
            if (this.isUserRejectedRequestError(error)) throw new (0, $077a864ec31a8b9f$export$4af5b080d9e9e1a6)(error);
            throw new (0, $077a864ec31a8b9f$export$d4ddb31968a9d366)(error);
        }
    }
    async watchAsset({ address: address , decimals: decimals = 18 , image: image , symbol: symbol  }) {
        const provider = await this.getProvider();
        if (!provider) throw new (0, $077a864ec31a8b9f$export$9f8a797207d6544e)();
        return provider.request({
            method: "wallet_watchAsset",
            params: {
                type: "ERC20",
                options: {
                    address: address,
                    decimals: decimals,
                    image: image,
                    symbol: symbol
                }
            }
        });
    }
    isUserRejectedRequestError(error) {
        return error.code === 4001;
    }
};
$f003855f652c299a$var$_provider = new WeakMap();
$f003855f652c299a$var$_switchingChains = new WeakMap();


var $97a37cc616d6f601$var$__accessCheck = (obj, member, msg)=>{
    if (!member.has(obj)) throw TypeError("Cannot " + msg);
};
var $97a37cc616d6f601$export$18a094aefa070634 = (obj, member, getter)=>{
    $97a37cc616d6f601$var$__accessCheck(obj, member, "read from private field");
    return getter ? getter.call(obj) : member.get(obj);
};
var $97a37cc616d6f601$export$addf369becd23283 = (obj, member, value)=>{
    if (member.has(obj)) throw TypeError("Cannot add the same private member more than once");
    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var $97a37cc616d6f601$export$42432efe6614d3b4 = (obj, member, value, setter)=>{
    $97a37cc616d6f601$var$__accessCheck(obj, member, "write to private field");
    setter ? setter.call(obj, value) : member.set(obj, value);
    return value;
};
var $97a37cc616d6f601$export$fa92d15b718fce20 = (obj, member, method)=>{
    $97a37cc616d6f601$var$__accessCheck(obj, member, "access private method");
    return method;
};


var $3aa399cc1f518df0$exports = {};

$parcel$export($3aa399cc1f518df0$exports, "BaseContract", () => $3aa399cc1f518df0$export$304faa4fc17528db, (v) => $3aa399cc1f518df0$export$304faa4fc17528db = v);
$parcel$export($3aa399cc1f518df0$exports, "Contract", () => $3aa399cc1f518df0$export$8517d80acf00e19a, (v) => $3aa399cc1f518df0$export$8517d80acf00e19a = v);
$parcel$export($3aa399cc1f518df0$exports, "ContractFactory", () => $3aa399cc1f518df0$export$505569a6bf584fd9, (v) => $3aa399cc1f518df0$export$505569a6bf584fd9 = v);






var $eg8oT = parcelRequire("eg8oT");



var $cbv61 = parcelRequire("cbv61");
const $5b55b8c55ebc1ce6$export$83d89fbfd8236492 = "contracts/5.7.0";


"use strict";
var $3aa399cc1f518df0$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $3aa399cc1f518df0$var$logger = new (0, $cbv61.Logger)((0, $5b55b8c55ebc1ce6$export$83d89fbfd8236492));
///////////////////////////////
const $3aa399cc1f518df0$var$allowedTransactionKeys = {
    chainId: true,
    data: true,
    from: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    value: true,
    type: true,
    accessList: true,
    maxFeePerGas: true,
    maxPriorityFeePerGas: true,
    customData: true,
    ccipReadEnabled: true
};
function $3aa399cc1f518df0$var$resolveName(resolver, nameOrPromise) {
    return $3aa399cc1f518df0$var$__awaiter(this, void 0, void 0, function*() {
        const name = yield nameOrPromise;
        if (typeof name !== "string") $3aa399cc1f518df0$var$logger.throwArgumentError("invalid address or ENS name", "name", name);
        // If it is already an address, just use it (after adding checksum)
        try {
            return (0, $8b38701037b2e5d8$export$88411125f012957a)(name);
        } catch (error) {}
        if (!resolver) $3aa399cc1f518df0$var$logger.throwError("a provider or signer is needed to resolve ENS names", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "resolveName"
        });
        const address = yield resolver.resolveName(name);
        if (address == null) $3aa399cc1f518df0$var$logger.throwArgumentError("resolver or addr is not configured for ENS name", "name", name);
        return address;
    });
}
// Recursively replaces ENS names with promises to resolve the name and resolves all properties
function $3aa399cc1f518df0$var$resolveAddresses(resolver, value, paramType) {
    return $3aa399cc1f518df0$var$__awaiter(this, void 0, void 0, function*() {
        if (Array.isArray(paramType)) return yield Promise.all(paramType.map((paramType, index)=>{
            return $3aa399cc1f518df0$var$resolveAddresses(resolver, Array.isArray(value) ? value[index] : value[paramType.name], paramType);
        }));
        if (paramType.type === "address") return yield $3aa399cc1f518df0$var$resolveName(resolver, value);
        if (paramType.type === "tuple") return yield $3aa399cc1f518df0$var$resolveAddresses(resolver, value, paramType.components);
        if (paramType.baseType === "array") {
            if (!Array.isArray(value)) return Promise.reject($3aa399cc1f518df0$var$logger.makeError("invalid value for array", (0, $cbv61.Logger).errors.INVALID_ARGUMENT, {
                argument: "value",
                value: value
            }));
            return yield Promise.all(value.map((v)=>$3aa399cc1f518df0$var$resolveAddresses(resolver, v, paramType.arrayChildren)));
        }
        return value;
    });
}
function $3aa399cc1f518df0$var$populateTransaction(contract, fragment, args) {
    return $3aa399cc1f518df0$var$__awaiter(this, void 0, void 0, function*() {
        // If an extra argument is given, it is overrides
        let overrides = {};
        if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === "object") overrides = (0, $b19fb92a27e5f35f$exports.shallowCopy)(args.pop());
        // Make sure the parameter count matches
        $3aa399cc1f518df0$var$logger.checkArgumentCount(args.length, fragment.inputs.length, "passed to contract");
        // Populate "from" override (allow promises)
        if (contract.signer) {
            if (overrides.from) // Contracts with a Signer are from the Signer's frame-of-reference;
            // but we allow overriding "from" if it matches the signer
            overrides.from = (0, $b19fb92a27e5f35f$exports.resolveProperties)({
                override: $3aa399cc1f518df0$var$resolveName(contract.signer, overrides.from),
                signer: contract.signer.getAddress()
            }).then((check)=>$3aa399cc1f518df0$var$__awaiter(this, void 0, void 0, function*() {
                    if ((0, $8b38701037b2e5d8$export$88411125f012957a)(check.signer) !== check.override) $3aa399cc1f518df0$var$logger.throwError("Contract with a Signer cannot override from", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                        operation: "overrides.from"
                    });
                    return check.override;
                }));
            else overrides.from = contract.signer.getAddress();
        } else if (overrides.from) overrides.from = $3aa399cc1f518df0$var$resolveName(contract.provider, overrides.from);
        // Wait for all dependencies to be resolved (prefer the signer over the provider)
        const resolved = yield (0, $b19fb92a27e5f35f$exports.resolveProperties)({
            args: $3aa399cc1f518df0$var$resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),
            address: contract.resolvedAddress,
            overrides: (0, $b19fb92a27e5f35f$exports.resolveProperties)(overrides) || {}
        });
        // The ABI coded transaction
        const data = contract.interface.encodeFunctionData(fragment, resolved.args);
        const tx = {
            data: data,
            to: resolved.address
        };
        // Resolved Overrides
        const ro = resolved.overrides;
        // Populate simple overrides
        if (ro.nonce != null) tx.nonce = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(ro.nonce).toNumber();
        if (ro.gasLimit != null) tx.gasLimit = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(ro.gasLimit);
        if (ro.gasPrice != null) tx.gasPrice = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(ro.gasPrice);
        if (ro.maxFeePerGas != null) tx.maxFeePerGas = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(ro.maxFeePerGas);
        if (ro.maxPriorityFeePerGas != null) tx.maxPriorityFeePerGas = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(ro.maxPriorityFeePerGas);
        if (ro.from != null) tx.from = ro.from;
        if (ro.type != null) tx.type = ro.type;
        if (ro.accessList != null) tx.accessList = (0, $1b59a48ea3c080da$export$6c8662b1600dce2)(ro.accessList);
        // If there was no "gasLimit" override, but the ABI specifies a default, use it
        if (tx.gasLimit == null && fragment.gas != null) {
            // Compute the intrinsic gas cost for this transaction
            // @TODO: This is based on the yellow paper as of Petersburg; this is something
            // we may wish to parameterize in v6 as part of the Network object. Since this
            // is always a non-nil to address, we can ignore G_create, but may wish to add
            // similar logic to the ContractFactory.
            let intrinsic = 21000;
            const bytes = (0, $eg8oT.arrayify)(data);
            for(let i = 0; i < bytes.length; i++){
                intrinsic += 4;
                if (bytes[i]) intrinsic += 64;
            }
            tx.gasLimit = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(fragment.gas).add(intrinsic);
        }
        // Populate "value" override
        if (ro.value) {
            const roValue = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(ro.value);
            if (!roValue.isZero() && !fragment.payable) $3aa399cc1f518df0$var$logger.throwError("non-payable method cannot override value", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: "overrides.value",
                value: overrides.value
            });
            tx.value = roValue;
        }
        if (ro.customData) tx.customData = (0, $b19fb92a27e5f35f$exports.shallowCopy)(ro.customData);
        if (ro.ccipReadEnabled) tx.ccipReadEnabled = !!ro.ccipReadEnabled;
        // Remove the overrides
        delete overrides.nonce;
        delete overrides.gasLimit;
        delete overrides.gasPrice;
        delete overrides.from;
        delete overrides.value;
        delete overrides.type;
        delete overrides.accessList;
        delete overrides.maxFeePerGas;
        delete overrides.maxPriorityFeePerGas;
        delete overrides.customData;
        delete overrides.ccipReadEnabled;
        // Make sure there are no stray overrides, which may indicate a
        // typo or using an unsupported key.
        const leftovers = Object.keys(overrides).filter((key)=>overrides[key] != null);
        if (leftovers.length) $3aa399cc1f518df0$var$logger.throwError(`cannot override ${leftovers.map((l)=>JSON.stringify(l)).join(",")}`, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "overrides",
            overrides: leftovers
        });
        return tx;
    });
}
function $3aa399cc1f518df0$var$buildPopulate(contract, fragment) {
    return function(...args) {
        return $3aa399cc1f518df0$var$populateTransaction(contract, fragment, args);
    };
}
function $3aa399cc1f518df0$var$buildEstimate(contract, fragment) {
    const signerOrProvider = contract.signer || contract.provider;
    return function(...args) {
        return $3aa399cc1f518df0$var$__awaiter(this, void 0, void 0, function*() {
            if (!signerOrProvider) $3aa399cc1f518df0$var$logger.throwError("estimate require a provider or signer", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: "estimateGas"
            });
            const tx = yield $3aa399cc1f518df0$var$populateTransaction(contract, fragment, args);
            return yield signerOrProvider.estimateGas(tx);
        });
    };
}
function $3aa399cc1f518df0$var$addContractWait(contract, tx) {
    const wait = tx.wait.bind(tx);
    tx.wait = (confirmations)=>{
        return wait(confirmations).then((receipt)=>{
            receipt.events = receipt.logs.map((log)=>{
                let event = (0, $b19fb92a27e5f35f$exports.deepCopy)(log);
                let parsed = null;
                try {
                    parsed = contract.interface.parseLog(log);
                } catch (e) {}
                // Successfully parsed the event log; include it
                if (parsed) {
                    event.args = parsed.args;
                    event.decode = (data, topics)=>{
                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);
                    };
                    event.event = parsed.name;
                    event.eventSignature = parsed.signature;
                }
                // Useful operations
                event.removeListener = ()=>{
                    return contract.provider;
                };
                event.getBlock = ()=>{
                    return contract.provider.getBlock(receipt.blockHash);
                };
                event.getTransaction = ()=>{
                    return contract.provider.getTransaction(receipt.transactionHash);
                };
                event.getTransactionReceipt = ()=>{
                    return Promise.resolve(receipt);
                };
                return event;
            });
            return receipt;
        });
    };
}
function $3aa399cc1f518df0$var$buildCall(contract, fragment, collapseSimple) {
    const signerOrProvider = contract.signer || contract.provider;
    return function(...args) {
        return $3aa399cc1f518df0$var$__awaiter(this, void 0, void 0, function*() {
            // Extract the "blockTag" override if present
            let blockTag = undefined;
            if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === "object") {
                const overrides = (0, $b19fb92a27e5f35f$exports.shallowCopy)(args.pop());
                if (overrides.blockTag != null) blockTag = yield overrides.blockTag;
                delete overrides.blockTag;
                args.push(overrides);
            }
            // If the contract was just deployed, wait until it is mined
            if (contract.deployTransaction != null) yield contract._deployed(blockTag);
            // Call a node and get the result
            const tx = yield $3aa399cc1f518df0$var$populateTransaction(contract, fragment, args);
            const result = yield signerOrProvider.call(tx, blockTag);
            try {
                let value = contract.interface.decodeFunctionResult(fragment, result);
                if (collapseSimple && fragment.outputs.length === 1) value = value[0];
                return value;
            } catch (error) {
                if (error.code === (0, $cbv61.Logger).errors.CALL_EXCEPTION) {
                    error.address = contract.address;
                    error.args = args;
                    error.transaction = tx;
                }
                throw error;
            }
        });
    };
}
function $3aa399cc1f518df0$var$buildSend(contract, fragment) {
    return function(...args) {
        return $3aa399cc1f518df0$var$__awaiter(this, void 0, void 0, function*() {
            if (!contract.signer) $3aa399cc1f518df0$var$logger.throwError("sending a transaction requires a signer", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: "sendTransaction"
            });
            // If the contract was just deployed, wait until it is mined
            if (contract.deployTransaction != null) yield contract._deployed();
            const txRequest = yield $3aa399cc1f518df0$var$populateTransaction(contract, fragment, args);
            const tx = yield contract.signer.sendTransaction(txRequest);
            // Tweak the tx.wait so the receipt has extra properties
            $3aa399cc1f518df0$var$addContractWait(contract, tx);
            return tx;
        });
    };
}
function $3aa399cc1f518df0$var$buildDefault(contract, fragment, collapseSimple) {
    if (fragment.constant) return $3aa399cc1f518df0$var$buildCall(contract, fragment, collapseSimple);
    return $3aa399cc1f518df0$var$buildSend(contract, fragment);
}
function $3aa399cc1f518df0$var$getEventTag(filter) {
    if (filter.address && (filter.topics == null || filter.topics.length === 0)) return "*";
    return (filter.address || "*") + "@" + (filter.topics ? filter.topics.map((topic)=>{
        if (Array.isArray(topic)) return topic.join("|");
        return topic;
    }).join(":") : "");
}
class $3aa399cc1f518df0$var$RunningEvent {
    constructor(tag, filter){
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "tag", tag);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "filter", filter);
        this._listeners = [];
    }
    addListener(listener, once) {
        this._listeners.push({
            listener: listener,
            once: once
        });
    }
    removeListener(listener) {
        let done = false;
        this._listeners = this._listeners.filter((item)=>{
            if (done || item.listener !== listener) return true;
            done = true;
            return false;
        });
    }
    removeAllListeners() {
        this._listeners = [];
    }
    listeners() {
        return this._listeners.map((i)=>i.listener);
    }
    listenerCount() {
        return this._listeners.length;
    }
    run(args) {
        const listenerCount = this.listenerCount();
        this._listeners = this._listeners.filter((item)=>{
            const argsCopy = args.slice();
            // Call the callback in the next event loop
            setTimeout(()=>{
                item.listener.apply(this, argsCopy);
            }, 0);
            // Reschedule it if it not "once"
            return !item.once;
        });
        return listenerCount;
    }
    prepareEvent(event) {}
    // Returns the array that will be applied to an emit
    getEmit(event) {
        return [
            event
        ];
    }
}
class $3aa399cc1f518df0$var$ErrorRunningEvent extends $3aa399cc1f518df0$var$RunningEvent {
    constructor(){
        super("error", null);
    }
}
// @TODO Fragment should inherit Wildcard? and just override getEmit?
//       or have a common abstract super class, with enough constructor
//       options to configure both.
// A Fragment Event will populate all the properties that Wildcard
// will, and additionally dereference the arguments when emitting
class $3aa399cc1f518df0$var$FragmentRunningEvent extends $3aa399cc1f518df0$var$RunningEvent {
    constructor(address, contractInterface, fragment, topics){
        const filter = {
            address: address
        };
        let topic = contractInterface.getEventTopic(fragment);
        if (topics) {
            if (topic !== topics[0]) $3aa399cc1f518df0$var$logger.throwArgumentError("topic mismatch", "topics", topics);
            filter.topics = topics.slice();
        } else filter.topics = [
            topic
        ];
        super($3aa399cc1f518df0$var$getEventTag(filter), filter);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "address", address);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "interface", contractInterface);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "fragment", fragment);
    }
    prepareEvent(event) {
        super.prepareEvent(event);
        event.event = this.fragment.name;
        event.eventSignature = this.fragment.format();
        event.decode = (data, topics)=>{
            return this.interface.decodeEventLog(this.fragment, data, topics);
        };
        try {
            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);
        } catch (error) {
            event.args = null;
            event.decodeError = error;
        }
    }
    getEmit(event) {
        const errors = (0, $2454a6802fffcbc0$export$5546b9ec21157cc2)(event.args);
        if (errors.length) throw errors[0].error;
        const args = (event.args || []).slice();
        args.push(event);
        return args;
    }
}
// A Wildcard Event will attempt to populate:
//  - event            The name of the event name
//  - eventSignature   The full signature of the event
//  - decode           A function to decode data and topics
//  - args             The decoded data and topics
class $3aa399cc1f518df0$var$WildcardRunningEvent extends $3aa399cc1f518df0$var$RunningEvent {
    constructor(address, contractInterface){
        super("*", {
            address: address
        });
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "address", address);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "interface", contractInterface);
    }
    prepareEvent(event) {
        super.prepareEvent(event);
        try {
            const parsed = this.interface.parseLog(event);
            event.event = parsed.name;
            event.eventSignature = parsed.signature;
            event.decode = (data, topics)=>{
                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);
            };
            event.args = parsed.args;
        } catch (error) {
        // No matching event
        }
    }
}
class $3aa399cc1f518df0$export$304faa4fc17528db {
    constructor(addressOrName, contractInterface, signerOrProvider){
        // @TODO: Maybe still check the addressOrName looks like a valid address or name?
        //address = getAddress(address);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "interface", (0, $b19fb92a27e5f35f$exports.getStatic)(new.target, "getInterface")(contractInterface));
        if (signerOrProvider == null) {
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "provider", null);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "signer", null);
        } else if ((0, $cb7b024827fb2a6c$exports.Signer).isSigner(signerOrProvider)) {
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "provider", signerOrProvider.provider || null);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "signer", signerOrProvider);
        } else if ((0, $443be65109ed3525$exports.Provider).isProvider(signerOrProvider)) {
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "provider", signerOrProvider);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "signer", null);
        } else $3aa399cc1f518df0$var$logger.throwArgumentError("invalid signer or provider", "signerOrProvider", signerOrProvider);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "callStatic", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "estimateGas", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "functions", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "populateTransaction", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "filters", {});
        {
            const uniqueFilters = {};
            Object.keys(this.interface.events).forEach((eventSignature)=>{
                const event = this.interface.events[eventSignature];
                (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.filters, eventSignature, (...args)=>{
                    return {
                        address: this.address,
                        topics: this.interface.encodeFilterTopics(event, args)
                    };
                });
                if (!uniqueFilters[event.name]) uniqueFilters[event.name] = [];
                uniqueFilters[event.name].push(eventSignature);
            });
            Object.keys(uniqueFilters).forEach((name)=>{
                const filters = uniqueFilters[name];
                if (filters.length === 1) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.filters, name, this.filters[filters[0]]);
                else $3aa399cc1f518df0$var$logger.warn(`Duplicate definition of ${name} (${filters.join(", ")})`);
            });
        }
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_runningEvents", {});
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "_wrappedEmits", {});
        if (addressOrName == null) $3aa399cc1f518df0$var$logger.throwArgumentError("invalid contract address or ENS name", "addressOrName", addressOrName);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "address", addressOrName);
        if (this.provider) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "resolvedAddress", $3aa399cc1f518df0$var$resolveName(this.provider, addressOrName));
        else try {
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "resolvedAddress", Promise.resolve((0, $8b38701037b2e5d8$export$88411125f012957a)(addressOrName)));
        } catch (error) {
            // Without a provider, we cannot use ENS names
            $3aa399cc1f518df0$var$logger.throwError("provider is required to use ENS name as contract address", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: "new Contract"
            });
        }
        // Swallow bad ENS names to prevent Unhandled Exceptions
        this.resolvedAddress.catch((e)=>{});
        const uniqueNames = {};
        const uniqueSignatures = {};
        Object.keys(this.interface.functions).forEach((signature)=>{
            const fragment = this.interface.functions[signature];
            // Check that the signature is unique; if not the ABI generation has
            // not been cleaned or may be incorrectly generated
            if (uniqueSignatures[signature]) {
                $3aa399cc1f518df0$var$logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);
                return;
            }
            uniqueSignatures[signature] = true;
            // Track unique names; we only expose bare named functions if they
            // are ambiguous
            {
                const name = fragment.name;
                if (!uniqueNames[`%${name}`]) uniqueNames[`%${name}`] = [];
                uniqueNames[`%${name}`].push(signature);
            }
            if (this[signature] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, signature, $3aa399cc1f518df0$var$buildDefault(this, fragment, true));
            // We do not collapse simple calls on this bucket, which allows
            // frameworks to safely use this without introspection as well as
            // allows decoding error recovery.
            if (this.functions[signature] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.functions, signature, $3aa399cc1f518df0$var$buildDefault(this, fragment, false));
            if (this.callStatic[signature] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.callStatic, signature, $3aa399cc1f518df0$var$buildCall(this, fragment, true));
            if (this.populateTransaction[signature] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.populateTransaction, signature, $3aa399cc1f518df0$var$buildPopulate(this, fragment));
            if (this.estimateGas[signature] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.estimateGas, signature, $3aa399cc1f518df0$var$buildEstimate(this, fragment));
        });
        Object.keys(uniqueNames).forEach((name)=>{
            // Ambiguous names to not get attached as bare names
            const signatures = uniqueNames[name];
            if (signatures.length > 1) return;
            // Strip off the leading "%" used for prototype protection
            name = name.substring(1);
            const signature = signatures[0];
            // If overwriting a member property that is null, swallow the error
            try {
                if (this[name] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, name, this[signature]);
            } catch (e) {}
            if (this.functions[name] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.functions, name, this.functions[signature]);
            if (this.callStatic[name] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.callStatic, name, this.callStatic[signature]);
            if (this.populateTransaction[name] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.populateTransaction, name, this.populateTransaction[signature]);
            if (this.estimateGas[name] == null) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this.estimateGas, name, this.estimateGas[signature]);
        });
    }
    static getContractAddress(transaction) {
        return (0, $8b38701037b2e5d8$export$b7fbffef12272e40)(transaction);
    }
    static getInterface(contractInterface) {
        if ((0, $796c8e250bcd8714$export$48cefb51a4e315b2).isInterface(contractInterface)) return contractInterface;
        return new (0, $796c8e250bcd8714$export$48cefb51a4e315b2)(contractInterface);
    }
    // @TODO: Allow timeout?
    deployed() {
        return this._deployed();
    }
    _deployed(blockTag) {
        if (!this._deployedPromise) {
            // If we were just deployed, we know the transaction we should occur in
            if (this.deployTransaction) this._deployedPromise = this.deployTransaction.wait().then(()=>{
                return this;
            });
            else // @TODO: Once we allow a timeout to be passed in, we will wait
            // up to that many blocks for getCode
            // Otherwise, poll for our code to be deployed
            this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code)=>{
                if (code === "0x") $3aa399cc1f518df0$var$logger.throwError("contract not deployed", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                    contractAddress: this.address,
                    operation: "getDeployed"
                });
                return this;
            });
        }
        return this._deployedPromise;
    }
    // @TODO:
    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>
    // @TODO:
    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>
    fallback(overrides) {
        if (!this.signer) $3aa399cc1f518df0$var$logger.throwError("sending a transactions require a signer", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "sendTransaction(fallback)"
        });
        const tx = (0, $b19fb92a27e5f35f$exports.shallowCopy)(overrides || {});
        [
            "from",
            "to"
        ].forEach(function(key) {
            if (tx[key] == null) return;
            $3aa399cc1f518df0$var$logger.throwError("cannot override " + key, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: key
            });
        });
        tx.to = this.resolvedAddress;
        return this.deployed().then(()=>{
            return this.signer.sendTransaction(tx);
        });
    }
    // Reconnect to a different signer or provider
    connect(signerOrProvider) {
        if (typeof signerOrProvider === "string") signerOrProvider = new (0, $cb7b024827fb2a6c$exports.VoidSigner)(signerOrProvider, this.provider);
        const contract = new this.constructor(this.address, this.interface, signerOrProvider);
        if (this.deployTransaction) (0, $b19fb92a27e5f35f$exports.defineReadOnly)(contract, "deployTransaction", this.deployTransaction);
        return contract;
    }
    // Re-attach to a different on-chain instance of this contract
    attach(addressOrName) {
        return new this.constructor(addressOrName, this.interface, this.signer || this.provider);
    }
    static isIndexed(value) {
        return (0, $796c8e250bcd8714$export$8ef99100a3c56f8c).isIndexed(value);
    }
    _normalizeRunningEvent(runningEvent) {
        // Already have an instance of this event running; we can re-use it
        if (this._runningEvents[runningEvent.tag]) return this._runningEvents[runningEvent.tag];
        return runningEvent;
    }
    _getRunningEvent(eventName) {
        if (typeof eventName === "string") {
            // Listen for "error" events (if your contract has an error event, include
            // the full signature to bypass this special event keyword)
            if (eventName === "error") return this._normalizeRunningEvent(new $3aa399cc1f518df0$var$ErrorRunningEvent());
            // Listen for any event that is registered
            if (eventName === "event") return this._normalizeRunningEvent(new $3aa399cc1f518df0$var$RunningEvent("event", null));
            // Listen for any event
            if (eventName === "*") return this._normalizeRunningEvent(new $3aa399cc1f518df0$var$WildcardRunningEvent(this.address, this.interface));
            // Get the event Fragment (throws if ambiguous/unknown event)
            const fragment = this.interface.getEvent(eventName);
            return this._normalizeRunningEvent(new $3aa399cc1f518df0$var$FragmentRunningEvent(this.address, this.interface, fragment));
        }
        // We have topics to filter by...
        if (eventName.topics && eventName.topics.length > 0) {
            // Is it a known topichash? (throws if no matching topichash)
            try {
                const topic = eventName.topics[0];
                if (typeof topic !== "string") throw new Error("invalid topic"); // @TODO: May happen for anonymous events
                const fragment = this.interface.getEvent(topic);
                return this._normalizeRunningEvent(new $3aa399cc1f518df0$var$FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));
            } catch (error) {}
            // Filter by the unknown topichash
            const filter = {
                address: this.address,
                topics: eventName.topics
            };
            return this._normalizeRunningEvent(new $3aa399cc1f518df0$var$RunningEvent($3aa399cc1f518df0$var$getEventTag(filter), filter));
        }
        return this._normalizeRunningEvent(new $3aa399cc1f518df0$var$WildcardRunningEvent(this.address, this.interface));
    }
    _checkRunningEvents(runningEvent) {
        if (runningEvent.listenerCount() === 0) {
            delete this._runningEvents[runningEvent.tag];
            // If we have a poller for this, remove it
            const emit = this._wrappedEmits[runningEvent.tag];
            if (emit && runningEvent.filter) {
                this.provider.off(runningEvent.filter, emit);
                delete this._wrappedEmits[runningEvent.tag];
            }
        }
    }
    // Subclasses can override this to gracefully recover
    // from parse errors if they wish
    _wrapEvent(runningEvent, log, listener) {
        const event = (0, $b19fb92a27e5f35f$exports.deepCopy)(log);
        event.removeListener = ()=>{
            if (!listener) return;
            runningEvent.removeListener(listener);
            this._checkRunningEvents(runningEvent);
        };
        event.getBlock = ()=>{
            return this.provider.getBlock(log.blockHash);
        };
        event.getTransaction = ()=>{
            return this.provider.getTransaction(log.transactionHash);
        };
        event.getTransactionReceipt = ()=>{
            return this.provider.getTransactionReceipt(log.transactionHash);
        };
        // This may throw if the topics and data mismatch the signature
        runningEvent.prepareEvent(event);
        return event;
    }
    _addEventListener(runningEvent, listener, once) {
        if (!this.provider) $3aa399cc1f518df0$var$logger.throwError("events require a provider or a signer with a provider", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
            operation: "once"
        });
        runningEvent.addListener(listener, once);
        // Track this running event and its listeners (may already be there; but no hard in updating)
        this._runningEvents[runningEvent.tag] = runningEvent;
        // If we are not polling the provider, start polling
        if (!this._wrappedEmits[runningEvent.tag]) {
            const wrappedEmit = (log)=>{
                let event = this._wrapEvent(runningEvent, log, listener);
                // Try to emit the result for the parameterized event...
                if (event.decodeError == null) try {
                    const args = runningEvent.getEmit(event);
                    this.emit(runningEvent.filter, ...args);
                } catch (error) {
                    event.decodeError = error.error;
                }
                // Always emit "event" for fragment-base events
                if (runningEvent.filter != null) this.emit("event", event);
                // Emit "error" if there was an error
                if (event.decodeError != null) this.emit("error", event.decodeError, event);
            };
            this._wrappedEmits[runningEvent.tag] = wrappedEmit;
            // Special events, like "error" do not have a filter
            if (runningEvent.filter != null) this.provider.on(runningEvent.filter, wrappedEmit);
        }
    }
    queryFilter(event, fromBlockOrBlockhash, toBlock) {
        const runningEvent = this._getRunningEvent(event);
        const filter = (0, $b19fb92a27e5f35f$exports.shallowCopy)(runningEvent.filter);
        if (typeof fromBlockOrBlockhash === "string" && (0, $eg8oT.isHexString)(fromBlockOrBlockhash, 32)) {
            if (toBlock != null) $3aa399cc1f518df0$var$logger.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", toBlock);
            filter.blockHash = fromBlockOrBlockhash;
        } else {
            filter.fromBlock = fromBlockOrBlockhash != null ? fromBlockOrBlockhash : 0;
            filter.toBlock = toBlock != null ? toBlock : "latest";
        }
        return this.provider.getLogs(filter).then((logs)=>{
            return logs.map((log)=>this._wrapEvent(runningEvent, log, null));
        });
    }
    on(event, listener) {
        this._addEventListener(this._getRunningEvent(event), listener, false);
        return this;
    }
    once(event, listener) {
        this._addEventListener(this._getRunningEvent(event), listener, true);
        return this;
    }
    emit(eventName, ...args) {
        if (!this.provider) return false;
        const runningEvent = this._getRunningEvent(eventName);
        const result = runningEvent.run(args) > 0;
        // May have drained all the "once" events; check for living events
        this._checkRunningEvents(runningEvent);
        return result;
    }
    listenerCount(eventName) {
        if (!this.provider) return 0;
        if (eventName == null) return Object.keys(this._runningEvents).reduce((accum, key)=>{
            return accum + this._runningEvents[key].listenerCount();
        }, 0);
        return this._getRunningEvent(eventName).listenerCount();
    }
    listeners(eventName) {
        if (!this.provider) return [];
        if (eventName == null) {
            const result = [];
            for(let tag in this._runningEvents)this._runningEvents[tag].listeners().forEach((listener)=>{
                result.push(listener);
            });
            return result;
        }
        return this._getRunningEvent(eventName).listeners();
    }
    removeAllListeners(eventName) {
        if (!this.provider) return this;
        if (eventName == null) {
            for(const tag in this._runningEvents){
                const runningEvent = this._runningEvents[tag];
                runningEvent.removeAllListeners();
                this._checkRunningEvents(runningEvent);
            }
            return this;
        }
        // Delete any listeners
        const runningEvent = this._getRunningEvent(eventName);
        runningEvent.removeAllListeners();
        this._checkRunningEvents(runningEvent);
        return this;
    }
    off(eventName, listener) {
        if (!this.provider) return this;
        const runningEvent = this._getRunningEvent(eventName);
        runningEvent.removeListener(listener);
        this._checkRunningEvents(runningEvent);
        return this;
    }
    removeListener(eventName, listener) {
        return this.off(eventName, listener);
    }
}
class $3aa399cc1f518df0$export$8517d80acf00e19a extends $3aa399cc1f518df0$export$304faa4fc17528db {
}
class $3aa399cc1f518df0$export$505569a6bf584fd9 {
    constructor(contractInterface, bytecode, signer){
        let bytecodeHex = null;
        if (typeof bytecode === "string") bytecodeHex = bytecode;
        else if ((0, $eg8oT.isBytes)(bytecode)) bytecodeHex = (0, $eg8oT.hexlify)(bytecode);
        else if (bytecode && typeof bytecode.object === "string") // Allow the bytecode object from the Solidity compiler
        bytecodeHex = bytecode.object;
        else // Crash in the next verification step
        bytecodeHex = "!";
        // Make sure it is 0x prefixed
        if (bytecodeHex.substring(0, 2) !== "0x") bytecodeHex = "0x" + bytecodeHex;
        // Make sure the final result is valid bytecode
        if (!(0, $eg8oT.isHexString)(bytecodeHex) || bytecodeHex.length % 2) $3aa399cc1f518df0$var$logger.throwArgumentError("invalid bytecode", "bytecode", bytecode);
        // If we have a signer, make sure it is valid
        if (signer && !(0, $cb7b024827fb2a6c$exports.Signer).isSigner(signer)) $3aa399cc1f518df0$var$logger.throwArgumentError("invalid signer", "signer", signer);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "bytecode", bytecodeHex);
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "interface", (0, $b19fb92a27e5f35f$exports.getStatic)(new.target, "getInterface")(contractInterface));
        (0, $b19fb92a27e5f35f$exports.defineReadOnly)(this, "signer", signer || null);
    }
    // @TODO: Future; rename to populateTransaction?
    getDeployTransaction(...args) {
        let tx = {};
        // If we have 1 additional argument, we allow transaction overrides
        if (args.length === this.interface.deploy.inputs.length + 1 && typeof args[args.length - 1] === "object") {
            tx = (0, $b19fb92a27e5f35f$exports.shallowCopy)(args.pop());
            for(const key in tx){
                if (!$3aa399cc1f518df0$var$allowedTransactionKeys[key]) throw new Error("unknown transaction override " + key);
            }
        }
        // Do not allow these to be overridden in a deployment transaction
        [
            "data",
            "from",
            "to"
        ].forEach((key)=>{
            if (tx[key] == null) return;
            $3aa399cc1f518df0$var$logger.throwError("cannot override " + key, (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: key
            });
        });
        if (tx.value) {
            const value = (0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(tx.value);
            if (!value.isZero() && !this.interface.deploy.payable) $3aa399cc1f518df0$var$logger.throwError("non-payable constructor cannot override value", (0, $cbv61.Logger).errors.UNSUPPORTED_OPERATION, {
                operation: "overrides.value",
                value: tx.value
            });
        }
        // Make sure the call matches the constructor signature
        $3aa399cc1f518df0$var$logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor");
        // Set the data to the bytecode + the encoded constructor arguments
        tx.data = (0, $eg8oT.hexlify)((0, $eg8oT.concat)([
            this.bytecode,
            this.interface.encodeDeploy(args)
        ]));
        return tx;
    }
    deploy(...args) {
        return $3aa399cc1f518df0$var$__awaiter(this, void 0, void 0, function*() {
            let overrides = {};
            // If 1 extra parameter was passed in, it contains overrides
            if (args.length === this.interface.deploy.inputs.length + 1) overrides = args.pop();
            // Make sure the call matches the constructor signature
            $3aa399cc1f518df0$var$logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor");
            // Resolve ENS names and promises in the arguments
            const params = yield $3aa399cc1f518df0$var$resolveAddresses(this.signer, args, this.interface.deploy.inputs);
            params.push(overrides);
            // Get the deployment transaction (with optional overrides)
            const unsignedTx = this.getDeployTransaction(...params);
            // Send the deployment transaction
            const tx = yield this.signer.sendTransaction(unsignedTx);
            const address = (0, $b19fb92a27e5f35f$exports.getStatic)(this.constructor, "getContractAddress")(tx);
            const contract = (0, $b19fb92a27e5f35f$exports.getStatic)(this.constructor, "getContract")(address, this.interface, this.signer);
            // Add the modified wait that wraps events
            $3aa399cc1f518df0$var$addContractWait(contract, tx);
            (0, $b19fb92a27e5f35f$exports.defineReadOnly)(contract, "deployTransaction", tx);
            return contract;
        });
    }
    attach(address) {
        return this.constructor.getContract(address, this.interface, this.signer);
    }
    connect(signer) {
        return new this.constructor(this.interface, this.bytecode, signer);
    }
    static fromSolidity(compilerOutput, signer) {
        if (compilerOutput == null) $3aa399cc1f518df0$var$logger.throwError("missing compiler output", (0, $cbv61.Logger).errors.MISSING_ARGUMENT, {
            argument: "compilerOutput"
        });
        if (typeof compilerOutput === "string") compilerOutput = JSON.parse(compilerOutput);
        const abi = compilerOutput.abi;
        let bytecode = null;
        if (compilerOutput.bytecode) bytecode = compilerOutput.bytecode;
        else if (compilerOutput.evm && compilerOutput.evm.bytecode) bytecode = compilerOutput.evm.bytecode;
        return new this(abi, bytecode, signer);
    }
    static getInterface(contractInterface) {
        return $3aa399cc1f518df0$export$8517d80acf00e19a.getInterface(contractInterface);
    }
    static getContractAddress(tx) {
        return (0, $8b38701037b2e5d8$export$b7fbffef12272e40)(tx);
    }
    static getContract(address, contractInterface, signer) {
        return new $3aa399cc1f518df0$export$8517d80acf00e19a(address, contractInterface, signer);
    }
}


var $21f6412ad5aed519$export$1be1fc439b849fdf;
var $21f6412ad5aed519$export$95a3b7b12ab518f9;
var $21f6412ad5aed519$export$6922d3b3a607469e;
var $21f6412ad5aed519$export$9a6132153fba2e0;
var $21f6412ad5aed519$export$4feba8a1bc8e9afd;
var $21f6412ad5aed519$export$5c593627aef9f076;
"use strict";
function $21f6412ad5aed519$var$_extends() {
    $21f6412ad5aed519$var$_extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return $21f6412ad5aed519$var$_extends.apply(this, arguments);
}
function $21f6412ad5aed519$var$_objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
var $21f6412ad5aed519$var$reduxImpl = function reduxImpl(reducer, initial) {
    return function(set, _get, api) {
        api.dispatch = function(action) {
            set(function(state) {
                return reducer(state, action);
            }, false, action);
            return action;
        };
        api.dispatchFromDevtools = true;
        return $21f6412ad5aed519$var$_extends({
            dispatch: function dispatch() {
                var _ref;
                return (_ref = api).dispatch.apply(_ref, arguments);
            }
        }, initial);
    };
};
var $21f6412ad5aed519$var$redux = $21f6412ad5aed519$var$reduxImpl;
var $21f6412ad5aed519$var$_excluded = [
    "enabled",
    "anonymousActionType",
    "store"
], $21f6412ad5aed519$var$_excluded2 = [
    "connection"
];
var $21f6412ad5aed519$var$trackedConnections = new Map();
var $21f6412ad5aed519$var$getTrackedConnectionState = function getTrackedConnectionState(name) {
    var api = $21f6412ad5aed519$var$trackedConnections.get(name);
    if (!api) return {};
    return Object.fromEntries(Object.entries(api.stores).map(function(_ref) {
        var key = _ref[0], api = _ref[1];
        return [
            key,
            api.getState()
        ];
    }));
};
var $21f6412ad5aed519$var$extractConnectionInformation = function extractConnectionInformation(store, extensionConnector, options) {
    if (store === undefined) return {
        type: "untracked",
        connection: extensionConnector.connect(options)
    };
    var existingConnection = $21f6412ad5aed519$var$trackedConnections.get(options.name);
    if (existingConnection) return $21f6412ad5aed519$var$_extends({
        type: "tracked",
        store: store
    }, existingConnection);
    var newConnection = {
        connection: extensionConnector.connect(options),
        stores: {}
    };
    $21f6412ad5aed519$var$trackedConnections.set(options.name, newConnection);
    return $21f6412ad5aed519$var$_extends({
        type: "tracked",
        store: store
    }, newConnection);
};
var $21f6412ad5aed519$var$devtoolsImpl = function devtoolsImpl(fn, devtoolsOptions) {
    if (devtoolsOptions === void 0) devtoolsOptions = {};
    return function(set, get, api) {
        var _devtoolsOptions = devtoolsOptions, enabled = _devtoolsOptions.enabled, anonymousActionType = _devtoolsOptions.anonymousActionType, store = _devtoolsOptions.store, options = $21f6412ad5aed519$var$_objectWithoutPropertiesLoose(_devtoolsOptions, $21f6412ad5aed519$var$_excluded);
        var extensionConnector;
        try {
            extensionConnector = (enabled != null ? enabled : false) && window.__REDUX_DEVTOOLS_EXTENSION__;
        } catch (e) {}
        if (!extensionConnector) return fn(set, get, api);
        var _extractConnectionInf = $21f6412ad5aed519$var$extractConnectionInformation(store, extensionConnector, options), connection = _extractConnectionInf.connection, connectionInformation = $21f6412ad5aed519$var$_objectWithoutPropertiesLoose(_extractConnectionInf, $21f6412ad5aed519$var$_excluded2);
        var isRecording = true;
        api.setState = function(state, replace, nameOrAction) {
            var _extends2;
            var r = set(state, replace);
            if (!isRecording) return r;
            var action = nameOrAction === undefined ? {
                type: anonymousActionType || "anonymous"
            } : typeof nameOrAction === "string" ? {
                type: nameOrAction
            } : nameOrAction;
            if (store === undefined) {
                connection == null || connection.send(action, get());
                return r;
            }
            connection == null || connection.send($21f6412ad5aed519$var$_extends({}, action, {
                type: store + "/" + action.type
            }), $21f6412ad5aed519$var$_extends({}, $21f6412ad5aed519$var$getTrackedConnectionState(options.name), (_extends2 = {}, _extends2[store] = api.getState(), _extends2)));
            return r;
        };
        var setStateFromDevtools = function setStateFromDevtools() {
            var originalIsRecording = isRecording;
            isRecording = false;
            set.apply(void 0, arguments);
            isRecording = originalIsRecording;
        };
        var initialState = fn(api.setState, get, api);
        if (connectionInformation.type === "untracked") connection == null || connection.init(initialState);
        else {
            connectionInformation.stores[connectionInformation.store] = api;
            connection == null || connection.init(Object.fromEntries(Object.entries(connectionInformation.stores).map(function(_ref2) {
                var key = _ref2[0], store = _ref2[1];
                return [
                    key,
                    key === connectionInformation.store ? initialState : store.getState()
                ];
            })));
        }
        if (api.dispatchFromDevtools && typeof api.dispatch === "function") {
            var didWarnAboutReservedActionType = false;
            var originalDispatch = api.dispatch;
            api.dispatch = function() {
                for(var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++)a[_key] = arguments[_key];
                originalDispatch.apply(void 0, a);
            };
        }
        connection.subscribe(function(message) {
            switch(message.type){
                case "ACTION":
                    if (typeof message.payload !== "string") {
                        console.error("[zustand devtools middleware] Unsupported action format");
                        return;
                    }
                    return $21f6412ad5aed519$var$parseJsonThen(message.payload, function(action) {
                        if (action.type === "__setState") {
                            if (store === undefined) {
                                setStateFromDevtools(action.state);
                                return;
                            }
                            if (Object.keys(action.state).length !== 1) console.error('\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using \'store\' option in devtools(), the \'state\' should have only one key, which is a value of \'store\' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }\n                    ');
                            var stateFromDevtools = action.state[store];
                            if (stateFromDevtools === undefined || stateFromDevtools === null) return;
                            if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) setStateFromDevtools(stateFromDevtools);
                            return;
                        }
                        if (!api.dispatchFromDevtools) return;
                        if (typeof api.dispatch !== "function") return;
                        api.dispatch(action);
                    });
                case "DISPATCH":
                    switch(message.payload.type){
                        case "RESET":
                            setStateFromDevtools(initialState);
                            if (store === undefined) return connection == null ? void 0 : connection.init(api.getState());
                            return connection == null ? void 0 : connection.init($21f6412ad5aed519$var$getTrackedConnectionState(options.name));
                        case "COMMIT":
                            if (store === undefined) {
                                connection == null || connection.init(api.getState());
                                return;
                            }
                            return connection == null ? void 0 : connection.init($21f6412ad5aed519$var$getTrackedConnectionState(options.name));
                        case "ROLLBACK":
                            return $21f6412ad5aed519$var$parseJsonThen(message.state, function(state) {
                                if (store === undefined) {
                                    setStateFromDevtools(state);
                                    connection == null || connection.init(api.getState());
                                    return;
                                }
                                setStateFromDevtools(state[store]);
                                connection == null || connection.init($21f6412ad5aed519$var$getTrackedConnectionState(options.name));
                            });
                        case "JUMP_TO_STATE":
                        case "JUMP_TO_ACTION":
                            return $21f6412ad5aed519$var$parseJsonThen(message.state, function(state) {
                                if (store === undefined) {
                                    setStateFromDevtools(state);
                                    return;
                                }
                                if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) setStateFromDevtools(state[store]);
                            });
                        case "IMPORT_STATE":
                            var _nextLiftedState$comp;
                            var nextLiftedState = message.payload.nextLiftedState;
                            var lastComputedState = (_nextLiftedState$comp = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _nextLiftedState$comp.state;
                            if (!lastComputedState) return;
                            if (store === undefined) setStateFromDevtools(lastComputedState);
                            else setStateFromDevtools(lastComputedState[store]);
                            connection == null || connection.send(null, nextLiftedState);
                            return;
                        case "PAUSE_RECORDING":
                            return isRecording = !isRecording;
                    }
                    return;
            }
        });
        return initialState;
    };
};
var $21f6412ad5aed519$var$devtools = $21f6412ad5aed519$var$devtoolsImpl;
var $21f6412ad5aed519$var$parseJsonThen = function parseJsonThen(stringified, f) {
    var parsed;
    try {
        parsed = JSON.parse(stringified);
    } catch (e) {
        console.error("[zustand devtools middleware] Could not parse the received json", e);
    }
    if (parsed !== undefined) f(parsed);
};
var $21f6412ad5aed519$var$subscribeWithSelectorImpl = function subscribeWithSelectorImpl(fn) {
    return function(set, get, api) {
        var origSubscribe = api.subscribe;
        api.subscribe = function(selector, optListener, options) {
            var listener = selector;
            if (optListener) {
                var equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;
                var currentSlice = selector(api.getState());
                listener = function listener(state) {
                    var nextSlice = selector(state);
                    if (!equalityFn(currentSlice, nextSlice)) {
                        var previousSlice = currentSlice;
                        optListener(currentSlice = nextSlice, previousSlice);
                    }
                };
                if (options != null && options.fireImmediately) optListener(currentSlice, currentSlice);
            }
            return origSubscribe(listener);
        };
        var initialState = fn(set, get, api);
        return initialState;
    };
};
var $21f6412ad5aed519$var$subscribeWithSelector = $21f6412ad5aed519$var$subscribeWithSelectorImpl;
var $21f6412ad5aed519$var$combine = function combine(initialState, create) {
    return function() {
        return Object.assign({}, initialState, create.apply(void 0, arguments));
    };
};
function $21f6412ad5aed519$var$createJSONStorage(getStorage) {
    var storage;
    try {
        storage = getStorage();
    } catch (e) {
        return;
    }
    var persistStorage = {
        getItem: function getItem(name) {
            var _getItem;
            var parse = function parse(str) {
                if (str === null) return null;
                return JSON.parse(str);
            };
            var str = (_getItem = storage.getItem(name)) != null ? _getItem : null;
            if (str instanceof Promise) return str.then(parse);
            return parse(str);
        },
        setItem: function setItem(name, newValue) {
            return storage.setItem(name, JSON.stringify(newValue));
        },
        removeItem: function removeItem(name) {
            return storage.removeItem(name);
        }
    };
    return persistStorage;
}
var $21f6412ad5aed519$var$toThenable = function toThenable(fn) {
    return function(input) {
        try {
            var result = fn(input);
            if (result instanceof Promise) return result;
            return {
                then: function then(onFulfilled) {
                    return toThenable(onFulfilled)(result);
                },
                catch: function _catch(_onRejected) {
                    return this;
                }
            };
        } catch (e) {
            return {
                then: function then(_onFulfilled) {
                    return this;
                },
                catch: function _catch(onRejected) {
                    return toThenable(onRejected)(e);
                }
            };
        }
    };
};
var $21f6412ad5aed519$var$oldImpl = function oldImpl(config, baseOptions) {
    return function(set, get, api) {
        var options = $21f6412ad5aed519$var$_extends({
            getStorage: function getStorage() {
                return localStorage;
            },
            serialize: JSON.stringify,
            deserialize: JSON.parse,
            partialize: function partialize(state) {
                return state;
            },
            version: 0,
            merge: function merge(persistedState, currentState) {
                return $21f6412ad5aed519$var$_extends({}, currentState, persistedState);
            }
        }, baseOptions);
        var _hasHydrated = false;
        var hydrationListeners = new Set();
        var finishHydrationListeners = new Set();
        var storage;
        try {
            storage = options.getStorage();
        } catch (e) {}
        if (!storage) return config(function() {
            console.warn("[zustand persist middleware] Unable to update item '" + options.name + "', the given storage is currently unavailable.");
            set.apply(void 0, arguments);
        }, get, api);
        var thenableSerialize = $21f6412ad5aed519$var$toThenable(options.serialize);
        var setItem = function setItem() {
            var state = options.partialize($21f6412ad5aed519$var$_extends({}, get()));
            var errorInSync;
            var thenable = thenableSerialize({
                state: state,
                version: options.version
            }).then(function(serializedValue) {
                return storage.setItem(options.name, serializedValue);
            }).catch(function(e) {
                errorInSync = e;
            });
            if (errorInSync) throw errorInSync;
            return thenable;
        };
        var savedSetState = api.setState;
        api.setState = function(state, replace) {
            savedSetState(state, replace);
            setItem();
        };
        var configResult = config(function() {
            set.apply(void 0, arguments);
            setItem();
        }, get, api);
        var stateFromStorage;
        var hydrate = function hydrate() {
            if (!storage) return;
            _hasHydrated = false;
            hydrationListeners.forEach(function(cb) {
                return cb(get());
            });
            var postRehydrationCallback = (options.onRehydrateStorage == null ? void 0 : options.onRehydrateStorage(get())) || undefined;
            return $21f6412ad5aed519$var$toThenable(storage.getItem.bind(storage))(options.name).then(function(storageValue) {
                if (storageValue) return options.deserialize(storageValue);
            }).then(function(deserializedStorageValue) {
                if (deserializedStorageValue) {
                    if (typeof deserializedStorageValue.version === "number" && deserializedStorageValue.version !== options.version) {
                        if (options.migrate) return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);
                        console.error("State loaded from storage couldn't be migrated since no migrate function was provided");
                    } else return deserializedStorageValue.state;
                }
            }).then(function(migratedState) {
                var _get;
                stateFromStorage = options.merge(migratedState, (_get = get()) != null ? _get : configResult);
                set(stateFromStorage, true);
                return setItem();
            }).then(function() {
                postRehydrationCallback == null || postRehydrationCallback(stateFromStorage, undefined);
                _hasHydrated = true;
                finishHydrationListeners.forEach(function(cb) {
                    return cb(stateFromStorage);
                });
            }).catch(function(e) {
                postRehydrationCallback == null || postRehydrationCallback(undefined, e);
            });
        };
        api.persist = {
            setOptions: function setOptions(newOptions) {
                options = $21f6412ad5aed519$var$_extends({}, options, newOptions);
                if (newOptions.getStorage) storage = newOptions.getStorage();
            },
            clearStorage: function clearStorage() {
                var _storage;
                (_storage = storage) == null || _storage.removeItem(options.name);
            },
            getOptions: function getOptions() {
                return options;
            },
            rehydrate: function rehydrate() {
                return hydrate();
            },
            hasHydrated: function hasHydrated() {
                return _hasHydrated;
            },
            onHydrate: function onHydrate(cb) {
                hydrationListeners.add(cb);
                return function() {
                    hydrationListeners.delete(cb);
                };
            },
            onFinishHydration: function onFinishHydration(cb) {
                finishHydrationListeners.add(cb);
                return function() {
                    finishHydrationListeners.delete(cb);
                };
            }
        };
        hydrate();
        return stateFromStorage || configResult;
    };
};
var $21f6412ad5aed519$var$newImpl = function newImpl(config, baseOptions) {
    return function(set, get, api) {
        var options = $21f6412ad5aed519$var$_extends({
            storage: $21f6412ad5aed519$var$createJSONStorage(function() {
                return localStorage;
            }),
            partialize: function partialize(state) {
                return state;
            },
            version: 0,
            merge: function merge(persistedState, currentState) {
                return $21f6412ad5aed519$var$_extends({}, currentState, persistedState);
            }
        }, baseOptions);
        var _hasHydrated2 = false;
        var hydrationListeners = new Set();
        var finishHydrationListeners = new Set();
        var storage = options.storage;
        if (!storage) return config(function() {
            console.warn("[zustand persist middleware] Unable to update item '" + options.name + "', the given storage is currently unavailable.");
            set.apply(void 0, arguments);
        }, get, api);
        var setItem = function setItem() {
            var state = options.partialize($21f6412ad5aed519$var$_extends({}, get()));
            return storage.setItem(options.name, {
                state: state,
                version: options.version
            });
        };
        var savedSetState = api.setState;
        api.setState = function(state, replace) {
            savedSetState(state, replace);
            setItem();
        };
        var configResult = config(function() {
            set.apply(void 0, arguments);
            setItem();
        }, get, api);
        var stateFromStorage;
        var hydrate = function hydrate() {
            if (!storage) return;
            _hasHydrated2 = false;
            hydrationListeners.forEach(function(cb) {
                return cb(get());
            });
            var postRehydrationCallback = (options.onRehydrateStorage == null ? void 0 : options.onRehydrateStorage(get())) || undefined;
            return $21f6412ad5aed519$var$toThenable(storage.getItem.bind(storage))(options.name).then(function(deserializedStorageValue) {
                if (deserializedStorageValue) {
                    if (typeof deserializedStorageValue.version === "number" && deserializedStorageValue.version !== options.version) {
                        if (options.migrate) return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);
                        console.error("State loaded from storage couldn't be migrated since no migrate function was provided");
                    } else return deserializedStorageValue.state;
                }
            }).then(function(migratedState) {
                var _get2;
                stateFromStorage = options.merge(migratedState, (_get2 = get()) != null ? _get2 : configResult);
                set(stateFromStorage, true);
                return setItem();
            }).then(function() {
                postRehydrationCallback == null || postRehydrationCallback(stateFromStorage, undefined);
                _hasHydrated2 = true;
                finishHydrationListeners.forEach(function(cb) {
                    return cb(stateFromStorage);
                });
            }).catch(function(e) {
                postRehydrationCallback == null || postRehydrationCallback(undefined, e);
            });
        };
        api.persist = {
            setOptions: function setOptions(newOptions) {
                options = $21f6412ad5aed519$var$_extends({}, options, newOptions);
                if (newOptions.storage) storage = newOptions.storage;
            },
            clearStorage: function clearStorage() {
                var _storage2;
                (_storage2 = storage) == null || _storage2.removeItem(options.name);
            },
            getOptions: function getOptions() {
                return options;
            },
            rehydrate: function rehydrate() {
                return hydrate();
            },
            hasHydrated: function hasHydrated() {
                return _hasHydrated2;
            },
            onHydrate: function onHydrate(cb) {
                hydrationListeners.add(cb);
                return function() {
                    hydrationListeners.delete(cb);
                };
            },
            onFinishHydration: function onFinishHydration(cb) {
                finishHydrationListeners.add(cb);
                return function() {
                    finishHydrationListeners.delete(cb);
                };
            }
        };
        hydrate();
        return stateFromStorage || configResult;
    };
};
var $21f6412ad5aed519$var$persistImpl = function persistImpl(config, baseOptions) {
    if ("getStorage" in baseOptions || "serialize" in baseOptions || "deserialize" in baseOptions) return $21f6412ad5aed519$var$oldImpl(config, baseOptions);
    return $21f6412ad5aed519$var$newImpl(config, baseOptions);
};
var $21f6412ad5aed519$var$persist = $21f6412ad5aed519$var$persistImpl;
$21f6412ad5aed519$export$1be1fc439b849fdf = $21f6412ad5aed519$var$combine;
$21f6412ad5aed519$export$95a3b7b12ab518f9 = $21f6412ad5aed519$var$createJSONStorage;
$21f6412ad5aed519$export$6922d3b3a607469e = $21f6412ad5aed519$var$devtools;
$21f6412ad5aed519$export$9a6132153fba2e0 = $21f6412ad5aed519$var$persist;
$21f6412ad5aed519$export$4feba8a1bc8e9afd = $21f6412ad5aed519$var$redux;
$21f6412ad5aed519$export$5c593627aef9f076 = $21f6412ad5aed519$var$subscribeWithSelector;


var $2f8ffd273cfc2a84$exports = {};
"use strict";
var $2f8ffd273cfc2a84$var$createStoreImpl = function createStoreImpl(createState) {
    var state;
    var listeners = new Set();
    var setState = function setState(partial, replace) {
        var nextState = typeof partial === "function" ? partial(state) : partial;
        if (!Object.is(nextState, state)) {
            var _previousState = state;
            state = (replace != null ? replace : typeof nextState !== "object") ? nextState : Object.assign({}, state, nextState);
            listeners.forEach(function(listener) {
                return listener(state, _previousState);
            });
        }
    };
    var getState = function getState() {
        return state;
    };
    var subscribe = function subscribe(listener) {
        listeners.add(listener);
        return function() {
            return listeners.delete(listener);
        };
    };
    var destroy = function destroy() {
        listeners.clear();
    };
    var api = {
        setState: setState,
        getState: getState,
        subscribe: subscribe,
        destroy: destroy
    };
    state = createState(setState, getState, api);
    return api;
};
var $2f8ffd273cfc2a84$var$createStore = function createStore(createState) {
    return createState ? $2f8ffd273cfc2a84$var$createStoreImpl(createState) : $2f8ffd273cfc2a84$var$createStoreImpl;
};
var $2f8ffd273cfc2a84$var$vanilla = function(createState) {
    return $2f8ffd273cfc2a84$var$createStore(createState);
};
$2f8ffd273cfc2a84$exports.createStore = $2f8ffd273cfc2a84$var$createStore;
$2f8ffd273cfc2a84$exports.default = $2f8ffd273cfc2a84$var$vanilla;
$2f8ffd273cfc2a84$exports = $2f8ffd273cfc2a84$exports && $2f8ffd273cfc2a84$exports.default || {}, Object.assign($2f8ffd273cfc2a84$exports, $2f8ffd273cfc2a84$exports);











var $941eb567eaa86ce0$exports = {};
"use strict";
function $941eb567eaa86ce0$var$_unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return $941eb567eaa86ce0$var$_arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $941eb567eaa86ce0$var$_arrayLikeToArray(o, minLen);
}
function $941eb567eaa86ce0$var$_arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function $941eb567eaa86ce0$var$_createForOfIteratorHelperLoose(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
    if (it) return (it = it.call(o)).next.bind(it);
    if (Array.isArray(o) || (it = $941eb567eaa86ce0$var$_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it) o = it;
        var i = 0;
        return function() {
            if (i >= o.length) return {
                done: true
            };
            return {
                done: false,
                value: o[i++]
            };
        };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function $941eb567eaa86ce0$var$shallow(objA, objB) {
    if (Object.is(objA, objB)) return true;
    if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) return false;
    if (objA instanceof Map && objB instanceof Map) {
        if (objA.size !== objB.size) return false;
        for(var _iterator = $941eb567eaa86ce0$var$_createForOfIteratorHelperLoose(objA), _step; !(_step = _iterator()).done;){
            var _step$value = _step.value, key = _step$value[0], value = _step$value[1];
            if (!Object.is(value, objB.get(key))) return false;
        }
        return true;
    }
    if (objA instanceof Set && objB instanceof Set) {
        if (objA.size !== objB.size) return false;
        for(var _iterator2 = $941eb567eaa86ce0$var$_createForOfIteratorHelperLoose(objA), _step2; !(_step2 = _iterator2()).done;){
            var _value = _step2.value;
            if (!objB.has(_value)) return false;
        }
        return true;
    }
    var keysA = Object.keys(objA);
    if (keysA.length !== Object.keys(objB).length) return false;
    for(var i = 0; i < keysA.length; i++){
        if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) return false;
    }
    return true;
}
var $941eb567eaa86ce0$var$shallow$1 = function(objA, objB) {
    return $941eb567eaa86ce0$var$shallow(objA, objB);
};
$941eb567eaa86ce0$exports.default = $941eb567eaa86ce0$var$shallow$1;
$941eb567eaa86ce0$exports.shallow = $941eb567eaa86ce0$var$shallow;
$941eb567eaa86ce0$exports = $941eb567eaa86ce0$exports && $941eb567eaa86ce0$exports.default || {}, Object.assign($941eb567eaa86ce0$exports, $941eb567eaa86ce0$exports);












function $077a864ec31a8b9f$export$854522c9456f3b5(defaultChains, providers2, { minQuorum: minQuorum = 1 , pollingInterval: pollingInterval = 4e3 , targetQuorum: targetQuorum = 1 , stallTimeout: stallTimeout  } = {}) {
    if (!defaultChains.length) throw new Error("must have at least one chain");
    if (targetQuorum < minQuorum) throw new Error("quorum cannot be lower than minQuorum");
    let chains = [];
    const providers_ = {};
    const webSocketProviders_ = {};
    for (const chain of defaultChains){
        let configExists = false;
        for (const provider of providers2){
            const apiConfig = provider(chain);
            if (!apiConfig) continue;
            configExists = true;
            if (!chains.some(({ id: id  })=>id === chain.id)) chains = [
                ...chains,
                apiConfig.chain
            ];
            providers_[chain.id] = [
                ...providers_[chain.id] || [],
                apiConfig.provider
            ];
            if (apiConfig.webSocketProvider) webSocketProviders_[chain.id] = [
                ...webSocketProviders_[chain.id] || [],
                apiConfig.webSocketProvider
            ];
        }
        if (!configExists) throw new Error([
            `Could not find valid provider configuration for chain "${chain.name}".
`,
            "You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.",
            "Read more: https://wagmi.sh/core/providers/jsonRpc"
        ].join("\n"));
    }
    return {
        chains: chains,
        provider: ({ chainId: chainId  })=>{
            const activeChain = chains.find((x)=>x.id === chainId) ?? defaultChains[0];
            const chainProviders = providers_[activeChain.id];
            if (!chainProviders || !chainProviders[0]) throw new Error(`No providers configured for chain "${activeChain.id}"`);
            let provider;
            if (chainProviders.length === 1) provider = chainProviders[0]();
            else provider = $077a864ec31a8b9f$var$fallbackProvider(targetQuorum, minQuorum, chainProviders, {
                stallTimeout: stallTimeout
            });
            if (activeChain.id === 42220) provider.formatter.formats.block = {
                ...provider.formatter.formats.block,
                difficulty: ()=>0,
                gasLimit: ()=>0
            };
            return Object.assign(provider, {
                chains: chains,
                pollingInterval: pollingInterval
            });
        },
        webSocketProvider: ({ chainId: chainId  })=>{
            const activeChain = chains.find((x)=>x.id === chainId) ?? defaultChains[0];
            const chainWebSocketProviders = webSocketProviders_[activeChain.id];
            if (!chainWebSocketProviders) return void 0;
            const provider = chainWebSocketProviders[0]?.();
            if (provider && activeChain.id === 42220) provider.formatter.formats.block = {
                ...provider.formatter.formats.block,
                difficulty: ()=>0,
                gasLimit: ()=>0
            };
            return Object.assign(provider || {}, {
                chains: chains
            });
        }
    };
}
function $077a864ec31a8b9f$var$fallbackProvider(targetQuorum, minQuorum, providers_, { stallTimeout: stallTimeout  }) {
    try {
        return new (0, $7fc15fb0220a0397$exports).FallbackProvider(providers_.map((chainProvider, index)=>{
            const provider = chainProvider();
            return {
                provider: provider,
                priority: provider.priority ?? index,
                stallTimeout: provider.stallTimeout ?? stallTimeout,
                weight: provider.weight
            };
        }), targetQuorum);
    } catch (error) {
        if (error?.message?.includes("quorum will always fail; larger than total weight")) {
            if (targetQuorum === minQuorum) throw error;
            return $077a864ec31a8b9f$var$fallbackProvider(targetQuorum - 1, minQuorum, providers_, {
                stallTimeout: stallTimeout
            });
        }
        throw error;
    }
}
// src/utils/assertActiveChain.ts
function $077a864ec31a8b9f$var$assertActiveChain({ chainId: chainId , signer: signer  }) {
    const { chain: activeChain , chains: chains  } = $077a864ec31a8b9f$export$7de4970ebfd8206d();
    const activeChainId = activeChain?.id;
    if (activeChainId && chainId !== activeChainId) throw new $077a864ec31a8b9f$export$535d82255cc17992({
        activeChain: chains.find((x)=>x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,
        targetChain: chains.find((x)=>x.id === chainId)?.name ?? `Chain ${chainId}`
    });
    if (signer) {
        const signerChainId = signer.provider?.network?.chainId;
        if (signerChainId && chainId !== signerChainId) {
            const connector = $077a864ec31a8b9f$export$6bb76d6eba7e258c().connector;
            throw new $077a864ec31a8b9f$export$688e5fda4b4631ed({
                chainId: chainId,
                connectorId: connector?.id ?? "unknown"
            });
        }
    }
}
// src/utils/debounce.ts
function $077a864ec31a8b9f$export$61fc7d43ac8f84b0(fn, waitTime = 0) {
    let timeout;
    return function(...args) {
        if (!waitTime) return fn(...args);
        if (timeout) clearTimeout(timeout);
        timeout = setTimeout(function() {
            timeout = null;
            fn(...args);
        }, waitTime);
    };
}
// src/utils/deepEqual.ts
function $077a864ec31a8b9f$export$9cb4719e2e525b7a(a, b) {
    if (a === b) return true;
    if (a && b && typeof a === "object" && typeof b === "object") {
        if (a.constructor !== b.constructor) return false;
        let length;
        let i;
        if (Array.isArray(a) && Array.isArray(b)) {
            length = a.length;
            if (length != b.length) return false;
            for(i = length; i-- !== 0;)if (!$077a864ec31a8b9f$export$9cb4719e2e525b7a(a[i], b[i])) return false;
            return true;
        }
        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
        const keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length) return false;
        for(i = length; i-- !== 0;)if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
        for(i = length; i-- !== 0;){
            const key = keys[i];
            if (key && !$077a864ec31a8b9f$export$9cb4719e2e525b7a(a[key], b[key])) return false;
        }
        return true;
    }
    return a !== a && b !== b;
}
var $077a864ec31a8b9f$var$findAndReplace = (cacheRef, { find: find , replace: replace  })=>{
    if (cacheRef && find(cacheRef)) return replace(cacheRef);
    if (typeof cacheRef !== "object") return cacheRef;
    if (Array.isArray(cacheRef)) return cacheRef.map((item)=>$077a864ec31a8b9f$var$findAndReplace(item, {
            find: find,
            replace: replace
        }));
    if (cacheRef instanceof Object) return Object.entries(cacheRef).reduce((curr, [key, value])=>({
            ...curr,
            [key]: $077a864ec31a8b9f$var$findAndReplace(value, {
                find: find,
                replace: replace
            })
        }), {});
    return cacheRef;
};
function $077a864ec31a8b9f$export$efcd34ab6248d3cd(cachedString) {
    const cache = JSON.parse(cachedString);
    const deserializedCacheWithBigNumbers = $077a864ec31a8b9f$var$findAndReplace(cache, {
        find: (data)=>data.type === "BigNumber",
        replace: (data)=>(0, $66faa3baf2af8a8b$export$d97aa349ed20696).from(data.hex)
    });
    return deserializedCacheWithBigNumbers;
}
function $077a864ec31a8b9f$var$normalizeFunctionName({ contract: contract , functionName: functionName , args: args = []  }) {
    if (functionName in contract.functions) return functionName;
    const argsLength = args?.length ?? 0;
    const overloadFunctions = Object.keys(contract.functions).filter((x)=>x.startsWith(`${functionName}(`)).map((x)=>({
            name: x,
            fragment: (0, $924b12823ef5c5c6$exports.FunctionFragment).fromString(x)
        })).filter((x)=>argsLength === x.fragment.inputs.length);
    for (const overloadFunction of overloadFunctions){
        const matched = args.every((arg, index)=>{
            const abiParameter = overloadFunction.fragment.inputs[index];
            return $077a864ec31a8b9f$var$isArgOfType(arg, abiParameter);
        });
        if (matched) return overloadFunction.name;
    }
    return functionName;
}
function $077a864ec31a8b9f$var$isArgOfType(arg, abiParameter) {
    const argType = typeof arg;
    const abiParameterType = abiParameter.type;
    switch(abiParameterType){
        case "address":
            return (0, $924b12823ef5c5c6$exports.isAddress)(arg);
        case "bool":
            return argType === "boolean";
        case "function":
            return argType === "string";
        case "string":
            return argType === "string";
        default:
            if (abiParameterType === "tuple" && "components" in abiParameter) return Object.values(abiParameter.components).every((component, index)=>{
                return $077a864ec31a8b9f$var$isArgOfType(Object.values(arg)[index], component);
            });
            if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType)) return argType === "number" || argType === "bigint" || (0, $66faa3baf2af8a8b$export$d97aa349ed20696).isBigNumber(arg);
            if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType)) return argType === "string" || arg instanceof Uint8Array;
            if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(abiParameterType)) return Array.isArray(arg) && arg.every((x)=>$077a864ec31a8b9f$var$isArgOfType(x, {
                    ...abiParameter,
                    type: abiParameterType.replace(/(\[[0-9]{0,}\])$/, "")
                }));
            return false;
    }
}
// src/utils/logger.ts
function $077a864ec31a8b9f$var$logWarn(message) {
    $077a864ec31a8b9f$export$6bb76d6eba7e258c()?.config.logger?.warn?.(message);
}
function $077a864ec31a8b9f$export$a0bbd5c736665f69(config) {
    try {
        const minimizedAbi = config.abi.filter((x)=>x.type === "function" && x.name === config.functionName);
        if (minimizedAbi.length === 0) throw new Error("Invalid ABI");
        return minimizedAbi;
    } catch (error) {
        const abi = (0, $3aa399cc1f518df0$exports.Contract).getInterface(config.abi).format((0, $924b12823ef5c5c6$exports.FormatTypes).full);
        const minimizedInterface = Array.isArray(abi) ? abi : [
            abi
        ];
        return minimizedInterface.filter((i)=>i.includes(config.functionName));
    }
}
// src/utils/normalizeChainId.ts
function $077a864ec31a8b9f$export$723927690c88894d(chainId) {
    if (typeof chainId === "string") return Number.parseInt(chainId, chainId.trim().substring(0, 2) === "0x" ? 16 : 10);
    if (typeof chainId === "bigint") return Number(chainId);
    return chainId;
}
function $077a864ec31a8b9f$var$isPlainArray(value) {
    return Array.isArray(value) && Object.keys(value).length === value.length;
}
function $077a864ec31a8b9f$export$e8e3478487aa8ce4({ abi: abi , data: data , functionName: functionName  }) {
    if (data && $077a864ec31a8b9f$var$isPlainArray(data)) {
        const iface = (0, $3aa399cc1f518df0$exports.Contract).getInterface(abi);
        const fragment = iface.getFunction(functionName);
        const isTuple = (fragment.outputs?.length || 0) > 1;
        const data_ = isTuple ? data : [
            data
        ];
        const encodedResult = iface.encodeFunctionResult(functionName, data_);
        const decodedResult = iface.decodeFunctionResult(functionName, encodedResult);
        return isTuple ? decodedResult : decodedResult[0];
    }
    return data;
}
// src/utils/serialize.ts
function $077a864ec31a8b9f$var$getReferenceKey(keys, cutoff) {
    return keys.slice(0, cutoff).join(".") || ".";
}
function $077a864ec31a8b9f$var$getCutoff(array, value) {
    const { length: length  } = array;
    for(let index = 0; index < length; ++index){
        if (array[index] === value) return index + 1;
    }
    return 0;
}
function $077a864ec31a8b9f$var$createReplacer(replacer, circularReplacer) {
    const hasReplacer = typeof replacer === "function";
    const hasCircularReplacer = typeof circularReplacer === "function";
    const cache = [];
    const keys = [];
    return function replace(key, value) {
        if (typeof value === "object") {
            if (cache.length) {
                const thisCutoff = $077a864ec31a8b9f$var$getCutoff(cache, this);
                if (thisCutoff === 0) cache[cache.length] = this;
                else {
                    cache.splice(thisCutoff);
                    keys.splice(thisCutoff);
                }
                keys[keys.length] = key;
                const valueCutoff = $077a864ec31a8b9f$var$getCutoff(cache, value);
                if (valueCutoff !== 0) return hasCircularReplacer ? circularReplacer.call(this, key, value, $077a864ec31a8b9f$var$getReferenceKey(keys, valueCutoff)) : `[ref=${$077a864ec31a8b9f$var$getReferenceKey(keys, valueCutoff)}]`;
            } else {
                cache[0] = value;
                keys[0] = key;
            }
        }
        return hasReplacer ? replacer.call(this, key, value) : value;
    };
}
function $077a864ec31a8b9f$export$dfdc1655ccc5b9cb(value, replacer, indent, circularReplacer) {
    return JSON.stringify(value, $077a864ec31a8b9f$var$createReplacer(replacer, circularReplacer), indent ?? void 0);
}
// src/storage.ts
var $077a864ec31a8b9f$export$e2ef6c4b988c05b = {
    getItem: (_key)=>"",
    setItem: (_key, _value)=>null,
    removeItem: (_key)=>null
};
function $077a864ec31a8b9f$export$d184a47a971dd4b9({ deserialize: deserialize2 = $077a864ec31a8b9f$export$efcd34ab6248d3cd , key: prefix = "wagmi" , serialize: serialize2 = $077a864ec31a8b9f$export$dfdc1655ccc5b9cb , storage: storage  }) {
    return {
        ...storage,
        getItem: (key, defaultState = null)=>{
            const value = storage.getItem(`${prefix}.${key}`);
            try {
                return value ? deserialize2(value) : defaultState;
            } catch (error) {
                console.warn(error);
                return defaultState;
            }
        },
        setItem: (key, value)=>{
            if (value === null) storage.removeItem(`${prefix}.${key}`);
            else try {
                storage.setItem(`${prefix}.${key}`, serialize2(value));
            } catch (err) {
                console.error(err);
            }
        },
        removeItem: (key)=>storage.removeItem(`${prefix}.${key}`)
    };
}
// src/client.ts
var $077a864ec31a8b9f$var$storeKey = "store";
var $077a864ec31a8b9f$var$_isAutoConnecting, $077a864ec31a8b9f$var$_lastUsedConnector, $077a864ec31a8b9f$var$_addEffects, $077a864ec31a8b9f$var$addEffects_fn;
var $077a864ec31a8b9f$export$1f2bb630327ac4b6 = class {
    constructor({ autoConnect: autoConnect = false , connectors: connectors = [
        new (0, $f003855f652c299a$export$2180bbd5f43a00b6)()
    ] , provider: provider , storage: storage = $077a864ec31a8b9f$export$d184a47a971dd4b9({
        storage: typeof window !== "undefined" ? window.localStorage : $077a864ec31a8b9f$export$e2ef6c4b988c05b
    }) , logger: logger = {
        warn: console.warn
    } , webSocketProvider: webSocketProvider  }){
        (0, $97a37cc616d6f601$export$addf369becd23283)(this, $077a864ec31a8b9f$var$_addEffects);
        this.providers = /* @__PURE__ */ new Map();
        this.webSocketProviders = /* @__PURE__ */ new Map();
        (0, $97a37cc616d6f601$export$addf369becd23283)(this, $077a864ec31a8b9f$var$_isAutoConnecting, void 0);
        (0, $97a37cc616d6f601$export$addf369becd23283)(this, $077a864ec31a8b9f$var$_lastUsedConnector, void 0);
        this.config = {
            autoConnect: autoConnect,
            connectors: connectors,
            logger: logger,
            provider: provider,
            storage: storage,
            webSocketProvider: webSocketProvider
        };
        let status = "disconnected";
        let chainId;
        if (autoConnect) try {
            const rawState = storage.getItem($077a864ec31a8b9f$var$storeKey);
            const data = rawState?.state?.data;
            status = data?.account ? "reconnecting" : "connecting";
            chainId = data?.chain?.id;
        } catch (_error) {}
        this.store = (0, $2f8ffd273cfc2a84$exports.createStore)((0, $21f6412ad5aed519$export$5c593627aef9f076)((0, $21f6412ad5aed519$export$9a6132153fba2e0)(()=>({
                connectors: typeof connectors === "function" ? connectors() : connectors,
                provider: this.getProvider({
                    chainId: chainId
                }),
                status: status,
                webSocketProvider: this.getWebSocketProvider({
                    chainId: chainId
                })
            }), {
            name: $077a864ec31a8b9f$var$storeKey,
            storage: storage,
            partialize: (state)=>({
                    ...autoConnect && {
                        data: {
                            account: state?.data?.account,
                            chain: state?.data?.chain
                        }
                    },
                    chains: state?.chains
                }),
            version: 2
        })));
        this.storage = storage;
        (0, $97a37cc616d6f601$export$42432efe6614d3b4)(this, $077a864ec31a8b9f$var$_lastUsedConnector, storage?.getItem("wallet"));
        (0, $97a37cc616d6f601$export$fa92d15b718fce20)(this, $077a864ec31a8b9f$var$_addEffects, $077a864ec31a8b9f$var$addEffects_fn).call(this);
        if (autoConnect && typeof window !== "undefined") setTimeout(async ()=>await this.autoConnect(), 0);
    }
    get chains() {
        return this.store.getState().chains;
    }
    get connectors() {
        return this.store.getState().connectors;
    }
    get connector() {
        return this.store.getState().connector;
    }
    get data() {
        return this.store.getState().data;
    }
    get error() {
        return this.store.getState().error;
    }
    get lastUsedChainId() {
        return this.data?.chain?.id;
    }
    get provider() {
        return this.store.getState().provider;
    }
    get status() {
        return this.store.getState().status;
    }
    get subscribe() {
        return this.store.subscribe;
    }
    get webSocketProvider() {
        return this.store.getState().webSocketProvider;
    }
    setState(updater) {
        const newState = typeof updater === "function" ? updater(this.store.getState()) : updater;
        this.store.setState(newState, true);
    }
    clearState() {
        this.setState((x)=>({
                ...x,
                chains: void 0,
                connector: void 0,
                data: void 0,
                error: void 0,
                status: "disconnected"
            }));
    }
    async destroy() {
        if (this.connector) await this.connector.disconnect?.();
        (0, $97a37cc616d6f601$export$42432efe6614d3b4)(this, $077a864ec31a8b9f$var$_isAutoConnecting, false);
        this.clearState();
        this.store.destroy();
    }
    async autoConnect() {
        if ((0, $97a37cc616d6f601$export$18a094aefa070634)(this, $077a864ec31a8b9f$var$_isAutoConnecting)) return;
        (0, $97a37cc616d6f601$export$42432efe6614d3b4)(this, $077a864ec31a8b9f$var$_isAutoConnecting, true);
        this.setState((x)=>({
                ...x,
                status: x.data?.account ? "reconnecting" : "connecting"
            }));
        const sorted = (0, $97a37cc616d6f601$export$18a094aefa070634)(this, $077a864ec31a8b9f$var$_lastUsedConnector) ? [
            ...this.connectors
        ].sort((x)=>x.id === (0, $97a37cc616d6f601$export$18a094aefa070634)(this, $077a864ec31a8b9f$var$_lastUsedConnector) ? -1 : 1) : this.connectors;
        let connected = false;
        for (const connector of sorted){
            if (!connector.ready || !connector.isAuthorized) continue;
            const isAuthorized = await connector.isAuthorized();
            if (!isAuthorized) continue;
            const data = await connector.connect();
            this.setState((x)=>({
                    ...x,
                    connector: connector,
                    chains: connector?.chains,
                    data: data,
                    status: "connected"
                }));
            connected = true;
            break;
        }
        if (!connected) this.setState((x)=>({
                ...x,
                data: void 0,
                status: "disconnected"
            }));
        (0, $97a37cc616d6f601$export$42432efe6614d3b4)(this, $077a864ec31a8b9f$var$_isAutoConnecting, false);
        return this.data;
    }
    getProvider({ bust: bust , chainId: chainId  } = {}) {
        let provider_ = this.providers.get(chainId ?? -1);
        if (provider_ && !bust) return provider_;
        const { provider: provider  } = this.config;
        provider_ = typeof provider === "function" ? provider({
            chainId: chainId
        }) : provider;
        this.providers.set(chainId ?? -1, provider_);
        return provider_;
    }
    getWebSocketProvider({ bust: bust , chainId: chainId  } = {}) {
        let webSocketProvider_ = this.webSocketProviders.get(chainId ?? -1);
        if (webSocketProvider_ && !bust) return webSocketProvider_;
        const { webSocketProvider: webSocketProvider  } = this.config;
        webSocketProvider_ = typeof webSocketProvider === "function" ? webSocketProvider({
            chainId: chainId
        }) : webSocketProvider;
        if (webSocketProvider_) this.webSocketProviders.set(chainId ?? -1, webSocketProvider_);
        return webSocketProvider_;
    }
    setLastUsedConnector(lastUsedConnector = null) {
        this.storage?.setItem("wallet", lastUsedConnector);
    }
};
$077a864ec31a8b9f$var$_isAutoConnecting = new WeakMap();
$077a864ec31a8b9f$var$_lastUsedConnector = new WeakMap();
$077a864ec31a8b9f$var$_addEffects = new WeakSet();
$077a864ec31a8b9f$var$addEffects_fn = function() {
    const onChange = (data)=>{
        this.setState((x)=>({
                ...x,
                data: {
                    ...x.data,
                    ...data
                }
            }));
    };
    const onDisconnect = ()=>{
        this.clearState();
    };
    const onError = (error)=>{
        this.setState((x)=>({
                ...x,
                error: error
            }));
    };
    this.store.subscribe(({ connector: connector  })=>connector, (connector, prevConnector)=>{
        prevConnector?.off?.("change", onChange);
        prevConnector?.off?.("disconnect", onDisconnect);
        prevConnector?.off?.("error", onError);
        if (!connector) return;
        connector.on?.("change", onChange);
        connector.on?.("disconnect", onDisconnect);
        connector.on?.("error", onError);
    });
    const { provider: provider , webSocketProvider: webSocketProvider  } = this.config;
    const subscribeProvider = typeof provider === "function";
    const subscribeWebSocketProvider = typeof webSocketProvider === "function";
    if (subscribeProvider || subscribeWebSocketProvider) this.store.subscribe(({ data: data  })=>data?.chain?.id, (chainId)=>{
        this.setState((x)=>({
                ...x,
                provider: this.getProvider({
                    bust: true,
                    chainId: chainId
                }),
                webSocketProvider: this.getWebSocketProvider({
                    bust: true,
                    chainId: chainId
                })
            }));
    });
};
var $077a864ec31a8b9f$var$client;
function $077a864ec31a8b9f$export$5d730b7aed1a3eb0(config) {
    const client_ = new $077a864ec31a8b9f$export$1f2bb630327ac4b6(config);
    $077a864ec31a8b9f$var$client = client_;
    return client_;
}
function $077a864ec31a8b9f$export$6bb76d6eba7e258c() {
    if (!$077a864ec31a8b9f$var$client) throw new Error("No wagmi client found. Ensure you have set up a client: https://wagmi.sh/react/client");
    return $077a864ec31a8b9f$var$client;
}
// src/actions/accounts/connect.ts
async function $077a864ec31a8b9f$export$64605811ab45167f({ chainId: chainId , connector: connector  }) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const activeConnector = client2.connector;
    if (activeConnector && connector.id === activeConnector.id) throw new $077a864ec31a8b9f$export$ee7f4e50316bc4b2();
    try {
        client2.setState((x)=>({
                ...x,
                status: "connecting"
            }));
        const data = await connector.connect({
            chainId: chainId
        });
        client2.setLastUsedConnector(connector.id);
        client2.setState((x)=>({
                ...x,
                connector: connector,
                chains: connector?.chains,
                data: data,
                status: "connected"
            }));
        client2.storage.setItem("connected", true);
        return {
            ...data,
            connector: connector
        };
    } catch (err) {
        client2.setState((x)=>{
            return {
                ...x,
                status: x.connector ? "connected" : "disconnected"
            };
        });
        throw err;
    }
}
// src/actions/accounts/disconnect.ts
async function $077a864ec31a8b9f$export$37dfea93db2e14ed() {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    if (client2.connector) await client2.connector.disconnect();
    client2.clearState();
    client2.storage.removeItem("connected");
}
// src/constants/abis.ts
var $077a864ec31a8b9f$export$e125cdc2a458cf13 = [
    {
        type: "event",
        name: "Approval",
        inputs: [
            {
                indexed: true,
                name: "owner",
                type: "address"
            },
            {
                indexed: true,
                name: "spender",
                type: "address"
            },
            {
                indexed: false,
                name: "value",
                type: "uint256"
            }
        ]
    },
    {
        type: "event",
        name: "Transfer",
        inputs: [
            {
                indexed: true,
                name: "from",
                type: "address"
            },
            {
                indexed: true,
                name: "to",
                type: "address"
            },
            {
                indexed: false,
                name: "value",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "allowance",
        stateMutability: "view",
        inputs: [
            {
                name: "owner",
                type: "address"
            },
            {
                name: "spender",
                type: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "approve",
        stateMutability: "nonpayable",
        inputs: [
            {
                name: "spender",
                type: "address"
            },
            {
                name: "amount",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ]
    },
    {
        type: "function",
        name: "balanceOf",
        stateMutability: "view",
        inputs: [
            {
                name: "account",
                type: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "decimals",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint8"
            }
        ]
    },
    {
        type: "function",
        name: "name",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string"
            }
        ]
    },
    {
        type: "function",
        name: "symbol",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string"
            }
        ]
    },
    {
        type: "function",
        name: "totalSupply",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "transfer",
        stateMutability: "nonpayable",
        inputs: [
            {
                name: "recipient",
                type: "address"
            },
            {
                name: "amount",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ]
    },
    {
        type: "function",
        name: "transferFrom",
        stateMutability: "nonpayable",
        inputs: [
            {
                name: "sender",
                type: "address"
            },
            {
                name: "recipient",
                type: "address"
            },
            {
                name: "amount",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ]
    }
];
var $077a864ec31a8b9f$var$erc20ABI_bytes32 = [
    {
        type: "event",
        name: "Approval",
        inputs: [
            {
                indexed: true,
                name: "owner",
                type: "address"
            },
            {
                indexed: true,
                name: "spender",
                type: "address"
            },
            {
                indexed: false,
                name: "value",
                type: "uint256"
            }
        ]
    },
    {
        type: "event",
        name: "Transfer",
        inputs: [
            {
                indexed: true,
                name: "from",
                type: "address"
            },
            {
                indexed: true,
                name: "to",
                type: "address"
            },
            {
                indexed: false,
                name: "value",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "allowance",
        stateMutability: "view",
        inputs: [
            {
                name: "owner",
                type: "address"
            },
            {
                name: "spender",
                type: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "approve",
        stateMutability: "nonpayable",
        inputs: [
            {
                name: "spender",
                type: "address"
            },
            {
                name: "amount",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ]
    },
    {
        type: "function",
        name: "balanceOf",
        stateMutability: "view",
        inputs: [
            {
                name: "account",
                type: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "decimals",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint8"
            }
        ]
    },
    {
        type: "function",
        name: "name",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32"
            }
        ]
    },
    {
        type: "function",
        name: "symbol",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32"
            }
        ]
    },
    {
        type: "function",
        name: "totalSupply",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "transfer",
        stateMutability: "nonpayable",
        inputs: [
            {
                name: "recipient",
                type: "address"
            },
            {
                name: "amount",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ]
    },
    {
        type: "function",
        name: "transferFrom",
        stateMutability: "nonpayable",
        inputs: [
            {
                name: "sender",
                type: "address"
            },
            {
                name: "recipient",
                type: "address"
            },
            {
                name: "amount",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ]
    }
];
var $077a864ec31a8b9f$export$80635f232ed87264 = [
    {
        type: "event",
        name: "Approval",
        inputs: [
            {
                indexed: true,
                name: "owner",
                type: "address"
            },
            {
                indexed: true,
                name: "spender",
                type: "address"
            },
            {
                indexed: true,
                name: "tokenId",
                type: "uint256"
            }
        ]
    },
    {
        type: "event",
        name: "ApprovalForAll",
        inputs: [
            {
                indexed: true,
                name: "owner",
                type: "address"
            },
            {
                indexed: true,
                name: "operator",
                type: "address"
            },
            {
                indexed: false,
                name: "approved",
                type: "bool"
            }
        ]
    },
    {
        type: "event",
        name: "Transfer",
        inputs: [
            {
                indexed: true,
                name: "from",
                type: "address"
            },
            {
                indexed: true,
                name: "to",
                type: "address"
            },
            {
                indexed: true,
                name: "tokenId",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "approve",
        stateMutability: "payable",
        inputs: [
            {
                name: "spender",
                type: "address"
            },
            {
                name: "tokenId",
                type: "uint256"
            }
        ],
        outputs: []
    },
    {
        type: "function",
        name: "balanceOf",
        stateMutability: "view",
        inputs: [
            {
                name: "account",
                type: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "getApproved",
        stateMutability: "view",
        inputs: [
            {
                name: "tokenId",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "address"
            }
        ]
    },
    {
        type: "function",
        name: "isApprovedForAll",
        stateMutability: "view",
        inputs: [
            {
                name: "owner",
                type: "address"
            },
            {
                name: "operator",
                type: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ]
    },
    {
        type: "function",
        name: "name",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string"
            }
        ]
    },
    {
        type: "function",
        name: "ownerOf",
        stateMutability: "view",
        inputs: [
            {
                name: "tokenId",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "owner",
                type: "address"
            }
        ]
    },
    {
        type: "function",
        name: "safeTransferFrom",
        stateMutability: "payable",
        inputs: [
            {
                name: "from",
                type: "address"
            },
            {
                name: "to",
                type: "address"
            },
            {
                name: "tokenId",
                type: "uint256"
            }
        ],
        outputs: []
    },
    {
        type: "function",
        name: "safeTransferFrom",
        stateMutability: "nonpayable",
        inputs: [
            {
                name: "from",
                type: "address"
            },
            {
                name: "to",
                type: "address"
            },
            {
                name: "id",
                type: "uint256"
            },
            {
                name: "data",
                type: "bytes"
            }
        ],
        outputs: []
    },
    {
        type: "function",
        name: "setApprovalForAll",
        stateMutability: "nonpayable",
        inputs: [
            {
                name: "operator",
                type: "address"
            },
            {
                name: "approved",
                type: "bool"
            }
        ],
        outputs: []
    },
    {
        type: "function",
        name: "symbol",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string"
            }
        ]
    },
    {
        type: "function",
        name: "tokenByIndex",
        stateMutability: "view",
        inputs: [
            {
                name: "index",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "tokenByIndex",
        stateMutability: "view",
        inputs: [
            {
                name: "owner",
                type: "address"
            },
            {
                name: "index",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "tokenId",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "tokenURI",
        stateMutability: "view",
        inputs: [
            {
                name: "tokenId",
                type: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "string"
            }
        ]
    },
    {
        type: "function",
        name: "totalSupply",
        stateMutability: "view",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ]
    },
    {
        type: "function",
        name: "transferFrom",
        stateMutability: "payable",
        inputs: [
            {
                name: "sender",
                type: "address"
            },
            {
                name: "recipient",
                type: "address"
            },
            {
                name: "tokeId",
                type: "uint256"
            }
        ],
        outputs: []
    }
];
var $077a864ec31a8b9f$var$multicallABI = [
    {
        inputs: [
            {
                components: [
                    {
                        name: "target",
                        type: "address"
                    },
                    {
                        name: "allowFailure",
                        type: "bool"
                    },
                    {
                        name: "callData",
                        type: "bytes"
                    }
                ],
                name: "calls",
                type: "tuple[]"
            }
        ],
        name: "aggregate3",
        outputs: [
            {
                components: [
                    {
                        name: "success",
                        type: "bool"
                    },
                    {
                        name: "returnData",
                        type: "bytes"
                    }
                ],
                name: "returnData",
                type: "tuple[]"
            }
        ],
        stateMutability: "view",
        type: "function"
    }
];
var $077a864ec31a8b9f$export$38e012dcae9fde42 = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "owner",
                type: "address"
            },
            {
                indexed: true,
                name: "spender",
                type: "address"
            },
            {
                indexed: false,
                name: "value",
                type: "uint256"
            }
        ],
        name: "Approval",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "sender",
                type: "address"
            },
            {
                indexed: true,
                name: "receiver",
                type: "address"
            },
            {
                indexed: false,
                name: "assets",
                type: "uint256"
            },
            {
                indexed: false,
                name: "shares",
                type: "uint256"
            }
        ],
        name: "Deposit",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "from",
                type: "address"
            },
            {
                indexed: true,
                name: "to",
                type: "address"
            },
            {
                indexed: false,
                name: "value",
                type: "uint256"
            }
        ],
        name: "Transfer",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: "sender",
                type: "address"
            },
            {
                indexed: true,
                name: "receiver",
                type: "address"
            },
            {
                indexed: true,
                name: "owner",
                type: "address"
            },
            {
                indexed: false,
                name: "assets",
                type: "uint256"
            },
            {
                indexed: false,
                name: "shares",
                type: "uint256"
            }
        ],
        name: "Withdraw",
        type: "event"
    },
    {
        inputs: [
            {
                name: "owner",
                type: "address"
            },
            {
                name: "spender",
                type: "address"
            }
        ],
        name: "allowance",
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "spender",
                type: "address"
            },
            {
                name: "amount",
                type: "uint256"
            }
        ],
        name: "approve",
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "asset",
        outputs: [
            {
                name: "assetTokenAddress",
                type: "address"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "account",
                type: "address"
            }
        ],
        name: "balanceOf",
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "shares",
                type: "uint256"
            }
        ],
        name: "convertToAssets",
        outputs: [
            {
                name: "assets",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "assets",
                type: "uint256"
            }
        ],
        name: "convertToShares",
        outputs: [
            {
                name: "shares",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "assets",
                type: "uint256"
            },
            {
                name: "receiver",
                type: "address"
            }
        ],
        name: "deposit",
        outputs: [
            {
                name: "shares",
                type: "uint256"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                name: "caller",
                type: "address"
            }
        ],
        name: "maxDeposit",
        outputs: [
            {
                name: "maxAssets",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "caller",
                type: "address"
            }
        ],
        name: "maxMint",
        outputs: [
            {
                name: "maxShares",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "owner",
                type: "address"
            }
        ],
        name: "maxRedeem",
        outputs: [
            {
                name: "maxShares",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "owner",
                type: "address"
            }
        ],
        name: "maxWithdraw",
        outputs: [
            {
                name: "maxAssets",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "shares",
                type: "uint256"
            },
            {
                name: "receiver",
                type: "address"
            }
        ],
        name: "mint",
        outputs: [
            {
                name: "assets",
                type: "uint256"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                name: "assets",
                type: "uint256"
            }
        ],
        name: "previewDeposit",
        outputs: [
            {
                name: "shares",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "shares",
                type: "uint256"
            }
        ],
        name: "previewMint",
        outputs: [
            {
                name: "assets",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "shares",
                type: "uint256"
            }
        ],
        name: "previewRedeem",
        outputs: [
            {
                name: "assets",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "assets",
                type: "uint256"
            }
        ],
        name: "previewWithdraw",
        outputs: [
            {
                name: "shares",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "shares",
                type: "uint256"
            },
            {
                name: "receiver",
                type: "address"
            },
            {
                name: "owner",
                type: "address"
            }
        ],
        name: "redeem",
        outputs: [
            {
                name: "assets",
                type: "uint256"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "totalAssets",
        outputs: [
            {
                name: "totalManagedAssets",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                name: "to",
                type: "address"
            },
            {
                name: "amount",
                type: "uint256"
            }
        ],
        name: "transfer",
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                name: "from",
                type: "address"
            },
            {
                name: "to",
                type: "address"
            },
            {
                name: "amount",
                type: "uint256"
            }
        ],
        name: "transferFrom",
        outputs: [
            {
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                name: "assets",
                type: "uint256"
            },
            {
                name: "receiver",
                type: "address"
            },
            {
                name: "owner",
                type: "address"
            }
        ],
        name: "withdraw",
        outputs: [
            {
                name: "shares",
                type: "uint256"
            }
        ],
        stateMutability: "nonpayable",
        type: "function"
    }
];
// src/constants/units.ts
var $077a864ec31a8b9f$export$fe0319385f0cf5a7 = [
    "wei",
    "kwei",
    "mwei",
    "gwei",
    "szabo",
    "finney",
    "ether"
];
async function $077a864ec31a8b9f$export$77ad5286853a8a58({ address: address , chainId: chainId , formatUnits: units2 = "ether"  }) {
    async function fetchToken_({ abi: abi  }) {
        const erc20Config = {
            address: address,
            abi: abi,
            chainId: chainId
        };
        const [decimals, name, symbol, totalSupply] = await $077a864ec31a8b9f$export$aa7cd72d27ce4a5({
            allowFailure: false,
            contracts: [
                {
                    ...erc20Config,
                    functionName: "decimals"
                },
                {
                    ...erc20Config,
                    functionName: "name"
                },
                {
                    ...erc20Config,
                    functionName: "symbol"
                },
                {
                    ...erc20Config,
                    functionName: "totalSupply"
                }
            ]
        });
        return {
            address: address,
            decimals: decimals,
            name: name,
            symbol: symbol,
            totalSupply: {
                formatted: (0, $924b12823ef5c5c6$exports.formatUnits)(totalSupply, units2),
                value: totalSupply
            }
        };
    }
    try {
        return await fetchToken_({
            abi: $077a864ec31a8b9f$export$e125cdc2a458cf13
        });
    } catch (err) {
        if (err instanceof $077a864ec31a8b9f$export$81d9f3b53467518b) {
            const { name: name , symbol: symbol , ...rest } = await fetchToken_({
                abi: $077a864ec31a8b9f$var$erc20ABI_bytes32
            });
            return {
                name: (0, $924b12823ef5c5c6$exports.parseBytes32String)(name),
                symbol: (0, $924b12823ef5c5c6$exports.parseBytes32String)(symbol),
                ...rest
            };
        }
        throw err;
    }
}
function $077a864ec31a8b9f$export$f518c38144e1f9d({ address: address , abi: abi , signerOrProvider: signerOrProvider  }) {
    return new (0, $3aa399cc1f518df0$exports.Contract)(address, abi, signerOrProvider);
}
// src/actions/contracts/prepareWriteContract.ts
async function $077a864ec31a8b9f$export$ab65f0e23fdc55ec({ abi: abi , address: address , chainId: chainId , functionName: functionName , overrides: overrides , signer: signer_ , ...config }) {
    const signer = signer_ ?? await $077a864ec31a8b9f$export$581bb572bc1301ca({
        chainId: chainId
    });
    if (!signer) throw new $077a864ec31a8b9f$export$9f8a797207d6544e();
    if (chainId) $077a864ec31a8b9f$var$assertActiveChain({
        chainId: chainId,
        signer: signer
    });
    const contract = $077a864ec31a8b9f$export$f518c38144e1f9d({
        address: address,
        abi: abi,
        signerOrProvider: signer
    });
    const args = config.args;
    const normalizedFunctionName = $077a864ec31a8b9f$var$normalizeFunctionName({
        contract: contract,
        functionName: functionName,
        args: args
    });
    const populateTransactionFn = contract.populateTransaction[normalizedFunctionName];
    if (!populateTransactionFn) throw new $077a864ec31a8b9f$export$edcb331eb5463f4c({
        address: address,
        functionName: normalizedFunctionName
    });
    const params = [
        ...args ?? [],
        ...overrides ? [
            overrides
        ] : []
    ];
    const unsignedTransaction = await populateTransactionFn(...params);
    const gasLimit = unsignedTransaction.gasLimit || await signer.estimateGas(unsignedTransaction);
    const minimizedAbi = $077a864ec31a8b9f$export$a0bbd5c736665f69({
        abi: abi,
        functionName: functionName
    });
    return {
        abi: minimizedAbi,
        address: address,
        chainId: chainId,
        functionName: functionName,
        mode: "prepared",
        request: {
            ...unsignedTransaction,
            gasLimit: gasLimit
        }
    };
}
// src/actions/providers/getProvider.ts
function $077a864ec31a8b9f$export$57632def5536cb24({ chainId: chainId  } = {}) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    if (chainId) return client2.getProvider({
        chainId: chainId
    }) || client2.provider;
    return client2.provider;
}
// src/actions/providers/getWebSocketProvider.ts
function $077a864ec31a8b9f$export$faa8f0f961e14522({ chainId: chainId  } = {}) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    if (chainId) return client2.getWebSocketProvider({
        chainId: chainId
    }) || client2.webSocketProvider;
    return client2.webSocketProvider;
}
// src/actions/providers/watchProvider.ts
function $077a864ec31a8b9f$export$6045b1b4b24d1696(args, callback) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const handleChange = async ()=>callback($077a864ec31a8b9f$export$57632def5536cb24(args));
    const unsubscribe = client2.subscribe(({ provider: provider  })=>provider, handleChange);
    return unsubscribe;
}
// src/actions/providers/watchWebSocketProvider.ts
function $077a864ec31a8b9f$export$39ba40d8d6c7f031(args, callback) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const handleChange = async ()=>callback($077a864ec31a8b9f$export$faa8f0f961e14522(args));
    const unsubscribe = client2.subscribe(({ webSocketProvider: webSocketProvider  })=>webSocketProvider, handleChange);
    return unsubscribe;
}
// src/actions/contracts/multicall.ts
async function $077a864ec31a8b9f$export$60ef70589ee4f7ad({ allowFailure: allowFailure = true , chainId: chainId , contracts: contracts , overrides: overrides  }) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    if (!provider.chains) throw new $077a864ec31a8b9f$export$b1f61c2f8bd1b2f4();
    const chain = provider.chains.find((chain2)=>chain2.id === chainId) || provider.chains[0];
    if (!chain) throw new $077a864ec31a8b9f$export$b1f61c2f8bd1b2f4();
    if (!chain?.contracts?.multicall3) throw new $077a864ec31a8b9f$export$45fb250c857644fc({
        chain: chain
    });
    if (typeof overrides?.blockTag === "number" && overrides?.blockTag < (chain.contracts.multicall3.blockCreated ?? 0)) throw new $077a864ec31a8b9f$export$45fb250c857644fc({
        blockNumber: overrides?.blockTag,
        chain: chain
    });
    const multicallContract = $077a864ec31a8b9f$export$f518c38144e1f9d({
        address: chain.contracts.multicall3.address,
        abi: $077a864ec31a8b9f$var$multicallABI,
        signerOrProvider: provider
    });
    const calls = contracts.map(({ address: address , abi: abi , functionName: functionName , ...config })=>{
        const { args: args  } = config || {};
        const contract = $077a864ec31a8b9f$export$f518c38144e1f9d({
            address: address,
            abi: abi
        });
        const params2 = args ?? [];
        const normalizedFunctionName = $077a864ec31a8b9f$var$normalizeFunctionName({
            contract: contract,
            functionName: functionName,
            args: args
        });
        try {
            const contractFunction = contract[normalizedFunctionName];
            if (!contractFunction) $077a864ec31a8b9f$var$logWarn(`"${normalizedFunctionName}" is not in the interface for contract "${address}"`);
            const callData = contract.interface.encodeFunctionData(normalizedFunctionName, params2);
            return {
                target: address,
                allowFailure: allowFailure,
                callData: callData
            };
        } catch (err) {
            if (!allowFailure) throw err;
            return {
                target: address,
                allowFailure: allowFailure,
                callData: "0x"
            };
        }
    });
    const params = [
        calls,
        ...overrides ? [
            overrides
        ] : []
    ];
    const results = await multicallContract.aggregate3(...params);
    return results.map(({ returnData: returnData , success: success  }, i)=>{
        const { address: address , abi: abi , functionName: functionName , ...rest } = contracts[i];
        const contract = $077a864ec31a8b9f$export$f518c38144e1f9d({
            address: address,
            abi: abi
        });
        const args = rest.args;
        const normalizedFunctionName = $077a864ec31a8b9f$var$normalizeFunctionName({
            contract: contract,
            functionName: functionName,
            args: args
        });
        if (!success) {
            let error;
            try {
                contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);
            } catch (err) {
                error = new $077a864ec31a8b9f$export$e090a770d7b2b1c2({
                    address: address,
                    args: args,
                    chainId: chain.id,
                    functionName: normalizedFunctionName,
                    errorMessage: err.message
                });
                if (!allowFailure) throw error;
                $077a864ec31a8b9f$var$logWarn(error.message);
            }
            return null;
        }
        if (returnData === "0x") {
            const error = new $077a864ec31a8b9f$export$3ce8699a484e7361({
                address: address,
                args: args,
                chainId: chain.id,
                functionName: normalizedFunctionName
            });
            if (!allowFailure) throw error;
            $077a864ec31a8b9f$var$logWarn(error.message);
            return null;
        }
        try {
            const result = contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);
            return Array.isArray(result) && result.length === 1 ? result[0] : result;
        } catch (err) {
            const error = new $077a864ec31a8b9f$export$81d9f3b53467518b({
                address: address,
                args: args,
                chainId: chain.id,
                functionName: normalizedFunctionName,
                errorMessage: err.message
            });
            if (!allowFailure) throw error;
            $077a864ec31a8b9f$var$logWarn(error.message);
            return null;
        }
    });
}
// src/actions/contracts/readContract.ts
async function $077a864ec31a8b9f$export$43af7de392176737({ address: address , chainId: chainId , abi: abi , functionName: functionName , overrides: overrides , ...config }) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    const contract = $077a864ec31a8b9f$export$f518c38144e1f9d({
        address: address,
        abi: abi,
        signerOrProvider: provider
    });
    const args = config.args;
    const normalizedFunctionName = $077a864ec31a8b9f$var$normalizeFunctionName({
        contract: contract,
        functionName: functionName,
        args: args
    });
    const contractFunction = contract[normalizedFunctionName];
    if (!contractFunction) throw new $077a864ec31a8b9f$export$edcb331eb5463f4c({
        address: address,
        functionName: normalizedFunctionName
    });
    const params = [
        ...args ?? [],
        ...overrides ? [
            overrides
        ] : []
    ];
    return contractFunction?.(...params);
}
// src/actions/contracts/readContracts.ts
async function $077a864ec31a8b9f$export$aa7cd72d27ce4a5({ allowFailure: allowFailure = true , contracts: contracts , overrides: overrides  }) {
    try {
        const provider = $077a864ec31a8b9f$export$57632def5536cb24();
        const contractsByChainId = contracts.reduce((contracts2, contract, index)=>{
            const chainId = contract.chainId ?? provider.network.chainId;
            return {
                ...contracts2,
                [chainId]: [
                    ...contracts2[chainId] || [],
                    {
                        contract: contract,
                        index: index
                    }
                ]
            };
        }, {});
        const promises = ()=>Object.entries(contractsByChainId).map(([chainId, contracts2])=>$077a864ec31a8b9f$export$60ef70589ee4f7ad({
                    allowFailure: allowFailure,
                    chainId: parseInt(chainId),
                    contracts: contracts2.map(({ contract: contract  })=>contract),
                    overrides: overrides
                }));
        let multicallResults;
        if (allowFailure) multicallResults = (await Promise.allSettled(promises())).map((result)=>{
            if (result.status === "fulfilled") return result.value;
            if (result.reason instanceof $077a864ec31a8b9f$export$45fb250c857644fc) {
                $077a864ec31a8b9f$var$logWarn(result.reason.message);
                throw result.reason;
            }
            return null;
        }).flat();
        else multicallResults = (await Promise.all(promises())).flat();
        const resultIndexes = Object.values(contractsByChainId).map((contracts2)=>contracts2.map(({ index: index  })=>index)).flat();
        return multicallResults.reduce((results, result, index)=>{
            if (results) results[resultIndexes[index]] = result;
            return results;
        }, []);
    } catch (err) {
        if (err instanceof $077a864ec31a8b9f$export$81d9f3b53467518b) throw err;
        if (err instanceof $077a864ec31a8b9f$export$3ce8699a484e7361) throw err;
        if (err instanceof $077a864ec31a8b9f$export$e090a770d7b2b1c2) throw err;
        const promises = ()=>contracts.map((contract)=>$077a864ec31a8b9f$export$43af7de392176737({
                    ...contract,
                    overrides: overrides
                }));
        if (allowFailure) return (await Promise.allSettled(promises())).map((result, i)=>{
            if (result.status === "fulfilled") return result.value;
            const { address: address , args: args , chainId: chainId , functionName: functionName  } = contracts[i];
            const error = new $077a864ec31a8b9f$export$e090a770d7b2b1c2({
                address: address,
                functionName: functionName,
                chainId: chainId ?? 1,
                args: args,
                errorMessage: result.reason
            });
            $077a864ec31a8b9f$var$logWarn(error.message);
            return null;
        });
        return await Promise.all(promises());
    }
}
function $077a864ec31a8b9f$export$2a02a63daa2df376({ address: address , abi: abi , chainId: chainId , eventName: eventName , once: once  }, callback) {
    const handler = (...event)=>callback(...event);
    let contract;
    const watchEvent = async ()=>{
        if (contract) contract?.off(eventName, handler);
        const signerOrProvider = $077a864ec31a8b9f$export$faa8f0f961e14522({
            chainId: chainId
        }) || $077a864ec31a8b9f$export$57632def5536cb24({
            chainId: chainId
        });
        contract = $077a864ec31a8b9f$export$f518c38144e1f9d({
            address: address,
            abi: abi,
            signerOrProvider: signerOrProvider
        });
        if (once) contract.once(eventName, handler);
        else contract.on(eventName, handler);
    };
    watchEvent();
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const unsubscribe = client2.subscribe(({ provider: provider , webSocketProvider: webSocketProvider  })=>({
            provider: provider,
            webSocketProvider: webSocketProvider
        }), watchEvent, {
        equalityFn: (0, $941eb567eaa86ce0$exports.shallow)
    });
    return ()=>{
        contract?.off(eventName, handler);
        unsubscribe();
    };
}
// src/actions/network-status/fetchBlockNumber.ts
async function $077a864ec31a8b9f$export$5e1ef41dd042deee({ chainId: chainId  } = {}) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    const blockNumber = await provider.getBlockNumber();
    return blockNumber;
}
// src/actions/network-status/watchBlockNumber.ts
function $077a864ec31a8b9f$export$fc5f622dd0d82466(args, callback) {
    const debouncedCallback = $077a864ec31a8b9f$export$61fc7d43ac8f84b0(callback, 1);
    let previousProvider;
    const createListener = (provider)=>{
        if (previousProvider) previousProvider?.off("block", debouncedCallback);
        provider.on("block", debouncedCallback);
        previousProvider = provider;
    };
    const provider_ = $077a864ec31a8b9f$export$faa8f0f961e14522({
        chainId: args.chainId
    }) ?? $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: args.chainId
    });
    if (args.listen) createListener(provider_);
    let active = true;
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const unsubscribe = client2.subscribe(({ provider: provider , webSocketProvider: webSocketProvider  })=>({
            provider: provider,
            webSocketProvider: webSocketProvider
        }), async ({ provider: provider , webSocketProvider: webSocketProvider  })=>{
        const provider_2 = webSocketProvider ?? provider;
        if (args.listen && !args.chainId && provider_2) createListener(provider_2);
        const blockNumber = await $077a864ec31a8b9f$export$5e1ef41dd042deee({
            chainId: args.chainId
        });
        if (!active) return;
        callback(blockNumber);
    }, {
        equalityFn: (0, $941eb567eaa86ce0$exports.shallow)
    });
    return ()=>{
        active = false;
        unsubscribe();
        provider_?.off("block", debouncedCallback);
        previousProvider?.off("block", debouncedCallback);
    };
}
// src/actions/contracts/watchMulticall.ts
function $077a864ec31a8b9f$export$b2b4254f9e162c7d(config, callback) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const handleChange = async ()=>callback(await $077a864ec31a8b9f$export$60ef70589ee4f7ad(config));
    const unwatch = config.listenToBlock ? $077a864ec31a8b9f$export$fc5f622dd0d82466({
        listen: true
    }, handleChange) : void 0;
    const unsubscribe = client2.subscribe(({ provider: provider  })=>provider, handleChange);
    return ()=>{
        unsubscribe();
        unwatch?.();
    };
}
// src/actions/contracts/watchReadContract.ts
function $077a864ec31a8b9f$export$39dec06d9812c558(config, callback) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const handleChange = async ()=>callback(await $077a864ec31a8b9f$export$43af7de392176737(config));
    const unwatch = config.listenToBlock ? $077a864ec31a8b9f$export$fc5f622dd0d82466({
        listen: true
    }, handleChange) : void 0;
    const unsubscribe = client2.subscribe(({ provider: provider  })=>provider, handleChange);
    return ()=>{
        unsubscribe();
        unwatch?.();
    };
}
// src/actions/contracts/watchReadContracts.ts
function $077a864ec31a8b9f$export$1e626f2f185d0731(config, callback) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const handleChange = async ()=>callback(await $077a864ec31a8b9f$export$aa7cd72d27ce4a5(config));
    const unwatch = config.listenToBlock ? $077a864ec31a8b9f$export$fc5f622dd0d82466({
        listen: true
    }, handleChange) : void 0;
    const unsubscribe = client2.subscribe(({ provider: provider  })=>provider, handleChange);
    return ()=>{
        unsubscribe();
        unwatch?.();
    };
}
// src/actions/transactions/fetchTransaction.ts
async function $077a864ec31a8b9f$export$a163d2e4b7be6d57({ chainId: chainId , hash: hash  }) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    return provider.getTransaction(hash);
}
async function $077a864ec31a8b9f$export$80282c1e45096db2({ chainId: chainId , name: name  }) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    const address = await provider.resolveName(name);
    try {
        return address ? (0, $924b12823ef5c5c6$exports.getAddress)(address) : null;
    } catch (_error) {
        return null;
    }
}
// src/actions/ens/fetchEnsAvatar.ts
async function $077a864ec31a8b9f$export$30821201be6df476({ address: address , chainId: chainId  }) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    const avatar = await provider.getAvatar(address);
    return avatar;
}
async function $077a864ec31a8b9f$export$2efac71bdcb05762({ address: address , chainId: chainId  }) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    return provider.lookupAddress((0, $924b12823ef5c5c6$exports.getAddress)(address));
}
// src/actions/ens/fetchEnsResolver.ts
async function $077a864ec31a8b9f$export$4567987d5796f84a({ chainId: chainId , name: name  }) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    const resolver = await provider.getResolver(name);
    return resolver;
}
// src/actions/transactions/prepareSendTransaction.ts
async function $077a864ec31a8b9f$export$e482897ca6abba1d({ chainId: chainId , request: request , signer: signer_  }) {
    const signer = signer_ ?? await $077a864ec31a8b9f$export$581bb572bc1301ca({
        chainId: chainId
    });
    if (!signer) throw new $077a864ec31a8b9f$export$9f8a797207d6544e();
    if (chainId) $077a864ec31a8b9f$var$assertActiveChain({
        chainId: chainId,
        signer: signer
    });
    const [to, gasLimit] = await Promise.all([
        (0, $924b12823ef5c5c6$exports.isAddress)(request.to) ? Promise.resolve(request.to) : $077a864ec31a8b9f$export$80282c1e45096db2({
            name: request.to
        }),
        request.gasLimit ? Promise.resolve(request.gasLimit) : signer.estimateGas(request)
    ]);
    if (!to) throw new Error("Could not resolve ENS name");
    return {
        ...chainId ? {
            chainId: chainId
        } : {},
        request: {
            ...request,
            gasLimit: gasLimit,
            to: to
        },
        mode: "prepared"
    };
}
// src/actions/transactions/sendTransaction.ts
async function $077a864ec31a8b9f$export$8e0e7ffc78696d30({ chainId: chainId , mode: mode , request: request  }) {
    const signer = await $077a864ec31a8b9f$export$581bb572bc1301ca();
    if (!signer) throw new $077a864ec31a8b9f$export$9f8a797207d6544e();
    if (mode === "prepared") {
        if (!request.gasLimit) throw new Error("`gasLimit` is required");
        if (!request.to) throw new Error("`to` is required");
    }
    if (chainId) $077a864ec31a8b9f$var$assertActiveChain({
        chainId: chainId,
        signer: signer
    });
    try {
        const uncheckedSigner = signer.connectUnchecked?.();
        const { hash: hash , wait: wait  } = await (uncheckedSigner ?? signer).sendTransaction(request);
        return {
            hash: hash,
            wait: wait
        };
    } catch (error) {
        if (error.code === 4001 || error.code === "ACTION_REJECTED") throw new $077a864ec31a8b9f$export$4af5b080d9e9e1a6(error);
        throw error;
    }
}
async function $077a864ec31a8b9f$export$c770119f9fa11d8f({ chainId: chainId , formatUnits: units2 = "wei"  } = {}) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    const feeData = await provider.getFeeData();
    const formatted = {
        gasPrice: feeData.gasPrice ? (0, $924b12823ef5c5c6$exports.formatUnits)(feeData.gasPrice, units2) : null,
        maxFeePerGas: feeData.maxFeePerGas ? (0, $924b12823ef5c5c6$exports.formatUnits)(feeData.maxFeePerGas, units2) : null,
        maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? (0, $924b12823ef5c5c6$exports.formatUnits)(feeData.maxPriorityFeePerGas, units2) : null
    };
    return {
        ...feeData,
        formatted: formatted
    };
}
// src/actions/transactions/waitForTransaction.ts
async function $077a864ec31a8b9f$export$450f7d24b3b1a222({ chainId: chainId , confirmations: confirmations = 1 , hash: hash , onSpeedUp: onSpeedUp , timeout: timeout = 0  }) {
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    const [blockNumber, transaction] = await Promise.all([
        $077a864ec31a8b9f$export$5e1ef41dd042deee(),
        $077a864ec31a8b9f$export$a163d2e4b7be6d57({
            hash: hash
        })
    ]);
    let replaceable = null;
    if (confirmations !== 0 && transaction?.to) replaceable = {
        data: transaction.data,
        from: transaction.from,
        nonce: transaction.nonce,
        startBlock: blockNumber,
        to: transaction.to,
        value: transaction.value
    };
    try {
        const receipt = await provider._waitForTransaction(hash, confirmations, timeout, replaceable);
        if (receipt.status === 0) {
            const code = await provider.call(receipt, receipt.blockNumber);
            const reason = (0, $924b12823ef5c5c6$exports.toUtf8String)(`0x${code.substring(138)}`);
            throw new Error(reason);
        }
        return receipt;
    } catch (err) {
        if (err?.reason === "repriced") {
            onSpeedUp?.(err.replacement);
            return $077a864ec31a8b9f$export$450f7d24b3b1a222({
                hash: err.replacement?.hash,
                confirmations: confirmations,
                timeout: timeout
            });
        }
        throw err;
    }
}
function $077a864ec31a8b9f$export$223080172c87e789(args, callback) {
    let previousProvider;
    const createListener = (provider)=>{
        if (previousProvider) previousProvider?.off("pending", callback);
        provider.on("pending", callback);
        previousProvider = provider;
    };
    const provider_ = $077a864ec31a8b9f$export$faa8f0f961e14522({
        chainId: args.chainId
    }) ?? $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: args.chainId
    });
    createListener(provider_);
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const unsubscribe = client2.subscribe(({ provider: provider , webSocketProvider: webSocketProvider  })=>({
            provider: provider,
            webSocketProvider: webSocketProvider
        }), async ({ provider: provider , webSocketProvider: webSocketProvider  })=>{
        const provider_2 = webSocketProvider ?? provider;
        if (!args.chainId && provider_2) createListener(provider_2);
    }, {
        equalityFn: (0, $941eb567eaa86ce0$exports.shallow)
    });
    return ()=>{
        unsubscribe();
        provider_?.off("pending", callback);
        previousProvider?.off("pending", callback);
    };
}
// src/actions/contracts/writeContract.ts
async function $077a864ec31a8b9f$export$4c0f201bc17cbf23(config) {
    const signer = await $077a864ec31a8b9f$export$581bb572bc1301ca();
    if (!signer) throw new $077a864ec31a8b9f$export$9f8a797207d6544e();
    if (config.chainId) $077a864ec31a8b9f$var$assertActiveChain({
        chainId: config.chainId,
        signer: signer
    });
    let request;
    if (config.mode === "prepared") request = config.request;
    else request = (await $077a864ec31a8b9f$export$ab65f0e23fdc55ec({
        address: config.address,
        args: config.args,
        chainId: config.chainId,
        abi: config.abi,
        functionName: config.functionName,
        overrides: config.overrides
    })).request;
    const transaction = await $077a864ec31a8b9f$export$8e0e7ffc78696d30({
        request: request,
        mode: "prepared"
    });
    return transaction;
}
// src/actions/accounts/fetchBalance.ts
async function $077a864ec31a8b9f$export$6c801974529d037b({ address: address , chainId: chainId , formatUnits: unit , token: token  }) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const provider = $077a864ec31a8b9f$export$57632def5536cb24({
        chainId: chainId
    });
    if (token) {
        const fetchContractBalance = async ({ abi: abi  })=>{
            const erc20Config = {
                abi: abi,
                address: token,
                chainId: chainId
            };
            const [value2, decimals, symbol] = await $077a864ec31a8b9f$export$aa7cd72d27ce4a5({
                allowFailure: false,
                contracts: [
                    {
                        ...erc20Config,
                        functionName: "balanceOf",
                        args: [
                            address
                        ]
                    },
                    {
                        ...erc20Config,
                        functionName: "decimals"
                    },
                    {
                        ...erc20Config,
                        functionName: "symbol"
                    }
                ]
            });
            return {
                decimals: decimals,
                formatted: (0, $924b12823ef5c5c6$exports.formatUnits)(value2 ?? "0", unit ?? decimals),
                symbol: symbol,
                value: value2
            };
        };
        try {
            return await fetchContractBalance({
                abi: $077a864ec31a8b9f$export$e125cdc2a458cf13
            });
        } catch (err) {
            if (err instanceof $077a864ec31a8b9f$export$81d9f3b53467518b) {
                const { symbol: symbol , ...rest } = await fetchContractBalance({
                    abi: $077a864ec31a8b9f$var$erc20ABI_bytes32
                });
                return {
                    symbol: (0, $924b12823ef5c5c6$exports.parseBytes32String)(symbol),
                    ...rest
                };
            }
            throw err;
        }
    }
    const chains = [
        ...client2.provider.chains || [],
        ...client2.chains ?? []
    ];
    const value = await provider.getBalance(address);
    const chain = chains.find((x)=>x.id === provider.network.chainId);
    return {
        decimals: chain?.nativeCurrency.decimals ?? 18,
        formatted: (0, $924b12823ef5c5c6$exports.formatUnits)(value ?? "0", unit ?? "ether"),
        symbol: chain?.nativeCurrency.symbol ?? "ETH",
        value: value
    };
}
// src/actions/accounts/fetchSigner.ts
async function $077a864ec31a8b9f$export$581bb572bc1301ca({ chainId: chainId  } = {}) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const signer = await client2.connector?.getSigner?.({
        chainId: chainId
    }) || null;
    return signer;
}
// src/actions/accounts/getAccount.ts
function $077a864ec31a8b9f$export$4f9234baf34abd0() {
    const { data: data , connector: connector , status: status  } = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    switch(status){
        case "connected":
            return {
                address: data?.account,
                connector: connector,
                isConnected: true,
                isConnecting: false,
                isDisconnected: false,
                isReconnecting: false,
                status: status
            };
        case "reconnecting":
            return {
                address: data?.account,
                connector: connector,
                isConnected: !!data?.account,
                isConnecting: false,
                isDisconnected: false,
                isReconnecting: true,
                status: status
            };
        case "connecting":
            return {
                address: data?.account,
                connector: connector,
                isConnected: false,
                isConnecting: true,
                isDisconnected: false,
                isReconnecting: false,
                status: status
            };
        case "disconnected":
            return {
                address: void 0,
                connector: void 0,
                isConnected: false,
                isConnecting: false,
                isDisconnected: true,
                isReconnecting: false,
                status: status
            };
    }
}
// src/actions/accounts/getNetwork.ts
function $077a864ec31a8b9f$export$7de4970ebfd8206d() {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const chainId = client2.data?.chain?.id;
    const activeChains = client2.chains ?? [];
    const activeChain = [
        ...client2.provider.chains || [],
        ...activeChains
    ].find((x)=>x.id === chainId) ?? {
        id: chainId,
        name: `Chain ${chainId}`,
        network: `${chainId}`,
        nativeCurrency: {
            name: "Ether",
            decimals: 18,
            symbol: "ETH"
        },
        rpcUrls: {
            default: {
                http: [
                    ""
                ]
            },
            public: {
                http: [
                    ""
                ]
            }
        }
    };
    return {
        chain: chainId ? {
            ...activeChain,
            ...client2.data?.chain,
            id: chainId
        } : void 0,
        chains: activeChains
    };
}
// src/actions/accounts/signMessage.ts
async function $077a864ec31a8b9f$export$1d9a7a8a40780de(args) {
    try {
        const signer = await $077a864ec31a8b9f$export$581bb572bc1301ca();
        if (!signer) throw new $077a864ec31a8b9f$export$9f8a797207d6544e();
        return await signer.signMessage(args.message);
    } catch (error) {
        if (error.code === 4001 || error.code === "ACTION_REJECTED") throw new $077a864ec31a8b9f$export$4af5b080d9e9e1a6(error);
        throw error;
    }
}
// src/actions/accounts/signTypedData.ts
async function $077a864ec31a8b9f$export$9f05de2db4d31153({ domain: domain , types: types , value: value  }) {
    const signer = await $077a864ec31a8b9f$export$581bb572bc1301ca();
    if (!signer) throw new $077a864ec31a8b9f$export$9f8a797207d6544e();
    const { chainId: chainId_  } = domain;
    const chainId = chainId_ ? $077a864ec31a8b9f$export$723927690c88894d(chainId_) : void 0;
    if (chainId) $077a864ec31a8b9f$var$assertActiveChain({
        chainId: chainId,
        signer: signer
    });
    const types_ = Object.entries(types).filter(([key])=>key !== "EIP712Domain").reduce((types2, [key, attributes])=>{
        types2[key] = attributes.filter((attr)=>attr.type !== "EIP712Domain");
        return types2;
    }, {});
    try {
        return await signer._signTypedData(domain, types_, value);
    } catch (error) {
        if (error.code === 4001 || error.code === "ACTION_REJECTED") throw new $077a864ec31a8b9f$export$4af5b080d9e9e1a6(error);
        throw error;
    }
}
// src/actions/accounts/switchNetwork.ts
async function $077a864ec31a8b9f$export$f3473d805e486329({ chainId: chainId  }) {
    const { connector: connector  } = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    if (!connector) throw new $077a864ec31a8b9f$export$9f8a797207d6544e();
    if (!connector.switchChain) throw new $077a864ec31a8b9f$export$a4296a4b7763e5d8({
        connector: connector
    });
    return connector.switchChain(chainId);
}
function $077a864ec31a8b9f$export$30c94aeff2da2ac6(callback, { selector: selector = (x)=>x  } = {}) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const handleChange = ()=>callback($077a864ec31a8b9f$export$4f9234baf34abd0());
    const unsubscribe = client2.subscribe(({ data: data , connector: connector , status: status  })=>selector({
            address: data?.account,
            connector: connector,
            status: status
        }), handleChange, {
        equalityFn: (0, $941eb567eaa86ce0$exports.shallow)
    });
    return unsubscribe;
}
function $077a864ec31a8b9f$export$bd28046b535de99c(callback, { selector: selector = (x)=>x  } = {}) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const handleChange = ()=>callback($077a864ec31a8b9f$export$7de4970ebfd8206d());
    const unsubscribe = client2.subscribe(({ data: data , chains: chains  })=>selector({
            chainId: data?.chain?.id,
            chains: chains
        }), handleChange, {
        equalityFn: (0, $941eb567eaa86ce0$exports.shallow)
    });
    return unsubscribe;
}
function $077a864ec31a8b9f$export$882eb32cac2337ef({ chainId: chainId  }, callback) {
    const client2 = $077a864ec31a8b9f$export$6bb76d6eba7e258c();
    const handleChange = async ()=>{
        const signer = await $077a864ec31a8b9f$export$581bb572bc1301ca({
            chainId: chainId
        });
        if (!$077a864ec31a8b9f$export$6bb76d6eba7e258c().connector) return callback(null);
        return callback(signer);
    };
    const unsubscribe = client2.subscribe(({ data: data , connector: connector  })=>({
            account: data?.account,
            chainId: data?.chain?.id,
            connector: connector
        }), handleChange, {
        equalityFn: (0, $941eb567eaa86ce0$exports.shallow)
    });
    return unsubscribe;
}
// src/errors.ts
var $077a864ec31a8b9f$export$5460eff990f31920 = class extends Error {
    constructor(message, options){
        const { cause: cause , code: code , data: data  } = options;
        if (!Number.isInteger(code)) throw new Error('"code" must be an integer.');
        if (!message || typeof message !== "string") throw new Error('"message" must be a nonempty string.');
        super(message);
        this.cause = cause;
        this.code = code;
        this.data = data;
    }
};
var $077a864ec31a8b9f$export$417589b978208a8f = class extends $077a864ec31a8b9f$export$5460eff990f31920 {
    constructor(message, options){
        const { cause: cause , code: code , data: data  } = options;
        if (!(Number.isInteger(code) && code >= 1e3 && code <= 4999)) throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');
        super(message, {
            cause: cause,
            code: code,
            data: data
        });
    }
};
var $077a864ec31a8b9f$export$365d6177d9f9eb22 = class extends Error {
    constructor(){
        super(...arguments);
        this.name = "AddChainError";
        this.message = "Error adding chain";
    }
};
var $077a864ec31a8b9f$export$45fb250c857644fc = class extends Error {
    constructor({ blockNumber: blockNumber , chain: chain  }){
        super(`Chain "${chain.name}" does not support multicall${blockNumber ? ` on block ${blockNumber}` : ""}.`);
        this.name = "ChainDoesNotSupportMulticall";
    }
};
var $077a864ec31a8b9f$export$535d82255cc17992 = class extends Error {
    constructor({ activeChain: activeChain , targetChain: targetChain  }){
        super(`Chain mismatch: Expected "${targetChain}", received "${activeChain}".`);
        this.name = "ChainMismatchError";
    }
};
var $077a864ec31a8b9f$export$688e5fda4b4631ed = class extends Error {
    constructor({ chainId: chainId , connectorId: connectorId  }){
        super(`Chain "${chainId}" not configured for connector "${connectorId}".`);
        this.name = "ChainNotConfigured";
    }
};
var $077a864ec31a8b9f$export$ee7f4e50316bc4b2 = class extends Error {
    constructor(){
        super(...arguments);
        this.name = "ConnectorAlreadyConnectedError";
        this.message = "Connector already connected";
    }
};
var $077a864ec31a8b9f$export$9f8a797207d6544e = class extends Error {
    constructor(){
        super(...arguments);
        this.name = "ConnectorNotFoundError";
        this.message = "Connector not found";
    }
};
var $077a864ec31a8b9f$export$edcb331eb5463f4c = class extends Error {
    constructor({ address: address , chainId: chainId , functionName: functionName  }){
        const { chains: chains , network: network  } = $077a864ec31a8b9f$export$57632def5536cb24();
        const chain = chains?.find(({ id: id  })=>id === (chainId || network.chainId));
        const blockExplorer = chain?.blockExplorers?.default;
        super([
            `Function "${functionName}" on contract "${address}" does not exist.`,
            ...blockExplorer ? [
                "",
                `${blockExplorer?.name}: ${blockExplorer?.url}/address/${address}#readContract`
            ] : []
        ].join("\n"));
        this.name = "ContractMethodDoesNotExistError";
    }
};
var $077a864ec31a8b9f$export$3ce8699a484e7361 = class extends Error {
    constructor({ address: address , args: args , chainId: chainId , functionName: functionName  }){
        super([
            "Contract read returned an empty response. This could be due to any of the following:",
            `- The contract does not have the function "${functionName}",`,
            "- The parameters passed to the contract function may be invalid, or",
            "- The address is not a contract.",
            "",
            `Config:`,
            JSON.stringify({
                address: address,
                abi: "...",
                functionName: functionName,
                chainId: chainId,
                args: args
            }, null, 2)
        ].join("\n"));
        this.name = "ContractMethodNoResultError";
    }
};
var $077a864ec31a8b9f$export$e090a770d7b2b1c2 = class extends Error {
    constructor({ address: address , args: args , chainId: chainId , functionName: functionName , errorMessage: errorMessage  }){
        super([
            "Contract method reverted with an error.",
            "",
            `Config:`,
            JSON.stringify({
                address: address,
                abi: "...",
                functionName: functionName,
                chainId: chainId,
                args: args
            }, null, 2),
            "",
            `Details: ${errorMessage}`
        ].join("\n"));
        this.name = "ContractMethodRevertedError";
    }
};
var $077a864ec31a8b9f$export$81d9f3b53467518b = class extends Error {
    constructor({ address: address , args: args , chainId: chainId , functionName: functionName , errorMessage: errorMessage  }){
        super([
            "Failed to decode contract function result.",
            "",
            `Config:`,
            JSON.stringify({
                address: address,
                abi: "...",
                functionName: functionName,
                chainId: chainId,
                args: args
            }, null, 2),
            "",
            `Details: ${errorMessage}`
        ].join("\n"));
        this.name = "ContractResultDecodeError";
    }
};
var $077a864ec31a8b9f$export$b1f61c2f8bd1b2f4 = class extends Error {
    constructor(){
        super(...arguments);
        this.name = "ProviderChainsNotFound";
        this.message = [
            "No chains were found on the wagmi provider. Some functions that require a chain may not work.",
            "",
            "It is recommended to add a list of chains to the provider in `createClient`.",
            "",
            "Example:",
            "",
            "```",
            "import { getDefaultProvider } from 'ethers'",
            "import { chain, createClient } from 'wagmi'",
            "",
            "createClient({",
            "  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })",
            "})",
            "```"
        ].join("\n");
    }
};
var $077a864ec31a8b9f$export$5be1d42b6489eb68 = class extends $077a864ec31a8b9f$export$5460eff990f31920 {
    constructor(cause){
        super("Resource unavailable", {
            cause: cause,
            code: -32002
        });
        this.name = "ResourceUnavailable";
    }
};
var $077a864ec31a8b9f$export$d4ddb31968a9d366 = class extends $077a864ec31a8b9f$export$417589b978208a8f {
    constructor(cause){
        super("Error switching chain", {
            cause: cause,
            code: 4902
        });
        this.name = "SwitchChainError";
    }
};
var $077a864ec31a8b9f$export$a4296a4b7763e5d8 = class extends Error {
    constructor({ connector: connector  }){
        super(`"${connector.name}" does not support programmatic chain switching.`);
        this.name = "SwitchChainNotSupportedError";
    }
};
var $077a864ec31a8b9f$export$4af5b080d9e9e1a6 = class extends $077a864ec31a8b9f$export$417589b978208a8f {
    constructor(cause){
        super("User rejected request", {
            cause: cause,
            code: 4001
        });
        this.name = "UserRejectedRequestError";
    }
};




var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");

var $i3xEO = parcelRequire("i3xEO");





var $e4c34435d9a8658b$exports = {};
"use strict";

$e4c34435d9a8658b$exports = (parcelRequire("gi5BC"));





var $d4J5n = parcelRequire("d4J5n");



var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");



var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");




var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");



var $d4J5n = parcelRequire("d4J5n");



var $d4J5n = parcelRequire("d4J5n");



var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");









var $d4J5n = parcelRequire("d4J5n");



var $d4J5n = parcelRequire("d4J5n");

function $168b680515f5196a$export$5d730b7aed1a3eb0({ queryClient: queryClient = new (0, $c8591a1b68a984d4$export$405d0624ed55a03f)({
    defaultOptions: {
        queries: {
            cacheTime: 86400000,
            networkMode: "offlineFirst",
            refetchOnWindowFocus: false,
            retry: 0
        },
        mutations: {
            networkMode: "offlineFirst"
        }
    }
}) , storage: storage = (0, $077a864ec31a8b9f$export$d184a47a971dd4b9)({
    storage: typeof window !== "undefined" && window.localStorage ? window.localStorage : (0, $077a864ec31a8b9f$export$e2ef6c4b988c05b)
}) , persister: persister = typeof window !== "undefined" ? (0, $c044e69ceb4379ed$export$35561f995d4e487d)({
    key: "cache",
    storage: storage,
    serialize: (x)=>x,
    deserialize: (x)=>x
}) : void 0 , ...config }) {
    const client = (0, $077a864ec31a8b9f$export$5d730b7aed1a3eb0)({
        ...config,
        storage: storage
    });
    if (persister) (0, $6ae5885f1089e784$export$217ab42a80f50b3b)({
        queryClient: queryClient,
        persister: persister,
        dehydrateOptions: {
            shouldDehydrateQuery: (query)=>query.cacheTime !== 0 && query.queryKey[0].persist !== false
        }
    });
    return Object.assign(client, {
        queryClient: queryClient
    });
}
var $168b680515f5196a$export$841858b892ce1f4c = $d4J5n.createContext(void 0);
var $168b680515f5196a$var$queryClientContext = $d4J5n.createContext(void 0);
function $168b680515f5196a$export$c3a561dea2adc16c({ children: children , client: client  }) {
    return $d4J5n.createElement($168b680515f5196a$export$841858b892ce1f4c.Provider, {
        children: $d4J5n.createElement((0, $0d3bfacad5ad2b85$export$45604f0cc8ae667b), {
            children: children,
            client: client.queryClient,
            context: $168b680515f5196a$var$queryClientContext
        }),
        value: client
    });
}
function $168b680515f5196a$export$95f99d327bc8fbbd() {
    const client = $d4J5n.useContext($168b680515f5196a$export$841858b892ce1f4c);
    if (!client) throw new Error([
        "`useClient` must be used within `WagmiConfig`.\n",
        "Read more: https://wagmi.sh/react/WagmiConfig"
    ].join("\n"));
    return client;
}
var $168b680515f5196a$var$useSyncExternalStore2 = $i3xEO.useSyncExternalStore;
// src/hooks/utils/query/utils.ts
function $168b680515f5196a$var$isQueryKey(value) {
    return Array.isArray(value);
}
function $168b680515f5196a$var$parseQueryArgs(arg1, arg2, arg3) {
    if (!$168b680515f5196a$var$isQueryKey(arg1)) return arg1;
    if (typeof arg2 === "function") return {
        ...arg3,
        queryKey: arg1,
        queryFn: arg2
    };
    return {
        ...arg2,
        queryKey: arg1
    };
}
function $168b680515f5196a$var$shouldThrowError(_useErrorBoundary, params) {
    if (typeof _useErrorBoundary === "function") return _useErrorBoundary(...params);
    return !!_useErrorBoundary;
}
function $168b680515f5196a$var$trackResult(result, observer) {
    const trackedResult = {};
    Object.keys(result).forEach((key)=>{
        Object.defineProperty(trackedResult, key, {
            configurable: false,
            enumerable: true,
            get: ()=>{
                observer.trackedProps.add(key);
                return result[key];
            }
        });
    });
    return trackedResult;
}
// src/hooks/utils/query/useBaseQuery.ts
function $168b680515f5196a$var$useBaseQuery(options, Observer) {
    const queryClient = (0, $0d3bfacad5ad2b85$export$22e77b9572c4fded)({
        context: options.context
    });
    const isRestoring = (0, $c1d1f845430bc59c$export$4da0178d6b5f553)();
    const errorResetBoundary = (0, $aaa5ffc78fa38e88$export$50dfac555130cafd)();
    const defaultedOptions = queryClient.defaultQueryOptions(options);
    defaultedOptions._optimisticResults = isRestoring ? "isRestoring" : "optimistic";
    if (defaultedOptions.onError) defaultedOptions.onError = (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batchCalls(defaultedOptions.onError);
    if (defaultedOptions.onSuccess) defaultedOptions.onSuccess = (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batchCalls(defaultedOptions.onSuccess);
    if (defaultedOptions.onSettled) defaultedOptions.onSettled = (0, $82bd7063bd3305fc$export$520687f44db6e1ab).batchCalls(defaultedOptions.onSettled);
    if (defaultedOptions.suspense) {
        if (typeof defaultedOptions.staleTime !== "number") defaultedOptions.staleTime = 1e3;
    }
    if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {
        if (!errorResetBoundary.isReset()) defaultedOptions.retryOnMount = false;
    }
    const [observer] = $d4J5n.useState(()=>new Observer(queryClient, defaultedOptions));
    const result = observer.getOptimisticResult(defaultedOptions);
    $168b680515f5196a$var$useSyncExternalStore2($d4J5n.useCallback((onStoreChange)=>isRestoring ? ()=>void 0 : observer.subscribe((0, $82bd7063bd3305fc$export$520687f44db6e1ab).batchCalls(onStoreChange)), [
        observer,
        isRestoring
    ]), ()=>observer.getCurrentResult(), ()=>observer.getCurrentResult());
    $d4J5n.useEffect(()=>{
        errorResetBoundary.clearReset();
    }, [
        errorResetBoundary
    ]);
    $d4J5n.useEffect(()=>{
        observer.setOptions(defaultedOptions, {
            listeners: false
        });
    }, [
        defaultedOptions,
        observer
    ]);
    if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) throw observer.fetchOptimistic(defaultedOptions).then(({ data: data  })=>{
        defaultedOptions.onSuccess?.(data);
        defaultedOptions.onSettled?.(data, null);
    }).catch((error)=>{
        errorResetBoundary.clearReset();
        defaultedOptions.onError?.(error);
        defaultedOptions.onSettled?.(void 0, error);
    });
    if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && $168b680515f5196a$var$shouldThrowError(defaultedOptions.useErrorBoundary, [
        result.error,
        observer.getCurrentQuery()
    ])) throw result.error;
    const status = result.status === "loading" && result.fetchStatus === "idle" ? "idle" : result.status;
    const isIdle = status === "idle";
    const isLoading = status === "loading" && result.fetchStatus === "fetching";
    return {
        ...result,
        defaultedOptions: defaultedOptions,
        isIdle: isIdle,
        isLoading: isLoading,
        observer: observer,
        status: status
    };
}
function $168b680515f5196a$export$bdc59d3c1a6569aa(arg1, arg2, arg3) {
    const parsedOptions = $168b680515f5196a$var$parseQueryArgs(arg1, arg2, arg3);
    const baseQuery = $168b680515f5196a$var$useBaseQuery({
        context: $168b680515f5196a$var$queryClientContext,
        ...parsedOptions
    }, (0, $e7c4f18cdb7fe215$export$85d960eb3ab339c8));
    const result = {
        data: baseQuery.data,
        error: baseQuery.error,
        fetchNextPage: baseQuery.fetchNextPage,
        fetchStatus: baseQuery.fetchStatus,
        hasNextPage: baseQuery.hasNextPage,
        isError: baseQuery.isError,
        isFetched: baseQuery.isFetched,
        isFetchedAfterMount: baseQuery.isFetchedAfterMount,
        isFetching: baseQuery.isFetching,
        isFetchingNextPage: baseQuery.isFetchingNextPage,
        isIdle: baseQuery.isIdle,
        isLoading: baseQuery.isLoading,
        isRefetching: baseQuery.isRefetching,
        isSuccess: baseQuery.isSuccess,
        refetch: baseQuery.refetch,
        status: baseQuery.status,
        internal: {
            dataUpdatedAt: baseQuery.dataUpdatedAt,
            errorUpdatedAt: baseQuery.errorUpdatedAt,
            failureCount: baseQuery.failureCount,
            isFetchedAfterMount: baseQuery.isFetchedAfterMount,
            isLoadingError: baseQuery.isLoadingError,
            isPaused: baseQuery.isPaused,
            isPlaceholderData: baseQuery.isPlaceholderData,
            isPreviousData: baseQuery.isPreviousData,
            isRefetchError: baseQuery.isRefetchError,
            isStale: baseQuery.isStale,
            remove: baseQuery.remove
        }
    };
    return !baseQuery.defaultedOptions.notifyOnChangeProps ? $168b680515f5196a$var$trackResult(result, baseQuery.observer) : result;
}
function $168b680515f5196a$export$609860bf8b0084c(arg1, arg2, arg3) {
    const options = (0, $524eefe766be9228$export$b646c531ea475334)(arg1, arg2, arg3);
    return (0, $403f014b1f0d9752$export$609860bf8b0084c)({
        context: $168b680515f5196a$var$queryClientContext,
        ...options
    });
}
function $168b680515f5196a$export$dd0a697e1782aedd(arg1, arg2, arg3) {
    const parsedOptions = $168b680515f5196a$var$parseQueryArgs(arg1, arg2, arg3);
    const baseQuery = $168b680515f5196a$var$useBaseQuery({
        context: $168b680515f5196a$var$queryClientContext,
        ...parsedOptions
    }, (0, $075b77aa70d2e9f8$export$a06cf8c0066f0d4c));
    const result = {
        data: baseQuery.data,
        error: baseQuery.error,
        fetchStatus: baseQuery.fetchStatus,
        isError: baseQuery.isError,
        isFetched: baseQuery.isFetched,
        isFetchedAfterMount: baseQuery.isFetchedAfterMount,
        isFetching: baseQuery.isFetching,
        isIdle: baseQuery.isIdle,
        isLoading: baseQuery.isLoading,
        isRefetching: baseQuery.isRefetching,
        isSuccess: baseQuery.isSuccess,
        refetch: baseQuery.refetch,
        status: baseQuery.status,
        internal: {
            dataUpdatedAt: baseQuery.dataUpdatedAt,
            errorUpdatedAt: baseQuery.errorUpdatedAt,
            failureCount: baseQuery.failureCount,
            isFetchedAfterMount: baseQuery.isFetchedAfterMount,
            isLoadingError: baseQuery.isLoadingError,
            isPaused: baseQuery.isPaused,
            isPlaceholderData: baseQuery.isPlaceholderData,
            isPreviousData: baseQuery.isPreviousData,
            isRefetchError: baseQuery.isRefetchError,
            isStale: baseQuery.isStale,
            remove: baseQuery.remove
        }
    };
    return !baseQuery.defaultedOptions.notifyOnChangeProps ? $168b680515f5196a$var$trackResult(result, baseQuery.observer) : result;
}
var $168b680515f5196a$export$22e77b9572c4fded = ()=>(0, $0d3bfacad5ad2b85$export$22e77b9572c4fded)({
        context: $168b680515f5196a$var$queryClientContext
    });
function $168b680515f5196a$export$693cdb10cec23617({ chainId: chainId  } = {}) {
    return (0, $e4c34435d9a8658b$exports.useSyncExternalStoreWithSelector)((cb)=>(0, $077a864ec31a8b9f$export$6045b1b4b24d1696)({
            chainId: chainId
        }, cb), ()=>(0, $077a864ec31a8b9f$export$57632def5536cb24)({
            chainId: chainId
        }), ()=>(0, $077a864ec31a8b9f$export$57632def5536cb24)({
            chainId: chainId
        }), (x)=>x, (a, b)=>a.network.chainId === b.network.chainId);
}
function $168b680515f5196a$export$1f084ca370fa3571({ chainId: chainId  } = {}) {
    return (0, $e4c34435d9a8658b$exports.useSyncExternalStoreWithSelector)((cb)=>(0, $077a864ec31a8b9f$export$39ba40d8d6c7f031)({
            chainId: chainId
        }, cb), ()=>(0, $077a864ec31a8b9f$export$faa8f0f961e14522)({
            chainId: chainId
        }), ()=>(0, $077a864ec31a8b9f$export$faa8f0f961e14522)({
            chainId: chainId
        }), (x)=>x, (a, b)=>a?.network.chainId === b?.network.chainId);
}
// src/hooks/utils/useChainId.ts
function $168b680515f5196a$export$dc276622421ed31d({ chainId: chainId  } = {}) {
    const provider = $168b680515f5196a$export$693cdb10cec23617({
        chainId: chainId
    });
    return provider.network.chainId;
}
function $168b680515f5196a$var$useForceUpdate() {
    const [, forceUpdate] = $d4J5n.useReducer((x)=>x + 1, 0);
    return forceUpdate;
}
function $168b680515f5196a$var$queryKey({ chainId: chainId , scopeKey: scopeKey  }) {
    return [
        {
            entity: "blockNumber",
            chainId: chainId,
            scopeKey: scopeKey
        }
    ];
}
function $168b680515f5196a$var$queryFn({ queryKey: [{ chainId: chainId  }]  }) {
    return (0, $077a864ec31a8b9f$export$5e1ef41dd042deee)({
        chainId: chainId
    });
}
function $168b680515f5196a$export$8bf0355f69442463({ cacheTime: cacheTime = 0 , chainId: chainId_ , enabled: enabled = true , scopeKey: scopeKey , staleTime: staleTime , suspense: suspense , watch: watch = false , onBlock: onBlock , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    const provider = $168b680515f5196a$export$693cdb10cec23617({
        chainId: chainId
    });
    const webSocketProvider = $168b680515f5196a$export$1f084ca370fa3571({
        chainId: chainId
    });
    const queryClient = $168b680515f5196a$export$22e77b9572c4fded();
    $d4J5n.useEffect(()=>{
        if (!enabled) return;
        if (!watch && !onBlock) return;
        const listener = (0, $077a864ec31a8b9f$export$61fc7d43ac8f84b0)((blockNumber)=>{
            if (watch) queryClient.setQueryData($168b680515f5196a$var$queryKey({
                chainId: chainId,
                scopeKey: scopeKey
            }), blockNumber);
            if (onBlock) onBlock(blockNumber);
        }, 1);
        const provider_ = webSocketProvider ?? provider;
        provider_.on("block", listener);
        return ()=>{
            provider_.off("block", listener);
        };
    }, [
        chainId,
        scopeKey,
        onBlock,
        provider,
        queryClient,
        watch,
        webSocketProvider,
        enabled
    ]);
    return $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey({
        scopeKey: scopeKey,
        chainId: chainId
    }), $168b680515f5196a$var$queryFn, {
        cacheTime: cacheTime,
        enabled: enabled,
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$var$queryKey2({ chainId: chainId , formatUnits: formatUnits , scopeKey: scopeKey  }) {
    return [
        {
            entity: "feeData",
            chainId: chainId,
            formatUnits: formatUnits,
            scopeKey: scopeKey
        }
    ];
}
function $168b680515f5196a$var$queryFn2({ queryKey: [{ chainId: chainId , formatUnits: formatUnits  }]  }) {
    return (0, $077a864ec31a8b9f$export$c770119f9fa11d8f)({
        chainId: chainId,
        formatUnits: formatUnits
    });
}
function $168b680515f5196a$export$a72889bdc63e24a6({ cacheTime: cacheTime , chainId: chainId_ , enabled: enabled = true , formatUnits: formatUnits = "wei" , scopeKey: scopeKey , staleTime: staleTime , suspense: suspense , watch: watch , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    const queryKey_ = $d4J5n.useMemo(()=>$168b680515f5196a$var$queryKey2({
            chainId: chainId,
            formatUnits: formatUnits,
            scopeKey: scopeKey
        }), [
        chainId,
        formatUnits,
        scopeKey
    ]);
    const feeDataQuery = $168b680515f5196a$export$dd0a697e1782aedd(queryKey_, $168b680515f5196a$var$queryFn2, {
        cacheTime: cacheTime,
        enabled: enabled,
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    $168b680515f5196a$var$useInvalidateOnBlock({
        chainId: chainId,
        enabled: Boolean(enabled && watch),
        queryKey: queryKey_
    });
    return feeDataQuery;
}
// src/hooks/utils/useInvalidateOnBlock.ts
function $168b680515f5196a$var$useInvalidateOnBlock({ chainId: chainId , enabled: enabled , queryKey: queryKey17  }) {
    const queryClient = $168b680515f5196a$export$22e77b9572c4fded();
    $168b680515f5196a$export$8bf0355f69442463({
        chainId: chainId,
        enabled: enabled,
        onBlock: enabled ? ()=>queryClient.invalidateQueries(queryKey17) : void 0,
        scopeKey: enabled ? void 0 : "idle"
    });
}
var $168b680515f5196a$var$isPlainObject = (obj)=>typeof obj === "object" && !Array.isArray(obj);
function $168b680515f5196a$var$useSyncExternalStoreWithTracked(subscribe, getSnapshot, getServerSnapshot = getSnapshot, isEqual = (0, $077a864ec31a8b9f$export$9cb4719e2e525b7a)) {
    const trackedKeys = $d4J5n.useRef([]);
    const result = (0, $e4c34435d9a8658b$exports.useSyncExternalStoreWithSelector)(subscribe, getSnapshot, getServerSnapshot, (x)=>x, (a, b)=>{
        if ($168b680515f5196a$var$isPlainObject(a) && $168b680515f5196a$var$isPlainObject(b) && trackedKeys.current.length) {
            for (const key of trackedKeys.current){
                const equal = isEqual(a[key], b[key]);
                if (!equal) return false;
            }
            return true;
        }
        return isEqual(a, b);
    });
    if ($168b680515f5196a$var$isPlainObject(result)) {
        const trackedResult = {
            ...result
        };
        Object.defineProperties(trackedResult, Object.entries(trackedResult).reduce((res, [key, value])=>{
            return {
                ...res,
                [key]: {
                    configurable: false,
                    enumerable: true,
                    get: ()=>{
                        if (!trackedKeys.current.includes(key)) trackedKeys.current.push(key);
                        return value;
                    }
                }
            };
        }, {}));
        return trackedResult;
    }
    return result;
}
// src/hooks/accounts/useAccount.ts
function $168b680515f5196a$export$83a8e409853da004({ onConnect: onConnect , onDisconnect: onDisconnect  } = {}) {
    const watchAccount = $d4J5n.useCallback((callback)=>{
        const client = (0, $077a864ec31a8b9f$export$6bb76d6eba7e258c)();
        const unsubscribe = client.subscribe((state)=>({
                address: state.data?.account,
                connector: state.connector,
                status: state.status
            }), (curr, prev)=>{
            if (!!onConnect && prev.status !== "connected" && curr.status === "connected") onConnect({
                address: curr.address,
                connector: curr.connector,
                isReconnected: prev.status === "reconnecting"
            });
            if (!!onDisconnect && prev.status === "connected" && curr.status === "disconnected") onDisconnect();
            return callback((0, $077a864ec31a8b9f$export$4f9234baf34abd0)());
        });
        return unsubscribe;
    }, [
        onConnect,
        onDisconnect
    ]);
    const account = $168b680515f5196a$var$useSyncExternalStoreWithTracked(watchAccount, (0, $077a864ec31a8b9f$export$4f9234baf34abd0));
    const previousStatusRef = $d4J5n.useRef();
    const { address: address , connector: connector , status: status  } = account;
    $d4J5n.useEffect(()=>{
        if (!!onConnect && previousStatusRef.current === void 0 && status === "connected") onConnect({
            address: address,
            connector: connector,
            isReconnected: true
        });
        previousStatusRef.current = status;
    }, []);
    return account;
}
function $168b680515f5196a$var$queryKey3({ address: address , chainId: chainId , formatUnits: formatUnits , scopeKey: scopeKey , token: token  }) {
    return [
        {
            entity: "balance",
            address: address,
            chainId: chainId,
            formatUnits: formatUnits,
            scopeKey: scopeKey,
            token: token
        }
    ];
}
function $168b680515f5196a$var$queryFn3({ queryKey: [{ address: address , chainId: chainId , formatUnits: formatUnits , token: token  }]  }) {
    if (!address) throw new Error("address is required");
    return (0, $077a864ec31a8b9f$export$6c801974529d037b)({
        address: address,
        chainId: chainId,
        formatUnits: formatUnits,
        token: token
    });
}
function $168b680515f5196a$export$4f026b09e764c1f8({ address: address , cacheTime: cacheTime , chainId: chainId_ , enabled: enabled = true , formatUnits: formatUnits , scopeKey: scopeKey , staleTime: staleTime , suspense: suspense , token: token , watch: watch , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    const queryKey_ = $d4J5n.useMemo(()=>$168b680515f5196a$var$queryKey3({
            address: address,
            chainId: chainId,
            formatUnits: formatUnits,
            scopeKey: scopeKey,
            token: token
        }), [
        address,
        chainId,
        formatUnits,
        scopeKey,
        token
    ]);
    const balanceQuery = $168b680515f5196a$export$dd0a697e1782aedd(queryKey_, $168b680515f5196a$var$queryFn3, {
        cacheTime: cacheTime,
        enabled: Boolean(enabled && address),
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    $168b680515f5196a$var$useInvalidateOnBlock({
        chainId: chainId,
        enabled: Boolean(enabled && watch && address),
        queryKey: queryKey_
    });
    return balanceQuery;
}
var $168b680515f5196a$var$mutationKey = (args)=>[
        {
            entity: "connect",
            ...args
        }
    ];
var $168b680515f5196a$var$mutationFn = (args)=>{
    const { connector: connector , chainId: chainId  } = args;
    if (!connector) throw new Error("connector is required");
    return (0, $077a864ec31a8b9f$export$64605811ab45167f)({
        connector: connector,
        chainId: chainId
    });
};
function $168b680515f5196a$export$5daf65c1af3b369f({ chainId: chainId , connector: connector , onError: onError , onMutate: onMutate , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const client = $168b680515f5196a$export$95f99d327bc8fbbd();
    const { data: data , error: error , isError: isError , isIdle: isIdle , isLoading: isLoading , isSuccess: isSuccess , mutate: mutate , mutateAsync: mutateAsync , reset: reset , status: status , variables: variables  } = $168b680515f5196a$export$609860bf8b0084c($168b680515f5196a$var$mutationKey({
        connector: connector,
        chainId: chainId
    }), $168b680515f5196a$var$mutationFn, {
        onError: onError,
        onMutate: onMutate,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    const connect2 = $d4J5n.useCallback((args)=>{
        return mutate({
            chainId: args?.chainId ?? chainId,
            connector: args?.connector ?? connector
        });
    }, [
        chainId,
        connector,
        mutate
    ]);
    const connectAsync = $d4J5n.useCallback((args)=>{
        return mutateAsync({
            chainId: args?.chainId ?? chainId,
            connector: args?.connector ?? connector
        });
    }, [
        chainId,
        connector,
        mutateAsync
    ]);
    return {
        connect: connect2,
        connectAsync: connectAsync,
        connectors: client.connectors,
        data: data,
        error: error,
        isError: isError,
        isIdle: isIdle,
        isLoading: isLoading,
        isSuccess: isSuccess,
        pendingConnector: variables?.connector,
        reset: reset,
        status: status,
        variables: variables
    };
}
var $168b680515f5196a$var$mutationKey2 = [
    {
        entity: "disconnect"
    }
];
var $168b680515f5196a$var$mutationFn2 = ()=>(0, $077a864ec31a8b9f$export$37dfea93db2e14ed)();
function $168b680515f5196a$export$83bebf2fe7fead4e({ onError: onError , onMutate: onMutate , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const { error: error , isError: isError , isIdle: isIdle , isLoading: isLoading , isSuccess: isSuccess , mutate: disconnect2 , mutateAsync: disconnectAsync , reset: reset , status: status  } = $168b680515f5196a$export$609860bf8b0084c($168b680515f5196a$var$mutationKey2, $168b680515f5196a$var$mutationFn2, {
        ...onError ? {
            onError (error2, _variables, context) {
                onError(error2, context);
            }
        } : {},
        onMutate: onMutate,
        ...onSettled ? {
            onSettled (_data, error2, _variables, context) {
                onSettled(error2, context);
            }
        } : {},
        ...onSuccess ? {
            onSuccess (_data, _variables, context) {
                onSuccess(context);
            }
        } : {}
    });
    return {
        disconnect: disconnect2,
        disconnectAsync: disconnectAsync,
        error: error,
        isError: isError,
        isIdle: isIdle,
        isLoading: isLoading,
        isSuccess: isSuccess,
        reset: reset,
        status: status
    };
}
function $168b680515f5196a$export$553aaf59afc1a2d8() {
    return $168b680515f5196a$var$useSyncExternalStoreWithTracked((0, $077a864ec31a8b9f$export$bd28046b535de99c), (0, $077a864ec31a8b9f$export$7de4970ebfd8206d));
}
function $168b680515f5196a$var$queryKey4({ chainId: chainId  }) {
    return [
        {
            entity: "signer",
            chainId: chainId,
            persist: false
        }
    ];
}
function $168b680515f5196a$var$queryFn4({ queryKey: [{ chainId: chainId  }]  }) {
    return (0, $077a864ec31a8b9f$export$581bb572bc1301ca)({
        chainId: chainId
    });
}
function $168b680515f5196a$export$9a227db3d64f1ffd({ chainId: chainId_ , suspense: suspense , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const { connector: connector  } = $168b680515f5196a$export$83a8e409853da004();
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    const signerQuery = $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey4({
        chainId: chainId
    }), $168b680515f5196a$var$queryFn4, {
        cacheTime: 0,
        enabled: Boolean(connector),
        staleTime: Infinity,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    const queryClient = $168b680515f5196a$export$22e77b9572c4fded();
    $d4J5n.useEffect(()=>{
        const unwatch = (0, $077a864ec31a8b9f$export$882eb32cac2337ef)({
            chainId: chainId
        }, (signer)=>{
            if (signer) queryClient.invalidateQueries($168b680515f5196a$var$queryKey4({
                chainId: chainId
            }));
            else queryClient.removeQueries($168b680515f5196a$var$queryKey4({
                chainId: chainId
            }));
        });
        return unwatch;
    }, [
        queryClient,
        chainId
    ]);
    return signerQuery;
}
var $168b680515f5196a$var$mutationKey3 = (args)=>[
        {
            entity: "signMessage",
            ...args
        }
    ];
var $168b680515f5196a$var$mutationFn3 = (args)=>{
    const { message: message  } = args;
    if (!message) throw new Error("message is required");
    return (0, $077a864ec31a8b9f$export$1d9a7a8a40780de)({
        message: message
    });
};
function $168b680515f5196a$export$2ec0271a2697cc5f({ message: message , onError: onError , onMutate: onMutate , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const { data: data , error: error , isError: isError , isIdle: isIdle , isLoading: isLoading , isSuccess: isSuccess , mutate: mutate , mutateAsync: mutateAsync , reset: reset , status: status , variables: variables  } = $168b680515f5196a$export$609860bf8b0084c($168b680515f5196a$var$mutationKey3({
        message: message
    }), $168b680515f5196a$var$mutationFn3, {
        onError: onError,
        onMutate: onMutate,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    const signMessage2 = $d4J5n.useCallback((args)=>mutate(args || {
            message: message
        }), [
        message,
        mutate
    ]);
    const signMessageAsync = $d4J5n.useCallback((args)=>mutateAsync(args || {
            message: message
        }), [
        message,
        mutateAsync
    ]);
    return {
        data: data,
        error: error,
        isError: isError,
        isIdle: isIdle,
        isLoading: isLoading,
        isSuccess: isSuccess,
        reset: reset,
        signMessage: signMessage2,
        signMessageAsync: signMessageAsync,
        status: status,
        variables: variables
    };
}
function $168b680515f5196a$var$mutationKey4({ domain: domain , types: types , value: value  }) {
    return [
        {
            entity: "signTypedData",
            domain: domain,
            types: types,
            value: value
        }
    ];
}
function $168b680515f5196a$var$mutationFn4(args) {
    const { domain: domain , types: types , value: value  } = args;
    if (!domain) throw new Error("domain is required");
    if (!types) throw new Error("types is required");
    if (!value) throw new Error("value is required");
    return (0, $077a864ec31a8b9f$export$9f05de2db4d31153)({
        domain: domain,
        types: types,
        value: value
    });
}
function $168b680515f5196a$export$d9a762c0326d0ef4({ domain: domain , types: types , value: value , onError: onError , onMutate: onMutate , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const { data: data , error: error , isError: isError , isIdle: isIdle , isLoading: isLoading , isSuccess: isSuccess , mutate: mutate , mutateAsync: mutateAsync , reset: reset , status: status , variables: variables  } = $168b680515f5196a$export$609860bf8b0084c($168b680515f5196a$var$mutationKey4({
        domain: domain,
        types: types,
        value: value
    }), $168b680515f5196a$var$mutationFn4, {
        onError: onError,
        onMutate: onMutate,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    const signTypedData2 = $d4J5n.useCallback((args)=>mutate({
            domain: args?.domain ?? domain,
            types: args?.types ?? types,
            value: args?.value ?? value
        }), [
        domain,
        types,
        value,
        mutate
    ]);
    const signTypedDataAsync = $d4J5n.useCallback((args)=>mutateAsync({
            domain: args?.domain ?? domain,
            types: args?.types ?? types,
            value: args?.value ?? value
        }), [
        domain,
        types,
        value,
        mutateAsync
    ]);
    return {
        data: data,
        error: error,
        isError: isError,
        isIdle: isIdle,
        isLoading: isLoading,
        isSuccess: isSuccess,
        reset: reset,
        signTypedData: signTypedData2,
        signTypedDataAsync: signTypedDataAsync,
        status: status,
        variables: variables
    };
}
var $168b680515f5196a$var$mutationKey5 = (args)=>[
        {
            entity: "switchNetwork",
            ...args
        }
    ];
var $168b680515f5196a$var$mutationFn5 = (args)=>{
    const { chainId: chainId  } = args;
    if (!chainId) throw new Error("chainId is required");
    return (0, $077a864ec31a8b9f$export$f3473d805e486329)({
        chainId: chainId
    });
};
function $168b680515f5196a$export$71b0470720f288c1({ chainId: chainId , throwForSwitchChainNotSupported: throwForSwitchChainNotSupported , onError: onError , onMutate: onMutate , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const client = $168b680515f5196a$export$95f99d327bc8fbbd();
    const forceUpdate = $168b680515f5196a$var$useForceUpdate();
    const { data: data , error: error , isError: isError , isIdle: isIdle , isLoading: isLoading , isSuccess: isSuccess , mutate: mutate , mutateAsync: mutateAsync , reset: reset , status: status , variables: variables  } = $168b680515f5196a$export$609860bf8b0084c($168b680515f5196a$var$mutationKey5({
        chainId: chainId
    }), $168b680515f5196a$var$mutationFn5, {
        onError: onError,
        onMutate: onMutate,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    const switchNetwork_ = $d4J5n.useCallback((chainId_)=>mutate({
            chainId: chainId_ ?? chainId
        }), [
        chainId,
        mutate
    ]);
    const switchNetworkAsync_ = $d4J5n.useCallback((chainId_)=>mutateAsync({
            chainId: chainId_ ?? chainId
        }), [
        chainId,
        mutateAsync
    ]);
    $d4J5n.useEffect(()=>{
        const unwatch = client.subscribe(({ chains: chains , connector: connector  })=>({
                chains: chains,
                connector: connector
            }), forceUpdate);
        return unwatch;
    }, [
        client,
        forceUpdate
    ]);
    let switchNetwork2;
    let switchNetworkAsync;
    const supportsSwitchChain = !!client.connector?.switchChain;
    if (throwForSwitchChainNotSupported || supportsSwitchChain) {
        switchNetwork2 = switchNetwork_;
        switchNetworkAsync = switchNetworkAsync_;
    }
    return {
        chains: client.chains ?? [],
        data: data,
        error: error,
        isError: isError,
        isIdle: isIdle,
        isLoading: isLoading,
        isSuccess: isSuccess,
        pendingChainId: variables?.chainId,
        reset: reset,
        status: status,
        switchNetwork: switchNetwork2,
        switchNetworkAsync: switchNetworkAsync,
        variables: variables
    };
}
function $168b680515f5196a$export$5556fed9e469df03({ address: address , abi: abi , signerOrProvider: signerOrProvider  } = {}) {
    return $d4J5n.useMemo(()=>{
        if (!address || !abi) return null;
        return (0, $077a864ec31a8b9f$export$f518c38144e1f9d)({
            address: address,
            abi: abi,
            signerOrProvider: signerOrProvider === null ? void 0 : signerOrProvider
        });
    }, [
        address,
        abi,
        signerOrProvider
    ]);
}
function $168b680515f5196a$export$fa3bb2588a62576e({ address: address , chainId: chainId , abi: abi , listener: listener , eventName: eventName , once: once  } = {}) {
    const provider = $168b680515f5196a$export$693cdb10cec23617({
        chainId: chainId
    });
    const webSocketProvider = $168b680515f5196a$export$1f084ca370fa3571({
        chainId: chainId
    });
    const contract = $168b680515f5196a$export$5556fed9e469df03({
        address: address,
        abi: abi,
        signerOrProvider: webSocketProvider ?? provider
    });
    const callbackRef = $d4J5n.useRef(listener);
    callbackRef.current = listener;
    $d4J5n.useEffect(()=>{
        if (!contract || !eventName) return;
        const handler = (...event)=>callbackRef.current(...event);
        if (once) contract.once(eventName, handler);
        else contract.on(eventName, handler);
        return ()=>{
            contract.off(eventName, handler);
        };
    }, [
        contract,
        eventName
    ]);
}
function $168b680515f5196a$var$queryKey5({ allowFailure: allowFailure , cacheKey: cacheKey , overrides: overrides , scopeKey: scopeKey  }) {
    return [
        {
            entity: "readContractsInfinite",
            allowFailure: allowFailure,
            cacheKey: cacheKey,
            overrides: overrides,
            scopeKey: scopeKey
        }
    ];
}
function $168b680515f5196a$var$queryFn5({ contracts: contracts  }) {
    return ({ queryKey: [{ allowFailure: allowFailure , overrides: overrides  }] , pageParam: pageParam  })=>{
        return (0, $077a864ec31a8b9f$export$aa7cd72d27ce4a5)({
            allowFailure: allowFailure,
            contracts: contracts(pageParam || void 0),
            overrides: overrides
        });
    };
}
function $168b680515f5196a$export$22c281f017fd3229({ allowFailure: allowFailure , cacheKey: cacheKey , cacheTime: cacheTime , contracts: contracts , enabled: enabled_ = true , getNextPageParam: getNextPageParam , isDataEqual: isDataEqual , keepPreviousData: keepPreviousData , onError: onError , onSettled: onSettled , onSuccess: onSuccess , overrides: overrides , scopeKey: scopeKey , select: select , staleTime: staleTime , structuralSharing: structuralSharing = (oldData, newData)=>(0, $077a864ec31a8b9f$export$9cb4719e2e525b7a)(oldData, newData) ? oldData : (0, $524eefe766be9228$export$77a71fc411098696)(oldData, newData) , suspense: suspense  }) {
    const queryKey_ = $d4J5n.useMemo(()=>$168b680515f5196a$var$queryKey5({
            allowFailure: allowFailure,
            cacheKey: cacheKey,
            overrides: overrides,
            scopeKey: scopeKey
        }), [
        allowFailure,
        cacheKey,
        overrides,
        scopeKey
    ]);
    const enabled = $d4J5n.useMemo(()=>{
        const enabled2 = Boolean(enabled_ && contracts);
        return enabled2;
    }, [
        contracts,
        enabled_
    ]);
    return $168b680515f5196a$export$bdc59d3c1a6569aa(queryKey_, $168b680515f5196a$var$queryFn5({
        contracts: contracts
    }), {
        cacheTime: cacheTime,
        enabled: enabled,
        getNextPageParam: getNextPageParam,
        isDataEqual: isDataEqual,
        keepPreviousData: keepPreviousData,
        select: select,
        staleTime: staleTime,
        structuralSharing: structuralSharing,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$export$ea82e4a36c28628e(fn, { perPage: perPage , start: start , direction: direction  }) {
    const contracts = (page = 0)=>[
            ...Array(perPage).keys()
        ].map((index)=>{
            return direction === "increment" ? start + index + page * perPage : start - index - page * perPage;
        }).filter((index)=>index >= 0).map(fn).flat();
    return {
        contracts: contracts,
        getNextPageParam (lastPage, pages) {
            return lastPage?.length === perPage ? pages.length : void 0;
        }
    };
}
function $168b680515f5196a$var$queryKey6({ address: address , args: args , blockNumber: blockNumber , chainId: chainId , functionName: functionName , overrides: overrides , scopeKey: scopeKey  }) {
    return [
        {
            entity: "readContract",
            address: address,
            args: args,
            blockNumber: blockNumber,
            chainId: chainId,
            functionName: functionName,
            overrides: overrides,
            scopeKey: scopeKey
        }
    ];
}
function $168b680515f5196a$var$queryFn6({ abi: abi  }) {
    return async ({ queryKey: [{ address: address , args: args , chainId: chainId , functionName: functionName , overrides: overrides  }]  })=>{
        if (!abi) throw new Error("abi is required");
        if (!address) throw new Error("address is required");
        return await (0, $077a864ec31a8b9f$export$43af7de392176737)({
            address: address,
            args: args,
            chainId: chainId,
            abi: abi,
            functionName: functionName,
            overrides: overrides
        }) ?? null;
    };
}
function $168b680515f5196a$export$6f78c1774963fe2d({ abi: abi , address: address , args: args , cacheOnBlock: cacheOnBlock = false , cacheTime: cacheTime , chainId: chainId_ , enabled: enabled_ = true , functionName: functionName , isDataEqual: isDataEqual , onError: onError , onSettled: onSettled , onSuccess: onSuccess , overrides: overrides , scopeKey: scopeKey , select: select , staleTime: staleTime , structuralSharing: structuralSharing = (oldData, newData)=>(0, $077a864ec31a8b9f$export$9cb4719e2e525b7a)(oldData, newData) ? oldData : (0, $524eefe766be9228$export$77a71fc411098696)(oldData, newData) , suspense: suspense , watch: watch  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    const { data: blockNumber  } = $168b680515f5196a$export$8bf0355f69442463({
        chainId: chainId,
        enabled: watch || cacheOnBlock,
        scopeKey: watch || cacheOnBlock ? void 0 : "idle",
        watch: watch
    });
    const queryKey_ = $d4J5n.useMemo(()=>$168b680515f5196a$var$queryKey6({
            address: address,
            args: args,
            blockNumber: cacheOnBlock ? blockNumber : void 0,
            chainId: chainId,
            functionName: functionName,
            overrides: overrides,
            scopeKey: scopeKey
        }), [
        address,
        args,
        blockNumber,
        cacheOnBlock,
        chainId,
        functionName,
        overrides,
        scopeKey
    ]);
    const enabled = $d4J5n.useMemo(()=>{
        let enabled2 = Boolean(enabled_ && abi && address && functionName);
        if (cacheOnBlock) enabled2 = Boolean(enabled2 && blockNumber);
        return enabled2;
    }, [
        abi,
        address,
        blockNumber,
        cacheOnBlock,
        enabled_,
        functionName
    ]);
    $168b680515f5196a$var$useInvalidateOnBlock({
        chainId: chainId,
        enabled: Boolean(enabled && watch && !cacheOnBlock),
        queryKey: queryKey_
    });
    return $168b680515f5196a$export$dd0a697e1782aedd(queryKey_, $168b680515f5196a$var$queryFn6({
        abi: abi
    }), {
        cacheTime: cacheTime,
        enabled: enabled,
        isDataEqual: isDataEqual,
        select (data) {
            const result = abi && functionName ? (0, $077a864ec31a8b9f$export$e8e3478487aa8ce4)({
                abi: abi,
                data: data,
                functionName: functionName
            }) : data;
            return select ? select(result) : result;
        },
        staleTime: staleTime,
        structuralSharing: structuralSharing,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$var$queryKey7({ allowFailure: allowFailure , blockNumber: blockNumber , chainId: chainId , contracts: contracts , overrides: overrides , scopeKey: scopeKey  }) {
    return [
        {
            entity: "readContracts",
            allowFailure: allowFailure,
            blockNumber: blockNumber,
            chainId: chainId,
            scopeKey: scopeKey,
            contracts: (contracts ?? []).map(({ address: address , args: args , chainId: chainId2 , functionName: functionName  })=>({
                    address: address,
                    args: args,
                    chainId: chainId2,
                    functionName: functionName
                })),
            overrides: overrides
        }
    ];
}
function $168b680515f5196a$var$queryFn7({ abis: abis  }) {
    return ({ queryKey: [{ allowFailure: allowFailure , contracts: contracts_ , overrides: overrides  }]  })=>{
        const contracts = contracts_.map((contract, i)=>({
                ...contract,
                abi: abis[i]
            }));
        return (0, $077a864ec31a8b9f$export$aa7cd72d27ce4a5)({
            allowFailure: allowFailure,
            contracts: contracts,
            overrides: overrides
        });
    };
}
function $168b680515f5196a$export$f36bb0f54b7a8d18({ allowFailure: allowFailure = true , cacheOnBlock: cacheOnBlock = false , cacheTime: cacheTime , contracts: contracts , enabled: enabled_ = true , isDataEqual: isDataEqual , keepPreviousData: keepPreviousData , onError: onError , onSettled: onSettled , onSuccess: onSuccess , overrides: overrides , scopeKey: scopeKey , select: select , staleTime: staleTime , structuralSharing: structuralSharing = (oldData, newData)=>(0, $077a864ec31a8b9f$export$9cb4719e2e525b7a)(oldData, newData) ? oldData : (0, $524eefe766be9228$export$77a71fc411098696)(oldData, newData) , suspense: suspense , watch: watch  } = {}) {
    const { data: blockNumber  } = $168b680515f5196a$export$8bf0355f69442463({
        enabled: watch || cacheOnBlock,
        watch: watch
    });
    const chainId = $168b680515f5196a$export$dc276622421ed31d();
    const queryKey_ = $d4J5n.useMemo(()=>$168b680515f5196a$var$queryKey7({
            allowFailure: allowFailure,
            blockNumber: cacheOnBlock ? blockNumber : void 0,
            chainId: chainId,
            contracts: contracts,
            overrides: overrides,
            scopeKey: scopeKey
        }), [
        allowFailure,
        blockNumber,
        cacheOnBlock,
        chainId,
        scopeKey,
        contracts,
        overrides
    ]);
    const enabled = $d4J5n.useMemo(()=>{
        let enabled2 = Boolean(enabled_ && contracts?.every((x)=>x.abi && x.address && x.functionName));
        if (cacheOnBlock) enabled2 = Boolean(enabled2 && blockNumber);
        return enabled2;
    }, [
        blockNumber,
        cacheOnBlock,
        contracts,
        enabled_
    ]);
    $168b680515f5196a$var$useInvalidateOnBlock({
        enabled: Boolean(enabled && watch && !cacheOnBlock),
        queryKey: queryKey_
    });
    const abis = (contracts ?? []).map(({ abi: abi  })=>abi);
    return $168b680515f5196a$export$dd0a697e1782aedd(queryKey_, $168b680515f5196a$var$queryFn7({
        abis: abis
    }), {
        cacheTime: cacheTime,
        enabled: enabled,
        isDataEqual: isDataEqual,
        keepPreviousData: keepPreviousData,
        staleTime: staleTime,
        select (data) {
            const result = data.map((data2, i)=>{
                const { abi: abi , functionName: functionName  } = contracts?.[i] ?? {};
                return abi && functionName ? (0, $077a864ec31a8b9f$export$e8e3478487aa8ce4)({
                    abi: abi,
                    functionName: functionName,
                    data: data2
                }) : data2;
            });
            return select ? select(result) : result;
        },
        structuralSharing: structuralSharing,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$var$mutationKey6({ address: address , chainId: chainId , abi: abi , functionName: functionName , ...config }) {
    const { request: request  } = config;
    const { args: args , overrides: overrides  } = config;
    return [
        {
            entity: "writeContract",
            address: address,
            args: args,
            chainId: chainId,
            abi: abi,
            functionName: functionName,
            overrides: overrides,
            request: request
        }
    ];
}
function $168b680515f5196a$var$mutationFn6(config) {
    if (!config.address) throw new Error("address is required");
    if (!config.abi) throw new Error("abi is required");
    if (!config.functionName) throw new Error("functionName is required");
    switch(config.mode){
        case "prepared":
            if (!config.request) throw new Error("request is required");
            return (0, $077a864ec31a8b9f$export$4c0f201bc17cbf23)({
                mode: "prepared",
                address: config.address,
                chainId: config.chainId,
                abi: config.abi,
                functionName: config.functionName,
                request: config.request
            });
        case "recklesslyUnprepared":
            return (0, $077a864ec31a8b9f$export$4c0f201bc17cbf23)({
                address: config.address,
                args: config.args,
                chainId: config.chainId,
                abi: config.abi,
                functionName: config.functionName,
                mode: "recklesslyUnprepared",
                overrides: config.overrides
            });
    }
}
function $168b680515f5196a$export$f65fbf805a7dc8c5(config = {}) {
    const { address: address , abi: abi , functionName: functionName , chainId: chainId , mode: mode  } = config;
    const { request: request  } = config;
    const { args: args , overrides: overrides  } = config;
    const { data: data , error: error , isError: isError , isIdle: isIdle , isLoading: isLoading , isSuccess: isSuccess , mutate: mutate , mutateAsync: mutateAsync , reset: reset , status: status , variables: variables  } = $168b680515f5196a$export$609860bf8b0084c($168b680515f5196a$var$mutationKey6({
        address: address,
        abi: abi,
        functionName: functionName,
        chainId: chainId,
        mode: mode,
        args: args,
        overrides: overrides,
        request: request
    }), $168b680515f5196a$var$mutationFn6, {
        onError: config.onError,
        onMutate: config.onMutate,
        onSettled: config.onSettled,
        onSuccess: config.onSuccess
    });
    const write = $d4J5n.useMemo(()=>{
        if (mode === "prepared") {
            if (!request) return void 0;
            return ()=>mutate({
                    address: address,
                    chainId: chainId,
                    abi: abi,
                    functionName: functionName,
                    mode: "prepared",
                    request: request
                });
        }
        return (overrideConfig)=>mutate({
                address: address,
                args: overrideConfig?.recklesslySetUnpreparedArgs ?? args,
                chainId: chainId,
                abi: abi,
                functionName: functionName,
                mode: "recklesslyUnprepared",
                overrides: overrideConfig?.recklesslySetUnpreparedOverrides ?? overrides
            });
    }, [
        address,
        chainId,
        abi,
        functionName,
        mode,
        mutate,
        args,
        overrides,
        request
    ]);
    const writeAsync = $d4J5n.useMemo(()=>{
        if (mode === "prepared") {
            if (!request) return void 0;
            return ()=>mutateAsync({
                    address: address,
                    chainId: chainId,
                    abi: abi,
                    functionName: functionName,
                    mode: "prepared",
                    request: request
                });
        }
        return (overrideConfig)=>mutateAsync({
                address: address,
                args: overrideConfig?.recklesslySetUnpreparedArgs ?? args,
                chainId: chainId,
                abi: abi,
                functionName: functionName,
                mode: "recklesslyUnprepared",
                overrides: overrideConfig?.recklesslySetUnpreparedOverrides ?? overrides
            });
    }, [
        address,
        chainId,
        abi,
        functionName,
        mode,
        mutateAsync,
        args,
        overrides,
        request
    ]);
    return {
        data: data,
        error: error,
        isError: isError,
        isIdle: isIdle,
        isLoading: isLoading,
        isSuccess: isSuccess,
        reset: reset,
        status: status,
        variables: variables,
        write: write,
        writeAsync: writeAsync
    };
}
function $168b680515f5196a$var$queryKey8({ activeChainId: activeChainId , args: args , address: address , chainId: chainId , functionName: functionName , overrides: overrides , signerAddress: signerAddress  }) {
    return [
        {
            entity: "prepareContractTransaction",
            activeChainId: activeChainId,
            address: address,
            args: args,
            chainId: chainId,
            functionName: functionName,
            overrides: overrides,
            signerAddress: signerAddress
        }
    ];
}
function $168b680515f5196a$var$queryFn8({ abi: abi , signer: signer  }) {
    return ({ queryKey: [{ args: args , address: address , chainId: chainId , functionName: functionName , overrides: overrides  }]  })=>{
        if (!abi) throw new Error("abi is required");
        return (0, $077a864ec31a8b9f$export$ab65f0e23fdc55ec)({
            abi: abi,
            args: args,
            address: address,
            chainId: chainId,
            functionName: functionName,
            overrides: overrides,
            signer: signer
        });
    };
}
function $168b680515f5196a$export$f08fad0d21112083({ address: address , abi: abi , functionName: functionName , chainId: chainId , args: args , overrides: overrides , cacheTime: cacheTime , enabled: enabled = true , scopeKey: scopeKey , staleTime: staleTime , suspense: suspense , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const { chain: activeChain  } = $168b680515f5196a$export$553aaf59afc1a2d8();
    const { data: signer  } = $168b680515f5196a$export$9a227db3d64f1ffd({
        chainId: chainId
    });
    const prepareContractWriteQuery = $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey8({
        activeChainId: activeChain?.id,
        address: address,
        args: args,
        chainId: chainId,
        functionName: functionName,
        scopeKey: scopeKey,
        signerAddress: signer?._address,
        overrides: overrides
    }), $168b680515f5196a$var$queryFn8({
        abi: abi,
        signer: signer
    }), {
        cacheTime: cacheTime,
        enabled: Boolean(enabled && abi && address && functionName && signer),
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    return Object.assign(prepareContractWriteQuery, {
        config: {
            abi: abi,
            address: address,
            args: args,
            chainId: chainId,
            functionName: functionName,
            mode: "prepared",
            overrides: overrides,
            request: void 0,
            ...prepareContractWriteQuery.data
        }
    });
}
function $168b680515f5196a$var$queryKey9({ address: address , chainId: chainId , formatUnits: formatUnits , scopeKey: scopeKey  }) {
    return [
        {
            entity: "token",
            address: address,
            chainId: chainId,
            formatUnits: formatUnits,
            scopeKey: scopeKey
        }
    ];
}
function $168b680515f5196a$var$queryFn9({ queryKey: [{ address: address , chainId: chainId , formatUnits: formatUnits  }]  }) {
    if (!address) throw new Error("address is required");
    return (0, $077a864ec31a8b9f$export$77ad5286853a8a58)({
        address: address,
        chainId: chainId,
        formatUnits: formatUnits
    });
}
function $168b680515f5196a$export$31dcd79391e423fe({ address: address , chainId: chainId_ , formatUnits: formatUnits = "ether" , cacheTime: cacheTime , enabled: enabled = true , scopeKey: scopeKey , staleTime: staleTime = 86400000 , suspense: suspense , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    return $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey9({
        address: address,
        chainId: chainId,
        formatUnits: formatUnits,
        scopeKey: scopeKey
    }), $168b680515f5196a$var$queryFn9, {
        cacheTime: cacheTime,
        enabled: Boolean(enabled && address),
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$var$queryKey10({ chainId: chainId , name: name , scopeKey: scopeKey  }) {
    return [
        {
            entity: "ensAddress",
            chainId: chainId,
            name: name,
            scopeKey: scopeKey
        }
    ];
}
function $168b680515f5196a$var$queryFn10({ queryKey: [{ chainId: chainId , name: name  }]  }) {
    if (!name) throw new Error("name is required");
    return (0, $077a864ec31a8b9f$export$80282c1e45096db2)({
        chainId: chainId,
        name: name
    });
}
function $168b680515f5196a$export$882e13b9ff368f82({ cacheTime: cacheTime , chainId: chainId_ , enabled: enabled = true , name: name , scopeKey: scopeKey , staleTime: staleTime = 86400000 , suspense: suspense , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    return $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey10({
        chainId: chainId,
        name: name,
        scopeKey: scopeKey
    }), $168b680515f5196a$var$queryFn10, {
        cacheTime: cacheTime,
        enabled: Boolean(enabled && chainId && name),
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$var$queryKey11({ address: address , chainId: chainId , scopeKey: scopeKey  }) {
    return [
        {
            entity: "ensAvatar",
            address: address,
            chainId: chainId,
            scopeKey: scopeKey
        }
    ];
}
function $168b680515f5196a$var$queryFn11({ queryKey: [{ address: address , chainId: chainId  }]  }) {
    if (!address) throw new Error("address is required");
    return (0, $077a864ec31a8b9f$export$30821201be6df476)({
        address: address,
        chainId: chainId
    });
}
function $168b680515f5196a$export$182f359dd9766fbb({ address: address , cacheTime: cacheTime , chainId: chainId_ , enabled: enabled = true , scopeKey: scopeKey , staleTime: staleTime = 86400000 , suspense: suspense , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    return $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey11({
        address: address,
        chainId: chainId,
        scopeKey: scopeKey
    }), $168b680515f5196a$var$queryFn11, {
        cacheTime: cacheTime,
        enabled: Boolean(enabled && address && chainId),
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$var$queryKey12({ address: address , chainId: chainId , scopeKey: scopeKey  }) {
    return [
        {
            entity: "ensName",
            address: address,
            chainId: chainId,
            scopeKey: scopeKey
        }
    ];
}
function $168b680515f5196a$var$queryFn12({ queryKey: [{ address: address , chainId: chainId  }]  }) {
    if (!address) throw new Error("address is required");
    return (0, $077a864ec31a8b9f$export$2efac71bdcb05762)({
        address: address,
        chainId: chainId
    });
}
function $168b680515f5196a$export$e7302f55b2684d23({ address: address , cacheTime: cacheTime , chainId: chainId_ , enabled: enabled = true , scopeKey: scopeKey , staleTime: staleTime = 86400000 , suspense: suspense , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    return $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey12({
        address: address,
        chainId: chainId,
        scopeKey: scopeKey
    }), $168b680515f5196a$var$queryFn12, {
        cacheTime: cacheTime,
        enabled: Boolean(enabled && address && chainId),
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$var$queryKey13({ chainId: chainId , name: name , scopeKey: scopeKey  }) {
    return [
        {
            entity: "ensResolver",
            chainId: chainId,
            name: name,
            scopeKey: scopeKey,
            persist: false
        }
    ];
}
function $168b680515f5196a$var$queryFn13({ queryKey: [{ chainId: chainId , name: name  }]  }) {
    if (!name) throw new Error("name is required");
    return (0, $077a864ec31a8b9f$export$4567987d5796f84a)({
        chainId: chainId,
        name: name
    });
}
function $168b680515f5196a$export$659f7b1a330aed84({ chainId: chainId_ , name: name , enabled: enabled = true , scopeKey: scopeKey , suspense: suspense , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    return $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey13({
        chainId: chainId,
        name: name,
        scopeKey: scopeKey
    }), $168b680515f5196a$var$queryFn13, {
        cacheTime: 0,
        enabled: Boolean(enabled && chainId && name),
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$var$queryKey14({ activeChainId: activeChainId , chainId: chainId , request: request , scopeKey: scopeKey , signerAddress: signerAddress  }) {
    return [
        {
            entity: "prepareSendTransaction",
            activeChainId: activeChainId,
            chainId: chainId,
            request: request,
            scopeKey: scopeKey,
            signerAddress: signerAddress
        }
    ];
}
function $168b680515f5196a$var$queryFn14({ signer: signer  }) {
    return ({ queryKey: [{ chainId: chainId , request: request  }]  })=>{
        if (!request?.to) throw new Error("request.to is required");
        return (0, $077a864ec31a8b9f$export$e482897ca6abba1d)({
            chainId: chainId,
            request: {
                ...request,
                to: request.to
            },
            signer: signer
        });
    };
}
function $168b680515f5196a$export$f8ca5822352fabc7({ chainId: chainId , request: request , cacheTime: cacheTime , enabled: enabled = true , scopeKey: scopeKey , staleTime: staleTime = 86400000 , suspense: suspense , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const { chain: activeChain  } = $168b680515f5196a$export$553aaf59afc1a2d8();
    const { data: signer  } = $168b680515f5196a$export$9a227db3d64f1ffd({
        chainId: chainId
    });
    const prepareSendTransactionQuery = $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey14({
        activeChainId: activeChain?.id,
        chainId: chainId,
        request: request,
        scopeKey: scopeKey,
        signerAddress: signer?._address
    }), $168b680515f5196a$var$queryFn14({
        signer: signer
    }), {
        cacheTime: cacheTime,
        enabled: Boolean(enabled && signer && request && request.to),
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    return Object.assign(prepareSendTransactionQuery, {
        config: {
            request: void 0,
            mode: "prepared",
            ...prepareSendTransactionQuery.data
        }
    });
}
var $168b680515f5196a$var$mutationKey7 = (args)=>[
        {
            entity: "sendTransaction",
            ...args
        }
    ];
var $168b680515f5196a$var$mutationFn7 = ({ chainId: chainId , mode: mode , request: request  })=>{
    return (0, $077a864ec31a8b9f$export$8e0e7ffc78696d30)({
        chainId: chainId,
        mode: mode,
        request: request
    });
};
function $168b680515f5196a$export$c4f10d35244ef225({ chainId: chainId , mode: mode , request: request , onError: onError , onMutate: onMutate , onSettled: onSettled , onSuccess: onSuccess  }) {
    const { data: data , error: error , isError: isError , isIdle: isIdle , isLoading: isLoading , isSuccess: isSuccess , mutate: mutate , mutateAsync: mutateAsync , reset: reset , status: status , variables: variables  } = $168b680515f5196a$export$609860bf8b0084c($168b680515f5196a$var$mutationKey7({
        chainId: chainId,
        mode: mode,
        request: request
    }), $168b680515f5196a$var$mutationFn7, {
        onError: onError,
        onMutate: onMutate,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
    const sendTransaction2 = $d4J5n.useCallback((args)=>mutate({
            chainId: chainId,
            mode: mode,
            request: args?.recklesslySetUnpreparedRequest ?? request
        }), [
        chainId,
        mode,
        mutate,
        request
    ]);
    const sendTransactionAsync = $d4J5n.useCallback((args)=>mutateAsync({
            chainId: chainId,
            mode: mode,
            request: args?.recklesslySetUnpreparedRequest ?? request
        }), [
        chainId,
        mode,
        mutateAsync,
        request
    ]);
    return {
        data: data,
        error: error,
        isError: isError,
        isIdle: isIdle,
        isLoading: isLoading,
        isSuccess: isSuccess,
        reset: reset,
        sendTransaction: mode === "prepared" && !request ? void 0 : sendTransaction2,
        sendTransactionAsync: mode === "prepared" && !request ? void 0 : sendTransactionAsync,
        status: status,
        variables: variables
    };
}
function $168b680515f5196a$var$queryKey15({ chainId: chainId , hash: hash , scopeKey: scopeKey  }) {
    return [
        {
            entity: "transaction",
            chainId: chainId,
            hash: hash,
            scopeKey: scopeKey
        }
    ];
}
function $168b680515f5196a$var$queryFn15({ queryKey: [{ chainId: chainId , hash: hash  }]  }) {
    if (!hash) throw new Error("hash is required");
    return (0, $077a864ec31a8b9f$export$a163d2e4b7be6d57)({
        chainId: chainId,
        hash: hash
    });
}
function $168b680515f5196a$export$244eac3470cf24ad({ cacheTime: cacheTime = 0 , chainId: chainId_ , enabled: enabled = true , hash: hash , scopeKey: scopeKey , staleTime: staleTime , suspense: suspense , onError: onError , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    return $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey15({
        chainId: chainId,
        hash: hash,
        scopeKey: scopeKey
    }), $168b680515f5196a$var$queryFn15, {
        cacheTime: cacheTime,
        enabled: Boolean(enabled && hash),
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$var$queryKey16({ confirmations: confirmations , chainId: chainId , hash: hash , scopeKey: scopeKey , timeout: timeout  }) {
    return [
        {
            entity: "waitForTransaction",
            confirmations: confirmations,
            chainId: chainId,
            hash: hash,
            scopeKey: scopeKey,
            timeout: timeout
        }
    ];
}
function $168b680515f5196a$var$queryFn16({ onSpeedUp: onSpeedUp  }) {
    return ({ queryKey: [{ chainId: chainId , confirmations: confirmations , hash: hash , timeout: timeout  }]  })=>{
        if (!hash) throw new Error("hash is required");
        return (0, $077a864ec31a8b9f$export$450f7d24b3b1a222)({
            chainId: chainId,
            confirmations: confirmations,
            hash: hash,
            onSpeedUp: onSpeedUp,
            timeout: timeout
        });
    };
}
function $168b680515f5196a$export$421837b4be863851({ chainId: chainId_ , confirmations: confirmations , hash: hash , timeout: timeout , cacheTime: cacheTime , enabled: enabled = true , scopeKey: scopeKey , staleTime: staleTime , suspense: suspense , onError: onError , onSpeedUp: onSpeedUp , onSettled: onSettled , onSuccess: onSuccess  } = {}) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    return $168b680515f5196a$export$dd0a697e1782aedd($168b680515f5196a$var$queryKey16({
        chainId: chainId,
        confirmations: confirmations,
        hash: hash,
        scopeKey: scopeKey,
        timeout: timeout
    }), $168b680515f5196a$var$queryFn16({
        onSpeedUp: onSpeedUp
    }), {
        cacheTime: cacheTime,
        enabled: Boolean(enabled && hash),
        staleTime: staleTime,
        suspense: suspense,
        onError: onError,
        onSettled: onSettled,
        onSuccess: onSuccess
    });
}
function $168b680515f5196a$export$1225b17756115209({ chainId: chainId_ , enabled: enabled = true , listener: listener  }) {
    const chainId = $168b680515f5196a$export$dc276622421ed31d({
        chainId: chainId_
    });
    const provider = $168b680515f5196a$export$693cdb10cec23617({
        chainId: chainId
    });
    const webSocketProvider = $168b680515f5196a$export$1f084ca370fa3571({
        chainId: chainId
    });
    $d4J5n.useEffect(()=>{
        if (!enabled) return;
        const provider_ = webSocketProvider ?? provider;
        provider_.on("pending", listener);
        return ()=>{
            provider_.off("pending", listener);
        };
    }, [
        enabled,
        listener,
        provider,
        webSocketProvider
    ]);
}



var $d4J5n = parcelRequire("d4J5n");
var $4f96bb9b3141308a$exports = {};
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ /* global define */ (function() {
    "use strict";
    var hasOwn = {}.hasOwnProperty;
    var nativeCodeString = "[native code]";
    function classNames() {
        var classes = [];
        for(var i = 0; i < arguments.length; i++){
            var arg = arguments[i];
            if (!arg) continue;
            var argType = typeof arg;
            if (argType === "string" || argType === "number") classes.push(arg);
            else if (Array.isArray(arg)) {
                if (arg.length) {
                    var inner = classNames.apply(null, arg);
                    if (inner) classes.push(inner);
                }
            } else if (argType === "object") {
                if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
                    classes.push(arg.toString());
                    continue;
                }
                for(var key in arg)if (hasOwn.call(arg, key) && arg[key]) classes.push(key);
            }
        }
        return classes.join(" ");
    }
    if (0, $4f96bb9b3141308a$exports) {
        classNames.default = classNames;
        $4f96bb9b3141308a$exports = classNames;
    } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) // register as 'classnames', consistent with npm package name
    define("classnames", [], function() {
        return classNames;
    });
    else window.classNames = classNames;
})();


/* eslint-disable no-return-assign */ var $58451f2675491163$export$2e2bcd8739ae039 = !!(typeof window !== "undefined" && window.document && window.document.createElement);


var $a3728d7a696c5261$export$63fefd044b2bc624 = false;
var $a3728d7a696c5261$export$a614c6b395900f69 = false;
try {
    var $a3728d7a696c5261$var$options = {
        get passive () {
            return $a3728d7a696c5261$export$63fefd044b2bc624 = true;
        },
        get once () {
            // eslint-disable-next-line no-multi-assign
            return $a3728d7a696c5261$export$a614c6b395900f69 = $a3728d7a696c5261$export$63fefd044b2bc624 = true;
        }
    };
    if (0, $58451f2675491163$export$2e2bcd8739ae039) {
        window.addEventListener("test", $a3728d7a696c5261$var$options, $a3728d7a696c5261$var$options);
        window.removeEventListener("test", $a3728d7a696c5261$var$options, true);
    }
} catch (e) {
/* */ }
/**
 * An `addEventListener` ponyfill, supports the `once` option
 * 
 * @param node the element
 * @param eventName the event name
 * @param handle the handler
 * @param options event options
 */ function $a3728d7a696c5261$var$addEventListener(node, eventName, handler, options) {
    if (options && typeof options !== "boolean" && !$a3728d7a696c5261$export$a614c6b395900f69) {
        var once = options.once, capture = options.capture;
        var wrappedHandler = handler;
        if (!$a3728d7a696c5261$export$a614c6b395900f69 && once) {
            wrappedHandler = handler.__once || function onceHandler(event) {
                this.removeEventListener(eventName, onceHandler, capture);
                handler.call(this, event);
            };
            handler.__once = wrappedHandler;
        }
        node.addEventListener(eventName, wrappedHandler, $a3728d7a696c5261$export$63fefd044b2bc624 ? options : capture);
    }
    node.addEventListener(eventName, handler, options);
}
var $a3728d7a696c5261$export$2e2bcd8739ae039 = $a3728d7a696c5261$var$addEventListener;



/**
 * Returns the owner document of a given element.
 * 
 * @param node the element
 */ function $faf5fcb415a4acb7$export$2e2bcd8739ae039(node) {
    return node && node.ownerDocument || document;
}


/**
 * A `removeEventListener` ponyfill
 * 
 * @param node the element
 * @param eventName the event name
 * @param handle the handler
 * @param options event options
 */ function $2e116e2caaf7ad7a$var$removeEventListener(node, eventName, handler, options) {
    var capture = options && typeof options !== "boolean" ? options.capture : options;
    node.removeEventListener(eventName, handler, capture);
    if (handler.__once) node.removeEventListener(eventName, handler.__once, capture);
}
var $2e116e2caaf7ad7a$export$2e2bcd8739ae039 = $2e116e2caaf7ad7a$var$removeEventListener;



var $d8e53b60e2259536$var$size;
function $d8e53b60e2259536$export$2e2bcd8739ae039(recalc) {
    if (!$d8e53b60e2259536$var$size && $d8e53b60e2259536$var$size !== 0 || recalc) {
        if (0, $58451f2675491163$export$2e2bcd8739ae039) {
            var scrollDiv = document.createElement("div");
            scrollDiv.style.position = "absolute";
            scrollDiv.style.top = "-9999px";
            scrollDiv.style.width = "50px";
            scrollDiv.style.height = "50px";
            scrollDiv.style.overflow = "scroll";
            document.body.appendChild(scrollDiv);
            $d8e53b60e2259536$var$size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
            document.body.removeChild(scrollDiv);
        }
    }
    return $d8e53b60e2259536$var$size;
}



var $d4J5n = parcelRequire("d4J5n");
function $34a1e439cec2030f$export$2e2bcd8739ae039() {
    return (0, $d4J5n.useState)(null);
}



var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");
/**
 * Creates a `Ref` whose value is updated in an effect, ensuring the most recent
 * value is the one rendered with. Generally only required for Concurrent mode usage
 * where previous work in `render()` may be discarded before being used.
 *
 * This is safe to access in an event handler.
 *
 * @param value The `Ref` value
 */ function $6b2b8cca0659d383$var$useCommittedRef(value) {
    var ref = (0, $d4J5n.useRef)(value);
    (0, $d4J5n.useEffect)(function() {
        ref.current = value;
    }, [
        value
    ]);
    return ref;
}
var $6b2b8cca0659d383$export$2e2bcd8739ae039 = $6b2b8cca0659d383$var$useCommittedRef;


function $68afd5c9279b438e$export$2e2bcd8739ae039(fn) {
    var ref = (0, $6b2b8cca0659d383$export$2e2bcd8739ae039)(fn);
    return (0, $d4J5n.useCallback)(function() {
        return ref.current && ref.current.apply(ref, arguments);
    }, [
        ref
    ]);
}



var $d4J5n = parcelRequire("d4J5n");
var $a9894662a4aebec5$var$toFnRef = function toFnRef(ref) {
    return !ref || typeof ref === "function" ? ref : function(value) {
        ref.current = value;
    };
};
function $a9894662a4aebec5$export$c9058316764c140e(refA, refB) {
    var a = $a9894662a4aebec5$var$toFnRef(refA);
    var b = $a9894662a4aebec5$var$toFnRef(refB);
    return function(value) {
        if (a) a(value);
        if (b) b(value);
    };
}
/**
 * Create and returns a single callback ref composed from two other Refs.
 *
 * ```tsx
 * const Button = React.forwardRef((props, ref) => {
 *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();
 *   const mergedRef = useMergedRefs(ref, attachRef);
 *
 *   return <button ref={mergedRef} {...props}/>
 * })
 * ```
 *
 * @param refA A Callback or mutable Ref
 * @param refB A Callback or mutable Ref
 * @category refs
 */ function $a9894662a4aebec5$var$useMergedRefs(refA, refB) {
    return (0, $d4J5n.useMemo)(function() {
        return $a9894662a4aebec5$export$c9058316764c140e(refA, refB);
    }, [
        refA,
        refB
    ]);
}
var $a9894662a4aebec5$export$2e2bcd8739ae039 = $a9894662a4aebec5$var$useMergedRefs;



var $d4J5n = parcelRequire("d4J5n");
function $887ec243063c80da$export$2e2bcd8739ae039(value) {
    var valueRef = (0, $d4J5n.useRef)(value);
    valueRef.current = value;
    return valueRef;
}



var $d4J5n = parcelRequire("d4J5n");
function $4c6f8169c25b62ff$export$2e2bcd8739ae039(fn) {
    var onUnmount = (0, $887ec243063c80da$export$2e2bcd8739ae039)(fn);
    (0, $d4J5n.useEffect)(function() {
        return function() {
            return onUnmount.current();
        };
    }, []);
}



function $a7e4fd235e93932f$export$2e2bcd8739ae039(node) {
    var doc = (0, $faf5fcb415a4acb7$export$2e2bcd8739ae039)(node);
    return doc && doc.defaultView || window;
}


function $7f000679841b216a$export$2e2bcd8739ae039(node, psuedoElement) {
    return (0, $a7e4fd235e93932f$export$2e2bcd8739ae039)(node).getComputedStyle(node, psuedoElement);
}


/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js
 */ var $2ed54cfe976b5504$var$rUpper = /([A-Z])/g;
function $2ed54cfe976b5504$export$2e2bcd8739ae039(string) {
    return string.replace($2ed54cfe976b5504$var$rUpper, "-$1").toLowerCase();
}


var $51e0826a530b70ec$var$msPattern = /^ms-/;
function $51e0826a530b70ec$export$2e2bcd8739ae039(string) {
    return (0, $2ed54cfe976b5504$export$2e2bcd8739ae039)(string).replace($51e0826a530b70ec$var$msPattern, "-ms-");
}


var $1d7be15c2283fd1b$var$supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;
function $1d7be15c2283fd1b$export$2e2bcd8739ae039(value) {
    return !!(value && $1d7be15c2283fd1b$var$supportedTransforms.test(value));
}


function $38cb2da359586ba6$var$style(node, property) {
    var css = "";
    var transforms = "";
    if (typeof property === "string") return node.style.getPropertyValue((0, $51e0826a530b70ec$export$2e2bcd8739ae039)(property)) || (0, $7f000679841b216a$export$2e2bcd8739ae039)(node).getPropertyValue((0, $51e0826a530b70ec$export$2e2bcd8739ae039)(property));
    Object.keys(property).forEach(function(key) {
        var value = property[key];
        if (!value && value !== 0) node.style.removeProperty((0, $51e0826a530b70ec$export$2e2bcd8739ae039)(key));
        else if ((0, $1d7be15c2283fd1b$export$2e2bcd8739ae039)(key)) transforms += key + "(" + value + ") ";
        else css += (0, $51e0826a530b70ec$export$2e2bcd8739ae039)(key) + ": " + value + ";";
    });
    if (transforms) css += "transform: " + transforms + ";";
    node.style.cssText += ";" + css;
}
var $38cb2da359586ba6$export$2e2bcd8739ae039 = $38cb2da359586ba6$var$style;




function $5cd5956423aa7273$var$listen(node, eventName, handler, options) {
    (0, $a3728d7a696c5261$export$2e2bcd8739ae039)(node, eventName, handler, options);
    return function() {
        (0, $2e116e2caaf7ad7a$export$2e2bcd8739ae039)(node, eventName, handler, options);
    };
}
var $5cd5956423aa7273$export$2e2bcd8739ae039 = $5cd5956423aa7273$var$listen;


/**
 * Triggers an event on a given element.
 * 
 * @param node the element
 * @param eventName the event name to trigger
 * @param bubbles whether the event should bubble up
 * @param cancelable whether the event should be cancelable
 */ function $ac20ef9e83b60dfa$export$2e2bcd8739ae039(node, eventName, bubbles, cancelable) {
    if (bubbles === void 0) bubbles = false;
    if (cancelable === void 0) cancelable = true;
    if (node) {
        var event = document.createEvent("HTMLEvents");
        event.initEvent(eventName, bubbles, cancelable);
        node.dispatchEvent(event);
    }
}


function $4e71cc95161d08ad$var$parseDuration(node) {
    var str = (0, $38cb2da359586ba6$export$2e2bcd8739ae039)(node, "transitionDuration") || "";
    var mult = str.indexOf("ms") === -1 ? 1000 : 1;
    return parseFloat(str) * mult;
}
function $4e71cc95161d08ad$var$emulateTransitionEnd(element, duration, padding) {
    if (padding === void 0) padding = 5;
    var called = false;
    var handle = setTimeout(function() {
        if (!called) (0, $ac20ef9e83b60dfa$export$2e2bcd8739ae039)(element, "transitionend", true);
    }, duration + padding);
    var remove = (0, $5cd5956423aa7273$export$2e2bcd8739ae039)(element, "transitionend", function() {
        called = true;
    }, {
        once: true
    });
    return function() {
        clearTimeout(handle);
        remove();
    };
}
function $4e71cc95161d08ad$export$2e2bcd8739ae039(element, handler, duration, padding) {
    if (duration == null) duration = $4e71cc95161d08ad$var$parseDuration(element) || 0;
    var removeEmulate = $4e71cc95161d08ad$var$emulateTransitionEnd(element, duration, padding);
    var remove = (0, $5cd5956423aa7273$export$2e2bcd8739ae039)(element, "transitionend", handler);
    return function() {
        removeEmulate();
        remove();
    };
}



var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");

function $db83e6d2eac2d5d3$export$2e2bcd8739ae039(doc) {
    if (doc === void 0) doc = (0, $faf5fcb415a4acb7$export$2e2bcd8739ae039)();
    // Support: IE 9 only
    // IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
    try {
        var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing
        // document.activeElement from an <iframe>
        if (!active || !active.nodeName) return null;
        return active;
    } catch (e) {
        /* ie throws if no active element */ return doc.body;
    }
}


/* eslint-disable no-bitwise, no-cond-assign */ /**
 * Checks if an element contains another given element.
 * 
 * @param context the context element
 * @param node the element to check
 */ function $a0159a063b152c6b$export$2e2bcd8739ae039(context, node) {
    // HTML DOM and SVG DOM may have different support levels,
    // so we need to check on context instead of a document root element.
    if (context.contains) return context.contains(node);
    if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);
}





var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");
function $c1016c3ed292ce8c$export$2e2bcd8739ae039() {
    var mounted = (0, $d4J5n.useRef)(true);
    var isMounted = (0, $d4J5n.useRef)(function() {
        return mounted.current;
    });
    (0, $d4J5n.useEffect)(function() {
        mounted.current = true;
        return function() {
            mounted.current = false;
        };
    }, []);
    return isMounted.current;
}




var $d4J5n = parcelRequire("d4J5n");
function $80bb719e1b4dbca8$export$2e2bcd8739ae039(value) {
    var ref = (0, $d4J5n.useRef)(null);
    (0, $d4J5n.useEffect)(function() {
        ref.current = value;
    });
    return ref.current;
}




const $c70750af2cc7912b$export$fd7bcb7e9bef4e8a = `data-rr-ui-`;
const $c70750af2cc7912b$export$635202801f9383a0 = `rrUi`;
function $c70750af2cc7912b$export$5cc3b7b83e34ade7(property) {
    return `${$c70750af2cc7912b$export$fd7bcb7e9bef4e8a}${property}`;
}
function $c70750af2cc7912b$export$7776c0a7cd2eb3e0(property) {
    return `${$c70750af2cc7912b$export$635202801f9383a0}${property}`;
}


/**
 * Get the width of the vertical window scrollbar if it's visible
 */ function $d49278ce2ad6dd01$export$2e2bcd8739ae039(ownerDocument = document) {
    const window = ownerDocument.defaultView;
    return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);
}


const $7ed3c25f7b0554d2$export$1a88c12b8b979fa0 = (0, $c70750af2cc7912b$export$5cc3b7b83e34ade7)("modal-open");
/**
 * Manages a stack of Modals as well as ensuring
 * body scrolling is is disabled and padding accounted for
 */ class $7ed3c25f7b0554d2$var$ModalManager {
    constructor({ ownerDocument: ownerDocument , handleContainerOverflow: handleContainerOverflow = true , isRTL: isRTL = false  } = {}){
        this.handleContainerOverflow = handleContainerOverflow;
        this.isRTL = isRTL;
        this.modals = [];
        this.ownerDocument = ownerDocument;
    }
    getScrollbarWidth() {
        return (0, $d49278ce2ad6dd01$export$2e2bcd8739ae039)(this.ownerDocument);
    }
    getElement() {
        return (this.ownerDocument || document).body;
    }
    setModalAttributes(_modal) {
    // For overriding
    }
    removeModalAttributes(_modal) {
    // For overriding
    }
    setContainerStyle(containerState) {
        const style = {
            overflow: "hidden"
        };
        // we are only interested in the actual `style` here
        // because we will override it
        const paddingProp = this.isRTL ? "paddingLeft" : "paddingRight";
        const container = this.getElement();
        containerState.style = {
            overflow: container.style.overflow,
            [paddingProp]: container.style[paddingProp]
        };
        if (containerState.scrollBarWidth) // use computed style, here to get the real padding
        // to add our scrollbar width
        style[paddingProp] = `${parseInt((0, $38cb2da359586ba6$export$2e2bcd8739ae039)(container, paddingProp) || "0", 10) + containerState.scrollBarWidth}px`;
        container.setAttribute($7ed3c25f7b0554d2$export$1a88c12b8b979fa0, "");
        (0, $38cb2da359586ba6$export$2e2bcd8739ae039)(container, style);
    }
    reset() {
        [
            ...this.modals
        ].forEach((m)=>this.remove(m));
    }
    removeContainerStyle(containerState) {
        const container = this.getElement();
        container.removeAttribute($7ed3c25f7b0554d2$export$1a88c12b8b979fa0);
        Object.assign(container.style, containerState.style);
    }
    add(modal) {
        let modalIdx = this.modals.indexOf(modal);
        if (modalIdx !== -1) return modalIdx;
        modalIdx = this.modals.length;
        this.modals.push(modal);
        this.setModalAttributes(modal);
        if (modalIdx !== 0) return modalIdx;
        this.state = {
            scrollBarWidth: this.getScrollbarWidth(),
            style: {}
        };
        if (this.handleContainerOverflow) this.setContainerStyle(this.state);
        return modalIdx;
    }
    remove(modal) {
        const modalIdx = this.modals.indexOf(modal);
        if (modalIdx === -1) return;
        this.modals.splice(modalIdx, 1);
        // if that was the last modal in a container,
        // clean up the container
        if (!this.modals.length && this.handleContainerOverflow) this.removeContainerStyle(this.state);
        this.removeModalAttributes(modal);
    }
    isTopModal(modal) {
        return !!this.modals.length && this.modals[this.modals.length - 1] === modal;
    }
}
var $7ed3c25f7b0554d2$export$2e2bcd8739ae039 = $7ed3c25f7b0554d2$var$ModalManager;





var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");

const $91885701e67952e7$var$Context = /*#__PURE__*/ (0, $d4J5n.createContext)((0, $58451f2675491163$export$2e2bcd8739ae039) ? window : undefined);
const $91885701e67952e7$export$f7d306aeb1cf5fbc = $91885701e67952e7$var$Context.Provider;
function $91885701e67952e7$export$2e2bcd8739ae039() {
    return (0, $d4J5n.useContext)($91885701e67952e7$var$Context);
}


const $9c7ecb213823f82d$export$c91fd81e6d65f84a = (ref, document)=>{
    if (!(0, $58451f2675491163$export$2e2bcd8739ae039)) return null;
    if (ref == null) return (document || (0, $faf5fcb415a4acb7$export$2e2bcd8739ae039)()).body;
    if (typeof ref === "function") ref = ref();
    if (ref && "current" in ref) ref = ref.current;
    if (ref && ("nodeType" in ref || ref.getBoundingClientRect)) return ref;
    return null;
};
function $9c7ecb213823f82d$export$2e2bcd8739ae039(ref, onResolved) {
    const window = (0, $91885701e67952e7$export$2e2bcd8739ae039)();
    const [resolvedRef, setRef] = (0, $d4J5n.useState)(()=>$9c7ecb213823f82d$export$c91fd81e6d65f84a(ref, window == null ? void 0 : window.document));
    if (!resolvedRef) {
        const earlyRef = $9c7ecb213823f82d$export$c91fd81e6d65f84a(ref);
        if (earlyRef) setRef(earlyRef);
    }
    (0, $d4J5n.useEffect)(()=>{
        if (onResolved && resolvedRef) onResolved(resolvedRef);
    }, [
        onResolved,
        resolvedRef
    ]);
    (0, $d4J5n.useEffect)(()=>{
        const nextRef = $9c7ecb213823f82d$export$c91fd81e6d65f84a(ref);
        if (nextRef !== resolvedRef) setRef(nextRef);
    }, [
        ref,
        resolvedRef
    ]);
    return resolvedRef;
}






var $d4J5n = parcelRequire("d4J5n");
var $26361069f244b9de$var$isReactNative = typeof $parcel$global !== "undefined" && // @ts-ignore
$parcel$global.navigator && // @ts-ignore
$parcel$global.navigator.product === "ReactNative";
var $26361069f244b9de$var$isDOM = typeof document !== "undefined";
var /**
 * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect
 * Only useful to avoid the console warning.
 *
 * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.
 *
 * @category effects
 */ $26361069f244b9de$export$2e2bcd8739ae039 = $26361069f244b9de$var$isDOM || $26361069f244b9de$var$isReactNative ? (0, $d4J5n.useLayoutEffect) : (0, $d4J5n.useEffect);



var $d4J5n = parcelRequire("d4J5n");



var $d4J5n = parcelRequire("d4J5n");
function $b912932c83bc02bb$var$NoopTransition({ children: children , in: inProp , onExited: onExited , mountOnEnter: mountOnEnter , unmountOnExit: unmountOnExit  }) {
    const ref = (0, $d4J5n.useRef)(null);
    const hasEnteredRef = (0, $d4J5n.useRef)(inProp);
    const handleExited = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)(onExited);
    (0, $d4J5n.useEffect)(()=>{
        if (inProp) hasEnteredRef.current = true;
        else handleExited(ref.current);
    }, [
        inProp,
        handleExited
    ]);
    const combinedRef = (0, $a9894662a4aebec5$export$2e2bcd8739ae039)(ref, children.ref);
    const child = /*#__PURE__*/ (0, $d4J5n.cloneElement)(children, {
        ref: combinedRef
    });
    if (inProp) return child;
    if (unmountOnExit) return null;
    if (!hasEnteredRef.current && mountOnEnter) return null;
    return child;
}
var $b912932c83bc02bb$export$2e2bcd8739ae039 = $b912932c83bc02bb$var$NoopTransition;



function $e199ad1e49a29bc3$export$7b286972b8d8ccbf({ in: inProp , onTransition: onTransition  }) {
    const ref = (0, $d4J5n.useRef)(null);
    const isInitialRef = (0, $d4J5n.useRef)(true);
    const handleTransition = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)(onTransition);
    (0, $26361069f244b9de$export$2e2bcd8739ae039)(()=>{
        if (!ref.current) return undefined;
        let stale = false;
        handleTransition({
            in: inProp,
            element: ref.current,
            initial: isInitialRef.current,
            isStale: ()=>stale
        });
        return ()=>{
            stale = true;
        };
    }, [
        inProp,
        handleTransition
    ]);
    (0, $26361069f244b9de$export$2e2bcd8739ae039)(()=>{
        isInitialRef.current = false;
        // this is for strict mode
        return ()=>{
            isInitialRef.current = true;
        };
    }, []);
    return ref;
}
function $e199ad1e49a29bc3$export$2e2bcd8739ae039({ children: children , in: inProp , onExited: onExited , onEntered: onEntered , transition: transition  }) {
    const [exited, setExited] = (0, $d4J5n.useState)(!inProp);
    // TODO: I think this needs to be in an effect
    if (inProp && exited) setExited(false);
    const ref = $e199ad1e49a29bc3$export$7b286972b8d8ccbf({
        in: !!inProp,
        onTransition: (options)=>{
            const onFinish = ()=>{
                if (options.isStale()) return;
                if (options.in) onEntered == null || onEntered(options.element, options.initial);
                else {
                    setExited(true);
                    onExited == null || onExited(options.element);
                }
            };
            Promise.resolve(transition(options)).then(onFinish, (error)=>{
                if (!options.in) setExited(true);
                throw error;
            });
        }
    });
    const combinedRef = (0, $a9894662a4aebec5$export$2e2bcd8739ae039)(ref, children.ref);
    return exited && !inProp ? null : /*#__PURE__*/ (0, $d4J5n.cloneElement)(children, {
        ref: combinedRef
    });
}
function $e199ad1e49a29bc3$export$f41d64aae6d6dba5(Component, runTransition, props) {
    if (Component) return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Component, Object.assign({}, props));
    if (runTransition) return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)($e199ad1e49a29bc3$export$2e2bcd8739ae039, Object.assign({}, props, {
        transition: runTransition
    }));
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $b912932c83bc02bb$export$2e2bcd8739ae039), Object.assign({}, props));
}





const $7194a28e54962c89$var$_excluded = [
    "show",
    "role",
    "className",
    "style",
    "children",
    "backdrop",
    "keyboard",
    "onBackdropClick",
    "onEscapeKeyDown",
    "transition",
    "runTransition",
    "backdropTransition",
    "runBackdropTransition",
    "autoFocus",
    "enforceFocus",
    "restoreFocus",
    "restoreFocusOptions",
    "renderDialog",
    "renderBackdrop",
    "manager",
    "container",
    "onShow",
    "onHide",
    "onExit",
    "onExited",
    "onExiting",
    "onEnter",
    "onEntering",
    "onEntered"
];
function $7194a28e54962c89$var$_objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
let $7194a28e54962c89$var$manager;
function $7194a28e54962c89$var$getManager(window) {
    if (!$7194a28e54962c89$var$manager) $7194a28e54962c89$var$manager = new (0, $7ed3c25f7b0554d2$export$2e2bcd8739ae039)({
        ownerDocument: window == null ? void 0 : window.document
    });
    return $7194a28e54962c89$var$manager;
}
function $7194a28e54962c89$var$useModalManager(provided) {
    const window = (0, $91885701e67952e7$export$2e2bcd8739ae039)();
    const modalManager = provided || $7194a28e54962c89$var$getManager(window);
    const modal = (0, $d4J5n.useRef)({
        dialog: null,
        backdrop: null
    });
    return Object.assign(modal.current, {
        add: ()=>modalManager.add(modal.current),
        remove: ()=>modalManager.remove(modal.current),
        isTopModal: ()=>modalManager.isTopModal(modal.current),
        setDialogRef: (0, $d4J5n.useCallback)((ref)=>{
            modal.current.dialog = ref;
        }, []),
        setBackdropRef: (0, $d4J5n.useCallback)((ref)=>{
            modal.current.backdrop = ref;
        }, [])
    });
}
const $7194a28e54962c89$var$Modal = /*#__PURE__*/ (0, $d4J5n.forwardRef)((_ref, ref)=>{
    let { show: show = false , role: role = "dialog" , className: className , style: style , children: children , backdrop: backdrop = true , keyboard: keyboard = true , onBackdropClick: onBackdropClick , onEscapeKeyDown: onEscapeKeyDown , transition: transition , runTransition: runTransition , backdropTransition: backdropTransition , runBackdropTransition: runBackdropTransition , autoFocus: autoFocus = true , enforceFocus: enforceFocus = true , restoreFocus: restoreFocus = true , restoreFocusOptions: restoreFocusOptions , renderDialog: renderDialog , renderBackdrop: renderBackdrop = (props)=>/*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", Object.assign({}, props)) , manager: providedManager , container: containerRef , onShow: onShow , onHide: onHide = ()=>{} , onExit: onExit , onExited: onExited , onExiting: onExiting , onEnter: onEnter , onEntering: onEntering , onEntered: onEntered  } = _ref, rest = $7194a28e54962c89$var$_objectWithoutPropertiesLoose(_ref, $7194a28e54962c89$var$_excluded);
    const container = (0, $9c7ecb213823f82d$export$2e2bcd8739ae039)(containerRef);
    const modal = $7194a28e54962c89$var$useModalManager(providedManager);
    const isMounted = (0, $c1016c3ed292ce8c$export$2e2bcd8739ae039)();
    const prevShow = (0, $80bb719e1b4dbca8$export$2e2bcd8739ae039)(show);
    const [exited, setExited] = (0, $d4J5n.useState)(!show);
    const lastFocusRef = (0, $d4J5n.useRef)(null);
    (0, $d4J5n.useImperativeHandle)(ref, ()=>modal, [
        modal
    ]);
    if ((0, $58451f2675491163$export$2e2bcd8739ae039) && !prevShow && show) lastFocusRef.current = (0, $db83e6d2eac2d5d3$export$2e2bcd8739ae039)();
    // TODO: I think this needs to be in an effect
    if (show && exited) setExited(false);
    const handleShow = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)(()=>{
        modal.add();
        removeKeydownListenerRef.current = (0, $5cd5956423aa7273$export$2e2bcd8739ae039)(document, "keydown", handleDocumentKeyDown);
        removeFocusListenerRef.current = (0, $5cd5956423aa7273$export$2e2bcd8739ae039)(document, "focus", // the timeout is necessary b/c this will run before the new modal is mounted
        // and so steals focus from it
        ()=>setTimeout(handleEnforceFocus), true);
        if (onShow) onShow();
        // autofocus after onShow to not trigger a focus event for previous
        // modals before this one is shown.
        if (autoFocus) {
            const currentActiveElement = (0, $db83e6d2eac2d5d3$export$2e2bcd8739ae039)(document);
            if (modal.dialog && currentActiveElement && !(0, $a0159a063b152c6b$export$2e2bcd8739ae039)(modal.dialog, currentActiveElement)) {
                lastFocusRef.current = currentActiveElement;
                modal.dialog.focus();
            }
        }
    });
    const handleHide = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)(()=>{
        modal.remove();
        removeKeydownListenerRef.current == null || removeKeydownListenerRef.current();
        removeFocusListenerRef.current == null || removeFocusListenerRef.current();
        if (restoreFocus) {
            var _lastFocusRef$current;
            // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)
            (_lastFocusRef$current = lastFocusRef.current) == null || _lastFocusRef$current.focus == null || _lastFocusRef$current.focus(restoreFocusOptions);
            lastFocusRef.current = null;
        }
    });
    // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120
    // Show logic when:
    //  - show is `true` _and_ `container` has resolved
    (0, $d4J5n.useEffect)(()=>{
        if (!show || !container) return;
        handleShow();
    }, [
        show,
        container,
        /* should never change: */ handleShow
    ]);
    // Hide cleanup logic when:
    //  - `exited` switches to true
    //  - component unmounts;
    (0, $d4J5n.useEffect)(()=>{
        if (!exited) return;
        handleHide();
    }, [
        exited,
        handleHide
    ]);
    (0, $4c6f8169c25b62ff$export$2e2bcd8739ae039)(()=>{
        handleHide();
    });
    // --------------------------------
    const handleEnforceFocus = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)(()=>{
        if (!enforceFocus || !isMounted() || !modal.isTopModal()) return;
        const currentActiveElement = (0, $db83e6d2eac2d5d3$export$2e2bcd8739ae039)();
        if (modal.dialog && currentActiveElement && !(0, $a0159a063b152c6b$export$2e2bcd8739ae039)(modal.dialog, currentActiveElement)) modal.dialog.focus();
    });
    const handleBackdropClick = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)((e)=>{
        if (e.target !== e.currentTarget) return;
        onBackdropClick == null || onBackdropClick(e);
        if (backdrop === true) onHide();
    });
    const handleDocumentKeyDown = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)((e)=>{
        if (keyboard && e.keyCode === 27 && modal.isTopModal()) {
            onEscapeKeyDown == null || onEscapeKeyDown(e);
            if (!e.defaultPrevented) onHide();
        }
    });
    const removeFocusListenerRef = (0, $d4J5n.useRef)();
    const removeKeydownListenerRef = (0, $d4J5n.useRef)();
    const handleHidden = (...args)=>{
        setExited(true);
        onExited == null || onExited(...args);
    };
    if (!container) return null;
    const dialogProps = Object.assign({
        role: role,
        ref: modal.setDialogRef,
        // apparently only works on the dialog role element
        "aria-modal": role === "dialog" ? true : undefined
    }, rest, {
        style: style,
        className: className,
        tabIndex: -1
    });
    let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", Object.assign({}, dialogProps, {
        children: /*#__PURE__*/ $d4J5n.cloneElement(children, {
            role: "document"
        })
    }));
    dialog = (0, $e199ad1e49a29bc3$export$f41d64aae6d6dba5)(transition, runTransition, {
        unmountOnExit: true,
        mountOnEnter: true,
        appear: true,
        in: !!show,
        onExit: onExit,
        onExiting: onExiting,
        onExited: handleHidden,
        onEnter: onEnter,
        onEntering: onEntering,
        onEntered: onEntered,
        children: dialog
    });
    let backdropElement = null;
    if (backdrop) {
        backdropElement = renderBackdrop({
            ref: modal.setBackdropRef,
            onClick: handleBackdropClick
        });
        backdropElement = (0, $e199ad1e49a29bc3$export$f41d64aae6d6dba5)(backdropTransition, runBackdropTransition, {
            in: !!show,
            appear: true,
            mountOnEnter: true,
            unmountOnExit: true,
            children: backdropElement
        });
    }
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $17b288f07ec57b56$exports.Fragment), {
        children: /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($4723f549251dd88b$exports))).createPortal(/*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)((0, $17b288f07ec57b56$exports.Fragment), {
            children: [
                backdropElement,
                dialog
            ]
        }), container)
    });
});
$7194a28e54962c89$var$Modal.displayName = "Modal";
var $7194a28e54962c89$export$2e2bcd8739ae039 = Object.assign($7194a28e54962c89$var$Modal, {
    Manager: (0, $7ed3c25f7b0554d2$export$2e2bcd8739ae039)
});


/**
 * Checks if a given element has a CSS class.
 * 
 * @param element the element
 * @param className the CSS class name
 */ function $f8a618a7f523a685$export$2e2bcd8739ae039(element, className) {
    if (element.classList) return !!className && element.classList.contains(className);
    return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}


function $89f3f3a91355b194$export$2e2bcd8739ae039(element, className) {
    if (element.classList) element.classList.add(className);
    else if (!(0, $f8a618a7f523a685$export$2e2bcd8739ae039)(element, className)) {
        if (typeof element.className === "string") element.className = element.className + " " + className;
        else element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
    }
}



var $7c9dd8f4e017282f$var$toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);
function $7c9dd8f4e017282f$export$2e2bcd8739ae039(element, selector) {
    return $7c9dd8f4e017282f$var$toArray(element.querySelectorAll(selector));
}


function $bc1801a5565f056e$var$replaceClassName(origClass, classToRemove) {
    return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function $bc1801a5565f056e$export$2e2bcd8739ae039(element, className) {
    if (element.classList) element.classList.remove(className);
    else if (typeof element.className === "string") element.className = $bc1801a5565f056e$var$replaceClassName(element.className, className);
    else element.setAttribute("class", $bc1801a5565f056e$var$replaceClassName(element.className && element.className.baseVal || "", className));
}



const $fc1f0fe9258b3196$var$Selector = {
    FIXED_CONTENT: ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
    STICKY_CONTENT: ".sticky-top",
    NAVBAR_TOGGLER: ".navbar-toggler"
};
class $fc1f0fe9258b3196$var$BootstrapModalManager extends (0, $7ed3c25f7b0554d2$export$2e2bcd8739ae039) {
    adjustAndStore(prop, element, adjust) {
        const actual = element.style[prop];
        // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible
        // @ts-ignore
        element.dataset[prop] = actual;
        (0, $38cb2da359586ba6$export$2e2bcd8739ae039)(element, {
            [prop]: `${parseFloat((0, $38cb2da359586ba6$export$2e2bcd8739ae039)(element, prop)) + adjust}px`
        });
    }
    restore(prop, element) {
        const value = element.dataset[prop];
        if (value !== undefined) {
            delete element.dataset[prop];
            (0, $38cb2da359586ba6$export$2e2bcd8739ae039)(element, {
                [prop]: value
            });
        }
    }
    setContainerStyle(containerState) {
        super.setContainerStyle(containerState);
        const container = this.getElement();
        (0, $89f3f3a91355b194$export$2e2bcd8739ae039)(container, "modal-open");
        if (!containerState.scrollBarWidth) return;
        const paddingProp = this.isRTL ? "paddingLeft" : "paddingRight";
        const marginProp = this.isRTL ? "marginLeft" : "marginRight";
        (0, $7c9dd8f4e017282f$export$2e2bcd8739ae039)(container, $fc1f0fe9258b3196$var$Selector.FIXED_CONTENT).forEach((el)=>this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));
        (0, $7c9dd8f4e017282f$export$2e2bcd8739ae039)(container, $fc1f0fe9258b3196$var$Selector.STICKY_CONTENT).forEach((el)=>this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));
        (0, $7c9dd8f4e017282f$export$2e2bcd8739ae039)(container, $fc1f0fe9258b3196$var$Selector.NAVBAR_TOGGLER).forEach((el)=>this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));
    }
    removeContainerStyle(containerState) {
        super.removeContainerStyle(containerState);
        const container = this.getElement();
        (0, $bc1801a5565f056e$export$2e2bcd8739ae039)(container, "modal-open");
        const paddingProp = this.isRTL ? "paddingLeft" : "paddingRight";
        const marginProp = this.isRTL ? "marginLeft" : "marginRight";
        (0, $7c9dd8f4e017282f$export$2e2bcd8739ae039)(container, $fc1f0fe9258b3196$var$Selector.FIXED_CONTENT).forEach((el)=>this.restore(paddingProp, el));
        (0, $7c9dd8f4e017282f$export$2e2bcd8739ae039)(container, $fc1f0fe9258b3196$var$Selector.STICKY_CONTENT).forEach((el)=>this.restore(marginProp, el));
        (0, $7c9dd8f4e017282f$export$2e2bcd8739ae039)(container, $fc1f0fe9258b3196$var$Selector.NAVBAR_TOGGLER).forEach((el)=>this.restore(marginProp, el));
    }
}
let $fc1f0fe9258b3196$var$sharedManager;
function $fc1f0fe9258b3196$export$a03641438014b436(options) {
    if (!$fc1f0fe9258b3196$var$sharedManager) $fc1f0fe9258b3196$var$sharedManager = new $fc1f0fe9258b3196$var$BootstrapModalManager(options);
    return $fc1f0fe9258b3196$var$sharedManager;
}
var $fc1f0fe9258b3196$export$2e2bcd8739ae039 = $fc1f0fe9258b3196$var$BootstrapModalManager;




var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");
function $746383c9ca16b298$export$2e2bcd8739ae039(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}


function $5ec05790c66d983c$export$2e2bcd8739ae039(o, p) {
    $5ec05790c66d983c$export$2e2bcd8739ae039 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return $5ec05790c66d983c$export$2e2bcd8739ae039(o, p);
}


function $b23bf179b32f510c$export$2e2bcd8739ae039(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    (0, $5ec05790c66d983c$export$2e2bcd8739ae039)(subClass, superClass);
}




var $d4J5n = parcelRequire("d4J5n");

var $d6f4fa15f047b29a$export$2e2bcd8739ae039 = {
    disabled: false
};




var $d4J5n = parcelRequire("d4J5n");
var $f7573ca97d71f4ae$export$2e2bcd8739ae039 = (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).createContext(null);


var $2887d0e90505b157$export$7d26bbb1236dafd6 = function forceReflow(node) {
    return node.scrollTop;
};


var $3f4090778342b254$export$bb38bb9a1161268 = "unmounted";
var $3f4090778342b254$export$84cbff306f539230 = "exited";
var $3f4090778342b254$export$df38205c966be359 = "entering";
var $3f4090778342b254$export$78e9e6e3e014d60a = "entered";
var $3f4090778342b254$export$4aacc83d4d59139f = "exiting";
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */ var $3f4090778342b254$var$Transition = /*#__PURE__*/ function(_React$Component) {
    (0, $b23bf179b32f510c$export$2e2bcd8739ae039)(Transition, _React$Component);
    function Transition(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context; // In the context of a TransitionGroup all enters are really appears
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
            if (appear) {
                initialStatus = $3f4090778342b254$export$84cbff306f539230;
                _this.appearStatus = $3f4090778342b254$export$df38205c966be359;
            } else initialStatus = $3f4090778342b254$export$78e9e6e3e014d60a;
        } else if (props.unmountOnExit || props.mountOnEnter) initialStatus = $3f4090778342b254$export$bb38bb9a1161268;
        else initialStatus = $3f4090778342b254$export$84cbff306f539230;
        _this.state = {
            status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
    }
    Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === $3f4090778342b254$export$bb38bb9a1161268) return {
            status: $3f4090778342b254$export$84cbff306f539230
        };
        return null;
    } // getSnapshotBeforeUpdate(prevProps) {
    ;
    var _proto = Transition.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
            var status = this.state.status;
            if (this.props.in) {
                if (status !== $3f4090778342b254$export$df38205c966be359 && status !== $3f4090778342b254$export$78e9e6e3e014d60a) nextStatus = $3f4090778342b254$export$df38205c966be359;
            } else if (status === $3f4090778342b254$export$df38205c966be359 || status === $3f4090778342b254$export$78e9e6e3e014d60a) nextStatus = $3f4090778342b254$export$4aacc83d4d59139f;
        }
        this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== "number") {
            exit = timeout.exit;
            enter = timeout.enter; // TODO: remove fallback for next major
            appear = timeout.appear !== undefined ? timeout.appear : enter;
        }
        return {
            exit: exit,
            enter: enter,
            appear: appear
        };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) mounting = false;
        if (nextStatus !== null) {
            // nextStatus will always be ENTERING or EXITING.
            this.cancelNextCallback();
            if (nextStatus === $3f4090778342b254$export$df38205c966be359) {
                if (this.props.unmountOnExit || this.props.mountOnEnter) {
                    var node = this.props.nodeRef ? this.props.nodeRef.current : (0, (/*@__PURE__*/$parcel$interopDefault($4723f549251dd88b$exports))).findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749
                    // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.
                    // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.
                    if (node) (0, $2887d0e90505b157$export$7d26bbb1236dafd6)(node);
                }
                this.performEnter(mounting);
            } else this.performExit();
        } else if (this.props.unmountOnExit && this.state.status === $3f4090778342b254$export$84cbff306f539230) this.setState({
            status: $3f4090778342b254$export$bb38bb9a1161268
        });
    };
    _proto.performEnter = function performEnter(mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context ? this.context.isMounting : mounting;
        var _ref2 = this.props.nodeRef ? [
            appearing
        ] : [
            (0, (/*@__PURE__*/$parcel$interopDefault($4723f549251dd88b$exports))).findDOMNode(this),
            appearing
        ], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
        // if we are mounting and running this it means appear _must_ be set
        if (!mounting && !enter || (0, $d6f4fa15f047b29a$export$2e2bcd8739ae039).disabled) {
            this.safeSetState({
                status: $3f4090778342b254$export$78e9e6e3e014d60a
            }, function() {
                _this2.props.onEntered(maybeNode);
            });
            return;
        }
        this.props.onEnter(maybeNode, maybeAppearing);
        this.safeSetState({
            status: $3f4090778342b254$export$df38205c966be359
        }, function() {
            _this2.props.onEntering(maybeNode, maybeAppearing);
            _this2.onTransitionEnd(enterTimeout, function() {
                _this2.safeSetState({
                    status: $3f4090778342b254$export$78e9e6e3e014d60a
                }, function() {
                    _this2.props.onEntered(maybeNode, maybeAppearing);
                });
            });
        });
    };
    _proto.performExit = function performExit() {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        var maybeNode = this.props.nodeRef ? undefined : (0, (/*@__PURE__*/$parcel$interopDefault($4723f549251dd88b$exports))).findDOMNode(this); // no exit animation skip right to EXITED
        if (!exit || (0, $d6f4fa15f047b29a$export$2e2bcd8739ae039).disabled) {
            this.safeSetState({
                status: $3f4090778342b254$export$84cbff306f539230
            }, function() {
                _this3.props.onExited(maybeNode);
            });
            return;
        }
        this.props.onExit(maybeNode);
        this.safeSetState({
            status: $3f4090778342b254$export$4aacc83d4d59139f
        }, function() {
            _this3.props.onExiting(maybeNode);
            _this3.onTransitionEnd(timeouts.exit, function() {
                _this3.safeSetState({
                    status: $3f4090778342b254$export$84cbff306f539230
                }, function() {
                    _this3.props.onExited(maybeNode);
                });
            });
        });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
            this.nextCallback.cancel();
            this.nextCallback = null;
        }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
        // This shouldn't be necessary, but there are weird race conditions with
        // setState callbacks and unmounting in testing, so always make sure that
        // we can cancel any pending setState callbacks after we unmount.
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
            if (active) {
                active = false;
                _this4.nextCallback = null;
                callback(event);
            }
        };
        this.nextCallback.cancel = function() {
            active = false;
        };
        return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
        this.setNextCallback(handler);
        var node = this.props.nodeRef ? this.props.nodeRef.current : (0, (/*@__PURE__*/$parcel$interopDefault($4723f549251dd88b$exports))).findDOMNode(this);
        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
            setTimeout(this.nextCallback, 0);
            return;
        }
        if (this.props.addEndListener) {
            var _ref3 = this.props.nodeRef ? [
                this.nextCallback
            ] : [
                node,
                this.nextCallback
            ], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
            this.props.addEndListener(maybeNode, maybeNextCallback);
        }
        if (timeout != null) setTimeout(this.nextCallback, timeout);
    };
    _proto.render = function render() {
        var status = this.state.status;
        if (status === $3f4090778342b254$export$bb38bb9a1161268) return null;
        var _this$props = this.props, children = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = (0, $746383c9ca16b298$export$2e2bcd8739ae039)(_this$props, [
            "children",
            "in",
            "mountOnEnter",
            "unmountOnExit",
            "appear",
            "enter",
            "exit",
            "timeout",
            "addEndListener",
            "onEnter",
            "onEntering",
            "onEntered",
            "onExit",
            "onExiting",
            "onExited",
            "nodeRef"
        ]);
        return(/*#__PURE__*/ // allows for nested Transitions
        (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).createElement((0, $f7573ca97d71f4ae$export$2e2bcd8739ae039).Provider, {
            value: null
        }, typeof children === "function" ? children(status, childProps) : (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).cloneElement((0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).Children.only(children), childProps)));
    };
    return Transition;
}((0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).Component);
$3f4090778342b254$var$Transition.contextType = (0, $f7573ca97d71f4ae$export$2e2bcd8739ae039);
$3f4090778342b254$var$Transition.propTypes = {}; // Name the function so it is clearer in the documentation
function $3f4090778342b254$var$noop() {}
$3f4090778342b254$var$Transition.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: $3f4090778342b254$var$noop,
    onEntering: $3f4090778342b254$var$noop,
    onEntered: $3f4090778342b254$var$noop,
    onExit: $3f4090778342b254$var$noop,
    onExiting: $3f4090778342b254$var$noop,
    onExited: $3f4090778342b254$var$noop
};
$3f4090778342b254$var$Transition.UNMOUNTED = $3f4090778342b254$export$bb38bb9a1161268;
$3f4090778342b254$var$Transition.EXITED = $3f4090778342b254$export$84cbff306f539230;
$3f4090778342b254$var$Transition.ENTERING = $3f4090778342b254$export$df38205c966be359;
$3f4090778342b254$var$Transition.ENTERED = $3f4090778342b254$export$78e9e6e3e014d60a;
$3f4090778342b254$var$Transition.EXITING = $3f4090778342b254$export$4aacc83d4d59139f;
var $3f4090778342b254$export$2e2bcd8739ae039 = $3f4090778342b254$var$Transition;




function $5b1dd67c84e7f95b$var$parseDuration(node, property) {
    const str = (0, $38cb2da359586ba6$export$2e2bcd8739ae039)(node, property) || "";
    const mult = str.indexOf("ms") === -1 ? 1000 : 1;
    return parseFloat(str) * mult;
}
function $5b1dd67c84e7f95b$export$2e2bcd8739ae039(element, handler) {
    const duration = $5b1dd67c84e7f95b$var$parseDuration(element, "transitionDuration");
    const delay = $5b1dd67c84e7f95b$var$parseDuration(element, "transitionDelay");
    const remove = (0, $4e71cc95161d08ad$export$2e2bcd8739ae039)(element, (e)=>{
        if (e.target === element) {
            remove();
            handler(e);
        }
    }, duration + delay);
}


// reading a dimension prop will cause the browser to recalculate,
// which will let our animations work
function $4d17e9d44738863d$export$2e2bcd8739ae039(node) {
    // eslint-disable-next-line @typescript-eslint/no-unused-expressions
    node.offsetHeight;
}



var $d4J5n = parcelRequire("d4J5n");



function $7f4aa3ef83e9a32e$export$2e2bcd8739ae039(componentOrElement) {
    if (componentOrElement && "setState" in componentOrElement) return (0, (/*@__PURE__*/$parcel$interopDefault($4723f549251dd88b$exports))).findDOMNode(componentOrElement);
    return componentOrElement != null ? componentOrElement : null;
}



// Normalizes Transition callbacks when nodeRef is used.
const $f25667ced1e5fc34$var$TransitionWrapper = /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).forwardRef(({ onEnter: onEnter , onEntering: onEntering , onEntered: onEntered , onExit: onExit , onExiting: onExiting , onExited: onExited , addEndListener: addEndListener , children: children , childRef: childRef , ...props }, ref)=>{
    const nodeRef = (0, $d4J5n.useRef)(null);
    const mergedRef = (0, $a9894662a4aebec5$export$2e2bcd8739ae039)(nodeRef, childRef);
    const attachRef = (r)=>{
        mergedRef((0, $7f4aa3ef83e9a32e$export$2e2bcd8739ae039)(r));
    };
    const normalize = (callback)=>(param)=>{
            if (callback && nodeRef.current) callback(nodeRef.current, param);
        };
    /* eslint-disable react-hooks/exhaustive-deps */ const handleEnter = (0, $d4J5n.useCallback)(normalize(onEnter), [
        onEnter
    ]);
    const handleEntering = (0, $d4J5n.useCallback)(normalize(onEntering), [
        onEntering
    ]);
    const handleEntered = (0, $d4J5n.useCallback)(normalize(onEntered), [
        onEntered
    ]);
    const handleExit = (0, $d4J5n.useCallback)(normalize(onExit), [
        onExit
    ]);
    const handleExiting = (0, $d4J5n.useCallback)(normalize(onExiting), [
        onExiting
    ]);
    const handleExited = (0, $d4J5n.useCallback)(normalize(onExited), [
        onExited
    ]);
    const handleAddEndListener = (0, $d4J5n.useCallback)(normalize(addEndListener), [
        addEndListener
    ]);
    /* eslint-enable react-hooks/exhaustive-deps */ return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $3f4090778342b254$export$2e2bcd8739ae039), {
        ref: ref,
        ...props,
        onEnter: handleEnter,
        onEntered: handleEntered,
        onEntering: handleEntering,
        onExit: handleExit,
        onExited: handleExited,
        onExiting: handleExiting,
        addEndListener: handleAddEndListener,
        nodeRef: nodeRef,
        children: typeof children === "function" ? (status, innerProps)=>children(status, {
                ...innerProps,
                ref: attachRef
            }) : /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).cloneElement(children, {
            ref: attachRef
        })
    });
});
var $f25667ced1e5fc34$export$2e2bcd8739ae039 = $f25667ced1e5fc34$var$TransitionWrapper;



const $7fef6e8bf7870301$var$defaultProps = {
    in: false,
    timeout: 300,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false
};
const $7fef6e8bf7870301$var$fadeStyles = {
    [(0, $3f4090778342b254$export$df38205c966be359)]: "show",
    [(0, $3f4090778342b254$export$78e9e6e3e014d60a)]: "show"
};
const $7fef6e8bf7870301$var$Fade = /*#__PURE__*/ $d4J5n.forwardRef(({ className: className , children: children , transitionClasses: transitionClasses = {} , ...props }, ref)=>{
    const handleEnter = (0, $d4J5n.useCallback)((node, isAppearing)=>{
        (0, $4d17e9d44738863d$export$2e2bcd8739ae039)(node);
        props.onEnter == null || props.onEnter(node, isAppearing);
    }, [
        props
    ]);
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $f25667ced1e5fc34$export$2e2bcd8739ae039), {
        ref: ref,
        addEndListener: (0, $5b1dd67c84e7f95b$export$2e2bcd8739ae039),
        ...props,
        onEnter: handleEnter,
        childRef: children.ref,
        children: (status, innerProps)=>/*#__PURE__*/ $d4J5n.cloneElement(children, {
                ...innerProps,
                className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))("fade", className, children.props.className, $7fef6e8bf7870301$var$fadeStyles[status], transitionClasses[status])
            })
    });
});
$7fef6e8bf7870301$var$Fade.defaultProps = $7fef6e8bf7870301$var$defaultProps;
$7fef6e8bf7870301$var$Fade.displayName = "Fade";
var $7fef6e8bf7870301$export$2e2bcd8739ae039 = $7fef6e8bf7870301$var$Fade;



var $4ca9d3d74655c2be$var$rHyphen = /-(.)/g;
function $4ca9d3d74655c2be$export$2e2bcd8739ae039(string) {
    return string.replace($4ca9d3d74655c2be$var$rHyphen, function(_, chr) {
        return chr.toUpperCase();
    });
}



var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");

const $d2965fbad540669a$export$666ad80b5007f835 = [
    "xxl",
    "xl",
    "lg",
    "md",
    "sm",
    "xs"
];
const $d2965fbad540669a$export$ff817e17bad2e091 = "xs";
const $d2965fbad540669a$var$ThemeContext = /*#__PURE__*/ $d4J5n.createContext({
    prefixes: {},
    breakpoints: $d2965fbad540669a$export$666ad80b5007f835,
    minBreakpoint: $d2965fbad540669a$export$ff817e17bad2e091
});
const { Consumer: $d2965fbad540669a$export$b631efc24e9d5e2f , Provider: $d2965fbad540669a$var$Provider  } = $d2965fbad540669a$var$ThemeContext;
function $d2965fbad540669a$var$ThemeProvider({ prefixes: prefixes = {} , breakpoints: breakpoints = $d2965fbad540669a$export$666ad80b5007f835 , minBreakpoint: minBreakpoint = $d2965fbad540669a$export$ff817e17bad2e091 , dir: dir , children: children  }) {
    const contextValue = (0, $d4J5n.useMemo)(()=>({
            prefixes: {
                ...prefixes
            },
            breakpoints: breakpoints,
            minBreakpoint: minBreakpoint,
            dir: dir
        }), [
        prefixes,
        breakpoints,
        minBreakpoint,
        dir
    ]);
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)($d2965fbad540669a$var$Provider, {
        value: contextValue,
        children: children
    });
}
function $d2965fbad540669a$export$7f387860ebffb32c(prefix, defaultPrefix) {
    const { prefixes: prefixes  } = (0, $d4J5n.useContext)($d2965fbad540669a$var$ThemeContext);
    return prefix || prefixes[defaultPrefix] || defaultPrefix;
}
function $d2965fbad540669a$export$8970c8db816a5863() {
    const { breakpoints: breakpoints  } = (0, $d4J5n.useContext)($d2965fbad540669a$var$ThemeContext);
    return breakpoints;
}
function $d2965fbad540669a$export$d926d6ef38f3fd32() {
    const { minBreakpoint: minBreakpoint  } = (0, $d4J5n.useContext)($d2965fbad540669a$var$ThemeContext);
    return minBreakpoint;
}
function $d2965fbad540669a$export$35e511eefa30ac5a() {
    const { dir: dir  } = (0, $d4J5n.useContext)($d2965fbad540669a$var$ThemeContext);
    return dir === "rtl";
}
function $d2965fbad540669a$export$ce75053c20498f85(Component, opts) {
    if (typeof opts === "string") opts = {
        prefix: opts
    };
    const isClassy = Component.prototype && Component.prototype.isReactComponent;
    // If it's a functional component make sure we don't break it with a ref
    const { prefix: prefix , forwardRefAs: forwardRefAs = isClassy ? "ref" : "innerRef"  } = opts;
    const Wrapped = /*#__PURE__*/ $d4J5n.forwardRef(({ ...props }, ref)=>{
        props[forwardRefAs] = ref;
        const bsPrefix = $d2965fbad540669a$export$7f387860ebffb32c(props.bsPrefix, prefix);
        return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Component, {
            ...props,
            bsPrefix: bsPrefix
        });
    });
    Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;
    return Wrapped;
}
var $d2965fbad540669a$export$2e2bcd8739ae039 = $d2965fbad540669a$var$ThemeProvider;



const $a55af8b762d1a475$var$pascalCase = (str)=>str[0].toUpperCase() + (0, $4ca9d3d74655c2be$export$2e2bcd8739ae039)(str).slice(1);
function $a55af8b762d1a475$export$2e2bcd8739ae039(prefix, { displayName: displayName = $a55af8b762d1a475$var$pascalCase(prefix) , Component: Component , defaultProps: defaultProps  } = {}) {
    const BsComponent = /*#__PURE__*/ $d4J5n.forwardRef(({ className: className , bsPrefix: bsPrefix , as: Tag = Component || "div" , ...props }, ref)=>{
        const resolvedPrefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, prefix);
        return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Tag, {
            ref: ref,
            className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, resolvedPrefix),
            ...props
        });
    });
    BsComponent.defaultProps = defaultProps;
    BsComponent.displayName = displayName;
    return BsComponent;
}


var $ec1750a6f76a292b$export$2e2bcd8739ae039 = (0, $a55af8b762d1a475$export$2e2bcd8739ae039)("modal-body");



var $d4J5n = parcelRequire("d4J5n");
const $cf9a4150f313db6b$var$ModalContext = /*#__PURE__*/ $d4J5n.createContext({
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    onHide () {}
});
var $cf9a4150f313db6b$export$2e2bcd8739ae039 = $cf9a4150f313db6b$var$ModalContext;




var $d4J5n = parcelRequire("d4J5n");


const $a2910b01ab527e5e$var$ModalDialog = /*#__PURE__*/ $d4J5n.forwardRef(({ bsPrefix: bsPrefix , className: className , contentClassName: contentClassName , centered: centered , size: size , fullscreen: fullscreen , children: children , scrollable: scrollable , ...props }, ref)=>{
    bsPrefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, "modal");
    const dialogClass = `${bsPrefix}-dialog`;
    const fullScreenClass = typeof fullscreen === "string" ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
        ...props,
        ref: ref,
        className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
            className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(`${bsPrefix}-content`, contentClassName),
            children: children
        })
    });
});
$a2910b01ab527e5e$var$ModalDialog.displayName = "ModalDialog";
var $a2910b01ab527e5e$export$2e2bcd8739ae039 = $a2910b01ab527e5e$var$ModalDialog;



var $96b5b4c1976cd560$export$2e2bcd8739ae039 = (0, $a55af8b762d1a475$export$2e2bcd8739ae039)("modal-footer");




var $d4J5n = parcelRequire("d4J5n");


var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");

var $2cf4efeb0ce83047$exports = {};
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $2cf4efeb0ce83047$var$ReactIs, $2cf4efeb0ce83047$var$throwOnDirectAccess;

// By explicitly using `prop-types` you are opting into new production behavior.
// http://fb.me/prop-types-in-prod
$2cf4efeb0ce83047$exports = (parcelRequire("aSxGG"))();



var $d4J5n = parcelRequire("d4J5n");


const $83d54db12e0899b6$var$propTypes = {
    /** An accessible label indicating the relevant information about the Close Button. */ "aria-label": (0, (/*@__PURE__*/$parcel$interopDefault($2cf4efeb0ce83047$exports))).string,
    /** A callback fired after the Close Button is clicked. */ onClick: (0, (/*@__PURE__*/$parcel$interopDefault($2cf4efeb0ce83047$exports))).func,
    /**
   * Render different color variant for the button.
   *
   * Omitting this will render the default dark color.
   */ variant: (0, (/*@__PURE__*/$parcel$interopDefault($2cf4efeb0ce83047$exports))).oneOf([
        "white"
    ])
};
const $83d54db12e0899b6$var$defaultProps = {
    "aria-label": "Close"
};
const $83d54db12e0899b6$var$CloseButton = /*#__PURE__*/ $d4J5n.forwardRef(({ className: className , variant: variant , ...props }, ref)=>/*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("button", {
        ref: ref,
        type: "button",
        className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))("btn-close", variant && `btn-close-${variant}`, className),
        ...props
    }));
$83d54db12e0899b6$var$CloseButton.displayName = "CloseButton";
$83d54db12e0899b6$var$CloseButton.propTypes = $83d54db12e0899b6$var$propTypes;
$83d54db12e0899b6$var$CloseButton.defaultProps = $83d54db12e0899b6$var$defaultProps;
var $83d54db12e0899b6$export$2e2bcd8739ae039 = $83d54db12e0899b6$var$CloseButton;





const $4b0389bf825c94df$var$defaultProps = {
    closeLabel: "Close",
    closeButton: false
};
const $4b0389bf825c94df$var$AbstractModalHeader = /*#__PURE__*/ $d4J5n.forwardRef(({ closeLabel: closeLabel , closeVariant: closeVariant , closeButton: closeButton , onHide: onHide , children: children , ...props }, ref)=>{
    const context = (0, $d4J5n.useContext)((0, $cf9a4150f313db6b$export$2e2bcd8739ae039));
    const handleClick = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)(()=>{
        context == null || context.onHide();
        onHide == null || onHide();
    });
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
        ref: ref,
        ...props,
        children: [
            children,
            closeButton && /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $83d54db12e0899b6$export$2e2bcd8739ae039), {
                "aria-label": closeLabel,
                variant: closeVariant,
                onClick: handleClick
            })
        ]
    });
});
$4b0389bf825c94df$var$AbstractModalHeader.defaultProps = $4b0389bf825c94df$var$defaultProps;
var $4b0389bf825c94df$export$2e2bcd8739ae039 = $4b0389bf825c94df$var$AbstractModalHeader;



const $abd6e34c8fa4b185$var$defaultProps = {
    closeLabel: "Close",
    closeButton: false
};
const $abd6e34c8fa4b185$var$ModalHeader = /*#__PURE__*/ $d4J5n.forwardRef(({ bsPrefix: bsPrefix , className: className , ...props }, ref)=>{
    bsPrefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, "modal-header");
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $4b0389bf825c94df$export$2e2bcd8739ae039), {
        ref: ref,
        ...props,
        className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, bsPrefix)
    });
});
$abd6e34c8fa4b185$var$ModalHeader.displayName = "ModalHeader";
$abd6e34c8fa4b185$var$ModalHeader.defaultProps = $abd6e34c8fa4b185$var$defaultProps;
var $abd6e34c8fa4b185$export$2e2bcd8739ae039 = $abd6e34c8fa4b185$var$ModalHeader;




var $d4J5n = parcelRequire("d4J5n");


var $d6967463906b333e$export$2e2bcd8739ae039 = (className)=>/*#__PURE__*/ $d4J5n.forwardRef((p, ref)=>/*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
            ...p,
            ref: ref,
            className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(p.className, className)
        }));


const $8740e7bf3f71dda5$var$DivStyledAsH4 = (0, $d6967463906b333e$export$2e2bcd8739ae039)("h4");
var $8740e7bf3f71dda5$export$2e2bcd8739ae039 = (0, $a55af8b762d1a475$export$2e2bcd8739ae039)("modal-title", {
    Component: $8740e7bf3f71dda5$var$DivStyledAsH4
});




const $d4457f348269587d$var$defaultProps = {
    show: false,
    backdrop: true,
    keyboard: true,
    autoFocus: true,
    enforceFocus: true,
    restoreFocus: true,
    animation: true,
    dialogAs: (0, $a2910b01ab527e5e$export$2e2bcd8739ae039)
};
/* eslint-disable no-use-before-define, react/no-multi-comp */ function $d4457f348269587d$var$DialogTransition(props) {
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $7fef6e8bf7870301$export$2e2bcd8739ae039), {
        ...props,
        timeout: null
    });
}
function $d4457f348269587d$var$BackdropTransition(props) {
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $7fef6e8bf7870301$export$2e2bcd8739ae039), {
        ...props,
        timeout: null
    });
}
/* eslint-enable no-use-before-define */ const $d4457f348269587d$var$Modal = /*#__PURE__*/ $d4J5n.forwardRef(({ bsPrefix: bsPrefix , className: className , style: style , dialogClassName: dialogClassName , contentClassName: contentClassName , children: children , dialogAs: Dialog , "aria-labelledby": ariaLabelledby , "aria-describedby": ariaDescribedby , "aria-label": ariaLabel , show: /* BaseModal props */ show , animation: animation , backdrop: backdrop , keyboard: keyboard , onEscapeKeyDown: onEscapeKeyDown , onShow: onShow , onHide: onHide , container: container , autoFocus: autoFocus , enforceFocus: enforceFocus , restoreFocus: restoreFocus , restoreFocusOptions: restoreFocusOptions , onEntered: onEntered , onExit: onExit , onExiting: onExiting , onEnter: onEnter , onEntering: onEntering , onExited: onExited , backdropClassName: backdropClassName , manager: propsManager , ...props }, ref)=>{
    const [modalStyle, setStyle] = (0, $d4J5n.useState)({});
    const [animateStaticModal, setAnimateStaticModal] = (0, $d4J5n.useState)(false);
    const waitingForMouseUpRef = (0, $d4J5n.useRef)(false);
    const ignoreBackdropClickRef = (0, $d4J5n.useRef)(false);
    const removeStaticModalAnimationRef = (0, $d4J5n.useRef)(null);
    const [modal, setModalRef] = (0, $34a1e439cec2030f$export$2e2bcd8739ae039)();
    const mergedRef = (0, $a9894662a4aebec5$export$2e2bcd8739ae039)(ref, setModalRef);
    const handleHide = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)(onHide);
    const isRTL = (0, $d2965fbad540669a$export$35e511eefa30ac5a)();
    bsPrefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, "modal");
    const modalContext = (0, $d4J5n.useMemo)(()=>({
            onHide: handleHide
        }), [
        handleHide
    ]);
    function getModalManager() {
        if (propsManager) return propsManager;
        return (0, $fc1f0fe9258b3196$export$a03641438014b436)({
            isRTL: isRTL
        });
    }
    function updateDialogStyle(node) {
        if (!(0, $58451f2675491163$export$2e2bcd8739ae039)) return;
        const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;
        const modalIsOverflowing = node.scrollHeight > (0, $faf5fcb415a4acb7$export$2e2bcd8739ae039)(node).documentElement.clientHeight;
        setStyle({
            paddingRight: containerIsOverflowing && !modalIsOverflowing ? (0, $d8e53b60e2259536$export$2e2bcd8739ae039)() : undefined,
            paddingLeft: !containerIsOverflowing && modalIsOverflowing ? (0, $d8e53b60e2259536$export$2e2bcd8739ae039)() : undefined
        });
    }
    const handleWindowResize = (0, $68afd5c9279b438e$export$2e2bcd8739ae039)(()=>{
        if (modal) updateDialogStyle(modal.dialog);
    });
    (0, $4c6f8169c25b62ff$export$2e2bcd8739ae039)(()=>{
        (0, $2e116e2caaf7ad7a$export$2e2bcd8739ae039)(window, "resize", handleWindowResize);
        removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();
    });
    // We prevent the modal from closing during a drag by detecting where the
    // the click originates from. If it starts in the modal and then ends outside
    // don't close.
    const handleDialogMouseDown = ()=>{
        waitingForMouseUpRef.current = true;
    };
    const handleMouseUp = (e)=>{
        if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) ignoreBackdropClickRef.current = true;
        waitingForMouseUpRef.current = false;
    };
    const handleStaticModalAnimation = ()=>{
        setAnimateStaticModal(true);
        removeStaticModalAnimationRef.current = (0, $4e71cc95161d08ad$export$2e2bcd8739ae039)(modal.dialog, ()=>{
            setAnimateStaticModal(false);
        });
    };
    const handleStaticBackdropClick = (e)=>{
        if (e.target !== e.currentTarget) return;
        handleStaticModalAnimation();
    };
    const handleClick = (e)=>{
        if (backdrop === "static") {
            handleStaticBackdropClick(e);
            return;
        }
        if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {
            ignoreBackdropClickRef.current = false;
            return;
        }
        onHide == null || onHide();
    };
    const handleEscapeKeyDown = (e)=>{
        if (keyboard) onEscapeKeyDown == null || onEscapeKeyDown(e);
        else {
            // Call preventDefault to stop modal from closing in @restart/ui.
            e.preventDefault();
            if (backdrop === "static") // Play static modal animation.
            handleStaticModalAnimation();
        }
    };
    const handleEnter = (node, isAppearing)=>{
        if (node) updateDialogStyle(node);
        onEnter == null || onEnter(node, isAppearing);
    };
    const handleExit = (node)=>{
        removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();
        onExit == null || onExit(node);
    };
    const handleEntering = (node, isAppearing)=>{
        onEntering == null || onEntering(node, isAppearing);
        // FIXME: This should work even when animation is disabled.
        (0, $a3728d7a696c5261$export$2e2bcd8739ae039)(window, "resize", handleWindowResize);
    };
    const handleExited = (node)=>{
        if (node) node.style.display = ""; // RHL removes it sometimes
        onExited == null || onExited(node);
        // FIXME: This should work even when animation is disabled.
        (0, $2e116e2caaf7ad7a$export$2e2bcd8739ae039)(window, "resize", handleWindowResize);
    };
    const renderBackdrop = (0, $d4J5n.useCallback)((backdropProps)=>/*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
            ...backdropProps,
            className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(`${bsPrefix}-backdrop`, backdropClassName, !animation && "show")
        }), [
        animation,
        backdropClassName,
        bsPrefix
    ]);
    const baseModalStyle = {
        ...style,
        ...modalStyle
    };
    // If `display` is not set to block, autoFocus inside the modal fails
    // https://github.com/react-bootstrap/react-bootstrap/issues/5102
    baseModalStyle.display = "block";
    const renderDialog = (dialogProps)=>/*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
            role: "dialog",
            ...dialogProps,
            style: baseModalStyle,
            className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && "show"),
            onClick: backdrop ? handleClick : undefined,
            onMouseUp: handleMouseUp,
            "aria-label": ariaLabel,
            "aria-labelledby": ariaLabelledby,
            "aria-describedby": ariaDescribedby,
            children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Dialog, {
                ...props,
                onMouseDown: handleDialogMouseDown,
                className: dialogClassName,
                contentClassName: contentClassName,
                children: children
            })
        });
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $cf9a4150f313db6b$export$2e2bcd8739ae039).Provider, {
        value: modalContext,
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $7194a28e54962c89$export$2e2bcd8739ae039), {
            show: show,
            ref: mergedRef,
            backdrop: backdrop,
            container: container,
            keyboard: true // Always set true - see handleEscapeKeyDown
            ,
            autoFocus: autoFocus,
            enforceFocus: enforceFocus,
            restoreFocus: restoreFocus,
            restoreFocusOptions: restoreFocusOptions,
            onEscapeKeyDown: handleEscapeKeyDown,
            onShow: onShow,
            onHide: onHide,
            onEnter: handleEnter,
            onEntering: handleEntering,
            onEntered: onEntered,
            onExit: handleExit,
            onExiting: onExiting,
            onExited: handleExited,
            manager: getModalManager(),
            transition: animation ? $d4457f348269587d$var$DialogTransition : undefined,
            backdropTransition: animation ? $d4457f348269587d$var$BackdropTransition : undefined,
            renderBackdrop: renderBackdrop,
            renderDialog: renderDialog
        })
    });
});
$d4457f348269587d$var$Modal.displayName = "Modal";
$d4457f348269587d$var$Modal.defaultProps = $d4457f348269587d$var$defaultProps;
var $d4457f348269587d$export$2e2bcd8739ae039 = Object.assign($d4457f348269587d$var$Modal, {
    Body: (0, $ec1750a6f76a292b$export$2e2bcd8739ae039),
    Header: (0, $abd6e34c8fa4b185$export$2e2bcd8739ae039),
    Title: (0, $8740e7bf3f71dda5$export$2e2bcd8739ae039),
    Footer: (0, $96b5b4c1976cd560$export$2e2bcd8739ae039),
    Dialog: (0, $a2910b01ab527e5e$export$2e2bcd8739ae039),
    TRANSITION_DURATION: 300,
    BACKDROP_TRANSITION_DURATION: 150
});




const $c19caa34b06adfe6$export$20dfb7853ef57d1 = (address, start = 7, end = 5)=>{
    if (!address || typeof address === "undefined") return "";
    return address.slice(0, start) + "...." + address.slice(address.length - end);
};


const $77ca285db2bf118c$var$Header = ()=>{
    const { connect: connect , connectors: connectors , error: error , isLoading: isLoading , isSuccess: isSuccess , isError: isError , pendingConnector: pendingConnector  } = (0, $168b680515f5196a$export$5daf65c1af3b369f)({
        chainId: (0, $9c8743126c7e32de$export$170e8cdd0c4e59c8).id,
        onSettled: (data, error)=>{
            if (error) //console.log(error)
            return;
        }
    });
    const { disconnect: disconnect  } = (0, $168b680515f5196a$export$83bebf2fe7fead4e)();
    const { address: address , connector: wired , isConnected: isConnected , isConnecting: isConnecting , isReconnecting: isReconnecting  } = (0, $168b680515f5196a$export$83a8e409853da004)();
    const [mounted, setMounted] = (0, $d4J5n.useState)(false);
    const [loading, setLoading] = (0, $d4J5n.useState)(false);
    const [connectModalShow, setConnectModalShow] = (0, $d4J5n.useState)(true);
    const handleClose = ()=>setConnectModalShow(false);
    const handleShow = ()=>setConnectModalShow(true);
    (0, $d4J5n.useEffect)(()=>setMounted(true), []);
    (0, $d4J5n.useEffect)(()=>{
        if (typeof window === "undefined") return;
    }, [
        mounted
    ]);
    (0, $d4J5n.useEffect)(()=>{
        if (isLoading || isConnecting || isReconnecting) {
            if (!isSuccess || !isError) setLoading(true);
            else setLoading(false);
        } else setLoading(false);
    }, [
        isLoading,
        isConnecting,
        isReconnecting,
        isSuccess,
        isError
    ]);
    (0, $d4J5n.useEffect)(()=>{
        if (isConnected && address) setConnectModalShow(false);
    }, [
        isConnected,
        address
    ]);
    (0, $d4J5n.useEffect)(()=>{
        if (error && error.message.length > 0) console.log(error.message);
    }, [
        error
    ]);
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)((0, $17b288f07ec57b56$exports.Fragment), {
        children: [
            /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("header", {
                className: "header",
                id: "header_main",
                children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                    className: "container",
                    children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                        id: "site-header-inner",
                        children: [
                            /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                                className: "header__logo",
                                children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("a", {
                                    href: "index.html",
                                    children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("img", {
                                        alt: "",
                                        src: "/images/logo/logo.png"
                                    })
                                })
                            }),
                            !isConnected ? /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("a", {
                                className: "tf-button btn-effect",
                                onClick: handleShow,
                                children: [
                                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("span", {
                                        className: "boder-fade"
                                    }),
                                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("span", {
                                        className: "effect",
                                        children: "CONNECT WALLET"
                                    })
                                ]
                            }) : /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("a", {
                                className: "tf-button btn-effect",
                                onClick: disconnect,
                                children: [
                                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("span", {
                                        className: "boder-fade"
                                    }),
                                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("span", {
                                        className: "effect",
                                        children: [
                                            "DISCONNECT from ",
                                            (0, $c19caa34b06adfe6$export$20dfb7853ef57d1)(address)
                                        ]
                                    })
                                ]
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)((0, $d4457f348269587d$export$2e2bcd8739ae039), {
                show: connectModalShow,
                onHide: handleClose,
                centered: true,
                children: [
                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $d4457f348269587d$export$2e2bcd8739ae039).Header, {
                        closeButton: true,
                        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $d4457f348269587d$export$2e2bcd8739ae039).Title, {
                            className: "header-popup",
                            children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("h4", {
                                className: "text-black",
                                children: "Connect to a wallet"
                            })
                        })
                    }),
                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $d4457f348269587d$export$2e2bcd8739ae039).Body, {
                        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                            className: "box-wallet-inner",
                            children: connectors.map((connector, i)=>/*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("button", {
                                    className: "sc-box",
                                    onClick: ()=>connector.ready && connect({
                                            connector: connector
                                        }),
                                    disabled: isConnected || !connector.ready,
                                    children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $17b288f07ec57b56$exports.Fragment), {
                                        children: loading && connector.id === pendingConnector?.id ? /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $17b288f07ec57b56$exports.Fragment), {
                                            children: loading && connector.id === pendingConnector?.id && " (connecting)"
                                        }) : /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)((0, $17b288f07ec57b56$exports.Fragment), {
                                            children: [
                                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                                                    className: "img",
                                                    children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("img", {
                                                        src: `/images/connectors/${connector.id}.svg`,
                                                        width: 75,
                                                        alt: connector.name
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("h6", {
                                                    className: "heading",
                                                    children: [
                                                        `${connector.name} ${isConnected && connector?.id === wired?.id ? "- Connected" : ""}`,
                                                        !connector.ready && " (unsupported)"
                                                    ]
                                                })
                                            ]
                                        })
                                    })
                                }, i))
                        })
                    }),
                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $d4457f348269587d$export$2e2bcd8739ae039).Footer, {
                        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("p", {
                            children: "Powered by CryptoWelts Inc"
                        })
                    })
                ]
            })
        ]
    });
};
var $77ca285db2bf118c$export$2e2bcd8739ae039 = $77ca285db2bf118c$var$Header;




var $d4J5n = parcelRequire("d4J5n");

parcelRequire("d4J5n");
var $6b46210b33180b43$exports = {};

!function(e, t) {
    $6b46210b33180b43$exports = t((parcelRequire("d4J5n")));
}($6b46210b33180b43$exports, function(e) {
    return function(e) {
        function t(n) {
            if (r[n]) return r[n].exports;
            var o = r[n] = {
                exports: {},
                id: n,
                loaded: !1
            };
            return e[n].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;
        }
        var r = {};
        return t.m = e, t.c = r, t.p = "", t(0);
    }([
        function(e, t, r) {
            "use strict";
            function n(e) {
                return e && e.__esModule ? e : {
                    default: e
                };
            }
            function o(e, t) {
                var r = {};
                for(var n in e)t.indexOf(n) >= 0 || Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);
                return r;
            }
            function i(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            }
            function a(e, t) {
                if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t;
            }
            function u(e, t) {
                if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.conformToMask = void 0;
            var s = Object.assign || function(e) {
                for(var t = 1; t < arguments.length; t++){
                    var r = arguments[t];
                    for(var n in r)Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
                }
                return e;
            }, l = function() {
                function e(e, t) {
                    for(var r = 0; r < t.length; r++){
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t;
                };
            }(), f = r(3);
            Object.defineProperty(t, "conformToMask", {
                enumerable: !0,
                get: function() {
                    return n(f).default;
                }
            });
            var c = r(11), p = n(c), d = r(9), h = n(d), v = r(5), y = n(v), m = r(2), b = function(e) {
                function t() {
                    var e;
                    i(this, t);
                    for(var r = arguments.length, n = Array(r), o = 0; o < r; o++)n[o] = arguments[o];
                    var u = a(this, (e = t.__proto__ || Object.getPrototypeOf(t)).call.apply(e, [
                        this
                    ].concat(n)));
                    return u.setRef = u.setRef.bind(u), u.onBlur = u.onBlur.bind(u), u.onChange = u.onChange.bind(u), u;
                }
                return u(t, e), l(t, [
                    {
                        key: "setRef",
                        value: function(e) {
                            this.inputElement = e;
                        }
                    },
                    {
                        key: "initTextMask",
                        value: function() {
                            var e = this.props, t = this.props.value;
                            this.textMaskInputElement = (0, y.default)(s({
                                inputElement: this.inputElement
                            }, e)), this.textMaskInputElement.update(t);
                        }
                    },
                    {
                        key: "componentDidMount",
                        value: function() {
                            this.initTextMask();
                        }
                    },
                    {
                        key: "componentDidUpdate",
                        value: function(e) {
                            var t = this.props, r = t.value, n = t.pipe, o = t.mask, i = t.guide, a = t.placeholderChar, u = t.showMask, s = {
                                guide: i,
                                placeholderChar: a,
                                showMask: u
                            }, l = "function" == typeof n && "function" == typeof e.pipe ? n.toString() !== e.pipe.toString() : (0, m.isNil)(n) && !(0, m.isNil)(e.pipe) || !(0, m.isNil)(n) && (0, m.isNil)(e.pipe), f = o.toString() !== e.mask.toString(), c = Object.keys(s).some(function(t) {
                                return s[t] !== e[t];
                            }) || f || l, p = r !== this.inputElement.value;
                            (p || c) && this.initTextMask();
                        }
                    },
                    {
                        key: "render",
                        value: function e() {
                            var t = this.props, e = t.render, r = o(t, [
                                "render"
                            ]);
                            return delete r.mask, delete r.guide, delete r.pipe, delete r.placeholderChar, delete r.keepCharPositions, delete r.value, delete r.onBlur, delete r.onChange, delete r.showMask, e(this.setRef, s({
                                onBlur: this.onBlur,
                                onChange: this.onChange,
                                defaultValue: this.props.value
                            }, r));
                        }
                    },
                    {
                        key: "onChange",
                        value: function(e) {
                            this.textMaskInputElement.update(), "function" == typeof this.props.onChange && this.props.onChange(e);
                        }
                    },
                    {
                        key: "onBlur",
                        value: function(e) {
                            "function" == typeof this.props.onBlur && this.props.onBlur(e);
                        }
                    }
                ]), t;
            }(p.default.PureComponent);
            t.default = b, b.propTypes = {
                mask: h.default.oneOfType([
                    h.default.array,
                    h.default.func,
                    h.default.bool,
                    h.default.shape({
                        mask: h.default.oneOfType([
                            h.default.array,
                            h.default.func
                        ]),
                        pipe: h.default.func
                    })
                ]).isRequired,
                guide: h.default.bool,
                value: h.default.oneOfType([
                    h.default.string,
                    h.default.number
                ]),
                pipe: h.default.func,
                placeholderChar: h.default.string,
                keepCharPositions: h.default.bool,
                showMask: h.default.bool
            }, b.defaultProps = {
                render: function(e, t) {
                    return p.default.createElement("input", s({
                        ref: e
                    }, t));
                }
            };
        },
        function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.placeholderChar = "_", t.strFunction = "function";
        },
        function(e, t, r) {
            "use strict";
            function n() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : f, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : l.placeholderChar;
                if (!o(e)) throw new Error("Text-mask:convertMaskToPlaceholder; The mask property must be an array.");
                if (e.indexOf(t) !== -1) throw new Error("Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\n\n" + ("The placeholder character that was received is: " + JSON.stringify(t) + "\n\n") + ("The mask that was received is: " + JSON.stringify(e)));
                return e.map(function(e) {
                    return e instanceof RegExp ? t : e;
                }).join("");
            }
            function o(e) {
                return Array.isArray && Array.isArray(e) || e instanceof Array;
            }
            function i(e) {
                return "string" == typeof e || e instanceof String;
            }
            function a(e) {
                return "number" == typeof e && void 0 === e.length && !isNaN(e);
            }
            function u(e) {
                return "undefined" == typeof e || null === e;
            }
            function s(e) {
                for(var t = [], r = void 0; r = e.indexOf(c), r !== -1;)t.push(r), e.splice(r, 1);
                return {
                    maskWithoutCaretTraps: e,
                    indexes: t
                };
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.convertMaskToPlaceholder = n, t.isArray = o, t.isString = i, t.isNumber = a, t.isNil = u, t.processCaretTraps = s;
            var l = r(1), f = [], c = "[]";
        },
        function(e, t, r) {
            "use strict";
            function n() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : s, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : u, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                if (!(0, i.isArray)(t)) {
                    if (("undefined" == typeof t ? "undefined" : o(t)) !== a.strFunction) throw new Error("Text-mask:conformToMask; The mask property must be an array.");
                    t = t(e, r), t = (0, i.processCaretTraps)(t).maskWithoutCaretTraps;
                }
                var n = r.guide, l = void 0 === n || n, f = r.previousConformedValue, c = void 0 === f ? s : f, p = r.placeholderChar, d = void 0 === p ? a.placeholderChar : p, h = r.placeholder, v = void 0 === h ? (0, i.convertMaskToPlaceholder)(t, d) : h, y = r.currentCaretPosition, m = r.keepCharPositions, b = l === !1 && void 0 !== c, g = e.length, k = c.length, C = v.length, O = t.length, T = g - k, P = T > 0, x = y + (P ? -T : 0), w = x + Math.abs(T);
                if (m === !0 && !P) {
                    for(var S = s, _ = x; _ < w; _++)v[_] === d && (S += d);
                    e = e.slice(0, x) + S + e.slice(x, g);
                }
                for(var M = e.split(s).map(function(e, t) {
                    return {
                        char: e,
                        isNew: t >= x && t < w
                    };
                }), j = g - 1; j >= 0; j--){
                    var E = M[j].char;
                    if (E !== d) {
                        var R = j >= x && k === O;
                        E === v[R ? j - T : j] && M.splice(j, 1);
                    }
                }
                var V = s, N = !1;
                e: for(var A = 0; A < C; A++){
                    var B = v[A];
                    if (B === d) {
                        if (M.length > 0) for(; M.length > 0;){
                            var I = M.shift(), F = I.char, q = I.isNew;
                            if (F === d && b !== !0) {
                                V += d;
                                continue e;
                            }
                            if (t[A].test(F)) {
                                if (m === !0 && q !== !1 && c !== s && l !== !1 && P) {
                                    for(var D = M.length, L = null, W = 0; W < D; W++){
                                        var J = M[W];
                                        if (J.char !== d && J.isNew === !1) break;
                                        if (J.char === d) {
                                            L = W;
                                            break;
                                        }
                                    }
                                    null !== L ? (V += F, M.splice(L, 1)) : A--;
                                } else V += F;
                                continue e;
                            }
                            N = !0;
                        }
                        b === !1 && (V += v.substr(A, C));
                        break;
                    }
                    V += B;
                }
                if (b && P === !1) {
                    for(var U = null, H = 0; H < V.length; H++)v[H] === d && (U = H);
                    V = null !== U ? V.substr(0, U + 1) : s;
                }
                return {
                    conformedValue: V,
                    meta: {
                        someCharsRejected: N
                    }
                };
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            };
            t.default = n;
            var i = r(2), a = r(1), u = [], s = "";
        },
        function(e, t) {
            "use strict";
            function r(e) {
                var t = e.previousConformedValue, r = void 0 === t ? o : t, i = e.previousPlaceholder, a = void 0 === i ? o : i, u = e.currentCaretPosition, s = void 0 === u ? 0 : u, l = e.conformedValue, f = e.rawValue, c = e.placeholderChar, p = e.placeholder, d = e.indexesOfPipedChars, h = void 0 === d ? n : d, v = e.caretTrapIndexes, y = void 0 === v ? n : v;
                if (0 === s || !f.length) return 0;
                var m = f.length, b = r.length, g = p.length, k = l.length, C = m - b, O = C > 0, T = 0 === b, P = C > 1 && !O && !T;
                if (P) return s;
                var x = O && (r === l || l === p), w = 0, S = void 0, _ = void 0;
                if (x) w = s - C;
                else {
                    var M = l.toLowerCase(), j = f.toLowerCase(), E = j.substr(0, s).split(o), R = E.filter(function(e) {
                        return M.indexOf(e) !== -1;
                    });
                    _ = R[R.length - 1];
                    var V = a.substr(0, R.length).split(o).filter(function(e) {
                        return e !== c;
                    }).length, N = p.substr(0, R.length).split(o).filter(function(e) {
                        return e !== c;
                    }).length, A = N !== V, B = void 0 !== a[R.length - 1] && void 0 !== p[R.length - 2] && a[R.length - 1] !== c && a[R.length - 1] !== p[R.length - 1] && a[R.length - 1] === p[R.length - 2];
                    !O && (A || B) && V > 0 && p.indexOf(_) > -1 && void 0 !== f[s] && (S = !0, _ = f[s]);
                    for(var I = h.map(function(e) {
                        return M[e];
                    }), F = I.filter(function(e) {
                        return e === _;
                    }).length, q = R.filter(function(e) {
                        return e === _;
                    }).length, D = p.substr(0, p.indexOf(c)).split(o).filter(function(e, t) {
                        return e === _ && f[t] !== e;
                    }).length, L = D + q + F + (S ? 1 : 0), W = 0, J = 0; J < k; J++){
                        var U = M[J];
                        if (w = J + 1, U === _ && W++, W >= L) break;
                    }
                }
                if (O) {
                    for(var H = w, Y = w; Y <= g; Y++)if (p[Y] === c && (H = Y), p[Y] === c || y.indexOf(Y) !== -1 || Y === g) return H;
                } else if (S) {
                    for(var z = w - 1; z >= 0; z--)if (l[z] === _ || y.indexOf(z) !== -1 || 0 === z) return z;
                } else for(var G = w; G >= 0; G--)if (p[G - 1] === c || y.indexOf(G) !== -1 || 0 === G) return G;
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = r;
            var n = [], o = "";
        },
        function(e, t, r) {
            "use strict";
            function n(e) {
                return e && e.__esModule ? e : {
                    default: e
                };
            }
            function o(e) {
                var t = {
                    previousConformedValue: void 0,
                    previousPlaceholder: void 0
                };
                return {
                    state: t,
                    update: function(r) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e, o = n.inputElement, l = n.mask, c = n.guide, y = n.pipe, b = n.placeholderChar, g = void 0 === b ? h.placeholderChar : b, k = n.keepCharPositions, C = void 0 !== k && k, O = n.showMask, T = void 0 !== O && O;
                        if ("undefined" == typeof r && (r = o.value), r !== t.previousConformedValue) {
                            ("undefined" == typeof l ? "undefined" : s(l)) === m && void 0 !== l.pipe && void 0 !== l.mask && (y = l.pipe, l = l.mask);
                            var P = void 0, x = void 0;
                            if (l instanceof Array && (P = (0, d.convertMaskToPlaceholder)(l, g)), l !== !1) {
                                var w = a(r), S = o.selectionEnd, _ = t.previousConformedValue, M = t.previousPlaceholder, j = void 0;
                                if (("undefined" == typeof l ? "undefined" : s(l)) === h.strFunction) {
                                    if (x = l(w, {
                                        currentCaretPosition: S,
                                        previousConformedValue: _,
                                        placeholderChar: g
                                    }), x === !1) return;
                                    var E = (0, d.processCaretTraps)(x), R = E.maskWithoutCaretTraps, V = E.indexes;
                                    x = R, j = V, P = (0, d.convertMaskToPlaceholder)(x, g);
                                } else x = l;
                                var N = {
                                    previousConformedValue: _,
                                    guide: c,
                                    placeholderChar: g,
                                    pipe: y,
                                    placeholder: P,
                                    currentCaretPosition: S,
                                    keepCharPositions: C
                                }, A = (0, p.default)(w, x, N), B = A.conformedValue, I = ("undefined" == typeof y ? "undefined" : s(y)) === h.strFunction, F = {};
                                I && (F = y(B, u({
                                    rawValue: w
                                }, N)), F === !1 ? F = {
                                    value: _,
                                    rejected: !0
                                } : (0, d.isString)(F) && (F = {
                                    value: F
                                }));
                                var q = I ? F.value : B, D = (0, f.default)({
                                    previousConformedValue: _,
                                    previousPlaceholder: M,
                                    conformedValue: q,
                                    placeholder: P,
                                    rawValue: w,
                                    currentCaretPosition: S,
                                    placeholderChar: g,
                                    indexesOfPipedChars: F.indexesOfPipedChars,
                                    caretTrapIndexes: j
                                }), L = q === P && 0 === D, W = T ? P : v, J = L ? W : q;
                                t.previousConformedValue = J, t.previousPlaceholder = P, o.value !== J && (o.value = J, i(o, D));
                            }
                        }
                    }
                };
            }
            function i(e, t) {
                document.activeElement === e && (b ? g(function() {
                    return e.setSelectionRange(t, t, y);
                }, 0) : e.setSelectionRange(t, t, y));
            }
            function a(e) {
                if ((0, d.isString)(e)) return e;
                if ((0, d.isNumber)(e)) return String(e);
                if (void 0 === e || null === e) return v;
                throw new Error("The 'value' provided to Text Mask needs to be a string or a number. The value received was:\n\n " + JSON.stringify(e));
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var u = Object.assign || function(e) {
                for(var t = 1; t < arguments.length; t++){
                    var r = arguments[t];
                    for(var n in r)Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
                }
                return e;
            }, s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            };
            t.default = o;
            var l = r(4), f = n(l), c = r(3), p = n(c), d = r(2), h = r(1), v = "", y = "none", m = "object", b = "undefined" != typeof navigator && /Android/i.test(navigator.userAgent), g = "undefined" != typeof requestAnimationFrame ? requestAnimationFrame : setTimeout;
        },
        function(e, t) {
            "use strict";
            function r(e) {
                return function() {
                    return e;
                };
            }
            var n = function() {};
            n.thatReturns = r, n.thatReturnsFalse = r(!1), n.thatReturnsTrue = r(!0), n.thatReturnsNull = r(null), n.thatReturnsThis = function() {
                return this;
            }, n.thatReturnsArgument = function(e) {
                return e;
            }, e.exports = n;
        },
        function(e, t, r) {
            "use strict";
            function n(e, t, r, n, i, a, u, s) {
                if (o(t), !e) {
                    var l;
                    if (void 0 === t) l = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
                    else {
                        var f = [
                            r,
                            n,
                            i,
                            a,
                            u,
                            s
                        ], c = 0;
                        l = new Error(t.replace(/%s/g, function() {
                            return f[c++];
                        })), l.name = "Invariant Violation";
                    }
                    throw l.framesToPop = 1, l;
                }
            }
            var o = function(e) {};
            e.exports = n;
        },
        function(e, t, r) {
            "use strict";
            var n = r(6), o = r(7), i = r(10);
            e.exports = function() {
                function e(e, t, r, n, a, u) {
                    u !== i && o(!1, "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                }
                function t() {
                    return e;
                }
                e.isRequired = e;
                var r = {
                    array: e,
                    bool: e,
                    func: e,
                    number: e,
                    object: e,
                    string: e,
                    symbol: e,
                    any: e,
                    arrayOf: t,
                    element: e,
                    instanceOf: t,
                    node: e,
                    objectOf: t,
                    oneOf: t,
                    oneOfType: t,
                    shape: t,
                    exact: t
                };
                return r.checkPropTypes = n, r.PropTypes = r, r;
            };
        },
        function(e, t, r) {
            "use strict";
            "function" == typeof Symbol && typeof Symbol.iterator, e.exports = r(8)();
        },
        function(e, t) {
            "use strict";
            var r = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
            e.exports = r;
        },
        function(t, r) {
            t.exports = e;
        }
    ]);
});


var $be586388377f7584$exports = {};
!function(e, t) {
    $be586388377f7584$exports = t();
}($be586388377f7584$exports, function() {
    return function(e) {
        function t(n) {
            if (o[n]) return o[n].exports;
            var i = o[n] = {
                exports: {},
                id: n,
                loaded: !1
            };
            return e[n].call(i.exports, i, i.exports, t), i.loaded = !0, i.exports;
        }
        var o = {};
        return t.m = e, t.c = o, t.p = "", t(0);
    }([
        function(e, t, o) {
            e.exports = o(2);
        },
        ,
        function(e, t) {
            "use strict";
            function o() {
                function e() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : l, t = e.length;
                    if (e === l || e[0] === y[0] && 1 === t) return y.split(l).concat([
                        v
                    ]).concat(g.split(l));
                    if (e === k && M) return y.split(l).concat([
                        "0",
                        k,
                        v
                    ]).concat(g.split(l));
                    var o = e[0] === s && q;
                    o && (e = e.toString().substr(1));
                    var c = e.lastIndexOf(k), u = c !== -1, a = void 0, b = void 0, h = void 0;
                    if (e.slice(T * -1) === g && (e = e.slice(0, T * -1)), u && (M || $) ? (a = e.slice(e.slice(0, R) === y ? R : 0, c), b = e.slice(c + 1, t), b = n(b.replace(f, l))) : a = e.slice(0, R) === y ? e.slice(R) : e, P && ("undefined" == typeof P ? "undefined" : r(P)) === p) {
                        var S = "." === j ? "[.]" : "" + j, w = (a.match(new RegExp(S, "g")) || []).length;
                        a = a.slice(0, P + w * Z);
                    }
                    return a = a.replace(f, l), E || (a = a.replace(/^0+(0$|[^0])/, "$1")), a = x ? i(a, j) : a, h = n(a), (u && M || $ === !0) && (e[c - 1] !== k && h.push(m), h.push(k, m), b && (("undefined" == typeof L ? "undefined" : r(L)) === p && (b = b.slice(0, L)), h = h.concat(b)), $ === !0 && e[c - 1] === k && h.push(v)), R > 0 && (h = y.split(l).concat(h)), o && (h.length === R && h.push(v), h = [
                        d
                    ].concat(h)), g.length > 0 && (h = h.concat(g.split(l))), h;
                }
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, o = t.prefix, y = void 0 === o ? c : o, b = t.suffix, g = void 0 === b ? l : b, h = t.includeThousandsSeparator, x = void 0 === h || h, S = t.thousandsSeparatorSymbol, j = void 0 === S ? u : S, w = t.allowDecimal, M = void 0 !== w && w, N = t.decimalSymbol, k = void 0 === N ? a : N, D = t.decimalLimit, L = void 0 === D ? 2 : D, O = t.requireDecimal, $ = void 0 !== O && O, _ = t.allowNegative, q = void 0 !== _ && _, B = t.allowLeadingZeroes, E = void 0 !== B && B, I = t.integerLimit, P = void 0 === I ? null : I, R = y && y.length || 0, T = g && g.length || 0, Z = j && j.length || 0;
                return e.instanceOf = "createNumberMask", e;
            }
            function n(e) {
                return e.split(l).map(function(e) {
                    return v.test(e) ? v : e;
                });
            }
            function i(e, t) {
                return e.replace(/\B(?=(\d{3})+(?!\d))/g, t);
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            };
            t.default = o;
            var c = "$", l = "", u = ",", a = ".", s = "-", d = /-/, f = /\D+/g, p = "number", v = /\d/, m = "[]";
        }
    ]);
});


const $5f00504984524fde$var$defaultMaskOptions = {
    prefix: "",
    suffix: " BUSD",
    includeThousandsSeparator: true,
    thousandsSeparatorSymbol: "",
    allowDecimal: true,
    decimalSymbol: ".",
    decimalLimit: 2,
    integerLimit: 7,
    allowNegative: false,
    allowLeadingZeroes: false
};
const $5f00504984524fde$var$CurrencyInput = ({ maskOptions: maskOptions , ...inputProps })=>{
    const currencyMask = (0, (/*@__PURE__*/$parcel$interopDefault($be586388377f7584$exports)))({
        ...$5f00504984524fde$var$defaultMaskOptions,
        ...maskOptions
    });
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, (/*@__PURE__*/$parcel$interopDefault($6b46210b33180b43$exports))), {
        mask: currencyMask,
        ...inputProps
    });
};
$5f00504984524fde$var$CurrencyInput.defaultProps = {
    inputMode: "numeric",
    maskOptions: {}
};
var $5f00504984524fde$export$2e2bcd8739ae039 = $5f00504984524fde$var$CurrencyInput;




const $8c26eb04468b23d6$export$1ddc1f84b754bfeb = "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56";
const $8c26eb04468b23d6$export$59767791f127dd93 = "0x006C553772336C420eCb06124857DFaF2388f43C";

const $8c26eb04468b23d6$export$db201c75c214c358 = (parcelRequire("9bpDK"));



var $1f15dc6335b2d782$exports = {};

$parcel$export($1f15dc6335b2d782$exports, "logger", () => $1f15dc6335b2d782$export$af88d00dbe7f521);
$parcel$export($1f15dc6335b2d782$exports, "Signer", () => $cb7b024827fb2a6c$exports.Signer);
$parcel$export($1f15dc6335b2d782$exports, "Wallet", () => $1d035c17a0a86b6a$exports.Wallet);
$parcel$export($1f15dc6335b2d782$exports, "VoidSigner", () => $cb7b024827fb2a6c$exports.VoidSigner);
$parcel$export($1f15dc6335b2d782$exports, "getDefaultProvider", () => $7fc15fb0220a0397$export$4f77a1d3c1ac6642);
$parcel$export($1f15dc6335b2d782$exports, "providers", () => $7fc15fb0220a0397$exports);
$parcel$export($1f15dc6335b2d782$exports, "BaseContract", () => $3aa399cc1f518df0$exports.BaseContract);
$parcel$export($1f15dc6335b2d782$exports, "Contract", () => $3aa399cc1f518df0$exports.Contract);
$parcel$export($1f15dc6335b2d782$exports, "ContractFactory", () => $3aa399cc1f518df0$exports.ContractFactory);
$parcel$export($1f15dc6335b2d782$exports, "BigNumber", () => $66faa3baf2af8a8b$export$d97aa349ed20696);
$parcel$export($1f15dc6335b2d782$exports, "FixedNumber", () => $6a43b14767ddd419$export$d4693c66c2213e45);
$parcel$export($1f15dc6335b2d782$exports, "constants", () => $3d1b69199da608c8$exports);
$parcel$export($1f15dc6335b2d782$exports, "errors", () => (parcelRequire("cbv61")).ErrorCode);
$parcel$export($1f15dc6335b2d782$exports, "utils", () => $50decee719c705af$exports);
$parcel$export($1f15dc6335b2d782$exports, "wordlists", () => $2051a60e88b89650$export$e8e1b4711c2d1939);
$parcel$export($1f15dc6335b2d782$exports, "version", () => $e2446e8ff3fbdcdb$export$83d89fbfd8236492);
$parcel$export($1f15dc6335b2d782$exports, "Wordlist", () => $f6236dd37eef6ab0$export$4d9531a8ddb0ebca);




var $3d1b69199da608c8$exports = {};

$parcel$export($3d1b69199da608c8$exports, "AddressZero", () => $e7e9bdb72e0755b8$export$badd13187c087617);
$parcel$export($3d1b69199da608c8$exports, "NegativeOne", () => $5fc7f78f7b47b638$export$c83ef0909a6ddeec);
$parcel$export($3d1b69199da608c8$exports, "Zero", () => $5fc7f78f7b47b638$export$aaef8a3eae948f03);
$parcel$export($3d1b69199da608c8$exports, "One", () => $5fc7f78f7b47b638$export$9aa05a5866350bcf);
$parcel$export($3d1b69199da608c8$exports, "Two", () => $5fc7f78f7b47b638$export$9276dd97bf62cc8d);
$parcel$export($3d1b69199da608c8$exports, "WeiPerEther", () => $5fc7f78f7b47b638$export$c8db55bd7405209e);
$parcel$export($3d1b69199da608c8$exports, "MaxUint256", () => $5fc7f78f7b47b638$export$1b53890de5aabdd0);
$parcel$export($3d1b69199da608c8$exports, "MinInt256", () => $5fc7f78f7b47b638$export$963c9b9317b80aaf);
$parcel$export($3d1b69199da608c8$exports, "MaxInt256", () => $5fc7f78f7b47b638$export$6f8dbb07ebe6d738);
$parcel$export($3d1b69199da608c8$exports, "HashZero", () => $479bed3ace97c359$export$71c2e4e213dcb7f2);
$parcel$export($3d1b69199da608c8$exports, "EtherSymbol", () => $d95776571fa2a38d$export$c7e79fcb6f8ac048);



// NFKC (composed)             // (decomposed)
const $d95776571fa2a38d$export$c7e79fcb6f8ac048 = "Ξ"; // "\uD835\uDF63";


"use strict";





var $50decee719c705af$exports = {};

$parcel$export($50decee719c705af$exports, "AbiCoder", () => $bfe95cd8b1f8f0e8$export$fe041e1a83d3efc6);
$parcel$export($50decee719c705af$exports, "defaultAbiCoder", () => $bfe95cd8b1f8f0e8$export$51d1cfcdb913adff);
$parcel$export($50decee719c705af$exports, "Fragment", () => $9af6cffdb407df48$export$ffb0004e005737fa);
$parcel$export($50decee719c705af$exports, "ConstructorFragment", () => $9af6cffdb407df48$export$3ac5c9504f801ea4);
$parcel$export($50decee719c705af$exports, "ErrorFragment", () => $9af6cffdb407df48$export$2c42c6d543aa9b59);
$parcel$export($50decee719c705af$exports, "EventFragment", () => $9af6cffdb407df48$export$958548f08bac2833);
$parcel$export($50decee719c705af$exports, "FunctionFragment", () => $9af6cffdb407df48$export$8d576c928b93668f);
$parcel$export($50decee719c705af$exports, "ParamType", () => $9af6cffdb407df48$export$426dc07f493a4c47);
$parcel$export($50decee719c705af$exports, "FormatTypes", () => $9af6cffdb407df48$export$f010f239efc4d445);
$parcel$export($50decee719c705af$exports, "checkResultErrors", () => $2454a6802fffcbc0$export$5546b9ec21157cc2);
$parcel$export($50decee719c705af$exports, "Logger", () => (parcelRequire("cbv61")).Logger);
$parcel$export($50decee719c705af$exports, "RLP", () => (parcelRequire("4G7Hv")));
$parcel$export($50decee719c705af$exports, "_fetchData", () => $68f1849f3b633900$exports._fetchData);
$parcel$export($50decee719c705af$exports, "fetchJson", () => $68f1849f3b633900$exports.fetchJson);
$parcel$export($50decee719c705af$exports, "poll", () => $68f1849f3b633900$exports.poll);
$parcel$export($50decee719c705af$exports, "checkProperties", () => $b19fb92a27e5f35f$exports.checkProperties);
$parcel$export($50decee719c705af$exports, "deepCopy", () => $b19fb92a27e5f35f$exports.deepCopy);
$parcel$export($50decee719c705af$exports, "defineReadOnly", () => $b19fb92a27e5f35f$exports.defineReadOnly);
$parcel$export($50decee719c705af$exports, "getStatic", () => $b19fb92a27e5f35f$exports.getStatic);
$parcel$export($50decee719c705af$exports, "resolveProperties", () => $b19fb92a27e5f35f$exports.resolveProperties);
$parcel$export($50decee719c705af$exports, "shallowCopy", () => $b19fb92a27e5f35f$exports.shallowCopy);
$parcel$export($50decee719c705af$exports, "arrayify", () => (parcelRequire("eg8oT")).arrayify);
$parcel$export($50decee719c705af$exports, "concat", () => (parcelRequire("eg8oT")).concat);
$parcel$export($50decee719c705af$exports, "stripZeros", () => (parcelRequire("eg8oT")).stripZeros);
$parcel$export($50decee719c705af$exports, "zeroPad", () => (parcelRequire("eg8oT")).zeroPad);
$parcel$export($50decee719c705af$exports, "isBytes", () => (parcelRequire("eg8oT")).isBytes);
$parcel$export($50decee719c705af$exports, "isBytesLike", () => (parcelRequire("eg8oT")).isBytesLike);
$parcel$export($50decee719c705af$exports, "defaultPath", () => $457c3ef73dac1a8e$export$d48ad89f7e11a603);
$parcel$export($50decee719c705af$exports, "HDNode", () => $457c3ef73dac1a8e$export$b68640c53e22b952);
$parcel$export($50decee719c705af$exports, "SigningKey", () => $bccb365df25a232d$export$21643ca94aed3e83);
$parcel$export($50decee719c705af$exports, "Interface", () => $796c8e250bcd8714$export$48cefb51a4e315b2);
$parcel$export($50decee719c705af$exports, "LogDescription", () => $796c8e250bcd8714$export$c2ab6499be98b3c5);
$parcel$export($50decee719c705af$exports, "TransactionDescription", () => $796c8e250bcd8714$export$7a3223b0fadb690b);
$parcel$export($50decee719c705af$exports, "base58", () => $34e4ad7d2aa99cc1$export$45a587635c9954b2);
$parcel$export($50decee719c705af$exports, "base64", () => (parcelRequire("j7DFn")));
$parcel$export($50decee719c705af$exports, "hexlify", () => (parcelRequire("eg8oT")).hexlify);
$parcel$export($50decee719c705af$exports, "isHexString", () => (parcelRequire("eg8oT")).isHexString);
$parcel$export($50decee719c705af$exports, "hexConcat", () => (parcelRequire("eg8oT")).hexConcat);
$parcel$export($50decee719c705af$exports, "hexStripZeros", () => (parcelRequire("eg8oT")).hexStripZeros);
$parcel$export($50decee719c705af$exports, "hexValue", () => (parcelRequire("eg8oT")).hexValue);
$parcel$export($50decee719c705af$exports, "hexZeroPad", () => (parcelRequire("eg8oT")).hexZeroPad);
$parcel$export($50decee719c705af$exports, "hexDataLength", () => (parcelRequire("eg8oT")).hexDataLength);
$parcel$export($50decee719c705af$exports, "hexDataSlice", () => (parcelRequire("eg8oT")).hexDataSlice);
$parcel$export($50decee719c705af$exports, "nameprep", () => $474e0b396e226340$export$94f0b6f93c619bc);
$parcel$export($50decee719c705af$exports, "_toEscapedUtf8String", () => $cde319f07c8777da$export$a7a0ec15960b9055);
$parcel$export($50decee719c705af$exports, "toUtf8Bytes", () => $cde319f07c8777da$export$8feeb310b4b4752f);
$parcel$export($50decee719c705af$exports, "toUtf8CodePoints", () => $cde319f07c8777da$export$ae470a36a31b28c2);
$parcel$export($50decee719c705af$exports, "toUtf8String", () => $cde319f07c8777da$export$7643a1dc2c38d5eb);
$parcel$export($50decee719c705af$exports, "Utf8ErrorFuncs", () => $cde319f07c8777da$export$c6e2180c5bb5bc05);
$parcel$export($50decee719c705af$exports, "formatBytes32String", () => $03ff49dc5d0faca9$export$b97e949c0076e971);
$parcel$export($50decee719c705af$exports, "parseBytes32String", () => $03ff49dc5d0faca9$export$49340cb8f3954db8);
$parcel$export($50decee719c705af$exports, "dnsEncode", () => $ce31ee151995bdb4$export$6c0a8cdae51cb512);
$parcel$export($50decee719c705af$exports, "hashMessage", () => $70b11e4027161461$export$d4c241cec96564c1);
$parcel$export($50decee719c705af$exports, "namehash", () => $ce31ee151995bdb4$export$91d651ee363e1209);
$parcel$export($50decee719c705af$exports, "isValidName", () => $ce31ee151995bdb4$export$cce2300886e7ace6);
$parcel$export($50decee719c705af$exports, "id", () => $22d0893bc40cd818$export$d560c7e4a29451c2);
$parcel$export($50decee719c705af$exports, "_TypedDataEncoder", () => $8a68414fdead829d$exports.TypedDataEncoder);
$parcel$export($50decee719c705af$exports, "getAddress", () => $8b38701037b2e5d8$export$88411125f012957a);
$parcel$export($50decee719c705af$exports, "getIcapAddress", () => $8b38701037b2e5d8$export$962c4ddada9f668f);
$parcel$export($50decee719c705af$exports, "getContractAddress", () => $8b38701037b2e5d8$export$b7fbffef12272e40);
$parcel$export($50decee719c705af$exports, "getCreate2Address", () => $8b38701037b2e5d8$export$e0b22d96621f73a2);
$parcel$export($50decee719c705af$exports, "isAddress", () => $8b38701037b2e5d8$export$977e255126d763d6);
$parcel$export($50decee719c705af$exports, "formatEther", () => $cab4f7c18ce9061c$export$11bc63b4c03ea518);
$parcel$export($50decee719c705af$exports, "parseEther", () => $cab4f7c18ce9061c$export$642c4e67bbdc0bc7);
$parcel$export($50decee719c705af$exports, "formatUnits", () => $cab4f7c18ce9061c$export$bd39b96f71da1885);
$parcel$export($50decee719c705af$exports, "parseUnits", () => $cab4f7c18ce9061c$export$203ae30b4f6490b3);
$parcel$export($50decee719c705af$exports, "commify", () => $cab4f7c18ce9061c$export$de1294767e6ef661);
$parcel$export($50decee719c705af$exports, "computeHmac", () => $cdc53f4b1672f85d$export$967075d2f3b8e7ff);
$parcel$export($50decee719c705af$exports, "keccak256", () => $dd686f272f8051f8$export$f8151fce47ad1c35);
$parcel$export($50decee719c705af$exports, "ripemd160", () => $cdc53f4b1672f85d$export$d1cea0ee4e3f0d3e);
$parcel$export($50decee719c705af$exports, "sha256", () => $cdc53f4b1672f85d$export$bced8d2aada2d1c9);
$parcel$export($50decee719c705af$exports, "sha512", () => $cdc53f4b1672f85d$export$a888d2532e6dc7bb);
$parcel$export($50decee719c705af$exports, "randomBytes", () => $e4b56570577a4a9c$export$5f828d93ff035aa8);
$parcel$export($50decee719c705af$exports, "shuffled", () => $da22b4fd609de650$export$e6c7296801b9b341);
$parcel$export($50decee719c705af$exports, "solidityPack", () => $112a678b453278d2$export$2a703dbb0cb35339);
$parcel$export($50decee719c705af$exports, "solidityKeccak256", () => $112a678b453278d2$export$f8151fce47ad1c35);
$parcel$export($50decee719c705af$exports, "soliditySha256", () => $112a678b453278d2$export$bced8d2aada2d1c9);
$parcel$export($50decee719c705af$exports, "splitSignature", () => (parcelRequire("eg8oT")).splitSignature);
$parcel$export($50decee719c705af$exports, "joinSignature", () => (parcelRequire("eg8oT")).joinSignature);
$parcel$export($50decee719c705af$exports, "accessListify", () => $1b59a48ea3c080da$export$6c8662b1600dce2);
$parcel$export($50decee719c705af$exports, "parseTransaction", () => $1b59a48ea3c080da$export$98e6a39c04603d36);
$parcel$export($50decee719c705af$exports, "serializeTransaction", () => $1b59a48ea3c080da$export$dfdc1655ccc5b9cb);
$parcel$export($50decee719c705af$exports, "TransactionTypes", () => $1b59a48ea3c080da$export$80349e05e0724e11);
$parcel$export($50decee719c705af$exports, "getJsonWalletAddress", () => $9cffbe90cbe739c0$export$9a68ee9f8f3afd38);
$parcel$export($50decee719c705af$exports, "computeAddress", () => $1b59a48ea3c080da$export$e67e2732ba9803f9);
$parcel$export($50decee719c705af$exports, "recoverAddress", () => $1b59a48ea3c080da$export$23cc18f96d8510e2);
$parcel$export($50decee719c705af$exports, "computePublicKey", () => $bccb365df25a232d$export$4a89473d39301224);
$parcel$export($50decee719c705af$exports, "recoverPublicKey", () => $bccb365df25a232d$export$952dd09fbe0232b7);
$parcel$export($50decee719c705af$exports, "verifyMessage", () => $1d035c17a0a86b6a$exports.verifyMessage);
$parcel$export($50decee719c705af$exports, "verifyTypedData", () => $1d035c17a0a86b6a$exports.verifyTypedData);
$parcel$export($50decee719c705af$exports, "getAccountPath", () => $457c3ef73dac1a8e$export$22b80e4f9eff636d);
$parcel$export($50decee719c705af$exports, "mnemonicToEntropy", () => $457c3ef73dac1a8e$export$135e090d58b310ca);
$parcel$export($50decee719c705af$exports, "entropyToMnemonic", () => $457c3ef73dac1a8e$export$4becd65eb23312e6);
$parcel$export($50decee719c705af$exports, "isValidMnemonic", () => $457c3ef73dac1a8e$export$5eea3393c6119c80);
$parcel$export($50decee719c705af$exports, "mnemonicToSeed", () => $457c3ef73dac1a8e$export$3dee74f1204ab09f);
$parcel$export($50decee719c705af$exports, "SupportedAlgorithm", () => $acdfd7c13cce7a9a$export$d2a8849cfb277c);
$parcel$export($50decee719c705af$exports, "UnicodeNormalizationForm", () => $cde319f07c8777da$export$c6986442964129f5);
$parcel$export($50decee719c705af$exports, "Utf8ErrorReason", () => $cde319f07c8777da$export$c285fa6ac15ff6a6);
$parcel$export($50decee719c705af$exports, "Indexed", () => $796c8e250bcd8714$export$8ef99100a3c56f8c);



var $j7DFn = parcelRequire("j7DFn");


var $eg8oT = parcelRequire("eg8oT");





var $cbv61 = parcelRequire("cbv61");





var $4G7Hv = parcelRequire("4G7Hv");








"use strict";



var $cbv61 = parcelRequire("cbv61");
const $e2446e8ff3fbdcdb$export$83d89fbfd8236492 = "ethers/5.7.2";


"use strict";
const $1f15dc6335b2d782$export$af88d00dbe7f521 = new (0, $cbv61.Logger)((0, $e2446e8ff3fbdcdb$export$83d89fbfd8236492));


var $cbv61 = parcelRequire("cbv61");

var $cbv61 = parcelRequire("cbv61");
"use strict";
try {
    const anyGlobal = window;
    if (anyGlobal._ethers == null) anyGlobal._ethers = $1f15dc6335b2d782$exports;
} catch (error) {}


var $ce251b0b74a91040$exports = {};
/*
* Notiflix Loading AIO (https://notiflix.github.io)
* Description: This file has been created automatically that using "notiflix.js", and "notiflix.css" files.
* Version: 3.2.6
* Author: Furkan (https://github.com/furcan)
* Copyright 2019 - 2023 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)
*/ /* global define */ (function(root, factory) {
    if (typeof define === "function" && define.amd) define([], function() {
        return factory(root);
    });
    else if (typeof $ce251b0b74a91040$exports === "object") $ce251b0b74a91040$exports = factory(root);
    else root.Notiflix = factory(root);
})(typeof $parcel$global !== "undefined" ? $parcel$global : typeof window !== "undefined" ? window : $ce251b0b74a91040$exports, function(window1) {
    "use strict";
    // COMMON: SSR check: begin
    if (typeof window1 === "undefined" && typeof window1.document === "undefined") return false;
    // COMMON: SSR check: end
    // COMMON: Variables: begin
    var notiflixNamespace = "Notiflix";
    var notiflixConsoleDocs = "\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation";
    var defaultFontFamily = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif';
    // COMMON: Variables: end
    // LOADING: Default Settings: begin
    var typesLoading = {
        Standard: "Standard",
        Hourglass: "Hourglass",
        Circle: "Circle",
        Arrows: "Arrows",
        Dots: "Dots",
        Pulse: "Pulse",
        Custom: "Custom",
        Notiflix: "Notiflix"
    };
    var newLoadingSettings;
    var loadingSettings = {
        ID: "NotiflixLoadingWrap",
        className: "notiflix-loading",
        zindex: 4000,
        backgroundColor: "rgba(0,0,0,0.8)",
        rtl: false,
        fontFamily: "Quicksand",
        cssAnimation: true,
        cssAnimationDuration: 400,
        clickToClose: false,
        customSvgUrl: null,
        customSvgCode: null,
        svgSize: "80px",
        svgColor: "#32c682",
        messageID: "NotiflixLoadingMessage",
        messageFontSize: "15px",
        messageMaxLength: 34,
        messageColor: "#dcdcdc"
    };
    // LOADING: Default Settings: end
    // COMMON: Console Error: begin
    var commonConsoleError = function(message) {
        return console.error("%c " + notiflixNamespace + " Error ", "padding:2px;border-radius:20px;color:#fff;background:#ff5549", "\n" + message + notiflixConsoleDocs);
    };
    // COMMON: Console Error: end
    // COMMON: Check Head or Body: begin
    var commonCheckHeadOrBody = function(element) {
        if (!element) element = "head";
        if (window1.document[element] === null) {
            commonConsoleError('\nNotiflix needs to be appended to the "<' + element + '>" element, but you called it before the "<' + element + '>" element has been created.');
            return false;
        }
        return true;
    };
    // COMMON: Check Head or Body: end
    // COMMON: Set Internal CSS Codes: begin
    var commonSetInternalCSSCodes = function(getInternalCSSCodes, styleElementId) {
        // check doc head
        if (!commonCheckHeadOrBody("head")) return false;
        // internal css
        if (getInternalCSSCodes() !== null && !window1.document.getElementById(styleElementId)) {
            var internalCSS = window1.document.createElement("style");
            internalCSS.id = styleElementId;
            internalCSS.innerHTML = getInternalCSSCodes();
            window1.document.head.appendChild(internalCSS);
        }
    };
    // COMMON: Set Internal CSS Codes: end
    // COMMON: Extend Options: begin
    var commonExtendOptions = function() {
        // variables
        var extended = {};
        var deep = false;
        var i = 0;
        // check if a deep merge
        if (Object.prototype.toString.call(arguments[0]) === "[object Boolean]") {
            deep = arguments[0];
            i++;
        }
        // merge the object into the extended object
        var merge = function(obj) {
            for(var prop in obj)if (Object.prototype.hasOwnProperty.call(obj, prop)) {
                // if property is an object, merge properties
                if (deep && Object.prototype.toString.call(obj[prop]) === "[object Object]") extended[prop] = commonExtendOptions(extended[prop], obj[prop]);
                else extended[prop] = obj[prop];
            }
        };
        // loop through each object and conduct a merge
        for(; i < arguments.length; i++)merge(arguments[i]);
        return extended;
    };
    // COMMON: Extend Options: end
    // COMMON: Get Plaintext: begin
    var commonGetPlaintext = function(html) {
        var htmlPool = window1.document.createElement("div");
        htmlPool.innerHTML = html;
        return htmlPool.textContent || htmlPool.innerText || "";
    };
    // COMMON: Get Plaintext: end
    // LOADING && BLOCK: SVG Icon Standard: begin
    var loadingAndBlockSvgIconStandard = function(width, color) {
        if (!width) width = "60px";
        if (!color) color = "#32c682";
        var standard = '<svg xmlns="http://www.w3.org/2000/svg" stroke="' + color + '" width="' + width + '" height="' + width + '" transform="scale(.8)" viewBox="0 0 38 38"><g fill="none" fill-rule="evenodd" stroke-width="2" transform="translate(1 1)"><circle cx="18" cy="18" r="18" stroke-opacity=".25"/><path d="M36 18c0-9.94-8.06-18-18-18"><animateTransform attributeName="transform" dur="1s" from="0 18 18" repeatCount="indefinite" to="360 18 18" type="rotate"/></path></g></svg>';
        return standard;
    };
    // LOADING && BLOCK: SVG Icon Standard: end
    // LOADING && BLOCK: SVG Icon Hourglass: begin
    var loadingAndBlockSvgIconHourglass = function(width, color) {
        if (!width) width = "60px";
        if (!color) color = "#32c682";
        var hourglass = '<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingHourglass" fill="' + color + '" width="' + width + '" height="' + width + '" viewBox="0 0 200 200"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group="true" data-animator-type="1" style="-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box"><g id="NXhourglass2" fill="inherit"><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass4" d="M100 100l-34.38 32.08v31.14h68.76v-31.14z"/></g><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass6" d="M100 100L65.62 67.92V36.78h68.76v31.14z"/></g><path d="M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z"/></g></g></svg>';
        return hourglass;
    };
    // LOADING && BLOCK: SVG Icon Hourglass: end
    // LOADING && BLOCK: SVG Icon Circle: begin
    var loadingAndBlockSvgIconCircle = function(width, color) {
        if (!width) width = "60px";
        if (!color) color = "#32c682";
        var circle = '<svg xmlns="http://www.w3.org/2000/svg" width="' + width + '" height="' + width + '" viewBox="25 25 50 50" style="-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:' + width + ";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:" + width + ';position:absolute;top:0;left:0;margin:auto"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx="50" cy="50" r="20" fill="none" stroke="' + color + '" stroke-width="2" style="-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite" stroke-dasharray="150 200" stroke-dashoffset="-10" stroke-linecap="round"/></svg>';
        return circle;
    };
    // LOADING && BLOCK: SVG Icon Circle: end
    // LOADING && BLOCK: SVG Icon Arrows: begin
    var loadingAndBlockSvgIconArrows = function(width, color) {
        if (!width) width = "60px";
        if (!color) color = "#32c682";
        var arrows = '<svg xmlns="http://www.w3.org/2000/svg" fill="' + color + '" width="' + width + '" height="' + width + '" viewBox="0 0 128 128"><g><path fill="inherit" d="M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z"/><animateTransform attributeName="transform" dur="1.5s" from="0 64 64" repeatCount="indefinite" to="360 64 64" type="rotate"/></g></svg>';
        return arrows;
    };
    // LOADING && BLOCK: SVG Icon Arrows: end
    // LOADING && BLOCK: SVG Icon Dots: begin
    var loadingAndBlockSvgIconDots = function(width, color) {
        if (!width) width = "60px";
        if (!color) color = "#32c682";
        var dots = '<svg xmlns="http://www.w3.org/2000/svg" fill="' + color + '" width="' + width + '" height="' + width + '" viewBox="0 0 100 100"><g transform="translate(25 50)"><circle r="9" fill="inherit" transform="scale(.239)"><animateTransform attributeName="transform" begin="-0.266s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(50 50)"><circle r="9" fill="inherit" transform="scale(.00152)"><animateTransform attributeName="transform" begin="-0.133s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(75 50)"><circle r="9" fill="inherit" transform="scale(.299)"><animateTransform attributeName="transform" begin="0s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g></svg>';
        return dots;
    };
    // LOADING && BLOCK: SVG Icon Dots: end
    // LOADING && BLOCK: SVG Icon Pulse: begin
    var loadingAndBlockSvgIconPulse = function(width, color) {
        if (!width) width = "60px";
        if (!color) color = "#32c682";
        var pulse = '<svg xmlns="http://www.w3.org/2000/svg" stroke="' + color + '" width="' + width + '" height="' + width + '" viewBox="0 0 44 44"><g fill="none" fill-rule="evenodd" stroke-width="2"><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle></g></svg>';
        return pulse;
    };
    // LOADING && BLOCK: SVG Icon Pulse: end
    // LOADING && BLOCK: SVG Icon Notiflix: begin
    var loadingAndBlockSvgIconNotiflix = function(width, white, green) {
        if (!width) width = "60px";
        if (!white) white = "#f8f8f8";
        if (!green) green = "#32c682";
        var notiflixIcon = '<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingNotiflixLib" width="' + width + '" height="' + width + '" viewBox="0 0 200 200"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:' + white + ';stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d="M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z" style="animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal" fill="' + green + '" stroke="' + green + '" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="22" stroke-width="12"/><path class="nx-icon-line" d="M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21" style="animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/><path class="nx-icon-line" d="M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75" style="animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/></svg>';
        return notiflixIcon;
    };
    // LOADING && BLOCK: SVG Icon Notiflix: end
    // LOADING: Get Internal CSS Codes: begin
    var loadingGetInternalCSSCodes = function() {
        var loadingCSS = '[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*="-icon"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*="-icon"] img,[id^=NotiflixLoadingWrap]>div[class*="-icon"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}';
        return loadingCSS || null;
    };
    // LOADING: Get Internal CSS Codes: end
    // LOADING: Create: begin
    var loadingCreate = function(loadingType, messageOrOptions, options, display, delay) {
        // check doc body
        if (!commonCheckHeadOrBody("body")) return false;
        // if not initialized pretend like init
        if (!newLoadingSettings) Notiflix.Loading.init({});
        // create a backup for new settings
        var newLoadingSettingsBackup = commonExtendOptions(true, newLoadingSettings, {});
        // check "messageOrOptions" and "options": begin
        if (typeof messageOrOptions === "object" && !Array.isArray(messageOrOptions) || typeof options === "object" && !Array.isArray(options)) {
            // new options
            var newOptions = {};
            if (typeof messageOrOptions === "object") newOptions = messageOrOptions;
            else if (typeof options === "object") newOptions = options;
            // extend new settings with the new options
            newLoadingSettings = commonExtendOptions(true, newLoadingSettings, newOptions);
        }
        // check "messageOrOptions" and "options": end
        // check the message
        var message = "";
        if (typeof messageOrOptions === "string" && messageOrOptions.length > 0) message = messageOrOptions;
        // show loading
        if (display) {
            // if message settings: begin
            if (message.length > newLoadingSettings.messageMaxLength) message = commonGetPlaintext(message).toString().substring(0, newLoadingSettings.messageMaxLength) + "...";
            else message = commonGetPlaintext(message).toString();
            var messageHTML = "";
            if (message.length > 0) messageHTML = '<p id="' + newLoadingSettings.messageID + '" class="nx-loading-message" style="color:' + newLoadingSettings.messageColor + ";font-size:" + newLoadingSettings.messageFontSize + ';">' + message + "</p>";
            // if message settings: end
            // if cssAnimaion is false => duration: begin
            if (!newLoadingSettings.cssAnimation) newLoadingSettings.cssAnimationDuration = 0;
            // if cssAnimaion is false => duration: end
            // svgIcon: begin
            var svgIcon = "";
            if (loadingType === typesLoading.Standard) svgIcon = loadingAndBlockSvgIconStandard(newLoadingSettings.svgSize, newLoadingSettings.svgColor);
            else if (loadingType === typesLoading.Hourglass) svgIcon = loadingAndBlockSvgIconHourglass(newLoadingSettings.svgSize, newLoadingSettings.svgColor);
            else if (loadingType === typesLoading.Circle) svgIcon = loadingAndBlockSvgIconCircle(newLoadingSettings.svgSize, newLoadingSettings.svgColor);
            else if (loadingType === typesLoading.Arrows) svgIcon = loadingAndBlockSvgIconArrows(newLoadingSettings.svgSize, newLoadingSettings.svgColor);
            else if (loadingType === typesLoading.Dots) svgIcon = loadingAndBlockSvgIconDots(newLoadingSettings.svgSize, newLoadingSettings.svgColor);
            else if (loadingType === typesLoading.Pulse) svgIcon = loadingAndBlockSvgIconPulse(newLoadingSettings.svgSize, newLoadingSettings.svgColor);
            else if (loadingType === typesLoading.Custom && newLoadingSettings.customSvgCode !== null && newLoadingSettings.customSvgUrl === null) svgIcon = newLoadingSettings.customSvgCode || "";
            else if (loadingType === typesLoading.Custom && newLoadingSettings.customSvgUrl !== null && newLoadingSettings.customSvgCode === null) svgIcon = '<img class="nx-custom-loading-icon" width="' + newLoadingSettings.svgSize + '" height="' + newLoadingSettings.svgSize + '" src="' + newLoadingSettings.customSvgUrl + '" alt="Notiflix">';
            else if (loadingType === typesLoading.Custom && (newLoadingSettings.customSvgUrl === null || newLoadingSettings.customSvgCode === null)) {
                commonConsoleError('You have to set a static SVG url to "customSvgUrl" option to use Loading Custom.');
                return false;
            } else svgIcon = loadingAndBlockSvgIconNotiflix(newLoadingSettings.svgSize, "#f8f8f8", "#32c682");
            var svgSizeAsDigit = parseInt((newLoadingSettings.svgSize || "").replace(/[^0-9]/g, ""));
            var winWidth = window1.innerWidth;
            var maxSvgWidthPx = svgSizeAsDigit >= winWidth ? winWidth - 40 + "px" : svgSizeAsDigit + "px";
            var svgIconHTML = '<div style="width:' + maxSvgWidthPx + "; height:" + maxSvgWidthPx + ';" class="' + newLoadingSettings.className + "-icon" + (message.length > 0 ? " nx-with-message" : "") + '">' + svgIcon + "</div>";
            // svgIcon: end
            // loading wrap: begin
            var ntflxLoadingWrap = window1.document.createElement("div");
            ntflxLoadingWrap.id = loadingSettings.ID;
            ntflxLoadingWrap.className = newLoadingSettings.className + (newLoadingSettings.cssAnimation ? " nx-with-animation" : "") + (newLoadingSettings.clickToClose ? " nx-loading-click-to-close" : "");
            ntflxLoadingWrap.style.zIndex = newLoadingSettings.zindex;
            ntflxLoadingWrap.style.background = newLoadingSettings.backgroundColor;
            ntflxLoadingWrap.style.animationDuration = newLoadingSettings.cssAnimationDuration + "ms";
            ntflxLoadingWrap.style.fontFamily = '"' + newLoadingSettings.fontFamily + '", ' + defaultFontFamily;
            ntflxLoadingWrap.style.display = "flex";
            ntflxLoadingWrap.style.flexWrap = "wrap";
            ntflxLoadingWrap.style.flexDirection = "column";
            ntflxLoadingWrap.style.alignItems = "center";
            ntflxLoadingWrap.style.justifyContent = "center";
            // rtl: begin
            if (newLoadingSettings.rtl) {
                ntflxLoadingWrap.setAttribute("dir", "rtl");
                ntflxLoadingWrap.classList.add("nx-rtl-on");
            }
            // rtl: end
            // append: begin
            ntflxLoadingWrap.innerHTML = svgIconHTML + messageHTML;
            // if there is no loading element
            if (!window1.document.getElementById(ntflxLoadingWrap.id)) {
                // append
                window1.document.body.appendChild(ntflxLoadingWrap);
                // if click to close
                if (newLoadingSettings.clickToClose) {
                    var loadingWrapElm = window1.document.getElementById(ntflxLoadingWrap.id);
                    loadingWrapElm.addEventListener("click", function() {
                        ntflxLoadingWrap.classList.add("nx-remove");
                        var timeout = setTimeout(function() {
                            if (ntflxLoadingWrap.parentNode !== null) {
                                ntflxLoadingWrap.parentNode.removeChild(ntflxLoadingWrap);
                                clearTimeout(timeout);
                            }
                        }, newLoadingSettings.cssAnimationDuration);
                    });
                }
            }
        // append: end
        } else // if there is a loading element
        if (window1.document.getElementById(loadingSettings.ID)) {
            var loadingElm = window1.document.getElementById(loadingSettings.ID);
            var timeout = setTimeout(function() {
                loadingElm.classList.add("nx-remove");
                var timeout2 = setTimeout(function() {
                    if (loadingElm.parentNode !== null) {
                        loadingElm.parentNode.removeChild(loadingElm);
                        clearTimeout(timeout2);
                    }
                }, newLoadingSettings.cssAnimationDuration);
                clearTimeout(timeout);
            }, delay);
        }
        // extend new settings with the backup settings
        newLoadingSettings = commonExtendOptions(true, newLoadingSettings, newLoadingSettingsBackup);
    };
    // LOADING: Create: end
    // LOADING: Change Message: begin
    var loadingChangeMessage = function(newMessage) {
        // check the new message
        if (typeof newMessage !== "string") newMessage = "";
        // if has any loading
        var messageWrap = window1.document.getElementById(loadingSettings.ID);
        if (messageWrap) {
            // if there is a new message
            if (newMessage.length > 0) {
                // max length: begin
                if (newMessage.length > newLoadingSettings.messageMaxLength) newMessage = commonGetPlaintext(newMessage).substring(0, newLoadingSettings.messageMaxLength) + "...";
                else newMessage = commonGetPlaintext(newMessage);
                // max length: end
                // there is a message element
                var oldMessageElm = messageWrap.getElementsByTagName("p")[0];
                if (oldMessageElm) oldMessageElm.innerHTML = newMessage; // change the message
                else {
                    // create a new message element: begin
                    var newMessageHTML = window1.document.createElement("p");
                    newMessageHTML.id = newLoadingSettings.messageID;
                    newMessageHTML.className = "nx-loading-message nx-loading-message-new";
                    newMessageHTML.style.color = newLoadingSettings.messageColor;
                    newMessageHTML.style.fontSize = newLoadingSettings.messageFontSize;
                    newMessageHTML.innerHTML = newMessage;
                    messageWrap.appendChild(newMessageHTML);
                // create a new message element: end
                }
            } else commonConsoleError("Where is the new message?");
        }
    };
    // LOADING: Change Message: end
    var Notiflix = {
        Loading: {
            // Init
            init: function(userLoadingOptions) {
                // extend options
                newLoadingSettings = commonExtendOptions(true, loadingSettings, userLoadingOptions);
                // internal css if exist
                commonSetInternalCSSCodes(loadingGetInternalCSSCodes, "NotiflixLoadingInternalCSS");
            },
            // Merge First Init
            merge: function(userLoadingExtendOptions) {
                // if initialized already
                if (newLoadingSettings) newLoadingSettings = commonExtendOptions(true, newLoadingSettings, userLoadingExtendOptions);
                else {
                    commonConsoleError("You have to initialize the Loading module before call Merge function.");
                    return false;
                }
            },
            // Standard
            standard: function(messageOrOptions, options) {
                loadingCreate(typesLoading.Standard, messageOrOptions, options, true, 0); // true => show && 0 => delay
            },
            // Hourglass
            hourglass: function(messageOrOptions, options) {
                loadingCreate(typesLoading.Hourglass, messageOrOptions, options, true, 0); // true => show && 0 => delay
            },
            // Circle
            circle: function(messageOrOptions, options) {
                loadingCreate(typesLoading.Circle, messageOrOptions, options, true, 0); // true => show && 0 => delay
            },
            // Arrows
            arrows: function(messageOrOptions, options) {
                loadingCreate(typesLoading.Arrows, messageOrOptions, options, true, 0); // true => show && 0 => delay
            },
            // Dots
            dots: function(messageOrOptions, options) {
                loadingCreate(typesLoading.Dots, messageOrOptions, options, true, 0); // true => show && 0 => delay
            },
            // Pulse
            pulse: function(messageOrOptions, options) {
                loadingCreate(typesLoading.Pulse, messageOrOptions, options, true, 0); // true => show && 0 => delay
            },
            // Custom
            custom: function(messageOrOptions, options) {
                loadingCreate(typesLoading.Custom, messageOrOptions, options, true, 0); // true => show && 0 => delay
            },
            // Notiflix
            notiflix: function(messageOrOptions, options) {
                loadingCreate(typesLoading.Notiflix, messageOrOptions, options, true, 0); // true => show && 0 => delay
            },
            // Remove
            remove: function(delay) {
                if (typeof delay !== "number") delay = 0;
                loadingCreate(null, null, null, false, delay); // false => hide/remove
            },
            // Change The Message
            change: function(newMessage) {
                loadingChangeMessage(newMessage);
            }
        }
    };
    if (typeof window1.Notiflix === "object") return commonExtendOptions(true, window1.Notiflix, {
        Loading: Notiflix.Loading
    });
    else return {
        Loading: Notiflix.Loading
    };
});


var $57ced9ef2f07eff4$exports = {};
/* Notiflix AIO (https://notiflix.github.io) - Version: 3.2.6 - Author: Furkan (https://github.com/furcan) - Copyright 2019 - 2023 Notiflix, MIT Licence (https://opensource.org/licenses/MIT) */ (function(t, e) {
    "function" == typeof define && define.amd ? define([], function() {
        return e(t);
    }) : "object" == typeof $57ced9ef2f07eff4$exports ? $57ced9ef2f07eff4$exports = e(t) : t.Notiflix = e(t);
})("undefined" == typeof $parcel$global ? "undefined" == typeof window ? $57ced9ef2f07eff4$exports : window : $parcel$global, function(t) {
    "use strict";
    if ("undefined" == typeof t && "undefined" == typeof t.document) return !1;
    var e, i, a, n, o, r = "\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation", s = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif', l = {
        Success: "Success",
        Failure: "Failure",
        Warning: "Warning",
        Info: "Info"
    }, m = {
        wrapID: "NotiflixNotifyWrap",
        overlayID: "NotiflixNotifyOverlay",
        width: "280px",
        position: "right-top",
        distance: "10px",
        opacity: 1,
        borderRadius: "5px",
        rtl: !1,
        timeout: 3e3,
        messageMaxLength: 110,
        backOverlay: !1,
        backOverlayColor: "rgba(0,0,0,0.5)",
        plainText: !0,
        showOnlyTheLastOne: !1,
        clickToClose: !1,
        pauseOnHover: !0,
        ID: "NotiflixNotify",
        className: "notiflix-notify",
        zindex: 4001,
        fontFamily: "Quicksand",
        fontSize: "13px",
        cssAnimation: !0,
        cssAnimationDuration: 400,
        cssAnimationStyle: "fade",
        closeButton: !1,
        useIcon: !0,
        useFontAwesome: !1,
        fontAwesomeIconStyle: "basic",
        fontAwesomeIconSize: "34px",
        success: {
            background: "#32c682",
            textColor: "#fff",
            childClassName: "notiflix-notify-success",
            notiflixIconColor: "rgba(0,0,0,0.2)",
            fontAwesomeClassName: "fas fa-check-circle",
            fontAwesomeIconColor: "rgba(0,0,0,0.2)",
            backOverlayColor: "rgba(50,198,130,0.2)"
        },
        failure: {
            background: "#ff5549",
            textColor: "#fff",
            childClassName: "notiflix-notify-failure",
            notiflixIconColor: "rgba(0,0,0,0.2)",
            fontAwesomeClassName: "fas fa-times-circle",
            fontAwesomeIconColor: "rgba(0,0,0,0.2)",
            backOverlayColor: "rgba(255,85,73,0.2)"
        },
        warning: {
            background: "#eebf31",
            textColor: "#fff",
            childClassName: "notiflix-notify-warning",
            notiflixIconColor: "rgba(0,0,0,0.2)",
            fontAwesomeClassName: "fas fa-exclamation-circle",
            fontAwesomeIconColor: "rgba(0,0,0,0.2)",
            backOverlayColor: "rgba(238,191,49,0.2)"
        },
        info: {
            background: "#26c0d3",
            textColor: "#fff",
            childClassName: "notiflix-notify-info",
            notiflixIconColor: "rgba(0,0,0,0.2)",
            fontAwesomeClassName: "fas fa-info-circle",
            fontAwesomeIconColor: "rgba(0,0,0,0.2)",
            backOverlayColor: "rgba(38,192,211,0.2)"
        }
    }, c = {
        Success: "Success",
        Failure: "Failure",
        Warning: "Warning",
        Info: "Info"
    }, p = {
        ID: "NotiflixReportWrap",
        className: "notiflix-report",
        width: "320px",
        backgroundColor: "#f8f8f8",
        borderRadius: "25px",
        rtl: !1,
        zindex: 4002,
        backOverlay: !0,
        backOverlayColor: "rgba(0,0,0,0.5)",
        backOverlayClickToClose: !1,
        fontFamily: "Quicksand",
        svgSize: "110px",
        plainText: !0,
        titleFontSize: "16px",
        titleMaxLength: 34,
        messageFontSize: "13px",
        messageMaxLength: 400,
        buttonFontSize: "14px",
        buttonMaxLength: 34,
        cssAnimation: !0,
        cssAnimationDuration: 360,
        cssAnimationStyle: "fade",
        success: {
            svgColor: "#32c682",
            titleColor: "#1e1e1e",
            messageColor: "#242424",
            buttonBackground: "#32c682",
            buttonColor: "#fff",
            backOverlayColor: "rgba(50,198,130,0.2)"
        },
        failure: {
            svgColor: "#ff5549",
            titleColor: "#1e1e1e",
            messageColor: "#242424",
            buttonBackground: "#ff5549",
            buttonColor: "#fff",
            backOverlayColor: "rgba(255,85,73,0.2)"
        },
        warning: {
            svgColor: "#eebf31",
            titleColor: "#1e1e1e",
            messageColor: "#242424",
            buttonBackground: "#eebf31",
            buttonColor: "#fff",
            backOverlayColor: "rgba(238,191,49,0.2)"
        },
        info: {
            svgColor: "#26c0d3",
            titleColor: "#1e1e1e",
            messageColor: "#242424",
            buttonBackground: "#26c0d3",
            buttonColor: "#fff",
            backOverlayColor: "rgba(38,192,211,0.2)"
        }
    }, f = {
        Show: "Show",
        Ask: "Ask",
        Prompt: "Prompt"
    }, d = {
        ID: "NotiflixConfirmWrap",
        className: "notiflix-confirm",
        width: "300px",
        zindex: 4003,
        position: "center",
        distance: "10px",
        backgroundColor: "#f8f8f8",
        borderRadius: "25px",
        backOverlay: !0,
        backOverlayColor: "rgba(0,0,0,0.5)",
        rtl: !1,
        fontFamily: "Quicksand",
        cssAnimation: !0,
        cssAnimationDuration: 300,
        cssAnimationStyle: "fade",
        plainText: !0,
        titleColor: "#32c682",
        titleFontSize: "16px",
        titleMaxLength: 34,
        messageColor: "#1e1e1e",
        messageFontSize: "14px",
        messageMaxLength: 110,
        buttonsFontSize: "15px",
        buttonsMaxLength: 34,
        okButtonColor: "#f8f8f8",
        okButtonBackground: "#32c682",
        cancelButtonColor: "#f8f8f8",
        cancelButtonBackground: "#a9a9a9"
    }, x = {
        Standard: "Standard",
        Hourglass: "Hourglass",
        Circle: "Circle",
        Arrows: "Arrows",
        Dots: "Dots",
        Pulse: "Pulse",
        Custom: "Custom",
        Notiflix: "Notiflix"
    }, g = {
        ID: "NotiflixLoadingWrap",
        className: "notiflix-loading",
        zindex: 4e3,
        backgroundColor: "rgba(0,0,0,0.8)",
        rtl: !1,
        fontFamily: "Quicksand",
        cssAnimation: !0,
        cssAnimationDuration: 400,
        clickToClose: !1,
        customSvgUrl: null,
        customSvgCode: null,
        svgSize: "80px",
        svgColor: "#32c682",
        messageID: "NotiflixLoadingMessage",
        messageFontSize: "15px",
        messageMaxLength: 34,
        messageColor: "#dcdcdc"
    }, b = {
        Standard: "Standard",
        Hourglass: "Hourglass",
        Circle: "Circle",
        Arrows: "Arrows",
        Dots: "Dots",
        Pulse: "Pulse"
    }, u = {
        ID: "NotiflixBlockWrap",
        querySelectorLimit: 200,
        className: "notiflix-block",
        position: "absolute",
        zindex: 1e3,
        backgroundColor: "rgba(255,255,255,0.9)",
        rtl: !1,
        fontFamily: "Quicksand",
        cssAnimation: !0,
        cssAnimationDuration: 300,
        svgSize: "45px",
        svgColor: "#383838",
        messageFontSize: "14px",
        messageMaxLength: 34,
        messageColor: "#383838"
    }, y = function(t) {
        return console.error("%c Notiflix Error ", "padding:2px;border-radius:20px;color:#fff;background:#ff5549", "\n" + t + r);
    }, k = function(t) {
        return console.log("%c Notiflix Info ", "padding:2px;border-radius:20px;color:#fff;background:#26c0d3", "\n" + t + r);
    }, w = function(e) {
        return e || (e = "head"), null !== t.document[e] || (y('\nNotiflix needs to be appended to the "<' + e + '>" element, but you called it before the "<' + e + '>" element has been created.'), !1);
    }, h = function(e, i) {
        if (!w("head")) return !1;
        if (null !== e() && !t.document.getElementById(i)) {
            var a = t.document.createElement("style");
            a.id = i, a.innerHTML = e(), t.document.head.appendChild(a);
        }
    }, v = function() {
        var t = {}, e = !1, a = 0;
        "[object Boolean]" === Object.prototype.toString.call(arguments[0]) && (e = arguments[0], a++);
        for(var n = function(i) {
            for(var a in i)Object.prototype.hasOwnProperty.call(i, a) && (t[a] = e && "[object Object]" === Object.prototype.toString.call(i[a]) ? v(t[a], i[a]) : i[a]);
        }; a < arguments.length; a++)n(arguments[a]);
        return t;
    }, N = function(e) {
        var i = t.document.createElement("div");
        return i.innerHTML = e, i.textContent || i.innerText || "";
    }, C = function(t, e) {
        t || (t = "110px"), e || (e = "#32c682");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" id="NXReportSuccess" width="' + t + '" height="' + t + '" fill="' + e + '" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z" style="-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>';
        return i;
    }, z = function(t, e) {
        t || (t = "110px"), e || (e = "#ff5549");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" id="NXReportFailure" width="' + t + '" height="' + t + '" fill="' + e + '" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z" style="-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z" style="-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>';
        return i;
    }, S = function(t, e) {
        t || (t = "110px"), e || (e = "#eebf31");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" id="NXReportWarning" width="' + t + '" height="' + t + '" fill="' + e + '" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z" style="-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)"><path d="M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z" style="-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>';
        return i;
    }, L = function(t, e) {
        t || (t = "110px"), e || (e = "#26c0d3");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" id="NXReportInfo" width="' + t + '" height="' + t + '" fill="' + e + '" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z" style="-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>';
        return i;
    }, W = function(t, e) {
        t || (t = "60px"), e || (e = "#32c682");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" stroke="' + e + '" width="' + t + '" height="' + t + '" transform="scale(.8)" viewBox="0 0 38 38"><g fill="none" fill-rule="evenodd" stroke-width="2" transform="translate(1 1)"><circle cx="18" cy="18" r="18" stroke-opacity=".25"/><path d="M36 18c0-9.94-8.06-18-18-18"><animateTransform attributeName="transform" dur="1s" from="0 18 18" repeatCount="indefinite" to="360 18 18" type="rotate"/></path></g></svg>';
        return i;
    }, I = function(t, e) {
        t || (t = "60px"), e || (e = "#32c682");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingHourglass" fill="' + e + '" width="' + t + '" height="' + t + '" viewBox="0 0 200 200"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group="true" data-animator-type="1" style="-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box"><g id="NXhourglass2" fill="inherit"><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass4" d="M100 100l-34.38 32.08v31.14h68.76v-31.14z"/></g><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass6" d="M100 100L65.62 67.92V36.78h68.76v31.14z"/></g><path d="M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z"/></g></g></svg>';
        return i;
    }, R = function(t, e) {
        t || (t = "60px"), e || (e = "#32c682");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" width="' + t + '" height="' + t + '" viewBox="25 25 50 50" style="-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:' + t + ";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:" + t + ';position:absolute;top:0;left:0;margin:auto"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx="50" cy="50" r="20" fill="none" stroke="' + e + '" stroke-width="2" style="-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite" stroke-dasharray="150 200" stroke-dashoffset="-10" stroke-linecap="round"/></svg>';
        return i;
    }, A = function(t, e) {
        t || (t = "60px"), e || (e = "#32c682");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" fill="' + e + '" width="' + t + '" height="' + t + '" viewBox="0 0 128 128"><g><path fill="inherit" d="M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z"/><animateTransform attributeName="transform" dur="1.5s" from="0 64 64" repeatCount="indefinite" to="360 64 64" type="rotate"/></g></svg>';
        return i;
    }, M = function(t, e) {
        t || (t = "60px"), e || (e = "#32c682");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" fill="' + e + '" width="' + t + '" height="' + t + '" viewBox="0 0 100 100"><g transform="translate(25 50)"><circle r="9" fill="inherit" transform="scale(.239)"><animateTransform attributeName="transform" begin="-0.266s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(50 50)"><circle r="9" fill="inherit" transform="scale(.00152)"><animateTransform attributeName="transform" begin="-0.133s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(75 50)"><circle r="9" fill="inherit" transform="scale(.299)"><animateTransform attributeName="transform" begin="0s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g></svg>';
        return i;
    }, B = function(t, e) {
        t || (t = "60px"), e || (e = "#32c682");
        var i = '<svg xmlns="http://www.w3.org/2000/svg" stroke="' + e + '" width="' + t + '" height="' + t + '" viewBox="0 0 44 44"><g fill="none" fill-rule="evenodd" stroke-width="2"><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle></g></svg>';
        return i;
    }, X = function(t, e, i) {
        t || (t = "60px"), e || (e = "#f8f8f8"), i || (i = "#32c682");
        var a = '<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingNotiflixLib" width="' + t + '" height="' + t + '" viewBox="0 0 200 200"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:' + e + ';stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d="M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z" style="animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal" fill="' + i + '" stroke="' + i + '" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="22" stroke-width="12"/><path class="nx-icon-line" d="M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21" style="animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/><path class="nx-icon-line" d="M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75" style="animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/></svg>';
        return a;
    }, D = function() {
        return '[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}';
    }, T = 0, F = function(a, n, o, r) {
        if (!w("body")) return !1;
        e || G.Notify.init({});
        var c = v(!0, e, {});
        if ("object" == typeof o && !Array.isArray(o) || "object" == typeof r && !Array.isArray(r)) {
            var p = {};
            "object" == typeof o ? p = o : "object" == typeof r && (p = r), e = v(!0, e, p);
        }
        var f = e[a.toLocaleLowerCase("en")];
        T++, "string" != typeof n && (n = "Notiflix " + a), e.plainText && (n = N(n)), !e.plainText && n.length > e.messageMaxLength && (e = v(!0, e, {
            closeButton: !0,
            messageMaxLength: 150
        }), n = 'Possible HTML Tags Error: The "plainText" option is "false" and the notification content length is more than the "messageMaxLength" option.'), n.length > e.messageMaxLength && (n = n.substring(0, e.messageMaxLength) + "..."), "shadow" === e.fontAwesomeIconStyle && (f.fontAwesomeIconColor = f.background), e.cssAnimation || (e.cssAnimationDuration = 0);
        var d = t.document.getElementById(m.wrapID) || t.document.createElement("div");
        if (d.id = m.wrapID, d.style.width = e.width, d.style.zIndex = e.zindex, d.style.opacity = e.opacity, "center-center" === e.position ? (d.style.left = e.distance, d.style.top = e.distance, d.style.right = e.distance, d.style.bottom = e.distance, d.style.margin = "auto", d.classList.add("nx-flex-center-center"), d.style.maxHeight = "calc((100vh - " + e.distance + ") - " + e.distance + ")", d.style.display = "flex", d.style.flexWrap = "wrap", d.style.flexDirection = "column", d.style.justifyContent = "center", d.style.alignItems = "center", d.style.pointerEvents = "none") : "center-top" === e.position ? (d.style.left = e.distance, d.style.right = e.distance, d.style.top = e.distance, d.style.bottom = "auto", d.style.margin = "auto") : "center-bottom" === e.position ? (d.style.left = e.distance, d.style.right = e.distance, d.style.bottom = e.distance, d.style.top = "auto", d.style.margin = "auto") : "right-bottom" === e.position ? (d.style.right = e.distance, d.style.bottom = e.distance, d.style.top = "auto", d.style.left = "auto") : "left-top" === e.position ? (d.style.left = e.distance, d.style.top = e.distance, d.style.right = "auto", d.style.bottom = "auto") : "left-bottom" === e.position ? (d.style.left = e.distance, d.style.bottom = e.distance, d.style.top = "auto", d.style.right = "auto") : (d.style.right = e.distance, d.style.top = e.distance, d.style.left = "auto", d.style.bottom = "auto"), e.backOverlay) {
            var x = t.document.getElementById(m.overlayID) || t.document.createElement("div");
            x.id = m.overlayID, x.style.width = "100%", x.style.height = "100%", x.style.position = "fixed", x.style.zIndex = e.zindex - 1, x.style.left = 0, x.style.top = 0, x.style.right = 0, x.style.bottom = 0, x.style.background = f.backOverlayColor || e.backOverlayColor, x.className = e.cssAnimation ? "nx-with-animation" : "", x.style.animationDuration = e.cssAnimation ? e.cssAnimationDuration + "ms" : "", t.document.getElementById(m.overlayID) || t.document.body.appendChild(x);
        }
        t.document.getElementById(m.wrapID) || t.document.body.appendChild(d);
        var g = t.document.createElement("div");
        g.id = e.ID + "-" + T, g.className = e.className + " " + f.childClassName + " " + (e.cssAnimation ? "nx-with-animation" : "") + " " + (e.useIcon ? "nx-with-icon" : "") + " nx-" + e.cssAnimationStyle + " " + (e.closeButton && "function" != typeof o ? "nx-with-close-button" : "") + " " + ("function" == typeof o ? "nx-with-callback" : "") + " " + (e.clickToClose ? "nx-notify-click-to-close" : ""), g.style.fontSize = e.fontSize, g.style.color = f.textColor, g.style.background = f.background, g.style.borderRadius = e.borderRadius, g.style.pointerEvents = "all", e.rtl && (g.setAttribute("dir", "rtl"), g.classList.add("nx-rtl-on")), g.style.fontFamily = '"' + e.fontFamily + '", ' + s, e.cssAnimation && (g.style.animationDuration = e.cssAnimationDuration + "ms");
        var b = "";
        if (e.closeButton && "function" != typeof o && (b = '<span class="nx-close-button"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><g><path fill="' + f.notiflixIconColor + '" d="M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z"/></g></svg></span>'), !e.useIcon) g.innerHTML = '<span class="nx-message">' + n + "</span>" + (e.closeButton ? b : "");
        else if (e.useFontAwesome) g.innerHTML = '<i style="color:' + f.fontAwesomeIconColor + "; font-size:" + e.fontAwesomeIconSize + ';" class="nx-message-icon nx-message-icon-fa ' + f.fontAwesomeClassName + " " + ("shadow" === e.fontAwesomeIconStyle ? "nx-message-icon-fa-shadow" : "nx-message-icon-fa-basic") + '"></i><span class="nx-message nx-with-icon">' + n + "</span>" + (e.closeButton ? b : "");
        else {
            var u = "";
            a === l.Success ? u = '<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="' + f.notiflixIconColor + '" d="M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z"/></g></svg>' : a === l.Failure ? u = '<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="' + f.notiflixIconColor + '" d="M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z"/></g></svg>' : a === l.Warning ? u = '<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="' + f.notiflixIconColor + '" d="M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z"/></g></svg>' : a === l.Info && (u = '<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="' + f.notiflixIconColor + '" d="M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z"/></g></svg>'), g.innerHTML = u + '<span class="nx-message nx-with-icon">' + n + "</span>" + (e.closeButton ? b : "");
        }
        if ("left-bottom" === e.position || "right-bottom" === e.position) {
            var y = t.document.getElementById(m.wrapID);
            y.insertBefore(g, y.firstChild);
        } else t.document.getElementById(m.wrapID).appendChild(g);
        var k = t.document.getElementById(g.id);
        if (k) {
            var h, C, z = function() {
                k.classList.add("nx-remove");
                var e = t.document.getElementById(m.overlayID);
                e && 0 >= d.childElementCount && e.classList.add("nx-remove"), clearTimeout(h);
            }, S = function() {
                if (k && null !== k.parentNode && k.parentNode.removeChild(k), 0 >= d.childElementCount && null !== d.parentNode) {
                    d.parentNode.removeChild(d);
                    var e = t.document.getElementById(m.overlayID);
                    e && null !== e.parentNode && e.parentNode.removeChild(e);
                }
                clearTimeout(C);
            };
            if (e.closeButton && "function" != typeof o) {
                var L = t.document.getElementById(g.id).querySelector("span.nx-close-button");
                L.addEventListener("click", function() {
                    z();
                    var t = setTimeout(function() {
                        S(), clearTimeout(t);
                    }, e.cssAnimationDuration);
                });
            }
            if (("function" == typeof o || e.clickToClose) && k.addEventListener("click", function() {
                "function" == typeof o && o(), z();
                var t = setTimeout(function() {
                    S(), clearTimeout(t);
                }, e.cssAnimationDuration);
            }), !e.closeButton && "function" != typeof o) {
                var W = function() {
                    h = setTimeout(function() {
                        z();
                    }, e.timeout), C = setTimeout(function() {
                        S();
                    }, e.timeout + e.cssAnimationDuration);
                };
                W(), e.pauseOnHover && (k.addEventListener("mouseenter", function() {
                    k.classList.add("nx-paused"), clearTimeout(h), clearTimeout(C);
                }), k.addEventListener("mouseleave", function() {
                    k.classList.remove("nx-paused"), W();
                }));
            }
        }
        if (e.showOnlyTheLastOne && 0 < T) for(var I, R = t.document.querySelectorAll("[id^=" + e.ID + "-]:not([id=" + e.ID + "-" + T + "])"), A = 0; A < R.length; A++)I = R[A], null !== I.parentNode && I.parentNode.removeChild(I);
        e = v(!0, e, c);
    }, E = function() {
        return '[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*="-content"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}';
    }, j = function(e, a, n, o, r, l) {
        if (!w("body")) return !1;
        i || G.Report.init({});
        var m = {};
        if ("object" == typeof r && !Array.isArray(r) || "object" == typeof l && !Array.isArray(l)) {
            var f = {};
            "object" == typeof r ? f = r : "object" == typeof l && (f = l), m = v(!0, i, {}), i = v(!0, i, f);
        }
        var d = i[e.toLocaleLowerCase("en")];
        "string" != typeof a && (a = "Notiflix " + e), "string" != typeof n && (e === c.Success ? n = '"Do not try to become a person of success but try to become a person of value." <br><br>- Albert Einstein' : e === c.Failure ? n = '"Failure is simply the opportunity to begin again, this time more intelligently." <br><br>- Henry Ford' : e === c.Warning ? n = '"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny." <br><br>- Mustafa Kemal Ataturk' : e === c.Info && (n = '"Knowledge rests not upon truth alone, but upon error also." <br><br>- Carl Gustav Jung')), "string" != typeof o && (o = "Okay"), i.plainText && (a = N(a), n = N(n), o = N(o)), i.plainText || (a.length > i.titleMaxLength && (a = "Possible HTML Tags Error", n = 'The "plainText" option is "false" and the title content length is more than the "titleMaxLength" option.', o = "Okay"), n.length > i.messageMaxLength && (a = "Possible HTML Tags Error", n = 'The "plainText" option is "false" and the message content length is more than the "messageMaxLength" option.', o = "Okay"), o.length > i.buttonMaxLength && (a = "Possible HTML Tags Error", n = 'The "plainText" option is "false" and the button content length is more than the "buttonMaxLength" option.', o = "Okay")), a.length > i.titleMaxLength && (a = a.substring(0, i.titleMaxLength) + "..."), n.length > i.messageMaxLength && (n = n.substring(0, i.messageMaxLength) + "..."), o.length > i.buttonMaxLength && (o = o.substring(0, i.buttonMaxLength) + "..."), i.cssAnimation || (i.cssAnimationDuration = 0);
        var x = t.document.createElement("div");
        x.id = p.ID, x.className = i.className, x.style.zIndex = i.zindex, x.style.borderRadius = i.borderRadius, x.style.fontFamily = '"' + i.fontFamily + '", ' + s, i.rtl && (x.setAttribute("dir", "rtl"), x.classList.add("nx-rtl-on")), x.style.display = "flex", x.style.flexWrap = "wrap", x.style.flexDirection = "column", x.style.alignItems = "center", x.style.justifyContent = "center";
        var g = "", b = !0 === i.backOverlayClickToClose;
        i.backOverlay && (g = '<div class="' + i.className + "-overlay" + (i.cssAnimation ? " nx-with-animation" : "") + (b ? " nx-report-click-to-close" : "") + '" style="background:' + (d.backOverlayColor || i.backOverlayColor) + ";animation-duration:" + i.cssAnimationDuration + 'ms;"></div>');
        var u = "";
        if (e === c.Success ? u = C(i.svgSize, d.svgColor) : e === c.Failure ? u = z(i.svgSize, d.svgColor) : e === c.Warning ? u = S(i.svgSize, d.svgColor) : e === c.Info && (u = L(i.svgSize, d.svgColor)), x.innerHTML = g + '<div class="' + i.className + "-content" + (i.cssAnimation ? " nx-with-animation " : "") + " nx-" + i.cssAnimationStyle + '" style="width:' + i.width + "; background:" + i.backgroundColor + "; animation-duration:" + i.cssAnimationDuration + 'ms;"><div style="width:' + i.svgSize + "; height:" + i.svgSize + ';" class="' + i.className + '-icon">' + u + '</div><h5 class="' + i.className + '-title" style="font-weight:500; font-size:' + i.titleFontSize + "; color:" + d.titleColor + ';">' + a + '</h5><p class="' + i.className + '-message" style="font-size:' + i.messageFontSize + "; color:" + d.messageColor + ';">' + n + '</p><a id="NXReportButton" class="' + i.className + '-button" style="font-weight:500; font-size:' + i.buttonFontSize + "; background:" + d.buttonBackground + "; color:" + d.buttonColor + ';">' + o + "</a></div>", !t.document.getElementById(x.id)) {
            t.document.body.appendChild(x);
            var y = function() {
                var e = t.document.getElementById(x.id);
                e.classList.add("nx-remove");
                var a = setTimeout(function() {
                    null !== e.parentNode && e.parentNode.removeChild(e), clearTimeout(a);
                }, i.cssAnimationDuration);
            }, k = t.document.getElementById("NXReportButton");
            if (k.addEventListener("click", function() {
                "function" == typeof r && r(), y();
            }), g && b) {
                var h = t.document.querySelector(".nx-report-click-to-close");
                h.addEventListener("click", function() {
                    y();
                });
            }
        }
        i = v(!0, i, m);
    }, O = function() {
        return '[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*="-content"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-head"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*="-content"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*="-content"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}';
    }, H = function(e, i, n, o, r, l, m, c, p) {
        if (!w("body")) return !1;
        a || G.Confirm.init({});
        var x = v(!0, a, {});
        "object" != typeof p || Array.isArray(p) || (a = v(!0, a, p)), "string" != typeof i && (i = "Notiflix Confirm"), "string" != typeof n && (n = "Do you agree with me?"), "string" != typeof r && (r = "Yes"), "string" != typeof l && (l = "No"), "function" != typeof m && (m = void 0), "function" != typeof c && (c = void 0), a.plainText && (i = N(i), n = N(n), r = N(r), l = N(l)), a.plainText || (i.length > a.titleMaxLength && (i = "Possible HTML Tags Error", n = 'The "plainText" option is "false" and the title content length is more than "titleMaxLength" option.', r = "Okay", l = "..."), n.length > a.messageMaxLength && (i = "Possible HTML Tags Error", n = 'The "plainText" option is "false" and the message content length is more than "messageMaxLength" option.', r = "Okay", l = "..."), (r.length || l.length) > a.buttonsMaxLength && (i = "Possible HTML Tags Error", n = 'The "plainText" option is "false" and the buttons content length is more than "buttonsMaxLength" option.', r = "Okay", l = "...")), i.length > a.titleMaxLength && (i = i.substring(0, a.titleMaxLength) + "..."), n.length > a.messageMaxLength && (n = n.substring(0, a.messageMaxLength) + "..."), r.length > a.buttonsMaxLength && (r = r.substring(0, a.buttonsMaxLength) + "..."), l.length > a.buttonsMaxLength && (l = l.substring(0, a.buttonsMaxLength) + "..."), a.cssAnimation || (a.cssAnimationDuration = 0);
        var g = t.document.createElement("div");
        g.id = d.ID, g.className = a.className + (a.cssAnimation ? " nx-with-animation nx-" + a.cssAnimationStyle : ""), g.style.zIndex = a.zindex, g.style.padding = a.distance, a.rtl && (g.setAttribute("dir", "rtl"), g.classList.add("nx-rtl-on"));
        var b = "string" == typeof a.position ? a.position.trim() : "center";
        g.classList.add("nx-position-" + b), g.style.fontFamily = '"' + a.fontFamily + '", ' + s;
        var u = "";
        a.backOverlay && (u = '<div class="' + a.className + "-overlay" + (a.cssAnimation ? " nx-with-animation" : "") + '" style="background:' + a.backOverlayColor + ";animation-duration:" + a.cssAnimationDuration + 'ms;"></div>');
        var y = "";
        "function" == typeof m && (y = '<a id="NXConfirmButtonCancel" class="nx-confirm-button-cancel" style="color:' + a.cancelButtonColor + ";background:" + a.cancelButtonBackground + ";font-size:" + a.buttonsFontSize + ';">' + l + "</a>");
        var k = "", h = null, C = void 0;
        if (e === f.Ask || e === f.Prompt) {
            h = o || "";
            var z = e === f.Ask ? Math.ceil(1.5 * h.length) : 200 < h.length ? Math.ceil(1.5 * h.length) : 250, S = e === f.Prompt ? 'value="' + h + '"' : "";
            k = '<div><input id="NXConfirmValidationInput" type="text" ' + S + ' maxlength="' + z + '" style="font-size:' + a.messageFontSize + ";border-radius: " + a.borderRadius + ';" autocomplete="off" spellcheck="false" autocapitalize="none" /></div>';
        }
        if (g.innerHTML = u + '<div class="' + a.className + '-content" style="width:' + a.width + "; background:" + a.backgroundColor + "; animation-duration:" + a.cssAnimationDuration + "ms; border-radius: " + a.borderRadius + ';"><div class="' + a.className + '-head"><h5 style="color:' + a.titleColor + ";font-size:" + a.titleFontSize + ';">' + i + '</h5><div style="color:' + a.messageColor + ";font-size:" + a.messageFontSize + ';">' + n + k + '</div></div><div class="' + a.className + '-buttons"><a id="NXConfirmButtonOk" class="nx-confirm-button-ok' + ("function" == typeof m ? "" : " nx-full") + '" style="color:' + a.okButtonColor + ";background:" + a.okButtonBackground + ";font-size:" + a.buttonsFontSize + ';">' + r + "</a>" + y + "</div></div>", !t.document.getElementById(g.id)) {
            t.document.body.appendChild(g);
            var L = t.document.getElementById(g.id), W = t.document.getElementById("NXConfirmButtonOk"), I = t.document.getElementById("NXConfirmValidationInput");
            if (I && (I.focus(), I.setSelectionRange(0, (I.value || "").length), I.addEventListener("keyup", function(t) {
                var i = t.target.value;
                if (e === f.Ask && i !== h) t.preventDefault(), I.classList.add("nx-validation-failure"), I.classList.remove("nx-validation-success");
                else {
                    e === f.Ask && (I.classList.remove("nx-validation-failure"), I.classList.add("nx-validation-success"));
                    var a = "enter" === (t.key || "").toLocaleLowerCase("en") || 13 === t.keyCode;
                    a && W.dispatchEvent(new Event("click"));
                }
            })), W.addEventListener("click", function(t) {
                if (e === f.Ask && h && I) {
                    var i = (I.value || "").toString();
                    if (i !== h) return I.focus(), I.classList.add("nx-validation-failure"), t.stopPropagation(), t.preventDefault(), t.returnValue = !1, t.cancelBubble = !0, !1;
                    I.classList.remove("nx-validation-failure");
                }
                "function" == typeof m && (e === f.Prompt && I && (C = I.value || ""), m(C)), L.classList.add("nx-remove");
                var n = setTimeout(function() {
                    null !== L.parentNode && (L.parentNode.removeChild(L), clearTimeout(n));
                }, a.cssAnimationDuration);
            }), "function" == typeof m) {
                var R = t.document.getElementById("NXConfirmButtonCancel");
                R.addEventListener("click", function() {
                    "function" == typeof c && (e === f.Prompt && I && (C = I.value || ""), c(C)), L.classList.add("nx-remove");
                    var t = setTimeout(function() {
                        null !== L.parentNode && (L.parentNode.removeChild(L), clearTimeout(t));
                    }, a.cssAnimationDuration);
                });
            }
        }
        a = v(!0, a, x);
    }, P = function() {
        return '[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*="-icon"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*="-icon"] img,[id^=NotiflixLoadingWrap]>div[class*="-icon"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}';
    }, U = function(e, i, a, o, r) {
        if (!w("body")) return !1;
        n || G.Loading.init({});
        var l = v(!0, n, {});
        if ("object" == typeof i && !Array.isArray(i) || "object" == typeof a && !Array.isArray(a)) {
            var m = {};
            "object" == typeof i ? m = i : "object" == typeof a && (m = a), n = v(!0, n, m);
        }
        var c = "";
        if ("string" == typeof i && 0 < i.length && (c = i), o) {
            c = c.length > n.messageMaxLength ? N(c).toString().substring(0, n.messageMaxLength) + "..." : N(c).toString();
            var p = "";
            0 < c.length && (p = '<p id="' + n.messageID + '" class="nx-loading-message" style="color:' + n.messageColor + ";font-size:" + n.messageFontSize + ';">' + c + "</p>"), n.cssAnimation || (n.cssAnimationDuration = 0);
            var f = "";
            if (e === x.Standard) f = W(n.svgSize, n.svgColor);
            else if (e === x.Hourglass) f = I(n.svgSize, n.svgColor);
            else if (e === x.Circle) f = R(n.svgSize, n.svgColor);
            else if (e === x.Arrows) f = A(n.svgSize, n.svgColor);
            else if (e === x.Dots) f = M(n.svgSize, n.svgColor);
            else if (e === x.Pulse) f = B(n.svgSize, n.svgColor);
            else if (e === x.Custom && null !== n.customSvgCode && null === n.customSvgUrl) f = n.customSvgCode || "";
            else if (e === x.Custom && null !== n.customSvgUrl && null === n.customSvgCode) f = '<img class="nx-custom-loading-icon" width="' + n.svgSize + '" height="' + n.svgSize + '" src="' + n.customSvgUrl + '" alt="Notiflix">';
            else {
                if (e === x.Custom && (null === n.customSvgUrl || null === n.customSvgCode)) return y('You have to set a static SVG url to "customSvgUrl" option to use Loading Custom.'), !1;
                f = X(n.svgSize, "#f8f8f8", "#32c682");
            }
            var d = parseInt((n.svgSize || "").replace(/[^0-9]/g, "")), b = t.innerWidth, u = d >= b ? b - 40 + "px" : d + "px", k = '<div style="width:' + u + "; height:" + u + ';" class="' + n.className + "-icon" + (0 < c.length ? " nx-with-message" : "") + '">' + f + "</div>", h = t.document.createElement("div");
            if (h.id = g.ID, h.className = n.className + (n.cssAnimation ? " nx-with-animation" : "") + (n.clickToClose ? " nx-loading-click-to-close" : ""), h.style.zIndex = n.zindex, h.style.background = n.backgroundColor, h.style.animationDuration = n.cssAnimationDuration + "ms", h.style.fontFamily = '"' + n.fontFamily + '", ' + s, h.style.display = "flex", h.style.flexWrap = "wrap", h.style.flexDirection = "column", h.style.alignItems = "center", h.style.justifyContent = "center", n.rtl && (h.setAttribute("dir", "rtl"), h.classList.add("nx-rtl-on")), h.innerHTML = k + p, !t.document.getElementById(h.id) && (t.document.body.appendChild(h), n.clickToClose)) {
                var C = t.document.getElementById(h.id);
                C.addEventListener("click", function() {
                    h.classList.add("nx-remove");
                    var t = setTimeout(function() {
                        null !== h.parentNode && (h.parentNode.removeChild(h), clearTimeout(t));
                    }, n.cssAnimationDuration);
                });
            }
        } else if (t.document.getElementById(g.ID)) var z = t.document.getElementById(g.ID), S = setTimeout(function() {
            z.classList.add("nx-remove");
            var t = setTimeout(function() {
                null !== z.parentNode && (z.parentNode.removeChild(z), clearTimeout(t));
            }, n.cssAnimationDuration);
            clearTimeout(S);
        }, r);
        n = v(!0, n, l);
    }, V = function(e) {
        "string" != typeof e && (e = "");
        var i = t.document.getElementById(g.ID);
        if (i) {
            if (0 < e.length) {
                e = e.length > n.messageMaxLength ? N(e).substring(0, n.messageMaxLength) + "..." : N(e);
                var a = i.getElementsByTagName("p")[0];
                if (a) a.innerHTML = e;
                else {
                    var o = t.document.createElement("p");
                    o.id = n.messageID, o.className = "nx-loading-message nx-loading-message-new", o.style.color = n.messageColor, o.style.fontSize = n.messageFontSize, o.innerHTML = e, i.appendChild(o);
                }
            } else y("Where is the new message?");
        }
    }, q = function() {
        return '[id^=NotiflixBlockWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;z-index:1000;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;background:rgba(255,255,255,.9);text-align:center;animation-duration:.4s;width:100%;height:100%;left:0;top:0;border-radius:inherit;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixBlockWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixBlockWrap]>span[class*="-icon"]{display:block;width:45px;height:45px;position:relative;margin:0 auto}[id^=NotiflixBlockWrap]>span[class*="-icon"] svg{width:inherit;height:inherit}[id^=NotiflixBlockWrap]>span[class*="-message"]{position:relative;display:block;width:100%;margin:10px auto 0;padding:0 10px;font-family:inherit!important;font-weight:normal;font-size:14px;line-height:1.4}[id^=NotiflixBlockWrap].nx-with-animation{-webkit-animation:block-animation-fade .3s ease-in-out 0s normal;animation:block-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixBlockWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:block-animation-fade-remove .3s ease-in-out 0s normal;animation:block-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}';
    }, Q = 0, Y = function(e, i, a, n, r, l) {
        var m;
        if (Array.isArray(a)) {
            if (1 > a.length) return y("Array of HTMLElements should contains at least one HTMLElement."), !1;
            m = a;
        } else if (Object.prototype.isPrototypeOf.call(NodeList.prototype, a)) {
            if (1 > a.length) return y("NodeListOf<HTMLElement> should contains at least one HTMLElement."), !1;
            m = Array.prototype.slice.call(a);
        } else {
            var c = "string" != typeof a || 1 > (a || "").length || 1 === (a || "").length && ("#" === (a || "")[0] || "." === (a || "")[0]);
            if (c) return y("The selector parameter must be a string and matches a specified CSS selector(s)."), !1;
            var p = t.document.querySelectorAll(a);
            if (1 > p.length) return y('You called the "Notiflix.Block..." function with "' + a + '" selector, but there is no such element(s) in the document.'), !1;
            m = p;
        }
        o || G.Block.init({});
        var f = v(!0, o, {});
        if ("object" == typeof n && !Array.isArray(n) || "object" == typeof r && !Array.isArray(r)) {
            var d = {};
            "object" == typeof n ? d = n : "object" == typeof r && (d = r), o = v(!0, o, d);
        }
        var x = "";
        "string" == typeof n && 0 < n.length && (x = n), o.cssAnimation || (o.cssAnimationDuration = 0);
        var g = u.className;
        "string" == typeof o.className && (g = o.className.trim());
        var h = "number" == typeof o.querySelectorLimit ? o.querySelectorLimit : 200, C = (m || []).length >= h ? h : m.length, z = "nx-block-temporary-position";
        if (e) {
            for(var S, L = [
                "area",
                "base",
                "br",
                "col",
                "command",
                "embed",
                "hr",
                "img",
                "input",
                "keygen",
                "link",
                "meta",
                "param",
                "source",
                "track",
                "wbr",
                "html",
                "head",
                "title",
                "script",
                "style",
                "iframe"
            ], X = 0; X < C; X++)if (S = m[X], S) {
                if (-1 < L.indexOf(S.tagName.toLocaleLowerCase("en"))) break;
                var D = S.querySelectorAll("[id^=" + u.ID + "]");
                if (1 > D.length) {
                    var T = "";
                    i && (i === b.Hourglass ? T = I(o.svgSize, o.svgColor) : i === b.Circle ? T = R(o.svgSize, o.svgColor) : i === b.Arrows ? T = A(o.svgSize, o.svgColor) : i === b.Dots ? T = M(o.svgSize, o.svgColor) : i === b.Pulse ? T = B(o.svgSize, o.svgColor) : T = W(o.svgSize, o.svgColor));
                    var F = '<span class="' + g + '-icon" style="width:' + o.svgSize + ";height:" + o.svgSize + ';">' + T + "</span>", E = "";
                    0 < x.length && (x = x.length > o.messageMaxLength ? N(x).substring(0, o.messageMaxLength) + "..." : N(x), E = '<span style="font-size:' + o.messageFontSize + ";color:" + o.messageColor + ';" class="' + g + '-message">' + x + "</span>"), Q++;
                    var j = t.document.createElement("div");
                    j.id = u.ID + "-" + Q, j.className = g + (o.cssAnimation ? " nx-with-animation" : ""), j.style.position = o.position, j.style.zIndex = o.zindex, j.style.background = o.backgroundColor, j.style.animationDuration = o.cssAnimationDuration + "ms", j.style.fontFamily = '"' + o.fontFamily + '", ' + s, j.style.display = "flex", j.style.flexWrap = "wrap", j.style.flexDirection = "column", j.style.alignItems = "center", j.style.justifyContent = "center", o.rtl && (j.setAttribute("dir", "rtl"), j.classList.add("nx-rtl-on")), j.innerHTML = F + E;
                    var O = t.getComputedStyle(S).getPropertyValue("position"), H = "string" == typeof O ? O.toLocaleLowerCase("en") : "relative", P = Math.round(1.25 * parseInt(o.svgSize)) + 40, U = S.offsetHeight || 0, V = "";
                    P > U && (V = "min-height:" + P + "px;");
                    var q = "";
                    q = S.getAttribute("id") ? "#" + S.getAttribute("id") : S.classList[0] ? "." + S.classList[0] : (S.tagName || "").toLocaleLowerCase("en");
                    var Y = "", K = -1 >= [
                        "absolute",
                        "relative",
                        "fixed",
                        "sticky"
                    ].indexOf(H);
                    if (K || 0 < V.length) {
                        if (!w("head")) return !1;
                        K && (Y = "position:relative!important;");
                        var $ = '<style id="Style-' + u.ID + "-" + Q + '">' + q + "." + z + "{" + Y + V + "}</style>", J = t.document.createRange();
                        J.selectNode(t.document.head);
                        var Z = J.createContextualFragment($);
                        t.document.head.appendChild(Z), S.classList.add(z);
                    }
                    S.appendChild(j);
                }
            }
        } else var _ = function(e) {
            var i = setTimeout(function() {
                null !== e.parentNode && e.parentNode.removeChild(e);
                var a = e.getAttribute("id"), n = t.document.getElementById("Style-" + a);
                n && null !== n.parentNode && n.parentNode.removeChild(n), clearTimeout(i);
            }, o.cssAnimationDuration);
        }, tt = function(t) {
            if (t && 0 < t.length) for(var e, n = 0; n < t.length; n++)e = t[n], e && (e.classList.add("nx-remove"), _(e));
            else "string" == typeof a ? k('"Notiflix.Block.remove();" function called with "' + a + '" selector, but this selector does not have a "Block" element to remove.') : k('"Notiflix.Block.remove();" function called with "' + a + '", but this "Array<HTMLElement>" or "NodeListOf<HTMLElement>" does not have a "Block" element to remove.');
        }, et = function(t) {
            var e = setTimeout(function() {
                t.classList.remove(z), clearTimeout(e);
            }, o.cssAnimationDuration + 300);
        }, it = setTimeout(function() {
            for(var t, e = 0; e < C; e++)t = m[e], t && (et(t), D = t.querySelectorAll("[id^=" + u.ID + "]"), tt(D));
            clearTimeout(it);
        }, l);
        o = v(!0, o, f);
    }, G = {
        Notify: {
            init: function(t) {
                e = v(!0, m, t), h(D, "NotiflixNotifyInternalCSS");
            },
            merge: function(t) {
                return e ? void (e = v(!0, e, t)) : (y("You have to initialize the Notify module before call Merge function."), !1);
            },
            success: function(t, e, i) {
                F(l.Success, t, e, i);
            },
            failure: function(t, e, i) {
                F(l.Failure, t, e, i);
            },
            warning: function(t, e, i) {
                F(l.Warning, t, e, i);
            },
            info: function(t, e, i) {
                F(l.Info, t, e, i);
            }
        },
        Report: {
            init: function(t) {
                i = v(!0, p, t), h(E, "NotiflixReportInternalCSS");
            },
            merge: function(t) {
                return i ? void (i = v(!0, i, t)) : (y("You have to initialize the Report module before call Merge function."), !1);
            },
            success: function(t, e, i, a, n) {
                j(c.Success, t, e, i, a, n);
            },
            failure: function(t, e, i, a, n) {
                j(c.Failure, t, e, i, a, n);
            },
            warning: function(t, e, i, a, n) {
                j(c.Warning, t, e, i, a, n);
            },
            info: function(t, e, i, a, n) {
                j(c.Info, t, e, i, a, n);
            }
        },
        Confirm: {
            init: function(t) {
                a = v(!0, d, t), h(O, "NotiflixConfirmInternalCSS");
            },
            merge: function(t) {
                return a ? void (a = v(!0, a, t)) : (y("You have to initialize the Confirm module before call Merge function."), !1);
            },
            show: function(t, e, i, a, n, o, r) {
                H(f.Show, t, e, null, i, a, n, o, r);
            },
            ask: function(t, e, i, a, n, o, r, s) {
                H(f.Ask, t, e, i, a, n, o, r, s);
            },
            prompt: function(t, e, i, a, n, o, r, s) {
                H(f.Prompt, t, e, i, a, n, o, r, s);
            }
        },
        Loading: {
            init: function(t) {
                n = v(!0, g, t), h(P, "NotiflixLoadingInternalCSS");
            },
            merge: function(t) {
                return n ? void (n = v(!0, n, t)) : (y("You have to initialize the Loading module before call Merge function."), !1);
            },
            standard: function(t, e) {
                U(x.Standard, t, e, !0, 0);
            },
            hourglass: function(t, e) {
                U(x.Hourglass, t, e, !0, 0);
            },
            circle: function(t, e) {
                U(x.Circle, t, e, !0, 0);
            },
            arrows: function(t, e) {
                U(x.Arrows, t, e, !0, 0);
            },
            dots: function(t, e) {
                U(x.Dots, t, e, !0, 0);
            },
            pulse: function(t, e) {
                U(x.Pulse, t, e, !0, 0);
            },
            custom: function(t, e) {
                U(x.Custom, t, e, !0, 0);
            },
            notiflix: function(t, e) {
                U(x.Notiflix, t, e, !0, 0);
            },
            remove: function(t) {
                "number" != typeof t && (t = 0), U(null, null, null, !1, t);
            },
            change: function(t) {
                V(t);
            }
        },
        Block: {
            init: function(t) {
                o = v(!0, u, t), h(q, "NotiflixBlockInternalCSS");
            },
            merge: function(t) {
                return o ? void (o = v(!0, o, t)) : (y('You have to initialize the "Notiflix.Block" module before call Merge function.'), !1);
            },
            standard: function(t, e, i) {
                Y(!0, b.Standard, t, e, i);
            },
            hourglass: function(t, e, i) {
                Y(!0, b.Hourglass, t, e, i);
            },
            circle: function(t, e, i) {
                Y(!0, b.Circle, t, e, i);
            },
            arrows: function(t, e, i) {
                Y(!0, b.Arrows, t, e, i);
            },
            dots: function(t, e, i) {
                Y(!0, b.Dots, t, e, i);
            },
            pulse: function(t, e, i) {
                Y(!0, b.Pulse, t, e, i);
            },
            remove: function(t, e) {
                "number" != typeof e && (e = 0), Y(!1, null, t, null, null, e);
            }
        }
    };
    return "object" == typeof t.Notiflix ? v(!0, t.Notiflix, {
        Notify: G.Notify,
        Report: G.Report,
        Confirm: G.Confirm,
        Loading: G.Loading,
        Block: G.Block
    }) : {
        Notify: G.Notify,
        Report: G.Report,
        Confirm: G.Confirm,
        Loading: G.Loading,
        Block: G.Block
    };
});



const $ea45f6976698d349$var$ICO = ()=>{
    const { address: address , isConnected: isConnected  } = (0, $168b680515f5196a$export$83a8e409853da004)();
    const [allowance, setAllowance] = (0, $d4J5n.useState)(0);
    const [usdAmount, setUSDAmount] = (0, $d4J5n.useState)(100);
    const [tokenAmount, setTokenAmount] = (0, $d4J5n.useState)(0);
    const [amountValid, setAmountValid] = (0, $d4J5n.useState)(false);
    const [soldTokens, setSoldTokens] = (0, $d4J5n.useState)(0);
    const [userTokens, setUserTokens] = (0, $d4J5n.useState)(0);
    const [latestTX, setLatestTX] = (0, $d4J5n.useState)();
    const success = (t, m)=>{
        (0, $57ced9ef2f07eff4$exports.Report).success(t || "SUCCESS!", m);
    };
    const failure = (e)=>{
        (0, $57ced9ef2f07eff4$exports.Report).failure("OOPSS!", `Sorry, it seems that an error occurred. If the issue(s) still persist, 
        please let us know as soon as possible. ::More Info:: ${e.toString()} `, "Close", {
            messageMaxLength: 500
        });
    };
    const approveStatus = (0, $168b680515f5196a$export$6f78c1774963fe2d)({
        address: (0, $8c26eb04468b23d6$export$1ddc1f84b754bfeb),
        abi: (0, $077a864ec31a8b9f$export$e125cdc2a458cf13),
        functionName: "allowance",
        args: [
            address,
            (0, $8c26eb04468b23d6$export$59767791f127dd93)
        ],
        enabled: isConnected && address,
        onSettled (data, error) {
            if (error) {
                failure(error?.message);
                return;
            }
            setAllowance(parseInt(data));
        }
    });
    const solds = (0, $168b680515f5196a$export$f36bb0f54b7a8d18)({
        contracts: [
            {
                address: (0, $8c26eb04468b23d6$export$59767791f127dd93),
                abi: (0, $8c26eb04468b23d6$export$db201c75c214c358),
                functionName: "TOTAL_SOLD"
            },
            {
                address: (0, $8c26eb04468b23d6$export$59767791f127dd93),
                abi: (0, $8c26eb04468b23d6$export$db201c75c214c358),
                functionName: "getBuyer",
                args: [
                    address
                ]
            }
        ],
        watch: true,
        onSettled (data, error) {
            if (error) return;
            if (data && data.length > 1) {
                setSoldTokens(parseFloat((data[0] / 10 ** 18 || 0).toString()).toFixed(5));
                setUserTokens(parseFloat((data[1]?.totalBought / 10 ** 18 || 0).toString()).toFixed(5));
            }
        }
    });
    const approveConfig = (0, $168b680515f5196a$export$f08fad0d21112083)({
        address: (0, $8c26eb04468b23d6$export$1ddc1f84b754bfeb),
        abi: (0, $077a864ec31a8b9f$export$e125cdc2a458cf13),
        functionName: "approve",
        args: [
            (0, $8c26eb04468b23d6$export$59767791f127dd93),
            (0, $1f15dc6335b2d782$exports).utils.parseEther(parseFloat(`${usdAmount || 100}`).toFixed(2))
        ],
        chainId: (0, $9c8743126c7e32de$export$170e8cdd0c4e59c8).id,
        enabled: isConnected && address,
        onSettled (data, error) {
            if (error) {
                failure(error?.message);
                return;
            }
        }
    });
    const buyConfig = (0, $168b680515f5196a$export$f08fad0d21112083)({
        address: "0x006C553772336C420eCb06124857DFaF2388f43C",
        abi: (0, $8c26eb04468b23d6$export$db201c75c214c358),
        functionName: "buy",
        args: [
            amountValid
        ],
        chainId: (0, $9c8743126c7e32de$export$170e8cdd0c4e59c8).id,
        enabled: allowance > 0 && amountValid
    });
    const { data: approveData , write: approve , error: approveError  } = (0, $168b680515f5196a$export$f65fbf805a7dc8c5)({
        ...approveConfig.config,
        onSuccess (data) {
            setLatestTX(data.hash);
        }
    });
    const { data: buyData , write: buy , error: buyError  } = (0, $168b680515f5196a$export$f65fbf805a7dc8c5)({
        ...buyConfig.config,
        onSettled (data, error) {
            if (error) {
                failure(error?.message);
                return;
            }
            setLatestTX(data.hash);
        }
    });
    const waitForTransaction = (0, $168b680515f5196a$export$421837b4be863851)({
        hash: latestTX,
        onSettled (data, error) {
            if (error) {
                failure(error?.message || approveError?.message || buyError?.message || "---");
                return;
            }
            if (approveData?.hash === data.transactionHash) success(`APPROVED!`, `You've successfully approved and granted access our ICO smart contract for 
                let it spending your allowance in BUSD from your wallet.`);
            if (buyData?.hash === data.transactionHash) success("PURCHASED!", `You've successfully placed your order
                        (${parseFloat(data?.logs[0]?.data / 0.03).toFixed(3)})
                        in exchange for ${data?.logs[0]?.data} BUSD.`);
        }
    });
    const { data: txData , error: txError , refetch: txQuery  } = (0, $168b680515f5196a$export$244eac3470cf24ad)({
        hash: latestTX,
        enabled: false,
        onError (error) {
            console.log("Error", error);
        }
    });
    const handleBuyAmount = (e)=>{
        const val = !e.target.value ? null : parseFloat(e.target.value.toString());
        setUSDAmount(val);
    };
    (0, $d4J5n.useEffect)(()=>{
        if (approveStatus.isLoading || approveStatus.fetchStatus === "fetching") (0, $57ced9ef2f07eff4$exports.Block).hourglass(".content-about", "Updating...", {
            backgroundColor: "rgba(0,0,0,0.35)",
            messageColor: "#fff",
            svgSize: "155px",
            messageFontSize: "20px"
        });
        else (0, $57ced9ef2f07eff4$exports.Block).remove(".content-about", 3500);
    }, [
        approveStatus
    ]);
    (0, $d4J5n.useEffect)(()=>{
        if (allowance) approveStatus.refetch?.();
    }, [
        allowance
    ]);
    (0, $d4J5n.useEffect)(()=>{
        if (waitForTransaction.isLoading || waitForTransaction.fetchStatus === "fetching") (0, $ce251b0b74a91040$exports.Loading).hourglass("Your request has been submitted successfully and it is still being processed... Please wait a while until the transaction has been confirmed by the network..", {
            messageMaxLength: 500
        });
        else (0, $ce251b0b74a91040$exports.Loading).remove(1500);
    }, [
        waitForTransaction
    ]);
    (0, $d4J5n.useEffect)(()=>{
        setAmountValid(false);
        setTokenAmount("Minimum Buy: 100 BUSD");
        if (usdAmount >= 100) {
            setAmountValid(true);
            setTokenAmount(`~ ${parseFloat((usdAmount / 0.03).toString()).toFixed(2)} MTP`);
        }
    }, [
        usdAmount
    ]);
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("section", {
        className: "tf-section tf-about pb-mobie mt-5",
        id: "mesopotamians",
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
            className: "container",
            children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                className: "row",
                children: [
                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                        className: "col-sm-12 col-lg-5",
                        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                            className: "content-about mobie-40",
                            "data-aos": "fade-up",
                            "data-aos-duration": "800",
                            children: [
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                                    className: "tf-title st2",
                                    children: [
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("p", {
                                            className: "h8 sub-title"
                                        }),
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("h4", {
                                            className: "title",
                                            children: "Join ICO!"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("p", {
                                    children: "After typing how many MTPs you will buy in the box below, click the buy button."
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("span", {
                                    className: "boder-fade"
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $5f00504984524fde$export$2e2bcd8739ae039), {
                                    placeholder: "100 BUSD",
                                    value: usdAmount,
                                    className: amountValid ? "border-success" : "border-danger",
                                    onChange: (e)=>handleBuyAmount(e),
                                    type: "text"
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("input", {
                                    type: "text",
                                    value: tokenAmount,
                                    readOnly: true
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("button", {
                                    className: "tf-button btn-effect",
                                    disabled: !amountValid || !approve,
                                    onClick: ()=>approve?.(),
                                    children: [
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("span", {
                                            className: "boder-fade"
                                        }),
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("span", {
                                            className: "effect",
                                            children: "Approve"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("button", {
                                    className: "tf-button btn-effect ml-3",
                                    disabled: !amountValid || !buy,
                                    onClick: ()=>buy?.(),
                                    children: [
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("span", {
                                            className: "boder-fade"
                                        }),
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("span", {
                                            className: "effect",
                                            children: "Buy MTP"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("br", {}),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("h4", {
                                    className: "title mt-5",
                                    children: [
                                        "Yours: ",
                                        userTokens,
                                        " MTP"
                                    ]
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("h4", {
                                    className: "title mt-5",
                                    children: [
                                        "Total Sold: ",
                                        soldTokens,
                                        " MTP"
                                    ]
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                        className: "col-sm-12 col-lg-7 mt-sm-5",
                        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                            className: "wrap-about p-l70",
                            "data-aos": "fade-up",
                            "data-aos-duration": "800",
                            children: [
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                                    className: "box-text corner-box active",
                                    children: [
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                                            className: "h7",
                                            children: "Presale Price"
                                        }),
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("p", {
                                            children: " $0.03"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                                    className: "box-text corner-box",
                                    children: [
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                                            className: "h7",
                                            children: "Presale Token Amount"
                                        }),
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("p", {
                                            children: "6.000.000 MTP"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                                    className: "box-text corner-box mb-0",
                                    children: [
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                                            className: "h7",
                                            children: "Vesting"
                                        }),
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("p", {
                                            children: "1 month cliff, then 3 months vesting"
                                        })
                                    ]
                                })
                            ]
                        })
                    })
                ]
            })
        })
    });
};
var $ea45f6976698d349$export$2e2bcd8739ae039 = $ea45f6976698d349$var$ICO;





var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");
function $19121be03c962dba$export$2e2bcd8739ae039() {
    $19121be03c962dba$export$2e2bcd8739ae039 = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return $19121be03c962dba$export$2e2bcd8739ae039.apply(this, arguments);
}




var $d4J5n = parcelRequire("d4J5n");
var $ad35e18c35d5e0a9$exports = {};
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */ var $ad35e18c35d5e0a9$var$invariant = function(condition, format, a, b, c, d, e, f) {
    if (!condition) {
        var error;
        if (format === undefined) error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
        else {
            var args = [
                a,
                b,
                c,
                d,
                e,
                f
            ];
            var argIndex = 0;
            error = new Error(format.replace(/%s/g, function() {
                return args[argIndex++];
            }));
            error.name = "Invariant Violation";
        }
        error.framesToPop = 1; // we don't care about invariant's own frame
        throw error;
    }
};
$ad35e18c35d5e0a9$exports = $ad35e18c35d5e0a9$var$invariant;


var $0cb63d0f59d1eeae$var$noop = function noop() {};
function $0cb63d0f59d1eeae$var$readOnlyPropType(handler, name) {
    return function(props, propName) {
        if (props[propName] !== undefined) {
            if (!props[handler]) return new Error("You have provided a `" + propName + "` prop to `" + name + "` " + ("without an `" + handler + "` handler prop. This will render a read-only field. ") + ("If the field should be mutable use `" + $0cb63d0f59d1eeae$export$26cbf8c37e721e67(propName) + "`. ") + ("Otherwise, set `" + handler + "`."));
        }
    };
}
function $0cb63d0f59d1eeae$export$8abd944bed26e726(controlledValues, displayName) {
    var propTypes = {};
    Object.keys(controlledValues).forEach(function(prop) {
        // add default propTypes for folks that use runtime checks
        propTypes[$0cb63d0f59d1eeae$export$26cbf8c37e721e67(prop)] = $0cb63d0f59d1eeae$var$noop;
        var handler;
    });
    return propTypes;
}
function $0cb63d0f59d1eeae$export$12ae2baa35bd9b8b(props, prop) {
    return props[prop] !== undefined;
}
function $0cb63d0f59d1eeae$export$26cbf8c37e721e67(key) {
    return "default" + key.charAt(0).toUpperCase() + key.substr(1);
}
function $0cb63d0f59d1eeae$export$95e5b18573b29087(component) {
    return !!component && (typeof component !== "function" || component.prototype && component.prototype.isReactComponent);
}


function $cc3cb09e031e9c82$var$_toPropertyKey(arg) {
    var key = $cc3cb09e031e9c82$var$_toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
}
function $cc3cb09e031e9c82$var$_toPrimitive(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if (typeof res !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}
function $cc3cb09e031e9c82$export$2ee51287a16ca325(propValue, defaultValue, handler) {
    var wasPropRef = (0, $d4J5n.useRef)(propValue !== undefined);
    var _useState = (0, $d4J5n.useState)(defaultValue), stateValue = _useState[0], setState = _useState[1];
    var isProp = propValue !== undefined;
    var wasProp = wasPropRef.current;
    wasPropRef.current = isProp;
    /**
   * If a prop switches from controlled to Uncontrolled
   * reset its value to the defaultValue
   */ if (!isProp && wasProp && stateValue !== defaultValue) setState(defaultValue);
    return [
        isProp ? propValue : stateValue,
        (0, $d4J5n.useCallback)(function(value) {
            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
            if (handler) handler.apply(void 0, [
                value
            ].concat(args));
            setState(value);
        }, [
            handler
        ])
    ];
}
function $cc3cb09e031e9c82$export$2e2bcd8739ae039(props, config) {
    return Object.keys(config).reduce(function(result, fieldName) {
        var _extends2;
        var _ref = result, defaultValue = _ref[$0cb63d0f59d1eeae$export$26cbf8c37e721e67(fieldName)], propsValue = _ref[fieldName], rest = (0, $746383c9ca16b298$export$2e2bcd8739ae039)(_ref, [
            $0cb63d0f59d1eeae$export$26cbf8c37e721e67(fieldName),
            fieldName
        ].map($cc3cb09e031e9c82$var$_toPropertyKey));
        var handlerName = config[fieldName];
        var _useUncontrolledProp = $cc3cb09e031e9c82$export$2ee51287a16ca325(propsValue, defaultValue, props[handlerName]), value = _useUncontrolledProp[0], handler = _useUncontrolledProp[1];
        return (0, $19121be03c962dba$export$2e2bcd8739ae039)({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));
    }, props);
}






var $d4J5n = parcelRequire("d4J5n");
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $237980aaa4fab6f1$var$componentWillMount() {
    // Call this.constructor.gDSFP to support sub-classes.
    var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
    if (state !== null && state !== undefined) this.setState(state);
}
function $237980aaa4fab6f1$var$componentWillReceiveProps(nextProps) {
    // Call this.constructor.gDSFP to support sub-classes.
    // Use the setState() updater to ensure state isn't stale in certain edge cases.
    function updater(prevState) {
        var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
        return state !== null && state !== undefined ? state : null;
    }
    // Binding "this" is important for shallow renderer support.
    this.setState(updater.bind(this));
}
function $237980aaa4fab6f1$var$componentWillUpdate(nextProps, nextState) {
    try {
        var prevProps = this.props;
        var prevState = this.state;
        this.props = nextProps;
        this.state = nextState;
        this.__reactInternalSnapshotFlag = true;
        this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
    } finally{
        this.props = prevProps;
        this.state = prevState;
    }
}
// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
$237980aaa4fab6f1$var$componentWillMount.__suppressDeprecationWarning = true;
$237980aaa4fab6f1$var$componentWillReceiveProps.__suppressDeprecationWarning = true;
$237980aaa4fab6f1$var$componentWillUpdate.__suppressDeprecationWarning = true;
function $237980aaa4fab6f1$export$cea1c58a6db52bca(Component) {
    var prototype = Component.prototype;
    if (!prototype || !prototype.isReactComponent) throw new Error("Can only polyfill class components");
    if (typeof Component.getDerivedStateFromProps !== "function" && typeof prototype.getSnapshotBeforeUpdate !== "function") return Component;
    // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Error if any of these lifecycles are present,
    // Because they would work differently between older and newer (16.3+) versions of React.
    var foundWillMountName = null;
    var foundWillReceivePropsName = null;
    var foundWillUpdateName = null;
    if (typeof prototype.componentWillMount === "function") foundWillMountName = "componentWillMount";
    else if (typeof prototype.UNSAFE_componentWillMount === "function") foundWillMountName = "UNSAFE_componentWillMount";
    if (typeof prototype.componentWillReceiveProps === "function") foundWillReceivePropsName = "componentWillReceiveProps";
    else if (typeof prototype.UNSAFE_componentWillReceiveProps === "function") foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
    if (typeof prototype.componentWillUpdate === "function") foundWillUpdateName = "componentWillUpdate";
    else if (typeof prototype.UNSAFE_componentWillUpdate === "function") foundWillUpdateName = "UNSAFE_componentWillUpdate";
    if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var componentName = Component.displayName || Component.name;
        var newApiName = typeof Component.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
        throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" + componentName + " uses " + newApiName + " but also contains the following legacy lifecycles:" + (foundWillMountName !== null ? "\n  " + foundWillMountName : "") + (foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "") + (foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "") + "\n\nThe above lifecycles should be removed. Learn more about this warning here:\n" + "https://fb.me/react-async-component-lifecycle-hooks");
    }
    // React <= 16.2 does not support static getDerivedStateFromProps.
    // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
    // Newer versions of React will ignore these lifecycles if gDSFP exists.
    if (typeof Component.getDerivedStateFromProps === "function") {
        prototype.componentWillMount = $237980aaa4fab6f1$var$componentWillMount;
        prototype.componentWillReceiveProps = $237980aaa4fab6f1$var$componentWillReceiveProps;
    }
    // React <= 16.2 does not support getSnapshotBeforeUpdate.
    // As a workaround, use cWU to invoke the new lifecycle.
    // Newer versions of React will ignore that lifecycle if gSBU exists.
    if (typeof prototype.getSnapshotBeforeUpdate === "function") {
        if (typeof prototype.componentDidUpdate !== "function") throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
        prototype.componentWillUpdate = $237980aaa4fab6f1$var$componentWillUpdate;
        var componentDidUpdate = prototype.componentDidUpdate;
        prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
            // 16.3+ will not execute our will-update method;
            // It will pass a snapshot value to did-update though.
            // Older versions will require our polyfilled will-update value.
            // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
            // Because for <= 15.x versions this might be a "prevContext" object.
            // We also can't just check "__reactInternalSnapshot",
            // Because get-snapshot might return a falsy value.
            // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
            var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
            componentDidUpdate.call(this, prevProps, prevState, snapshot);
        };
    }
    return Component;
}




var $1eb5e44443cd27f3$var$_jsxFileName = "/Users/jquense/src/uncontrollable/src/uncontrollable.js";
function $1eb5e44443cd27f3$export$2e2bcd8739ae039(Component, controlledValues, methods) {
    if (methods === void 0) methods = [];
    var displayName = Component.displayName || Component.name || "Component";
    var canAcceptRef = $0cb63d0f59d1eeae$export$95e5b18573b29087(Component);
    var controlledProps = Object.keys(controlledValues);
    var PROPS_TO_OMIT = controlledProps.map($0cb63d0f59d1eeae$export$26cbf8c37e721e67);
    !(canAcceptRef || !methods.length) && (0, (/*@__PURE__*/$parcel$interopDefault($ad35e18c35d5e0a9$exports)))(false);
    var UncontrolledComponent = /*#__PURE__*/ function(_React$Component) {
        (0, $b23bf179b32f510c$export$2e2bcd8739ae039)(UncontrolledComponent, _React$Component);
        function UncontrolledComponent() {
            var _this;
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
            _this = _React$Component.call.apply(_React$Component, [
                this
            ].concat(args)) || this;
            _this.handlers = Object.create(null);
            controlledProps.forEach(function(propName) {
                var handlerName = controlledValues[propName];
                var handleChange = function handleChange(value) {
                    if (_this.props[handlerName]) {
                        var _this$props;
                        _this._notifying = true;
                        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
                        (_this$props = _this.props)[handlerName].apply(_this$props, [
                            value
                        ].concat(args));
                        _this._notifying = false;
                    }
                    if (!_this.unmounted) _this.setState(function(_ref) {
                        var _extends2;
                        var values = _ref.values;
                        return {
                            values: (0, $19121be03c962dba$export$2e2bcd8739ae039)(Object.create(null), values, (_extends2 = {}, _extends2[propName] = value, _extends2))
                        };
                    });
                };
                _this.handlers[handlerName] = handleChange;
            });
            if (methods.length) _this.attachRef = function(ref) {
                _this.inner = ref;
            };
            var values = Object.create(null);
            controlledProps.forEach(function(key) {
                values[key] = _this.props[$0cb63d0f59d1eeae$export$26cbf8c37e721e67(key)];
            });
            _this.state = {
                values: values,
                prevProps: {}
            };
            return _this;
        }
        var _proto = UncontrolledComponent.prototype;
        _proto.shouldComponentUpdate = function shouldComponentUpdate() {
            //let setState trigger the update
            return !this._notifying;
        };
        UncontrolledComponent.getDerivedStateFromProps = function getDerivedStateFromProps(props, _ref2) {
            var values = _ref2.values, prevProps = _ref2.prevProps;
            var nextState = {
                values: (0, $19121be03c962dba$export$2e2bcd8739ae039)(Object.create(null), values),
                prevProps: {}
            };
            controlledProps.forEach(function(key) {
                /**
         * If a prop switches from controlled to Uncontrolled
         * reset its value to the defaultValue
         */ nextState.prevProps[key] = props[key];
                if (!$0cb63d0f59d1eeae$export$12ae2baa35bd9b8b(props, key) && $0cb63d0f59d1eeae$export$12ae2baa35bd9b8b(prevProps, key)) nextState.values[key] = props[$0cb63d0f59d1eeae$export$26cbf8c37e721e67(key)];
            });
            return nextState;
        };
        _proto.componentWillUnmount = function componentWillUnmount() {
            this.unmounted = true;
        };
        _proto.render = function render() {
            var _this2 = this;
            var _this$props2 = this.props, innerRef = _this$props2.innerRef, props = (0, $746383c9ca16b298$export$2e2bcd8739ae039)(_this$props2, [
                "innerRef"
            ]);
            PROPS_TO_OMIT.forEach(function(prop) {
                delete props[prop];
            });
            var newProps = {};
            controlledProps.forEach(function(propName) {
                var propValue = _this2.props[propName];
                newProps[propName] = propValue !== undefined ? propValue : _this2.state.values[propName];
            });
            return (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).createElement(Component, (0, $19121be03c962dba$export$2e2bcd8739ae039)({}, props, newProps, this.handlers, {
                ref: innerRef || this.attachRef
            }));
        };
        return UncontrolledComponent;
    }((0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).Component);
    (0, $237980aaa4fab6f1$export$cea1c58a6db52bca)(UncontrolledComponent);
    UncontrolledComponent.displayName = "Uncontrolled(" + displayName + ")";
    UncontrolledComponent.propTypes = (0, $19121be03c962dba$export$2e2bcd8739ae039)({
        innerRef: function innerRef() {}
    }, $0cb63d0f59d1eeae$export$8abd944bed26e726(controlledValues, displayName));
    methods.forEach(function(method) {
        UncontrolledComponent.prototype[method] = function $proxiedMethod() {
            var _this$inner;
            return (_this$inner = this.inner)[method].apply(_this$inner, arguments);
        };
    });
    var WrappedComponent = UncontrolledComponent;
    if ((0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).forwardRef) {
        WrappedComponent = (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).forwardRef(function(props, ref) {
            return (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).createElement(UncontrolledComponent, (0, $19121be03c962dba$export$2e2bcd8739ae039)({}, props, {
                innerRef: ref,
                __source: {
                    fileName: $1eb5e44443cd27f3$var$_jsxFileName,
                    lineNumber: 128
                },
                __self: this
            }));
        });
        WrappedComponent.propTypes = UncontrolledComponent.propTypes;
    }
    WrappedComponent.ControlledComponent = Component;
    /**
   * useful when wrapping a Component and you want to control
   * everything
   */ WrappedComponent.deferControlTo = function(newComponent, additions, nextMethods) {
        if (additions === void 0) additions = {};
        return $1eb5e44443cd27f3$export$2e2bcd8739ae039(newComponent, (0, $19121be03c962dba$export$2e2bcd8739ae039)({}, controlledValues, additions), nextMethods);
    };
    return WrappedComponent;
}







var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");



var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");




var $d4J5n = parcelRequire("d4J5n");


/**
 * Safe chained function
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * @param {function} functions to chain
 * @returns {function|null}
 */ function $b038c923864f5df1$var$createChainedFunction(...funcs) {
    return funcs.filter((f)=>f != null).reduce((acc, f)=>{
        if (typeof f !== "function") throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");
        if (acc === null) return f;
        return function chainedFunction(...args) {
            // @ts-ignore
            acc.apply(this, args);
            // @ts-ignore
            f.apply(this, args);
        };
    }, null);
}
var $b038c923864f5df1$export$2e2bcd8739ae039 = $b038c923864f5df1$var$createChainedFunction;





const $b49e61d49a7a50a9$var$MARGINS = {
    height: [
        "marginTop",
        "marginBottom"
    ],
    width: [
        "marginLeft",
        "marginRight"
    ]
};
function $b49e61d49a7a50a9$var$getDefaultDimensionValue(dimension, elem) {
    const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;
    const value = elem[offset];
    const margins = $b49e61d49a7a50a9$var$MARGINS[dimension];
    return value + // @ts-ignore
    parseInt((0, $38cb2da359586ba6$export$2e2bcd8739ae039)(elem, margins[0]), 10) + // @ts-ignore
    parseInt((0, $38cb2da359586ba6$export$2e2bcd8739ae039)(elem, margins[1]), 10);
}
const $b49e61d49a7a50a9$var$collapseStyles = {
    [(0, $3f4090778342b254$export$84cbff306f539230)]: "collapse",
    [(0, $3f4090778342b254$export$4aacc83d4d59139f)]: "collapsing",
    [(0, $3f4090778342b254$export$df38205c966be359)]: "collapsing",
    [(0, $3f4090778342b254$export$78e9e6e3e014d60a)]: "collapse show"
};
const $b49e61d49a7a50a9$var$defaultProps = {
    in: false,
    timeout: 300,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    getDimensionValue: $b49e61d49a7a50a9$var$getDefaultDimensionValue
};
const $b49e61d49a7a50a9$var$Collapse = /*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).forwardRef(({ onEnter: onEnter , onEntering: onEntering , onEntered: onEntered , onExit: onExit , onExiting: onExiting , className: className , children: children , dimension: dimension = "height" , getDimensionValue: getDimensionValue = $b49e61d49a7a50a9$var$getDefaultDimensionValue , ...props }, ref)=>{
    /* Compute dimension */ const computedDimension = typeof dimension === "function" ? dimension() : dimension;
    /* -- Expanding -- */ const handleEnter = (0, $d4J5n.useMemo)(()=>(0, $b038c923864f5df1$export$2e2bcd8739ae039)((elem)=>{
            elem.style[computedDimension] = "0";
        }, onEnter), [
        computedDimension,
        onEnter
    ]);
    const handleEntering = (0, $d4J5n.useMemo)(()=>(0, $b038c923864f5df1$export$2e2bcd8739ae039)((elem)=>{
            const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;
            elem.style[computedDimension] = `${elem[scroll]}px`;
        }, onEntering), [
        computedDimension,
        onEntering
    ]);
    const handleEntered = (0, $d4J5n.useMemo)(()=>(0, $b038c923864f5df1$export$2e2bcd8739ae039)((elem)=>{
            elem.style[computedDimension] = null;
        }, onEntered), [
        computedDimension,
        onEntered
    ]);
    /* -- Collapsing -- */ const handleExit = (0, $d4J5n.useMemo)(()=>(0, $b038c923864f5df1$export$2e2bcd8739ae039)((elem)=>{
            elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;
            (0, $4d17e9d44738863d$export$2e2bcd8739ae039)(elem);
        }, onExit), [
        onExit,
        getDimensionValue,
        computedDimension
    ]);
    const handleExiting = (0, $d4J5n.useMemo)(()=>(0, $b038c923864f5df1$export$2e2bcd8739ae039)((elem)=>{
            elem.style[computedDimension] = null;
        }, onExiting), [
        computedDimension,
        onExiting
    ]);
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $f25667ced1e5fc34$export$2e2bcd8739ae039), {
        ref: ref,
        addEndListener: (0, $5b1dd67c84e7f95b$export$2e2bcd8739ae039),
        ...props,
        "aria-expanded": props.role ? props.in : null,
        onEnter: handleEnter,
        onEntering: handleEntering,
        onEntered: handleEntered,
        onExit: handleExit,
        onExiting: handleExiting,
        childRef: children.ref,
        children: (state, innerProps)=>/*#__PURE__*/ (0, (/*@__PURE__*/$parcel$interopDefault($d4J5n))).cloneElement(children, {
                ...innerProps,
                className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, children.props.className, $b49e61d49a7a50a9$var$collapseStyles[state], computedDimension === "width" && "collapse-horizontal")
            })
    });
});
// @ts-ignore
// @ts-ignore
$b49e61d49a7a50a9$var$Collapse.defaultProps = $b49e61d49a7a50a9$var$defaultProps;
var $b49e61d49a7a50a9$export$2e2bcd8739ae039 = $b49e61d49a7a50a9$var$Collapse;



var $d4J5n = parcelRequire("d4J5n");
function $5bb0e682b11aa98a$export$15e4e2f40b49cd81(activeEventKey, eventKey) {
    return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;
}
const $5bb0e682b11aa98a$var$context = /*#__PURE__*/ $d4J5n.createContext({});
$5bb0e682b11aa98a$var$context.displayName = "AccordionContext";
var $5bb0e682b11aa98a$export$2e2bcd8739ae039 = $5bb0e682b11aa98a$var$context;



/**
 * This component accepts all of [`Collapse`'s props](/utilities/transitions/#collapse-props).
 */ const $bd1660e0ddb1d3c2$var$AccordionCollapse = /*#__PURE__*/ $d4J5n.forwardRef(({ as: Component = "div" , bsPrefix: bsPrefix , className: className , children: children , eventKey: eventKey , ...props }, ref)=>{
    const { activeEventKey: activeEventKey  } = (0, $d4J5n.useContext)((0, $5bb0e682b11aa98a$export$2e2bcd8739ae039));
    bsPrefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, "accordion-collapse");
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $b49e61d49a7a50a9$export$2e2bcd8739ae039), {
        ref: ref,
        in: (0, $5bb0e682b11aa98a$export$15e4e2f40b49cd81)(activeEventKey, eventKey),
        ...props,
        className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, bsPrefix),
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Component, {
            children: $d4J5n.Children.only(children)
        })
    });
});
$bd1660e0ddb1d3c2$var$AccordionCollapse.displayName = "AccordionCollapse";
var $bd1660e0ddb1d3c2$export$2e2bcd8739ae039 = $bd1660e0ddb1d3c2$var$AccordionCollapse;



var $d4J5n = parcelRequire("d4J5n");
const $ee5ee3b864cf2f1c$var$context = /*#__PURE__*/ $d4J5n.createContext({
    eventKey: ""
});
$ee5ee3b864cf2f1c$var$context.displayName = "AccordionItemContext";
var $ee5ee3b864cf2f1c$export$2e2bcd8739ae039 = $ee5ee3b864cf2f1c$var$context;



const $6f2327c20feed922$var$AccordionBody = /*#__PURE__*/ $d4J5n.forwardRef(({ // Need to define the default "as" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595
as: Component = "div" , bsPrefix: bsPrefix , className: className , onEnter: onEnter , onEntering: onEntering , onEntered: onEntered , onExit: onExit , onExiting: onExiting , onExited: onExited , ...props }, ref)=>{
    bsPrefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, "accordion-body");
    const { eventKey: eventKey  } = (0, $d4J5n.useContext)((0, $ee5ee3b864cf2f1c$export$2e2bcd8739ae039));
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $bd1660e0ddb1d3c2$export$2e2bcd8739ae039), {
        eventKey: eventKey,
        onEnter: onEnter,
        onEntering: onEntering,
        onEntered: onEntered,
        onExit: onExit,
        onExiting: onExiting,
        onExited: onExited,
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Component, {
            ref: ref,
            ...props,
            className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, bsPrefix)
        })
    });
});
$6f2327c20feed922$var$AccordionBody.displayName = "AccordionBody";
var $6f2327c20feed922$export$2e2bcd8739ae039 = $6f2327c20feed922$var$AccordionBody;



var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");





function $b4bcf0dac9f6ecaa$export$1361ce4b8f883f3e(eventKey, onClick) {
    const { activeEventKey: activeEventKey , onSelect: onSelect , alwaysOpen: alwaysOpen  } = (0, $d4J5n.useContext)((0, $5bb0e682b11aa98a$export$2e2bcd8739ae039));
    return (e)=>{
        /*
      Compare the event key in context with the given event key.
      If they are the same, then collapse the component.
    */ let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;
        if (alwaysOpen) {
            if (Array.isArray(activeEventKey)) {
                if (activeEventKey.includes(eventKey)) eventKeyPassed = activeEventKey.filter((k)=>k !== eventKey);
                else eventKeyPassed = [
                    ...activeEventKey,
                    eventKey
                ];
            } else // activeEventKey is undefined.
            eventKeyPassed = [
                eventKey
            ];
        }
        onSelect == null || onSelect(eventKeyPassed, e);
        onClick == null || onClick(e);
    };
}
const $b4bcf0dac9f6ecaa$var$AccordionButton = /*#__PURE__*/ $d4J5n.forwardRef(({ // Need to define the default "as" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595
as: Component = "button" , bsPrefix: bsPrefix , className: className , onClick: onClick , ...props }, ref)=>{
    bsPrefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, "accordion-button");
    const { eventKey: eventKey  } = (0, $d4J5n.useContext)((0, $ee5ee3b864cf2f1c$export$2e2bcd8739ae039));
    const accordionOnClick = $b4bcf0dac9f6ecaa$export$1361ce4b8f883f3e(eventKey, onClick);
    const { activeEventKey: activeEventKey  } = (0, $d4J5n.useContext)((0, $5bb0e682b11aa98a$export$2e2bcd8739ae039));
    if (Component === "button") props.type = "button";
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Component, {
        ref: ref,
        onClick: accordionOnClick,
        ...props,
        "aria-expanded": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,
        className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, bsPrefix, !(0, $5bb0e682b11aa98a$export$15e4e2f40b49cd81)(activeEventKey, eventKey) && "collapsed")
    });
});
$b4bcf0dac9f6ecaa$var$AccordionButton.displayName = "AccordionButton";
var $b4bcf0dac9f6ecaa$export$2e2bcd8739ae039 = $b4bcf0dac9f6ecaa$var$AccordionButton;






var $d4J5n = parcelRequire("d4J5n");



const $d1446a993f15e491$var$AccordionHeader = /*#__PURE__*/ $d4J5n.forwardRef(({ // Need to define the default "as" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595
as: Component = "h2" , bsPrefix: bsPrefix , className: className , children: children , onClick: onClick , ...props }, ref)=>{
    bsPrefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, "accordion-header");
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Component, {
        ref: ref,
        ...props,
        className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, bsPrefix),
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $b4bcf0dac9f6ecaa$export$2e2bcd8739ae039), {
            onClick: onClick,
            children: children
        })
    });
});
$d1446a993f15e491$var$AccordionHeader.displayName = "AccordionHeader";
var $d1446a993f15e491$export$2e2bcd8739ae039 = $d1446a993f15e491$var$AccordionHeader;




var $d4J5n = parcelRequire("d4J5n");

var $d4J5n = parcelRequire("d4J5n");



const $d1af1469a9fd8fa3$var$AccordionItem = /*#__PURE__*/ $d4J5n.forwardRef(({ // Need to define the default "as" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595
as: Component = "div" , bsPrefix: bsPrefix , className: className , eventKey: eventKey , ...props }, ref)=>{
    bsPrefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, "accordion-item");
    const contextValue = (0, $d4J5n.useMemo)(()=>({
            eventKey: eventKey
        }), [
        eventKey
    ]);
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $ee5ee3b864cf2f1c$export$2e2bcd8739ae039).Provider, {
        value: contextValue,
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Component, {
            ref: ref,
            ...props,
            className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, bsPrefix)
        })
    });
});
$d1af1469a9fd8fa3$var$AccordionItem.displayName = "AccordionItem";
var $d1af1469a9fd8fa3$export$2e2bcd8739ae039 = $d1af1469a9fd8fa3$var$AccordionItem;



const $7c2ad1af87322e86$var$Accordion = /*#__PURE__*/ $d4J5n.forwardRef((props, ref)=>{
    const { // Need to define the default "as" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595
    as: Component = "div" , activeKey: activeKey , bsPrefix: bsPrefix , className: className , onSelect: onSelect , flush: flush , alwaysOpen: alwaysOpen , ...controlledProps } = (0, $cc3cb09e031e9c82$export$2e2bcd8739ae039)(props, {
        activeKey: "onSelect"
    });
    const prefix = (0, $d2965fbad540669a$export$7f387860ebffb32c)(bsPrefix, "accordion");
    const contextValue = (0, $d4J5n.useMemo)(()=>({
            activeEventKey: activeKey,
            onSelect: onSelect,
            alwaysOpen: alwaysOpen
        }), [
        activeKey,
        onSelect,
        alwaysOpen
    ]);
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $5bb0e682b11aa98a$export$2e2bcd8739ae039).Provider, {
        value: contextValue,
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)(Component, {
            ref: ref,
            ...controlledProps,
            className: (0, (/*@__PURE__*/$parcel$interopDefault($4f96bb9b3141308a$exports)))(className, prefix, flush && `${prefix}-flush`)
        })
    });
});
$7c2ad1af87322e86$var$Accordion.displayName = "Accordion";
var $7c2ad1af87322e86$export$2e2bcd8739ae039 = Object.assign($7c2ad1af87322e86$var$Accordion, {
    Button: (0, $b4bcf0dac9f6ecaa$export$2e2bcd8739ae039),
    Collapse: (0, $bd1660e0ddb1d3c2$export$2e2bcd8739ae039),
    Item: (0, $d1af1469a9fd8fa3$export$2e2bcd8739ae039),
    Header: (0, $d1446a993f15e491$export$2e2bcd8739ae039),
    Body: (0, $6f2327c20feed922$export$2e2bcd8739ae039)
});


const $280427580aee79ae$var$FAQ = (props)=>{
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("section", {
        className: "tf-section faq",
        id: "faq",
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
            className: "container",
            children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                className: "row",
                children: [
                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                        className: "col-md-12",
                        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
                            className: "tf-title m-b60",
                            "data-aos": "fade-up",
                            "data-aos-duration": "800",
                            children: [
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("p", {
                                    className: "h8 sub-title",
                                    children: "FAQs"
                                }),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("h4", {
                                    className: "title",
                                    children: "Looking for answers?"
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("div", {
                        className: "col-md-12",
                        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)((0, $7c2ad1af87322e86$export$2e2bcd8739ae039), {
                            defaultActiveKey: "0",
                            className: "flat-accordion",
                            "data-aos": "fade-up",
                            "data-aos-duration": "800",
                            children: [
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)((0, $7c2ad1af87322e86$export$2e2bcd8739ae039).Item, {
                                    eventKey: "0",
                                    className: "flat-toggle box-text corner-box",
                                    children: [
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $7c2ad1af87322e86$export$2e2bcd8739ae039).Header, {
                                            className: "h7 toggle-title",
                                            children: "How to buy MTP?"
                                        }),
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $7c2ad1af87322e86$export$2e2bcd8739ae039).Body, {
                                            eventKey: "0",
                                            children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("p", {
                                                className: "toggle-content",
                                                children: "You will be able to use the methods on our website to make purchases with Presale. Platforms to be announced for IDO purchases will be shared on our social media accounts."
                                            })
                                        })
                                    ]
                                }, "0"),
                                /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)((0, $7c2ad1af87322e86$export$2e2bcd8739ae039).Item, {
                                    eventKey: "1",
                                    className: "flat-toggle box-text corner-box",
                                    children: [
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $7c2ad1af87322e86$export$2e2bcd8739ae039).Header, {
                                            className: "h7 toggle-title",
                                            children: "How to buy MTP?"
                                        }),
                                        /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $7c2ad1af87322e86$export$2e2bcd8739ae039).Body, {
                                            eventKey: "1",
                                            className: "toggle-content",
                                            children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)("p", {
                                                children: "You will be able to use the methods on our website to make purchases with Presale. Platforms to be announced for IDO purchases will be shared on our social media accounts."
                                            })
                                        })
                                    ]
                                }, "1")
                            ]
                        })
                    })
                ]
            })
        })
    });
};
var $280427580aee79ae$export$2e2bcd8739ae039 = $280427580aee79ae$var$FAQ;





const $4dba470fd5c3bb15$var$aos = (0, (/*@__PURE__*/$parcel$interopDefault($f2b17ba975ed8e56$exports))).init();
function $4dba470fd5c3bb15$export$86fbec116b87613f() {
    return /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsxs)("div", {
        id: "wrapper",
        children: [
            /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $77ca285db2bf118c$export$2e2bcd8739ae039), {}),
            /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $ea45f6976698d349$export$2e2bcd8739ae039), {}),
            /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $280427580aee79ae$export$2e2bcd8739ae039), {})
        ]
    });
}






function $cb5ef0eee55a6104$export$794750c0ec24158c({ priority: priority , stallTimeout: stallTimeout , weight: weight  } = {}) {
    return function(chain) {
        if (!chain.rpcUrls.default.http[0]) return null;
        return {
            chain: chain,
            provider: ()=>{
                const provider = new (0, $7fc15fb0220a0397$exports).StaticJsonRpcProvider(chain.rpcUrls.default.http[0], {
                    chainId: chain.id,
                    name: chain.network,
                    ensAddress: chain.contracts?.ensRegistry?.address
                });
                return Object.assign(provider, {
                    priority: priority,
                    stallTimeout: stallTimeout,
                    weight: weight
                });
            }
        };
    };
}








var $24d2eca570c48311$var$_UNSTABLE_shimOnConnectSelectAccount;
var $24d2eca570c48311$export$86c578040a557b4a = class extends (0, $f003855f652c299a$export$2180bbd5f43a00b6) {
    constructor({ chains: chains , options: options_  } = {}){
        const options = {
            name: "MetaMask",
            shimDisconnect: true,
            shimChainChangedDisconnect: true,
            getProvider () {
                function getReady(ethereum2) {
                    const isMetaMask = !!ethereum2?.isMetaMask;
                    if (!isMetaMask) return;
                    if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state) return;
                    if (ethereum2.isApexWallet) return;
                    if (ethereum2.isAvalanche) return;
                    if (ethereum2.isKuCoinWallet) return;
                    if (ethereum2.isPortal) return;
                    if (ethereum2.isTokenPocket) return;
                    if (ethereum2.isTokenary) return;
                    return ethereum2;
                }
                if (typeof window === "undefined") return;
                const ethereum = window.ethereum;
                if (ethereum?.providers) return ethereum.providers.find(getReady);
                return getReady(ethereum);
            },
            ...options_
        };
        super({
            chains: chains,
            options: options
        });
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "id", "metaMask");
        (0, $52c74cade626a703$export$addf369becd23283)(this, $24d2eca570c48311$var$_UNSTABLE_shimOnConnectSelectAccount, void 0);
        (0, $52c74cade626a703$export$42432efe6614d3b4)(this, $24d2eca570c48311$var$_UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);
    }
    async connect({ chainId: chainId  } = {}) {
        try {
            const provider = await this.getProvider();
            if (!provider) throw new (0, $077a864ec31a8b9f$export$9f8a797207d6544e)();
            if (provider.on) {
                provider.on("accountsChanged", this.onAccountsChanged);
                provider.on("chainChanged", this.onChainChanged);
                provider.on("disconnect", this.onDisconnect);
            }
            this.emit("message", {
                type: "connecting"
            });
            let account = null;
            if ((0, $52c74cade626a703$export$18a094aefa070634)(this, $24d2eca570c48311$var$_UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !(0, $077a864ec31a8b9f$export$6bb76d6eba7e258c)().storage?.getItem(this.shimDisconnectKey)) {
                account = await this.getAccount().catch(()=>null);
                const isConnected = !!account;
                if (isConnected) try {
                    await provider.request({
                        method: "wallet_requestPermissions",
                        params: [
                            {
                                eth_accounts: {}
                            }
                        ]
                    });
                    account = await this.getAccount();
                } catch (error) {
                    if (this.isUserRejectedRequestError(error)) throw new (0, $077a864ec31a8b9f$export$4af5b080d9e9e1a6)(error);
                }
            }
            if (!account) {
                const accounts = await provider.request({
                    method: "eth_requestAccounts"
                });
                account = (0, $924b12823ef5c5c6$exports.getAddress)(accounts[0]);
            }
            let id = await this.getChainId();
            let unsupported = this.isChainUnsupported(id);
            if (chainId && id !== chainId) {
                const chain = await this.switchChain(chainId);
                id = chain.id;
                unsupported = this.isChainUnsupported(id);
            }
            if (this.options?.shimDisconnect) (0, $077a864ec31a8b9f$export$6bb76d6eba7e258c)().storage?.setItem(this.shimDisconnectKey, true);
            return {
                account: account,
                chain: {
                    id: id,
                    unsupported: unsupported
                },
                provider: provider
            };
        } catch (error) {
            if (this.isUserRejectedRequestError(error)) throw new (0, $077a864ec31a8b9f$export$4af5b080d9e9e1a6)(error);
            if (error.code === -32002) throw new (0, $077a864ec31a8b9f$export$5be1d42b6489eb68)(error);
            throw error;
        }
    }
};
$24d2eca570c48311$var$_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();






var $d9f20eda5d353cca$var$defaultV2Config = {
    namespace: "eip155",
    methods: [
        "eth_sendTransaction",
        "eth_sendRawTransaction",
        "eth_sign",
        "eth_signTransaction",
        "eth_signTypedData",
        "eth_signTypedData_v3",
        "eth_signTypedData_v4",
        "personal_sign",
        "wallet_switchEthereumChain",
        "wallet_addEthereumChain"
    ],
    events: [
        "accountsChanged",
        "chainChanged"
    ]
};
var $d9f20eda5d353cca$var$_provider, $d9f20eda5d353cca$var$_initUniversalProviderPromise, $d9f20eda5d353cca$var$_web3Modal, $d9f20eda5d353cca$var$_createWeb3Modal, $d9f20eda5d353cca$var$createWeb3Modal_fn, $d9f20eda5d353cca$var$_initUniversalProvider, $d9f20eda5d353cca$var$initUniversalProvider_fn, $d9f20eda5d353cca$var$_createUniversalProvider, $d9f20eda5d353cca$var$createUniversalProvider_fn, $d9f20eda5d353cca$var$_isChainsAuthorized, $d9f20eda5d353cca$var$isChainsAuthorized_fn, $d9f20eda5d353cca$var$_switchChain, $d9f20eda5d353cca$var$switchChain_fn;

var $d9f20eda5d353cca$export$c456b2d327ac201f = class extends (0, $52c74cade626a703$export$b2278035370d6017) {
    constructor(config){
        super(config);
        (0, $52c74cade626a703$export$addf369becd23283)(this, $d9f20eda5d353cca$var$_createWeb3Modal);
        (0, $52c74cade626a703$export$addf369becd23283)(this, $d9f20eda5d353cca$var$_initUniversalProvider);
        (0, $52c74cade626a703$export$addf369becd23283)(this, $d9f20eda5d353cca$var$_createUniversalProvider);
        (0, $52c74cade626a703$export$addf369becd23283)(this, $d9f20eda5d353cca$var$_isChainsAuthorized);
        (0, $52c74cade626a703$export$addf369becd23283)(this, $d9f20eda5d353cca$var$_switchChain);
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "id", "walletConnect");
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "name", "WalletConnect");
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "ready", true);
        (0, $52c74cade626a703$export$addf369becd23283)(this, $d9f20eda5d353cca$var$_provider, void 0);
        (0, $52c74cade626a703$export$addf369becd23283)(this, $d9f20eda5d353cca$var$_initUniversalProviderPromise, void 0);
        (0, $52c74cade626a703$export$addf369becd23283)(this, $d9f20eda5d353cca$var$_web3Modal, void 0);
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "onAccountsChanged", (accounts)=>{
            if (accounts.length === 0) this.emit("disconnect");
            else this.emit("change", {
                account: (0, $924b12823ef5c5c6$exports.getAddress)(accounts[0])
            });
        });
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "onChainChanged", (chainId)=>{
            const id = (0, $077a864ec31a8b9f$export$723927690c88894d)(chainId);
            const unsupported = this.isChainUnsupported(id);
            this.emit("change", {
                chain: {
                    id: id,
                    unsupported: unsupported
                }
            });
        });
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "onDisconnect", ()=>{
            this.emit("disconnect");
        });
        (0, $52c74cade626a703$export$5cb848ba4d1f099)(this, "onDisplayUri", (uri)=>{
            this.emit("message", {
                type: "display_uri",
                data: uri
            });
        });
        if (this.version === "2") {
            (0, $52c74cade626a703$export$fa92d15b718fce20)(this, $d9f20eda5d353cca$var$_createUniversalProvider, $d9f20eda5d353cca$var$createUniversalProvider_fn).call(this);
            if (this.isQrCode) (0, $52c74cade626a703$export$fa92d15b718fce20)(this, $d9f20eda5d353cca$var$_createWeb3Modal, $d9f20eda5d353cca$var$createWeb3Modal_fn).call(this);
        }
    }
    get isQrCode() {
        return this.options.qrcode !== false;
    }
    get namespacedChains() {
        return this.chains.map((chain)=>`${$d9f20eda5d353cca$var$defaultV2Config.namespace}:${chain.id}`);
    }
    get version() {
        if ("version" in this.options) return this.options.version;
        return "1";
    }
    async connect({ chainId: chainId  } = {}) {
        const isV1 = this.version === "1";
        const isV2 = this.version === "2";
        try {
            let targetChainId = chainId;
            if (!targetChainId) {
                const lastUsedChainId = (0, $077a864ec31a8b9f$export$6bb76d6eba7e258c)().lastUsedChainId;
                if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) targetChainId = lastUsedChainId;
            }
            const provider = await this.getProvider({
                chainId: targetChainId,
                create: isV1
            });
            provider.on("accountsChanged", this.onAccountsChanged);
            provider.on("chainChanged", this.onChainChanged);
            provider.on("disconnect", this.onDisconnect);
            if (isV2) {
                provider.on("session_delete", this.onDisconnect);
                provider.on("display_uri", this.onDisplayUri);
                const isChainsAuthorized = await (0, $52c74cade626a703$export$fa92d15b718fce20)(this, $d9f20eda5d353cca$var$_isChainsAuthorized, $d9f20eda5d353cca$var$isChainsAuthorized_fn).call(this);
                if (provider.session && !isChainsAuthorized) await provider.disconnect();
                if (!provider.session || provider.session && !isChainsAuthorized) {
                    await Promise.race([
                        provider.connect({
                            namespaces: {
                                [$d9f20eda5d353cca$var$defaultV2Config.namespace]: {
                                    methods: $d9f20eda5d353cca$var$defaultV2Config.methods,
                                    events: $d9f20eda5d353cca$var$defaultV2Config.events,
                                    chains: this.namespacedChains,
                                    rpcMap: this.chains.reduce((rpc, chain)=>({
                                            ...rpc,
                                            [chain.id]: chain.rpcUrls.default.http[0]
                                        }), {})
                                }
                            }
                        }),
                        ...this.isQrCode ? [
                            new Promise((_resolve, reject)=>provider.on("display_uri", async (uri)=>{
                                    await (0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_web3Modal)?.openModal({
                                        uri: uri
                                    });
                                    (0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_web3Modal)?.subscribeModal(({ open: open  })=>{
                                        if (!open) reject(new Error("user rejected"));
                                    });
                                }))
                        ] : []
                    ]);
                    if (this.isQrCode) (0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_web3Modal)?.closeModal();
                }
            }
            setTimeout(()=>this.emit("message", {
                    type: "connecting"
                }), 0);
            const accounts = await Promise.race([
                provider.enable(),
                ...isV1 && this.isQrCode ? [
                    new Promise((_res, reject)=>provider.connector.on("disconnect", ()=>reject(new Error("user rejected"))))
                ] : []
            ]);
            const account = (0, $924b12823ef5c5c6$exports.getAddress)(accounts[0]);
            const id = await this.getChainId();
            const unsupported = this.isChainUnsupported(id);
            if (isV1) {
                const walletName = provider.connector?.peerMeta?.name ?? "";
                const switchChainAllowedRegex = /(imtoken|metamask|omni|rainbow|trust wallet)/i;
                if (switchChainAllowedRegex.test(walletName)) this.switchChain = (0, $52c74cade626a703$export$fa92d15b718fce20)(this, $d9f20eda5d353cca$var$_switchChain, $d9f20eda5d353cca$var$switchChain_fn);
            } else this.switchChain = (0, $52c74cade626a703$export$fa92d15b718fce20)(this, $d9f20eda5d353cca$var$_switchChain, $d9f20eda5d353cca$var$switchChain_fn);
            return {
                account: account,
                chain: {
                    id: id,
                    unsupported: unsupported
                },
                provider: new (0, $7fc15fb0220a0397$exports).Web3Provider(provider)
            };
        } catch (error) {
            if (isV2 && this.isQrCode) (0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_web3Modal)?.closeModal();
            if (/user closed modal|user rejected/i.test(error?.message)) throw new (0, $077a864ec31a8b9f$export$4af5b080d9e9e1a6)(error);
            throw error;
        }
    }
    async disconnect() {
        const provider = await this.getProvider();
        try {
            await provider.disconnect();
        } catch (error) {
            if (!/No matching key/i.test(error.message)) throw error;
        }
        provider.removeListener("accountsChanged", this.onAccountsChanged);
        provider.removeListener("chainChanged", this.onChainChanged);
        provider.removeListener("disconnect", this.onDisconnect);
        if (this.version === "1" && typeof localStorage !== "undefined") localStorage.removeItem("walletconnect");
        else {
            provider.removeListener("session_delete", this.onDisconnect);
            provider.removeListener("display_uri", this.onDisplayUri);
        }
    }
    async getAccount() {
        const provider = await this.getProvider();
        let accounts;
        if (this.version === "1") accounts = provider.accounts;
        else accounts = await provider.request({
            method: "eth_accounts"
        });
        return (0, $924b12823ef5c5c6$exports.getAddress)(accounts[0]);
    }
    async getChainId() {
        const provider = await this.getProvider();
        if (this.version === "1") return (0, $077a864ec31a8b9f$export$723927690c88894d)(provider.chainId);
        return (0, $077a864ec31a8b9f$export$6bb76d6eba7e258c)().data?.chain?.id ?? (0, $077a864ec31a8b9f$export$723927690c88894d)(await provider.request({
            method: "eth_chainId"
        }));
    }
    async getProvider({ chainId: chainId , create: create  } = {}) {
        if (this.options.version === "2") {
            if (!(0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_provider)) await (0, $52c74cade626a703$export$fa92d15b718fce20)(this, $d9f20eda5d353cca$var$_createUniversalProvider, $d9f20eda5d353cca$var$createUniversalProvider_fn).call(this);
            if (chainId) (0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_provider).setDefaultChain(`${$d9f20eda5d353cca$var$defaultV2Config.namespace}:${chainId}`);
            return (0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_provider);
        } else if (!(0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_provider) || chainId || create) {
            const rpc = !this.options?.infuraId ? this.chains.reduce((rpc2, chain)=>({
                    ...rpc2,
                    [chain.id]: chain.rpcUrls.default.http[0]
                }), {}) : {};
            const WalletConnectProvider = (await (parcelRequire("dj4BM"))).default;
            (0, $52c74cade626a703$export$42432efe6614d3b4)(this, $d9f20eda5d353cca$var$_provider, new WalletConnectProvider({
                ...this.options,
                chainId: chainId,
                rpc: {
                    ...rpc,
                    ...this.options?.rpc
                }
            }));
            return (0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_provider);
        }
        return (0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_provider);
    }
    async getSigner({ chainId: chainId  } = {}) {
        const [provider, account] = await Promise.all([
            this.getProvider({
                chainId: chainId
            }),
            this.getAccount()
        ]);
        let provider_ = provider;
        if (this.version === "2") {
            const chainId_ = await this.getChainId();
            provider_ = {
                ...provider,
                async request (args) {
                    return await provider.request(args, `${$d9f20eda5d353cca$var$defaultV2Config.namespace}:${chainId ?? chainId_}`);
                }
            };
        }
        return new (0, $7fc15fb0220a0397$exports).Web3Provider(provider_, chainId).getSigner(account);
    }
    async isAuthorized() {
        try {
            const [account, isChainsAuthorized] = await Promise.all([
                this.getAccount(),
                (0, $52c74cade626a703$export$fa92d15b718fce20)(this, $d9f20eda5d353cca$var$_isChainsAuthorized, $d9f20eda5d353cca$var$isChainsAuthorized_fn).call(this)
            ]);
            return !!account && isChainsAuthorized;
        } catch  {
            return false;
        }
    }
};
$d9f20eda5d353cca$var$_provider = new WeakMap();
$d9f20eda5d353cca$var$_initUniversalProviderPromise = new WeakMap();
$d9f20eda5d353cca$var$_web3Modal = new WeakMap();
$d9f20eda5d353cca$var$_createWeb3Modal = new WeakSet();

$d9f20eda5d353cca$var$createWeb3Modal_fn = async function() {
    const { Web3Modal: Web3Modal  } = await (parcelRequire("i5sne"));
    const { version: version  } = this.options;
    (0, $52c74cade626a703$export$42432efe6614d3b4)(this, $d9f20eda5d353cca$var$_web3Modal, new Web3Modal({
        walletConnectVersion: version === "2" ? 2 : 1,
        projectId: version === "2" ? this.options.projectId : "",
        standaloneChains: this.namespacedChains
    }));
};
$d9f20eda5d353cca$var$_initUniversalProvider = new WeakSet();

$d9f20eda5d353cca$var$initUniversalProvider_fn = async function() {
    const WalletConnectProvider = (await (parcelRequire("5Trjc"))).default;
    if (typeof WalletConnectProvider?.init === "function") (0, $52c74cade626a703$export$42432efe6614d3b4)(this, $d9f20eda5d353cca$var$_provider, await WalletConnectProvider.init(this.options));
};
$d9f20eda5d353cca$var$_createUniversalProvider = new WeakSet();
$d9f20eda5d353cca$var$createUniversalProvider_fn = async function() {
    if (!(0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_initUniversalProviderPromise)) (0, $52c74cade626a703$export$42432efe6614d3b4)(this, $d9f20eda5d353cca$var$_initUniversalProviderPromise, (0, $52c74cade626a703$export$fa92d15b718fce20)(this, $d9f20eda5d353cca$var$_initUniversalProvider, $d9f20eda5d353cca$var$initUniversalProvider_fn).call(this));
    return (0, $52c74cade626a703$export$18a094aefa070634)(this, $d9f20eda5d353cca$var$_initUniversalProviderPromise);
};
$d9f20eda5d353cca$var$_isChainsAuthorized = new WeakSet();
$d9f20eda5d353cca$var$isChainsAuthorized_fn = async function() {
    const provider = await this.getProvider();
    if (this.version === "1") return true;
    const providerChains = provider.namespaces?.[$d9f20eda5d353cca$var$defaultV2Config.namespace]?.chains || [];
    const authorizedChainIds = providerChains.map((chain)=>parseInt(chain.split(":")[1] || ""));
    return !this.chains.some(({ id: id  })=>!authorizedChainIds.includes(id));
};
$d9f20eda5d353cca$var$_switchChain = new WeakSet();
$d9f20eda5d353cca$var$switchChain_fn = async function(chainId) {
    const provider = await this.getProvider();
    const id = (0, $924b12823ef5c5c6$exports.hexValue)(chainId);
    try {
        await Promise.race([
            provider.request({
                method: "wallet_switchEthereumChain",
                params: [
                    {
                        chainId: id
                    }
                ]
            }),
            new Promise((res)=>this.on("change", ({ chain: chain  })=>{
                    if (chain?.id === chainId) res(chainId);
                }))
        ]);
        if (this.version === "2") {
            provider.setDefaultChain(`${$d9f20eda5d353cca$var$defaultV2Config.namespace}:${chainId}`);
            this.onChainChanged(chainId);
        }
        return this.chains.find((x)=>x.id === chainId) ?? {
            id: chainId,
            name: `Chain ${id}`,
            network: `${id}`,
            nativeCurrency: {
                decimals: 18,
                name: "Ether",
                symbol: "ETH"
            },
            rpcUrls: {
                default: {
                    http: [
                        ""
                    ]
                },
                public: {
                    http: [
                        ""
                    ]
                }
            }
        };
    } catch (error) {
        const message = typeof error === "string" ? error : error?.message;
        if (/user rejected request/i.test(message)) throw new (0, $077a864ec31a8b9f$export$4af5b080d9e9e1a6)(error);
        throw new (0, $077a864ec31a8b9f$export$d4ddb31968a9d366)(error);
    }
};


const { chains: $3da87ddc4a220fcd$export$af1c0561ce3e4019 , provider: $3da87ddc4a220fcd$export$ca328f169d304df4 , webSocketProvider: $3da87ddc4a220fcd$export$cb44ebb4195bb079  } = (0, $077a864ec31a8b9f$export$854522c9456f3b5)([
    (0, $9c8743126c7e32de$export$170e8cdd0c4e59c8),
    (0, $9c8743126c7e32de$export$1c182ebff3ea4eef)
], [
    (0, $cb5ef0eee55a6104$export$794750c0ec24158c)()
], {
    pollingInterval: 15000
});
const $3da87ddc4a220fcd$var$wc = new (0, $d9f20eda5d353cca$export$c456b2d327ac201f)({
    chains: [
        (0, $9c8743126c7e32de$export$170e8cdd0c4e59c8)
    ],
    options: {
        qrcode: true,
        chainId: (0, $9c8743126c7e32de$export$170e8cdd0c4e59c8).id,
        rpc: {
            56: `${(0, $9c8743126c7e32de$export$170e8cdd0c4e59c8).rpcUrls.default.http}`
        },
        bridge: "https://bridge.walletconnect.org"
    }
});
// @ts-ignore
const $3da87ddc4a220fcd$var$client = (0, $168b680515f5196a$export$5d730b7aed1a3eb0)({
    autoConnect: true,
    connectors: [
        new (0, $f003855f652c299a$export$2180bbd5f43a00b6)({
            chains: [
                (0, $9c8743126c7e32de$export$170e8cdd0c4e59c8),
                (0, $9c8743126c7e32de$export$1c182ebff3ea4eef)
            ],
            options: {
                name: (detectedName)=>`Browser's Default (${typeof detectedName === "string" ? detectedName : detectedName.join(", ")})`,
                shimDisconnect: true,
                shimChainChangedDisconnect: true
            }
        }),
        new (0, $24d2eca570c48311$export$86c578040a557b4a)({
            chains: [
                (0, $9c8743126c7e32de$export$170e8cdd0c4e59c8),
                (0, $9c8743126c7e32de$export$1c182ebff3ea4eef)
            ],
            options: {
                shimDisconnect: true,
                shimChainChangedDisconnect: true
            }
        }),
        $3da87ddc4a220fcd$var$wc
    ],
    provider: $3da87ddc4a220fcd$export$ca328f169d304df4,
    webSocketProvider: $3da87ddc4a220fcd$export$cb44ebb4195bb079
});
const $3da87ddc4a220fcd$var$container = document.getElementById("app");
const $3da87ddc4a220fcd$var$root = (0, $fef8548889890d4d$export$882461b6382ed46c)($3da87ddc4a220fcd$var$container);
$3da87ddc4a220fcd$var$root.render(/*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $17b288f07ec57b56$exports.Fragment), {
    children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $168b680515f5196a$export$c3a561dea2adc16c), {
        client: $3da87ddc4a220fcd$var$client,
        children: /*#__PURE__*/ (0, $17b288f07ec57b56$exports.jsx)((0, $4dba470fd5c3bb15$export$86fbec116b87613f), {})
    })
}));


//# sourceMappingURL=index.8eddf2eb.js.map
